
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00023c38  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001c70  08023de8  08023de8  00024de8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08025a58  08025a58  00026a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08025c00  08025c00  00026c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08025c18  08025c18  00026c18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  08025c26  08025c26  00026c26  2**0
                  ALLOC
  7 .ARM          00000008  08025c28  08025c28  00026c28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08025c30  08025c30  00027480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08025c30  08025c30  00026c30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08025c44  08025c44  00026c44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000280  20000000  08025c4c  00027000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  08025ecc  00027280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08025fcc  00027380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          000148b8  20000480  080260cc  00027480  2**2
                  ALLOC
 15 ._user_heap_stack 00001400  20014d38  080260cc  00027d38  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00027480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00028000  2**2
                  ALLOC
 18 .debug_line   00052abb  00000000  00000000  000274b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000057  00000000  00000000  00079f6b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000adee0  00000000  00000000  00079fc2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00013ef8  00000000  00000000  00127ea2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000032a0  00000000  00000000  0013bda0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001156df  00000000  00000000  0013f040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00003392  00000000  00000000  0025471f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001e52c  00000000  00000000  00257ab1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00033e3b  00000000  00000000  00275fdd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  002a9e18  2**0
                  CONTENTS, READONLY
 28 .debug_frame  00009334  00000000  00000000  002a9edc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08023dd0 	.word	0x08023dd0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	08023dd0 	.word	0x08023dd0

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_ldivmod>:
 80002a0:	b97b      	cbnz	r3, 80002c2 <__aeabi_ldivmod+0x22>
 80002a2:	b972      	cbnz	r2, 80002c2 <__aeabi_ldivmod+0x22>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bfbe      	ittt	lt
 80002a8:	2000      	movlt	r0, #0
 80002aa:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80002ae:	e006      	blt.n	80002be <__aeabi_ldivmod+0x1e>
 80002b0:	bf08      	it	eq
 80002b2:	2800      	cmpeq	r0, #0
 80002b4:	bf1c      	itt	ne
 80002b6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002ba:	f04f 30ff 	movne.w	r0, #4294967295
 80002be:	f000 b9d3 	b.w	8000668 <__aeabi_idiv0>
 80002c2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002c6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ca:	2900      	cmp	r1, #0
 80002cc:	db09      	blt.n	80002e2 <__aeabi_ldivmod+0x42>
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	db1a      	blt.n	8000308 <__aeabi_ldivmod+0x68>
 80002d2:	f000 f84d 	bl	8000370 <__udivmoddi4>
 80002d6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002da:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002de:	b004      	add	sp, #16
 80002e0:	4770      	bx	lr
 80002e2:	4240      	negs	r0, r0
 80002e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	db1b      	blt.n	8000324 <__aeabi_ldivmod+0x84>
 80002ec:	f000 f840 	bl	8000370 <__udivmoddi4>
 80002f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f8:	b004      	add	sp, #16
 80002fa:	4240      	negs	r0, r0
 80002fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000300:	4252      	negs	r2, r2
 8000302:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000306:	4770      	bx	lr
 8000308:	4252      	negs	r2, r2
 800030a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800030e:	f000 f82f 	bl	8000370 <__udivmoddi4>
 8000312:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000316:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800031a:	b004      	add	sp, #16
 800031c:	4240      	negs	r0, r0
 800031e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000322:	4770      	bx	lr
 8000324:	4252      	negs	r2, r2
 8000326:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032a:	f000 f821 	bl	8000370 <__udivmoddi4>
 800032e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000332:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000336:	b004      	add	sp, #16
 8000338:	4252      	negs	r2, r2
 800033a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800033e:	4770      	bx	lr

08000340 <__aeabi_uldivmod>:
 8000340:	b953      	cbnz	r3, 8000358 <__aeabi_uldivmod+0x18>
 8000342:	b94a      	cbnz	r2, 8000358 <__aeabi_uldivmod+0x18>
 8000344:	2900      	cmp	r1, #0
 8000346:	bf08      	it	eq
 8000348:	2800      	cmpeq	r0, #0
 800034a:	bf1c      	itt	ne
 800034c:	f04f 31ff 	movne.w	r1, #4294967295
 8000350:	f04f 30ff 	movne.w	r0, #4294967295
 8000354:	f000 b988 	b.w	8000668 <__aeabi_idiv0>
 8000358:	f1ad 0c08 	sub.w	ip, sp, #8
 800035c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000360:	f000 f806 	bl	8000370 <__udivmoddi4>
 8000364:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000368:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800036c:	b004      	add	sp, #16
 800036e:	4770      	bx	lr

08000370 <__udivmoddi4>:
 8000370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000374:	9d08      	ldr	r5, [sp, #32]
 8000376:	468e      	mov	lr, r1
 8000378:	4604      	mov	r4, r0
 800037a:	4688      	mov	r8, r1
 800037c:	2b00      	cmp	r3, #0
 800037e:	d14a      	bne.n	8000416 <__udivmoddi4+0xa6>
 8000380:	428a      	cmp	r2, r1
 8000382:	4617      	mov	r7, r2
 8000384:	d962      	bls.n	800044c <__udivmoddi4+0xdc>
 8000386:	fab2 f682 	clz	r6, r2
 800038a:	b14e      	cbz	r6, 80003a0 <__udivmoddi4+0x30>
 800038c:	f1c6 0320 	rsb	r3, r6, #32
 8000390:	fa01 f806 	lsl.w	r8, r1, r6
 8000394:	fa20 f303 	lsr.w	r3, r0, r3
 8000398:	40b7      	lsls	r7, r6
 800039a:	ea43 0808 	orr.w	r8, r3, r8
 800039e:	40b4      	lsls	r4, r6
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	fa1f fc87 	uxth.w	ip, r7
 80003a8:	fbb8 f1fe 	udiv	r1, r8, lr
 80003ac:	0c23      	lsrs	r3, r4, #16
 80003ae:	fb0e 8811 	mls	r8, lr, r1, r8
 80003b2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003b6:	fb01 f20c 	mul.w	r2, r1, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d909      	bls.n	80003d2 <__udivmoddi4+0x62>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003c4:	f080 80ea 	bcs.w	800059c <__udivmoddi4+0x22c>
 80003c8:	429a      	cmp	r2, r3
 80003ca:	f240 80e7 	bls.w	800059c <__udivmoddi4+0x22c>
 80003ce:	3902      	subs	r1, #2
 80003d0:	443b      	add	r3, r7
 80003d2:	1a9a      	subs	r2, r3, r2
 80003d4:	b2a3      	uxth	r3, r4
 80003d6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003da:	fb0e 2210 	mls	r2, lr, r0, r2
 80003de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003e2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003e6:	459c      	cmp	ip, r3
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x8e>
 80003ea:	18fb      	adds	r3, r7, r3
 80003ec:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f0:	f080 80d6 	bcs.w	80005a0 <__udivmoddi4+0x230>
 80003f4:	459c      	cmp	ip, r3
 80003f6:	f240 80d3 	bls.w	80005a0 <__udivmoddi4+0x230>
 80003fa:	443b      	add	r3, r7
 80003fc:	3802      	subs	r0, #2
 80003fe:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000402:	eba3 030c 	sub.w	r3, r3, ip
 8000406:	2100      	movs	r1, #0
 8000408:	b11d      	cbz	r5, 8000412 <__udivmoddi4+0xa2>
 800040a:	40f3      	lsrs	r3, r6
 800040c:	2200      	movs	r2, #0
 800040e:	e9c5 3200 	strd	r3, r2, [r5]
 8000412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000416:	428b      	cmp	r3, r1
 8000418:	d905      	bls.n	8000426 <__udivmoddi4+0xb6>
 800041a:	b10d      	cbz	r5, 8000420 <__udivmoddi4+0xb0>
 800041c:	e9c5 0100 	strd	r0, r1, [r5]
 8000420:	2100      	movs	r1, #0
 8000422:	4608      	mov	r0, r1
 8000424:	e7f5      	b.n	8000412 <__udivmoddi4+0xa2>
 8000426:	fab3 f183 	clz	r1, r3
 800042a:	2900      	cmp	r1, #0
 800042c:	d146      	bne.n	80004bc <__udivmoddi4+0x14c>
 800042e:	4573      	cmp	r3, lr
 8000430:	d302      	bcc.n	8000438 <__udivmoddi4+0xc8>
 8000432:	4282      	cmp	r2, r0
 8000434:	f200 8105 	bhi.w	8000642 <__udivmoddi4+0x2d2>
 8000438:	1a84      	subs	r4, r0, r2
 800043a:	eb6e 0203 	sbc.w	r2, lr, r3
 800043e:	2001      	movs	r0, #1
 8000440:	4690      	mov	r8, r2
 8000442:	2d00      	cmp	r5, #0
 8000444:	d0e5      	beq.n	8000412 <__udivmoddi4+0xa2>
 8000446:	e9c5 4800 	strd	r4, r8, [r5]
 800044a:	e7e2      	b.n	8000412 <__udivmoddi4+0xa2>
 800044c:	2a00      	cmp	r2, #0
 800044e:	f000 8090 	beq.w	8000572 <__udivmoddi4+0x202>
 8000452:	fab2 f682 	clz	r6, r2
 8000456:	2e00      	cmp	r6, #0
 8000458:	f040 80a4 	bne.w	80005a4 <__udivmoddi4+0x234>
 800045c:	1a8a      	subs	r2, r1, r2
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000464:	b280      	uxth	r0, r0
 8000466:	b2bc      	uxth	r4, r7
 8000468:	2101      	movs	r1, #1
 800046a:	fbb2 fcfe 	udiv	ip, r2, lr
 800046e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000472:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000476:	fb04 f20c 	mul.w	r2, r4, ip
 800047a:	429a      	cmp	r2, r3
 800047c:	d907      	bls.n	800048e <__udivmoddi4+0x11e>
 800047e:	18fb      	adds	r3, r7, r3
 8000480:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000484:	d202      	bcs.n	800048c <__udivmoddi4+0x11c>
 8000486:	429a      	cmp	r2, r3
 8000488:	f200 80e0 	bhi.w	800064c <__udivmoddi4+0x2dc>
 800048c:	46c4      	mov	ip, r8
 800048e:	1a9b      	subs	r3, r3, r2
 8000490:	fbb3 f2fe 	udiv	r2, r3, lr
 8000494:	fb0e 3312 	mls	r3, lr, r2, r3
 8000498:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800049c:	fb02 f404 	mul.w	r4, r2, r4
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d907      	bls.n	80004b4 <__udivmoddi4+0x144>
 80004a4:	18fb      	adds	r3, r7, r3
 80004a6:	f102 30ff 	add.w	r0, r2, #4294967295
 80004aa:	d202      	bcs.n	80004b2 <__udivmoddi4+0x142>
 80004ac:	429c      	cmp	r4, r3
 80004ae:	f200 80ca 	bhi.w	8000646 <__udivmoddi4+0x2d6>
 80004b2:	4602      	mov	r2, r0
 80004b4:	1b1b      	subs	r3, r3, r4
 80004b6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004ba:	e7a5      	b.n	8000408 <__udivmoddi4+0x98>
 80004bc:	f1c1 0620 	rsb	r6, r1, #32
 80004c0:	408b      	lsls	r3, r1
 80004c2:	fa22 f706 	lsr.w	r7, r2, r6
 80004c6:	431f      	orrs	r7, r3
 80004c8:	fa0e f401 	lsl.w	r4, lr, r1
 80004cc:	fa20 f306 	lsr.w	r3, r0, r6
 80004d0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004d4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004d8:	4323      	orrs	r3, r4
 80004da:	fa00 f801 	lsl.w	r8, r0, r1
 80004de:	fa1f fc87 	uxth.w	ip, r7
 80004e2:	fbbe f0f9 	udiv	r0, lr, r9
 80004e6:	0c1c      	lsrs	r4, r3, #16
 80004e8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004ec:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004f0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004f4:	45a6      	cmp	lr, r4
 80004f6:	fa02 f201 	lsl.w	r2, r2, r1
 80004fa:	d909      	bls.n	8000510 <__udivmoddi4+0x1a0>
 80004fc:	193c      	adds	r4, r7, r4
 80004fe:	f100 3aff 	add.w	sl, r0, #4294967295
 8000502:	f080 809c 	bcs.w	800063e <__udivmoddi4+0x2ce>
 8000506:	45a6      	cmp	lr, r4
 8000508:	f240 8099 	bls.w	800063e <__udivmoddi4+0x2ce>
 800050c:	3802      	subs	r0, #2
 800050e:	443c      	add	r4, r7
 8000510:	eba4 040e 	sub.w	r4, r4, lr
 8000514:	fa1f fe83 	uxth.w	lr, r3
 8000518:	fbb4 f3f9 	udiv	r3, r4, r9
 800051c:	fb09 4413 	mls	r4, r9, r3, r4
 8000520:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000524:	fb03 fc0c 	mul.w	ip, r3, ip
 8000528:	45a4      	cmp	ip, r4
 800052a:	d908      	bls.n	800053e <__udivmoddi4+0x1ce>
 800052c:	193c      	adds	r4, r7, r4
 800052e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000532:	f080 8082 	bcs.w	800063a <__udivmoddi4+0x2ca>
 8000536:	45a4      	cmp	ip, r4
 8000538:	d97f      	bls.n	800063a <__udivmoddi4+0x2ca>
 800053a:	3b02      	subs	r3, #2
 800053c:	443c      	add	r4, r7
 800053e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000542:	eba4 040c 	sub.w	r4, r4, ip
 8000546:	fba0 ec02 	umull	lr, ip, r0, r2
 800054a:	4564      	cmp	r4, ip
 800054c:	4673      	mov	r3, lr
 800054e:	46e1      	mov	r9, ip
 8000550:	d362      	bcc.n	8000618 <__udivmoddi4+0x2a8>
 8000552:	d05f      	beq.n	8000614 <__udivmoddi4+0x2a4>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x1fe>
 8000556:	ebb8 0203 	subs.w	r2, r8, r3
 800055a:	eb64 0409 	sbc.w	r4, r4, r9
 800055e:	fa04 f606 	lsl.w	r6, r4, r6
 8000562:	fa22 f301 	lsr.w	r3, r2, r1
 8000566:	431e      	orrs	r6, r3
 8000568:	40cc      	lsrs	r4, r1
 800056a:	e9c5 6400 	strd	r6, r4, [r5]
 800056e:	2100      	movs	r1, #0
 8000570:	e74f      	b.n	8000412 <__udivmoddi4+0xa2>
 8000572:	fbb1 fcf2 	udiv	ip, r1, r2
 8000576:	0c01      	lsrs	r1, r0, #16
 8000578:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800057c:	b280      	uxth	r0, r0
 800057e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000582:	463b      	mov	r3, r7
 8000584:	4638      	mov	r0, r7
 8000586:	463c      	mov	r4, r7
 8000588:	46b8      	mov	r8, r7
 800058a:	46be      	mov	lr, r7
 800058c:	2620      	movs	r6, #32
 800058e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000592:	eba2 0208 	sub.w	r2, r2, r8
 8000596:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800059a:	e766      	b.n	800046a <__udivmoddi4+0xfa>
 800059c:	4601      	mov	r1, r0
 800059e:	e718      	b.n	80003d2 <__udivmoddi4+0x62>
 80005a0:	4610      	mov	r0, r2
 80005a2:	e72c      	b.n	80003fe <__udivmoddi4+0x8e>
 80005a4:	f1c6 0220 	rsb	r2, r6, #32
 80005a8:	fa2e f302 	lsr.w	r3, lr, r2
 80005ac:	40b7      	lsls	r7, r6
 80005ae:	40b1      	lsls	r1, r6
 80005b0:	fa20 f202 	lsr.w	r2, r0, r2
 80005b4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005b8:	430a      	orrs	r2, r1
 80005ba:	fbb3 f8fe 	udiv	r8, r3, lr
 80005be:	b2bc      	uxth	r4, r7
 80005c0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005c4:	0c11      	lsrs	r1, r2, #16
 80005c6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ca:	fb08 f904 	mul.w	r9, r8, r4
 80005ce:	40b0      	lsls	r0, r6
 80005d0:	4589      	cmp	r9, r1
 80005d2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005d6:	b280      	uxth	r0, r0
 80005d8:	d93e      	bls.n	8000658 <__udivmoddi4+0x2e8>
 80005da:	1879      	adds	r1, r7, r1
 80005dc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005e0:	d201      	bcs.n	80005e6 <__udivmoddi4+0x276>
 80005e2:	4589      	cmp	r9, r1
 80005e4:	d81f      	bhi.n	8000626 <__udivmoddi4+0x2b6>
 80005e6:	eba1 0109 	sub.w	r1, r1, r9
 80005ea:	fbb1 f9fe 	udiv	r9, r1, lr
 80005ee:	fb09 f804 	mul.w	r8, r9, r4
 80005f2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005f6:	b292      	uxth	r2, r2
 80005f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005fc:	4542      	cmp	r2, r8
 80005fe:	d229      	bcs.n	8000654 <__udivmoddi4+0x2e4>
 8000600:	18ba      	adds	r2, r7, r2
 8000602:	f109 31ff 	add.w	r1, r9, #4294967295
 8000606:	d2c4      	bcs.n	8000592 <__udivmoddi4+0x222>
 8000608:	4542      	cmp	r2, r8
 800060a:	d2c2      	bcs.n	8000592 <__udivmoddi4+0x222>
 800060c:	f1a9 0102 	sub.w	r1, r9, #2
 8000610:	443a      	add	r2, r7
 8000612:	e7be      	b.n	8000592 <__udivmoddi4+0x222>
 8000614:	45f0      	cmp	r8, lr
 8000616:	d29d      	bcs.n	8000554 <__udivmoddi4+0x1e4>
 8000618:	ebbe 0302 	subs.w	r3, lr, r2
 800061c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000620:	3801      	subs	r0, #1
 8000622:	46e1      	mov	r9, ip
 8000624:	e796      	b.n	8000554 <__udivmoddi4+0x1e4>
 8000626:	eba7 0909 	sub.w	r9, r7, r9
 800062a:	4449      	add	r1, r9
 800062c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000630:	fbb1 f9fe 	udiv	r9, r1, lr
 8000634:	fb09 f804 	mul.w	r8, r9, r4
 8000638:	e7db      	b.n	80005f2 <__udivmoddi4+0x282>
 800063a:	4673      	mov	r3, lr
 800063c:	e77f      	b.n	800053e <__udivmoddi4+0x1ce>
 800063e:	4650      	mov	r0, sl
 8000640:	e766      	b.n	8000510 <__udivmoddi4+0x1a0>
 8000642:	4608      	mov	r0, r1
 8000644:	e6fd      	b.n	8000442 <__udivmoddi4+0xd2>
 8000646:	443b      	add	r3, r7
 8000648:	3a02      	subs	r2, #2
 800064a:	e733      	b.n	80004b4 <__udivmoddi4+0x144>
 800064c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000650:	443b      	add	r3, r7
 8000652:	e71c      	b.n	800048e <__udivmoddi4+0x11e>
 8000654:	4649      	mov	r1, r9
 8000656:	e79c      	b.n	8000592 <__udivmoddi4+0x222>
 8000658:	eba1 0109 	sub.w	r1, r1, r9
 800065c:	46c4      	mov	ip, r8
 800065e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000662:	fb09 f804 	mul.w	r8, r9, r4
 8000666:	e7c4      	b.n	80005f2 <__udivmoddi4+0x282>

08000668 <__aeabi_idiv0>:
 8000668:	4770      	bx	lr
 800066a:	bf00      	nop

0800066c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800066c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80006a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000670:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000672:	e003      	b.n	800067c <LoopCopyDataInit>

08000674 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000674:	4b0c      	ldr	r3, [pc, #48]	@ (80006a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000676:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000678:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800067a:	3104      	adds	r1, #4

0800067c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800067c:	480b      	ldr	r0, [pc, #44]	@ (80006ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800067e:	4b0c      	ldr	r3, [pc, #48]	@ (80006b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000680:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000684:	d3f6      	bcc.n	8000674 <CopyDataInit>
  ldr  r2, =_sbss
 8000686:	4a0b      	ldr	r2, [pc, #44]	@ (80006b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000688:	e002      	b.n	8000690 <LoopFillZerobss>

0800068a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800068a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800068c:	f842 3b04 	str.w	r3, [r2], #4

08000690 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000690:	4b09      	ldr	r3, [pc, #36]	@ (80006b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000692:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000694:	d3f9      	bcc.n	800068a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000696:	f003 f8b5 	bl	8003804 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800069a:	f022 fc83 	bl	8022fa4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800069e:	f001 fa8b 	bl	8001bb8 <main>
  bx  lr    
 80006a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80006a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80006a8:	08025c4c 	.word	0x08025c4c
  ldr  r0, =_sdata
 80006ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006b0:	20000280 	.word	0x20000280
  ldr  r2, =_sbss
 80006b4:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 80006b8:	20014d38 	.word	0x20014d38

080006bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006bc:	e7fe      	b.n	80006bc <ADC_IRQHandler>

080006be <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006be:	4770      	bx	lr

080006c0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006c0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006c2:	f000 fdbb 	bl	800123c <touchgfx_components_init>
    touchgfx_init();
}
 80006c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ca:	f000 bd3f 	b.w	800114c <touchgfx_init>

080006ce <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006ce:	f000 bdb7 	b.w	8001240 <touchgfx_taskEntry>

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f021 f9e2 	bl	8021aa2 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006e4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000718 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e8:	4c0c      	ldr	r4, [pc, #48]	@ (800071c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ea:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000720 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006ee:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006f0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006f2:	6863      	ldr	r3, [r4, #4]
 80006f4:	4798      	blx	r3
 80006f6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006fa:	4298      	cmp	r0, r3
 80006fc:	d10a      	bne.n	8000714 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006fe:	4d09      	ldr	r5, [pc, #36]	@ (8000724 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000700:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000702:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000704:	2082      	movs	r0, #130	@ 0x82
 8000706:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	2082      	movs	r0, #130	@ 0x82
 800070c:	68db      	ldr	r3, [r3, #12]
 800070e:	4798      	blx	r3
 8000710:	2000      	movs	r0, #0
    }

    return ret;
}
 8000712:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000714:	2001      	movs	r0, #1
 8000716:	e7fc      	b.n	8000712 <_Z11BSP_TS_Inittt+0x2e>
 8000718:	200004a6 	.word	0x200004a6
 800071c:	200000a4 	.word	0x200000a4
 8000720:	200004a4 	.word	0x200004a4
 8000724:	200004a8 	.word	0x200004a8

08000728 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000728:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800072c:	20f0      	movs	r0, #240	@ 0xf0
 800072e:	f7ff bfd9 	b.w	80006e4 <_Z11BSP_TS_Inittt>
	...

08000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000736:	4d39      	ldr	r5, [pc, #228]	@ (800081c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000738:	682b      	ldr	r3, [r5, #0]
{
 800073a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800073c:	691b      	ldr	r3, [r3, #16]
 800073e:	2082      	movs	r0, #130	@ 0x82
 8000740:	4798      	blx	r3
 8000742:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000744:	2800      	cmp	r0, #0
 8000746:	d04e      	beq.n	80007e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000748:	682b      	ldr	r3, [r5, #0]
 800074a:	f10d 0206 	add.w	r2, sp, #6
 800074e:	695b      	ldr	r3, [r3, #20]
 8000750:	a901      	add	r1, sp, #4
 8000752:	2082      	movs	r0, #130	@ 0x82
 8000754:	4798      	blx	r3

        if (isRevD)
 8000756:	4b32      	ldr	r3, [pc, #200]	@ (8000820 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d04b      	beq.n	80007f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800075e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000762:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000766:	429a      	cmp	r2, r3
 8000768:	d93f      	bls.n	80007ea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800076a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800076e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000772:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000774:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000776:	2b0a      	cmp	r3, #10
 8000778:	d942      	bls.n	8000800 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800077a:	220b      	movs	r2, #11
 800077c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000780:	4a28      	ldr	r2, [pc, #160]	@ (8000824 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000782:	8812      	ldrh	r2, [r2, #0]
 8000784:	4293      	cmp	r3, r2
 8000786:	d901      	bls.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000788:	3a01      	subs	r2, #1
 800078a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800078c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000790:	4825      	ldr	r0, [pc, #148]	@ (8000828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000792:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000796:	428a      	cmp	r2, r1
 8000798:	d834      	bhi.n	8000804 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800079a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800079e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007a0:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80007a2:	b292      	uxth	r2, r2
        xr = x / 15;
 80007a4:	250f      	movs	r5, #15
 80007a6:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 80007aa:	4d20      	ldr	r5, [pc, #128]	@ (800082c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 80007ac:	882d      	ldrh	r5, [r5, #0]
 80007ae:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 80007b0:	bf84      	itt	hi
 80007b2:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80007b6:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007b8:	428a      	cmp	r2, r1
 80007ba:	4615      	mov	r5, r2
 80007bc:	b28e      	uxth	r6, r1
 80007be:	d92a      	bls.n	8000816 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 80007c0:	1b92      	subs	r2, r2, r6
 80007c2:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007c4:	4e1a      	ldr	r6, [pc, #104]	@ (8000830 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 80007c6:	6837      	ldr	r7, [r6, #0]
 80007c8:	42bb      	cmp	r3, r7
 80007ca:	b2ba      	uxth	r2, r7
 80007cc:	bf8c      	ite	hi
 80007ce:	1a9a      	subhi	r2, r3, r2
 80007d0:	1ad2      	subls	r2, r2, r3
 80007d2:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 80007d4:	4411      	add	r1, r2
 80007d6:	2905      	cmp	r1, #5
        {
            _x = x;
 80007d8:	bfc4      	itt	gt
 80007da:	6005      	strgt	r5, [r0, #0]
            _y = y;
 80007dc:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80007de:	6803      	ldr	r3, [r0, #0]
 80007e0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007e2:	6833      	ldr	r3, [r6, #0]
 80007e4:	80a3      	strh	r3, [r4, #4]
    }
}
 80007e6:	b003      	add	sp, #12
 80007e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80007ea:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80007ec:	bf9c      	itt	ls
 80007ee:	22b4      	movls	r2, #180	@ 0xb4
 80007f0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80007f4:	e7bb      	b.n	800076e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80007f6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80007fa:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80007fe:	e7b9      	b.n	8000774 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000800:	2300      	movs	r3, #0
 8000802:	e7c3      	b.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000804:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000808:	3208      	adds	r2, #8
 800080a:	b292      	uxth	r2, r2
        if (xr <= 0)
 800080c:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800080e:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000810:	d8c8      	bhi.n	80007a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000812:	2500      	movs	r5, #0
            xr = 0;
 8000814:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000816:	1a89      	subs	r1, r1, r2
 8000818:	b289      	uxth	r1, r1
 800081a:	e7d3      	b.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 800081c:	200004a8 	.word	0x200004a8
 8000820:	20002ec8 	.word	0x20002ec8
 8000824:	200004a4 	.word	0x200004a4
 8000828:	200004a0 	.word	0x200004a0
 800082c:	200004a6 	.word	0x200004a6
 8000830:	2000049c 	.word	0x2000049c

08000834 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000834:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000836:	4668      	mov	r0, sp
{
 8000838:	460d      	mov	r5, r1
 800083a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800083c:	f7ff ff7a 	bl	8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000840:	f8bd 0000 	ldrh.w	r0, [sp]
 8000844:	b130      	cbz	r0, 8000854 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000846:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800084a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800084c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000850:	6023      	str	r3, [r4, #0]
        return true;
 8000852:	2001      	movs	r0, #1
}
 8000854:	b003      	add	sp, #12
 8000856:	bd30      	pop	{r4, r5, pc}

08000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000858:	2803      	cmp	r0, #3
 800085a:	d821      	bhi.n	80008a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800085c:	e8df f000 	tbb	[pc, r0]
 8000860:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000864:	4b0f      	ldr	r3, [pc, #60]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	fab2 f282 	clz	r2, r2
 800086c:	0952      	lsrs	r2, r2, #5
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000870:	480d      	ldr	r0, [pc, #52]	@ (80008a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000872:	f003 ba5b 	b.w	8003d2c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000876:	4b0b      	ldr	r3, [pc, #44]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	fab2 f282 	clz	r2, r2
 800087e:	0952      	lsrs	r2, r2, #5
 8000880:	2108      	movs	r1, #8
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000884:	4b07      	ldr	r3, [pc, #28]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000886:	689a      	ldr	r2, [r3, #8]
 8000888:	fab2 f282 	clz	r2, r2
 800088c:	0952      	lsrs	r2, r2, #5
 800088e:	2110      	movs	r1, #16
 8000890:	e7ee      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000892:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000894:	68da      	ldr	r2, [r3, #12]
 8000896:	fab2 f282 	clz	r2, r2
 800089a:	0952      	lsrs	r2, r2, #5
 800089c:	2120      	movs	r1, #32
 800089e:	e7e7      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008a0:	4770      	bx	lr
 80008a2:	bf00      	nop
 80008a4:	200004ac 	.word	0x200004ac
 80008a8:	40021000 	.word	0x40021000

080008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80008ac:	2803      	cmp	r0, #3
 80008ae:	d821      	bhi.n	80008f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80008b0:	e8df f000 	tbb	[pc, r0]
 80008b4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80008b8:	4b0f      	ldr	r3, [pc, #60]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008ba:	681a      	ldr	r2, [r3, #0]
 80008bc:	3a00      	subs	r2, #0
 80008be:	bf18      	it	ne
 80008c0:	2201      	movne	r2, #1
 80008c2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008c4:	480d      	ldr	r0, [pc, #52]	@ (80008fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80008c6:	f003 ba31 	b.w	8003d2c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80008ca:	4b0b      	ldr	r3, [pc, #44]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008cc:	685a      	ldr	r2, [r3, #4]
 80008ce:	3a00      	subs	r2, #0
 80008d0:	bf18      	it	ne
 80008d2:	2201      	movne	r2, #1
 80008d4:	2108      	movs	r1, #8
 80008d6:	e7f5      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008d8:	4b07      	ldr	r3, [pc, #28]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008da:	689a      	ldr	r2, [r3, #8]
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	2110      	movs	r1, #16
 80008e4:	e7ee      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008e6:	4b04      	ldr	r3, [pc, #16]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008e8:	68da      	ldr	r2, [r3, #12]
 80008ea:	3a00      	subs	r2, #0
 80008ec:	bf18      	it	ne
 80008ee:	2201      	movne	r2, #1
 80008f0:	2120      	movs	r1, #32
 80008f2:	e7e7      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop
 80008f8:	200004ac 	.word	0x200004ac
 80008fc:	40021000 	.word	0x40021000

08000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000900:	2803      	cmp	r0, #3
 8000902:	d80d      	bhi.n	8000920 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000904:	e8df f000 	tbb	[pc, r0]
 8000908:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800090c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800090e:	4805      	ldr	r0, [pc, #20]	@ (8000924 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000910:	f003 ba11 	b.w	8003d36 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000914:	2108      	movs	r1, #8
 8000916:	e7fa      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000918:	2110      	movs	r1, #16
 800091a:	e7f8      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800091c:	2120      	movs	r1, #32
 800091e:	e7f6      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	40021000 	.word	0x40021000

08000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000928:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800092a:	2803      	cmp	r0, #3
 800092c:	d811      	bhi.n	8000952 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800092e:	e8df f000 	tbb	[pc, r0]
 8000932:	0a02      	.short	0x0a02
 8000934:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000936:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000938:	4807      	ldr	r0, [pc, #28]	@ (8000958 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800093a:	f003 f9f1 	bl	8003d20 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800093e:	1e43      	subs	r3, r0, #1
 8000940:	4258      	negs	r0, r3
 8000942:	4158      	adcs	r0, r3
 8000944:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000946:	2108      	movs	r1, #8
 8000948:	e7f6      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800094a:	2110      	movs	r1, #16
 800094c:	e7f4      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800094e:	2120      	movs	r1, #32
 8000950:	e7f2      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000952:	2000      	movs	r0, #0
 8000954:	e7f3      	b.n	800093e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000956:	bf00      	nop
 8000958:	40021000 	.word	0x40021000

0800095c <_ZN8touchgfx4GPIO4initEv>:
{
 800095c:	b570      	push	{r4, r5, r6, lr}
 800095e:	4d08      	ldr	r5, [pc, #32]	@ (8000980 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000960:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000962:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000964:	b2e0      	uxtb	r0, r4
 8000966:	f7ff ffdf 	bl	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800096a:	b118      	cbz	r0, 8000974 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800096c:	682b      	ldr	r3, [r5, #0]
 800096e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000970:	bf18      	it	ne
 8000972:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000974:	3401      	adds	r4, #1
 8000976:	2c05      	cmp	r4, #5
 8000978:	f105 0504 	add.w	r5, r5, #4
 800097c:	d1f2      	bne.n	8000964 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800097e:	bd70      	pop	{r4, r5, r6, pc}
 8000980:	200004ac 	.word	0x200004ac

08000984 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000984:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000986:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800098a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800098e:	4770      	bx	lr

08000990 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000990:	4770      	bx	lr

08000992 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000992:	2000      	movs	r0, #0
 8000994:	4770      	bx	lr
	...

08000998 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000998:	4b03      	ldr	r3, [pc, #12]	@ (80009a8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800099a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800099c:	3900      	subs	r1, #0
 800099e:	bf18      	it	ne
 80009a0:	2101      	movne	r1, #1
 80009a2:	7019      	strb	r1, [r3, #0]
    }
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop
 80009a8:	20013ff5 	.word	0x20013ff5

080009ac <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 80009ac:	4770      	bx	lr

080009ae <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80009ae:	2000      	movs	r0, #0
 80009b0:	4770      	bx	lr

080009b2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80009b2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80009b4:	b10b      	cbz	r3, 80009ba <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80009b6:	4608      	mov	r0, r1
 80009b8:	4718      	bx	r3
        }
    }
 80009ba:	4770      	bx	lr

080009bc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80009bc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80009c0:	4770      	bx	lr

080009c2 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80009c2:	6840      	ldr	r0, [r0, #4]
 80009c4:	6803      	ldr	r3, [r0, #0]
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	4718      	bx	r3

080009ca <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80009ca:	4770      	bx	lr

080009cc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80009cc:	4770      	bx	lr

080009ce <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80009ce:	4770      	bx	lr

080009d0 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80009d0:	4770      	bx	lr

080009d2 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80009d2:	4770      	bx	lr

080009d4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80009d4:	b510      	push	{r4, lr}
 80009d6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80009d8:	f000 fd48 	bl	800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	4903      	ldr	r1, [pc, #12]	@ (80009ec <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80009e4:	4620      	mov	r0, r4
}
 80009e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009ea:	4718      	bx	r3
 80009ec:	d0000000 	.word	0xd0000000

080009f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009f2:	6803      	ldr	r3, [r0, #0]
{
 80009f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80009fa:	4798      	blx	r3
    enableInterrupts();
 80009fc:	6823      	ldr	r3, [r4, #0]
 80009fe:	4620      	mov	r0, r4
 8000a00:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000a02:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000a04:	f000 f8ec 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000a08:	6823      	ldr	r3, [r4, #0]
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a0e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000a10:	2029      	movs	r0, #41	@ 0x29
 8000a12:	f001 fb63 	bl	80020dc <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000a16:	f000 f8e3 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000a1a:	6823      	ldr	r3, [r4, #0]
 8000a1c:	4620      	mov	r0, r4
 8000a1e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a20:	4798      	blx	r3
    for (;;)
 8000a22:	e7f8      	b.n	8000a16 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000a24 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000a24:	b510      	push	{r4, lr}
 8000a26:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000a28:	f00a fb8e 	bl	800b148 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	4620      	mov	r0, r4
 8000a30:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000a38:	4718      	bx	r3

08000a3a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000a3a:	f000 bcfb 	b.w	8001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000a3e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000a3e:	f000 bcff 	b.w	8001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a42 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a42:	f000 bd31 	b.w	80014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a46 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a46:	f000 bcd1 	b.w	80013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a4a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a4a:	f000 bd41 	b.w	80014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a4e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a4e:	f000 bd49 	b.w	80014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a52 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a52:	f000 bcd5 	b.w	8001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a56 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a56:	f009 bd97 	b.w	800a588 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a5a <_ZN11TouchGFXHALD0Ev>:
 8000a5a:	b510      	push	{r4, lr}
 8000a5c:	2184      	movs	r1, #132	@ 0x84
 8000a5e:	4604      	mov	r4, r0
 8000a60:	f021 f81f 	bl	8021aa2 <_ZdlPvj>
 8000a64:	4620      	mov	r0, r4
 8000a66:	bd10      	pop	{r4, pc}

08000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a68:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a6a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a6e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a72:	4b0c      	ldr	r3, [pc, #48]	@ (8000aa4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a74:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a76:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a78:	d009      	beq.n	8000a8e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a7a:	b93a      	cbnz	r2, 8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a7c:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a7e:	490b      	ldr	r1, [pc, #44]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a80:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a82:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a84:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a86:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a88:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a8a:	701a      	strb	r2, [r3, #0]
    }
 8000a8c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a8e:	2a00      	cmp	r2, #0
 8000a90:	d0fc      	beq.n	8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a92:	4a05      	ldr	r2, [pc, #20]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a94:	4905      	ldr	r1, [pc, #20]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a96:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a98:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a9a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a9c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	e7f3      	b.n	8000a8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000aa2:	bf00      	nop
 8000aa4:	20013fee 	.word	0x20013fee
 8000aa8:	20013fea 	.word	0x20013fea
 8000aac:	20013fec 	.word	0x20013fec

08000ab0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	460d      	mov	r5, r1
 8000ab4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000ab6:	b935      	cbnz	r5, 8000ac6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000ab8:	4b09      	ldr	r3, [pc, #36]	@ (8000ae0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000aba:	4a0a      	ldr	r2, [pc, #40]	@ (8000ae4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000abc:	480a      	ldr	r0, [pc, #40]	@ (8000ae8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000abe:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000ac2:	f021 ff2b 	bl	802291c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000ac6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000aca:	4b08      	ldr	r3, [pc, #32]	@ (8000aec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000acc:	3a00      	subs	r2, #0
 8000ace:	bf18      	it	ne
 8000ad0:	2201      	movne	r2, #1
 8000ad2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000ad4:	6803      	ldr	r3, [r0, #0]
    }
 8000ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ada:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ade:	4718      	bx	r3
 8000ae0:	08023e40 	.word	0x08023e40
 8000ae4:	08023e78 	.word	0x08023e78
 8000ae8:	08023ec6 	.word	0x08023ec6
 8000aec:	20013ff4 	.word	0x20013ff4

08000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000af0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000af2:	4b09      	ldr	r3, [pc, #36]	@ (8000b18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000af4:	881b      	ldrh	r3, [r3, #0]
 8000af6:	428b      	cmp	r3, r1
 8000af8:	d803      	bhi.n	8000b02 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000afa:	4b08      	ldr	r3, [pc, #32]	@ (8000b1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000afc:	881b      	ldrh	r3, [r3, #0]
 8000afe:	4293      	cmp	r3, r2
 8000b00:	d905      	bls.n	8000b0e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000b02:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000b04:	4a07      	ldr	r2, [pc, #28]	@ (8000b24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000b06:	4808      	ldr	r0, [pc, #32]	@ (8000b28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000b08:	21a3      	movs	r1, #163	@ 0xa3
 8000b0a:	f021 ff07 	bl	802291c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000b0e:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000b10:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000b12:	4b07      	ldr	r3, [pc, #28]	@ (8000b30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000b14:	801a      	strh	r2, [r3, #0]
    }
 8000b16:	bd08      	pop	{r3, pc}
 8000b18:	20013fea 	.word	0x20013fea
 8000b1c:	20013fec 	.word	0x20013fec
 8000b20:	08023f0b 	.word	0x08023f0b
 8000b24:	08023f6e 	.word	0x08023f6e
 8000b28:	08023ec6 	.word	0x08023ec6
 8000b2c:	20013ff0 	.word	0x20013ff0
 8000b30:	20013ff2 	.word	0x20013ff2

08000b34 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000b34:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000b36:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000b3a:	b118      	cbz	r0, 8000b44 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000b3c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000b3e:	6803      	ldr	r3, [r0, #0]
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	4718      	bx	r3
    }
 8000b44:	4770      	bx	lr
	...

08000b48 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b48:	2101      	movs	r1, #1
{
 8000b4a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	4608      	mov	r0, r1
 8000b50:	f006 fc9a 	bl	8007488 <osSemaphoreNew>
 8000b54:	4b0a      	ldr	r3, [pc, #40]	@ (8000b80 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b56:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b58:	b928      	cbnz	r0, 8000b66 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b5a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b84 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b5c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b5e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b60:	480a      	ldr	r0, [pc, #40]	@ (8000b8c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b62:	f021 fedb 	bl	802291c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b66:	2200      	movs	r2, #0
 8000b68:	2104      	movs	r1, #4
 8000b6a:	2001      	movs	r0, #1
 8000b6c:	f006 fd2b 	bl	80075c6 <osMessageQueueNew>
 8000b70:	4b07      	ldr	r3, [pc, #28]	@ (8000b90 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b72:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b74:	b918      	cbnz	r0, 8000b7e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b76:	4b07      	ldr	r3, [pc, #28]	@ (8000b94 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b78:	4a03      	ldr	r2, [pc, #12]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b7a:	212c      	movs	r1, #44	@ 0x2c
 8000b7c:	e7f0      	b.n	8000b60 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b7e:	bd08      	pop	{r3, pc}
 8000b80:	200004c0 	.word	0x200004c0
 8000b84:	08023fb1 	.word	0x08023fb1
 8000b88:	08023ffa 	.word	0x08023ffa
 8000b8c:	08024029 	.word	0x08024029
 8000b90:	200004bc 	.word	0x200004bc
 8000b94:	08024067 	.word	0x08024067

08000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b98:	4b02      	ldr	r3, [pc, #8]	@ (8000ba4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b9a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b9e:	6818      	ldr	r0, [r3, #0]
 8000ba0:	f006 bcbc 	b.w	800751c <osSemaphoreAcquire>
 8000ba4:	200004c0 	.word	0x200004c0

08000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ba8:	4b01      	ldr	r3, [pc, #4]	@ (8000bb0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000baa:	6818      	ldr	r0, [r3, #0]
 8000bac:	f006 bce2 	b.w	8007574 <osSemaphoreRelease>
 8000bb0:	200004c0 	.word	0x200004c0

08000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000bb4:	4b02      	ldr	r3, [pc, #8]	@ (8000bc0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000bb6:	2100      	movs	r1, #0
 8000bb8:	6818      	ldr	r0, [r3, #0]
 8000bba:	f006 bcaf 	b.w	800751c <osSemaphoreAcquire>
 8000bbe:	bf00      	nop
 8000bc0:	200004c0 	.word	0x200004c0

08000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000bc4:	f7ff bff0 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000bc8:	4803      	ldr	r0, [pc, #12]	@ (8000bd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000bca:	4904      	ldr	r1, [pc, #16]	@ (8000bdc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000bcc:	6800      	ldr	r0, [r0, #0]
 8000bce:	2300      	movs	r3, #0
 8000bd0:	461a      	mov	r2, r3
 8000bd2:	f006 bd33 	b.w	800763c <osMessageQueuePut>
 8000bd6:	bf00      	nop
 8000bd8:	200004bc 	.word	0x200004bc
 8000bdc:	20000004 	.word	0x20000004

08000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000be0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000be2:	4c08      	ldr	r4, [pc, #32]	@ (8000c04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000be4:	2300      	movs	r3, #0
 8000be6:	461a      	mov	r2, r3
 8000be8:	a901      	add	r1, sp, #4
 8000bea:	6820      	ldr	r0, [r4, #0]
 8000bec:	f006 fd57 	bl	800769e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	a901      	add	r1, sp, #4
 8000bfa:	f006 fd50 	bl	800769e <osMessageQueueGet>
}
 8000bfe:	b002      	add	sp, #8
 8000c00:	bd10      	pop	{r4, pc}
 8000c02:	bf00      	nop
 8000c04:	200004bc 	.word	0x200004bc

08000c08 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000c08:	6803      	ldr	r3, [r0, #0]
 8000c0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c0c:	4718      	bx	r3

08000c0e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000c0e:	2001      	movs	r0, #1
 8000c10:	4770      	bx	lr

08000c12 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000c12:	6803      	ldr	r3, [r0, #0]
 8000c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c16:	4718      	bx	r3

08000c18 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000c18:	e7fe      	b.n	8000c18 <DMA2D_XferErrorCallback>

08000c1a <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000c1a:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000c1e:	4770      	bx	lr

08000c20 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c20:	4b05      	ldr	r3, [pc, #20]	@ (8000c38 <_ZN8STM32DMAD1Ev+0x18>)
 8000c22:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c24:	4b05      	ldr	r3, [pc, #20]	@ (8000c3c <_ZN8STM32DMAD1Ev+0x1c>)
 8000c26:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c32:	f3bf 8f6f 	isb	sy
}
 8000c36:	4770      	bx	lr
 8000c38:	080249d8 	.word	0x080249d8
 8000c3c:	e000e100 	.word	0xe000e100

08000c40 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c40:	b510      	push	{r4, lr}
 8000c42:	4604      	mov	r4, r0
}
 8000c44:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c48:	f7ff ffea 	bl	8000c20 <_ZN8STM32DMAD1Ev>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f020 ff28 	bl	8021aa2 <_ZdlPvj>
 8000c52:	4620      	mov	r0, r4
 8000c54:	bd10      	pop	{r4, pc}
	...

08000c58 <_ZN8STM32DMA10initializeEv>:
{
 8000c58:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	9301      	str	r3, [sp, #4]
 8000c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c98 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c62:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c66:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c6a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c6e:	9201      	str	r2, [sp, #4]
 8000c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c72:	691a      	ldr	r2, [r3, #16]
 8000c74:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c78:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c7a:	691a      	ldr	r2, [r3, #16]
 8000c7c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c80:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c82:	4b06      	ldr	r3, [pc, #24]	@ (8000c9c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c84:	4a06      	ldr	r2, [pc, #24]	@ (8000ca0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c86:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c88:	4a06      	ldr	r2, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c8a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c8c:	4b06      	ldr	r3, [pc, #24]	@ (8000ca8 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c8e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c92:	609a      	str	r2, [r3, #8]
}
 8000c94:	b002      	add	sp, #8
 8000c96:	4770      	bx	lr
 8000c98:	40023800 	.word	0x40023800
 8000c9c:	200030a8 	.word	0x200030a8
 8000ca0:	08000ef9 	.word	0x08000ef9
 8000ca4:	08000c19 	.word	0x08000c19
 8000ca8:	e000e100 	.word	0xe000e100

08000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000cac:	b508      	push	{r3, lr}
    switch (format)
 8000cae:	280a      	cmp	r0, #10
 8000cb0:	d809      	bhi.n	8000cc6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000cb2:	e8df f000 	tbb	[pc, r0]
 8000cb6:	1006      	.short	0x1006
 8000cb8:	0808080e 	.word	0x0808080e
 8000cbc:	10101008 	.word	0x10101008
 8000cc0:	10          	.byte	0x10
 8000cc1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000cc2:	2002      	movs	r0, #2
}
 8000cc4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000cc6:	4b05      	ldr	r3, [pc, #20]	@ (8000cdc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000cc8:	4a05      	ldr	r2, [pc, #20]	@ (8000ce0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000cca:	4806      	ldr	r0, [pc, #24]	@ (8000ce4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000ccc:	2190      	movs	r1, #144	@ 0x90
 8000cce:	f021 fe25 	bl	802291c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000cd2:	2000      	movs	r0, #0
 8000cd4:	e7f6      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cd6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cd8:	e7f4      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cda:	bf00      	nop
 8000cdc:	080240a9 	.word	0x080240a9
 8000ce0:	080240c4 	.word	0x080240c4
 8000ce4:	0802410f 	.word	0x0802410f

08000ce8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cec:	7f88      	ldrb	r0, [r1, #30]
 8000cee:	f7ff ffdd 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cf2:	8aa5      	ldrh	r5, [r4, #20]
 8000cf4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cf6:	4b16      	ldr	r3, [pc, #88]	@ (8000d50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cfa:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cfc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d00:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d02:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d04:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d06:	1b52      	subs	r2, r2, r5
 8000d08:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d0a:	6825      	ldr	r5, [r4, #0]
 8000d0c:	2d08      	cmp	r5, #8
 8000d0e:	d10e      	bne.n	8000d2e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d10:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d12:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d14:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d16:	7f20      	ldrb	r0, [r4, #28]
 8000d18:	4a0e      	ldr	r2, [pc, #56]	@ (8000d54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d1a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d1e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d20:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d22:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d24:	4a0c      	ldr	r2, [pc, #48]	@ (8000d58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d26:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d28:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d2a:	601a      	str	r2, [r3, #0]
    }
}
 8000d2c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000d2e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d30:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000d32:	611a      	str	r2, [r3, #16]
 8000d34:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000d36:	0a0a      	lsrs	r2, r1, #8
 8000d38:	0948      	lsrs	r0, r1, #5
 8000d3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000d3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d42:	4302      	orrs	r2, r0
 8000d44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d48:	430a      	orrs	r2, r1
 8000d4a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d4c:	4a03      	ldr	r2, [pc, #12]	@ (8000d5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d4e:	e7ec      	b.n	8000d2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d50:	4002b000 	.word	0x4002b000
 8000d54:	00010009 	.word	0x00010009
 8000d58:	00022301 	.word	0x00022301
 8000d5c:	00032301 	.word	0x00032301

08000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d60:	b508      	push	{r3, lr}
    switch (format)
 8000d62:	280b      	cmp	r0, #11
 8000d64:	d80b      	bhi.n	8000d7e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d66:	e8df f000 	tbb	[pc, r0]
 8000d6a:	1206      	.short	0x1206
 8000d6c:	0a0a0a10 	.word	0x0a0a0a10
 8000d70:	0808080a 	.word	0x0808080a
 8000d74:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d76:	2002      	movs	r0, #2
}
 8000d78:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d7a:	2005      	movs	r0, #5
        break;
 8000d7c:	e7fc      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d7e:	4b05      	ldr	r3, [pc, #20]	@ (8000d94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	@ (8000d98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d82:	4806      	ldr	r0, [pc, #24]	@ (8000d9c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d84:	216f      	movs	r1, #111	@ 0x6f
 8000d86:	f021 fdc9 	bl	802291c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	e7f4      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d8e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d90:	e7f2      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d92:	bf00      	nop
 8000d94:	080240a9 	.word	0x080240a9
 8000d98:	0802414b 	.word	0x0802414b
 8000d9c:	0802410f 	.word	0x0802410f

08000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000da4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000da8:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000daa:	4640      	mov	r0, r8
 8000dac:	f7ff ffd8 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000db2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db4:	4638      	mov	r0, r7
 8000db6:	f7ff ffd3 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000dba:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dbc:	4638      	mov	r0, r7
 8000dbe:	f7ff ff75 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	8aa1      	ldrh	r1, [r4, #20]
 8000dc4:	8b62      	ldrh	r2, [r4, #26]
 8000dc6:	4b44      	ldr	r3, [pc, #272]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dc8:	1a52      	subs	r2, r2, r1
 8000dca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dcc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000dce:	8b22      	ldrh	r2, [r4, #24]
 8000dd0:	1a52      	subs	r2, r2, r1
 8000dd2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ddc:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dde:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000de6:	6820      	ldr	r0, [r4, #0]
 8000de8:	2880      	cmp	r0, #128	@ 0x80
 8000dea:	d028      	beq.n	8000e3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dec:	7f22      	ldrb	r2, [r4, #28]
 8000dee:	d80f      	bhi.n	8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000df0:	2820      	cmp	r0, #32
 8000df2:	d067      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df4:	2840      	cmp	r0, #64	@ 0x40
 8000df6:	d065      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df8:	2804      	cmp	r0, #4
 8000dfa:	d01a      	beq.n	8000e32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfc:	4b36      	ldr	r3, [pc, #216]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dfe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e02:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e06:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e08:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e0a:	d061      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e0c:	4a33      	ldr	r2, [pc, #204]	@ (8000edc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000e0e:	e044      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000e10:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000e14:	d004      	beq.n	8000e20 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000e16:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000e1a:	d1ef      	bne.n	8000dfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e1c:	4830      	ldr	r0, [pc, #192]	@ (8000ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000e1e:	e000      	b.n	8000e22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e20:	4830      	ldr	r0, [pc, #192]	@ (8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e22:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000e26:	61da      	str	r2, [r3, #28]
 8000e28:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e2a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e2c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e2e:	6159      	str	r1, [r3, #20]
 8000e30:	e032      	b.n	8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e32:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e36:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e3a:	61da      	str	r2, [r3, #28]
 8000e3c:	e7f6      	b.n	8000e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e3e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e40:	1d02      	adds	r2, r0, #4
 8000e42:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e44:	7f22      	ldrb	r2, [r4, #28]
 8000e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e4a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e4e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e50:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e52:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e54:	7801      	ldrb	r1, [r0, #0]
 8000e56:	b141      	cbz	r1, 8000e6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e58:	2901      	cmp	r1, #1
 8000e5a:	d021      	beq.n	8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e5c:	4b22      	ldr	r3, [pc, #136]	@ (8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e5e:	4a23      	ldr	r2, [pc, #140]	@ (8000eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e60:	4823      	ldr	r0, [pc, #140]	@ (8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e62:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e66:	f021 fd59 	bl	802291c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e6a:	69da      	ldr	r2, [r3, #28]
 8000e6c:	8841      	ldrh	r1, [r0, #2]
 8000e6e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e72:	3901      	subs	r1, #1
 8000e74:	f022 0210 	bic.w	r2, r2, #16
 8000e78:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e7c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e7e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e80:	4b15      	ldr	r3, [pc, #84]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e82:	69da      	ldr	r2, [r3, #28]
 8000e84:	f042 0220 	orr.w	r2, r2, #32
 8000e88:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e8a:	69da      	ldr	r2, [r3, #28]
 8000e8c:	0692      	lsls	r2, r2, #26
 8000e8e:	d4fc      	bmi.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e90:	2210      	movs	r2, #16
 8000e92:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e94:	2900      	cmp	r1, #0
 8000e96:	d0b9      	beq.n	8000e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e98:	4a16      	ldr	r2, [pc, #88]	@ (8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e9a:	601a      	str	r2, [r3, #0]
}
 8000e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000ea0:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	8840      	ldrh	r0, [r0, #2]
 8000ea8:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000eac:	f100 30ff 	add.w	r0, r0, #4294967295
 8000eb0:	f022 0210 	bic.w	r2, r2, #16
 8000eb4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000eb8:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000ebc:	bf18      	it	ne
 8000ebe:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ec0:	61da      	str	r2, [r3, #28]
                break;
 8000ec2:	e7dd      	b.n	8000e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec4:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ec8:	4b03      	ldr	r3, [pc, #12]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000eca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000ece:	e7b4      	b.n	8000e3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000ed0:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000ed4:	e7e1      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ed6:	bf00      	nop
 8000ed8:	4002b000 	.word	0x4002b000
 8000edc:	00012301 	.word	0x00012301
 8000ee0:	00020009 	.word	0x00020009
 8000ee4:	0002000a 	.word	0x0002000a
 8000ee8:	08024195 	.word	0x08024195
 8000eec:	080241af 	.word	0x080241af
 8000ef0:	0802410f 	.word	0x0802410f
 8000ef4:	00022301 	.word	0x00022301

08000ef8 <DMA2D_XferCpltCallback>:
        return instance;
 8000ef8:	4b02      	ldr	r3, [pc, #8]	@ (8000f04 <DMA2D_XferCpltCallback+0xc>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000efe:	6803      	ldr	r3, [r0, #0]
 8000f00:	695b      	ldr	r3, [r3, #20]
 8000f02:	4718      	bx	r3
 8000f04:	20013ff8 	.word	0x20013ff8

08000f08 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000f08:	b570      	push	{r4, r5, r6, lr}
 8000f0a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000f0c:	4625      	mov	r5, r4
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f38 <_ZN8STM32DMAC1Ev+0x30>)
 8000f10:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f12:	2600      	movs	r6, #0
 8000f14:	6060      	str	r0, [r4, #4]
 8000f16:	7226      	strb	r6, [r4, #8]
 8000f18:	7266      	strb	r6, [r4, #9]
 8000f1a:	f845 3b20 	str.w	r3, [r5], #32
 8000f1e:	2260      	movs	r2, #96	@ 0x60
 8000f20:	4629      	mov	r1, r5
 8000f22:	f00a fa67 	bl	800b3f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000f26:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000f2a:	60ee      	str	r6, [r5, #12]
 8000f2c:	3524      	adds	r5, #36	@ 0x24
 8000f2e:	429d      	cmp	r5, r3
 8000f30:	d1fb      	bne.n	8000f2a <_ZN8STM32DMAC1Ev+0x22>
}
 8000f32:	4620      	mov	r0, r4
 8000f34:	bd70      	pop	{r4, r5, r6, pc}
 8000f36:	bf00      	nop
 8000f38:	080249d8 	.word	0x080249d8

08000f3c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f3c:	4b03      	ldr	r3, [pc, #12]	@ (8000f4c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000f3e:	681a      	ldr	r2, [r3, #0]
 8000f40:	07d2      	lsls	r2, r2, #31
 8000f42:	d4fc      	bmi.n	8000f3e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f44:	2223      	movs	r2, #35	@ 0x23
 8000f46:	609a      	str	r2, [r3, #8]
}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	4002b000 	.word	0x4002b000

08000f50 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f50:	4770      	bx	lr
	...

08000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f54:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f56:	4c0f      	ldr	r4, [pc, #60]	@ (8000f94 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f58:	6825      	ldr	r5, [r4, #0]
 8000f5a:	07ed      	lsls	r5, r5, #31
 8000f5c:	d4fc      	bmi.n	8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f5e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f60:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f62:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f64:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f68:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f6a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f6c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f6e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f70:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f72:	d00a      	beq.n	8000f8a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f74:	4908      	ldr	r1, [pc, #32]	@ (8000f98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f78:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f7c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f7e:	4b07      	ldr	r3, [pc, #28]	@ (8000f9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f80:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f82:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f84:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f86:	6023      	str	r3, [r4, #0]
    }
}
 8000f88:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f8a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f90:	4b03      	ldr	r3, [pc, #12]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f92:	e7f8      	b.n	8000f86 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f94:	4002b000 	.word	0x4002b000
 8000f98:	00010009 	.word	0x00010009
 8000f9c:	00020001 	.word	0x00020001
 8000fa0:	00030001 	.word	0x00030001

08000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fa4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fa6:	4c0e      	ldr	r4, [pc, #56]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000fa8:	6825      	ldr	r5, [r4, #0]
 8000faa:	07ed      	lsls	r5, r5, #31
 8000fac:	d4fc      	bmi.n	8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fae:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb2:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fb8:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000fba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fbc:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fbe:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fc0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fc2:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000fc4:	d008      	beq.n	8000fd8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fc6:	061b      	lsls	r3, r3, #24
 8000fc8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000fcc:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fce:	4b05      	ldr	r3, [pc, #20]	@ (8000fe4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd2:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fd4:	6023      	str	r3, [r4, #0]
    }
}
 8000fd6:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd8:	4b03      	ldr	r3, [pc, #12]	@ (8000fe8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000fda:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fdc:	2301      	movs	r3, #1
 8000fde:	e7f9      	b.n	8000fd4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fe0:	4002b000 	.word	0x4002b000
 8000fe4:	00020001 	.word	0x00020001
 8000fe8:	ff020002 	.word	0xff020002

08000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fec:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fee:	4c0b      	ldr	r4, [pc, #44]	@ (800101c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000ff0:	6825      	ldr	r5, [r4, #0]
 8000ff2:	07ed      	lsls	r5, r5, #31
 8000ff4:	d4fc      	bmi.n	8000ff0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ff6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ff8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ffc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001002:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001004:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001008:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800100a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800100c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800100e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001010:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001012:	4b03      	ldr	r3, [pc, #12]	@ (8001020 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001014:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001016:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001018:	6023      	str	r3, [r4, #0]
}
 800101a:	bd30      	pop	{r4, r5, pc}
 800101c:	4002b000 	.word	0x4002b000
 8001020:	00020001 	.word	0x00020001

08001024 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001024:	2001      	movs	r0, #1
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001028:	200c      	movs	r0, #12
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800102c:	230c      	movs	r3, #12
 800102e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001032:	3008      	adds	r0, #8
 8001034:	4770      	bx	lr

08001036 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001036:	230c      	movs	r3, #12
 8001038:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800103c:	3008      	adds	r0, #8
 800103e:	4770      	bx	lr

08001040 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001040:	2001      	movs	r0, #1
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001044:	f640 60e8 	movw	r0, #3816	@ 0xee8
 8001048:	4770      	bx	lr

0800104a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800104a:	f640 63e8 	movw	r3, #3816	@ 0xee8
 800104e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001052:	3008      	adds	r0, #8
 8001054:	4770      	bx	lr

08001056 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001056:	f640 63e8 	movw	r3, #3816	@ 0xee8
 800105a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800105e:	3008      	adds	r0, #8
 8001060:	4770      	bx	lr

08001062 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001062:	2001      	movs	r0, #1
 8001064:	4770      	bx	lr

08001066 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001066:	2010      	movs	r0, #16
 8001068:	4770      	bx	lr

0800106a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800106a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800106e:	3008      	adds	r0, #8
 8001070:	4770      	bx	lr

08001072 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001072:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001076:	3008      	adds	r0, #8
 8001078:	4770      	bx	lr

0800107a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800107a:	4608      	mov	r0, r1
 800107c:	f001 bd4e 	b.w	8002b1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001080:	b510      	push	{r4, lr}
 8001082:	4b03      	ldr	r3, [pc, #12]	@ (8001090 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001084:	6003      	str	r3, [r0, #0]
 8001086:	4604      	mov	r4, r0
 8001088:	f008 ffd2 	bl	800a030 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800108c:	4620      	mov	r0, r4
 800108e:	bd10      	pop	{r4, pc}
 8001090:	08024a90 	.word	0x08024a90

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4604      	mov	r4, r0
 8001098:	f7ff fff2 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800109c:	4620      	mov	r0, r4
 800109e:	2114      	movs	r1, #20
 80010a0:	f020 fcff 	bl	8021aa2 <_ZdlPvj>
 80010a4:	4620      	mov	r0, r4
 80010a6:	bd10      	pop	{r4, pc}

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4b03      	ldr	r3, [pc, #12]	@ (80010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010ac:	6003      	str	r3, [r0, #0]
 80010ae:	4604      	mov	r4, r0
 80010b0:	f008 ffbe 	bl	800a030 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010b4:	4620      	mov	r0, r4
 80010b6:	bd10      	pop	{r4, pc}
 80010b8:	08024a5c 	.word	0x08024a5c

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010bc:	b510      	push	{r4, lr}
 80010be:	4604      	mov	r4, r0
 80010c0:	f7ff fff2 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010c4:	4620      	mov	r0, r4
 80010c6:	f44f 616f 	mov.w	r1, #3824	@ 0xef0
 80010ca:	f020 fcea 	bl	8021aa2 <_ZdlPvj>
 80010ce:	4620      	mov	r0, r4
 80010d0:	bd10      	pop	{r4, pc}
	...

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010d4:	b510      	push	{r4, lr}
 80010d6:	4b03      	ldr	r3, [pc, #12]	@ (80010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010d8:	6003      	str	r3, [r0, #0]
 80010da:	4604      	mov	r4, r0
 80010dc:	f008 ffa8 	bl	800a030 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010e0:	4620      	mov	r0, r4
 80010e2:	bd10      	pop	{r4, pc}
 80010e4:	08024a28 	.word	0x08024a28

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010e8:	b510      	push	{r4, lr}
 80010ea:	4604      	mov	r4, r0
 80010ec:	f7ff fff2 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010f0:	4620      	mov	r0, r4
 80010f2:	2118      	movs	r1, #24
 80010f4:	f020 fcd5 	bl	8021aa2 <_ZdlPvj>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}

080010fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4b08      	ldr	r3, [pc, #32]	@ (8001120 <_ZN12FrontendHeapD1Ev+0x24>)
 8001100:	6003      	str	r3, [r0, #0]
 8001102:	4604      	mov	r4, r0
 8001104:	f600 701c 	addw	r0, r0, #3868	@ 0xf1c
 8001108:	f7ff ffba 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800110c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001110:	f7ff ffca 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001114:	f104 0014 	add.w	r0, r4, #20
 8001118:	f7ff ffdc 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800111c:	4620      	mov	r0, r4
 800111e:	bd10      	pop	{r4, pc}
 8001120:	08024ac4 	.word	0x08024ac4

08001124 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001124:	b508      	push	{r3, lr}
 8001126:	4802      	ldr	r0, [pc, #8]	@ (8001130 <__tcf_0+0xc>)
 8001128:	f7ff ffe8 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800112c:	bd08      	pop	{r3, pc}
 800112e:	bf00      	nop
 8001130:	2000139c 	.word	0x2000139c

08001134 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff ffe0 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	f241 0190 	movw	r1, #4240	@ 0x1090
 8001142:	f020 fcae 	bl	8021aa2 <_ZdlPvj>
 8001146:	4620      	mov	r0, r4
 8001148:	bd10      	pop	{r4, pc}
	...

0800114c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800114c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001150:	f001 fb66 	bl	8002820 <_ZN14BitmapDatabase11getInstanceEv>
 8001154:	4605      	mov	r5, r0
 8001156:	f001 fb67 	bl	8002828 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800115a:	2400      	movs	r4, #0
 800115c:	4601      	mov	r1, r0
 800115e:	4623      	mov	r3, r4
 8001160:	4628      	mov	r0, r5
 8001162:	4622      	mov	r2, r4
 8001164:	9400      	str	r4, [sp, #0]
 8001166:	f011 fc09 	bl	801297c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800116a:	4b27      	ldr	r3, [pc, #156]	@ (8001208 <touchgfx_init+0xbc>)
 800116c:	4a27      	ldr	r2, [pc, #156]	@ (800120c <touchgfx_init+0xc0>)
 800116e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001170:	4620      	mov	r0, r4
 8001172:	f001 fea1 	bl	8002eb8 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001176:	4d26      	ldr	r5, [pc, #152]	@ (8001210 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001178:	4b26      	ldr	r3, [pc, #152]	@ (8001214 <touchgfx_init+0xc8>)
 800117a:	4a27      	ldr	r2, [pc, #156]	@ (8001218 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800117c:	4827      	ldr	r0, [pc, #156]	@ (800121c <touchgfx_init+0xd0>)
 800117e:	609a      	str	r2, [r3, #8]
 8001180:	f011 fb64 	bl	801284c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001184:	682b      	ldr	r3, [r5, #0]
 8001186:	f3bf 8f5b 	dmb	ish
 800118a:	07db      	lsls	r3, r3, #31
 800118c:	d435      	bmi.n	80011fa <touchgfx_init+0xae>
 800118e:	4628      	mov	r0, r5
 8001190:	f020 fc89 	bl	8021aa6 <__cxa_guard_acquire>
 8001194:	b388      	cbz	r0, 80011fa <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001196:	4c22      	ldr	r4, [pc, #136]	@ (8001220 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001198:	4b22      	ldr	r3, [pc, #136]	@ (8001224 <touchgfx_init+0xd8>)
 800119a:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800119c:	f604 7634 	addw	r6, r4, #3892	@ 0xf34
        : presenterStorage(pres),
 80011a0:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80011a4:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80011a8:	f604 771c 	addw	r7, r4, #3868	@ 0xf1c
        : presenterStorage(pres),
 80011ac:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80011ae:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80011b2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80011b4:	6126      	str	r6, [r4, #16]
 80011b6:	f008 ff3d 	bl	800a034 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ba:	4b1b      	ldr	r3, [pc, #108]	@ (8001228 <touchgfx_init+0xdc>)
 80011bc:	6163      	str	r3, [r4, #20]
 80011be:	4640      	mov	r0, r8
 80011c0:	f008 ff38 	bl	800a034 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011c4:	4b19      	ldr	r3, [pc, #100]	@ (800122c <touchgfx_init+0xe0>)
 80011c6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80011c8:	4638      	mov	r0, r7
 80011ca:	f008 ff33 	bl	800a034 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ce:	4b18      	ldr	r3, [pc, #96]	@ (8001230 <touchgfx_init+0xe4>)
 80011d0:	f8c4 3f1c 	str.w	r3, [r4, #3868]	@ 0xf1c
 80011d4:	f504 6073 	add.w	r0, r4, #3888	@ 0xf30
 80011d8:	f001 fee4 	bl	8002fa4 <_ZN5ModelC1Ev>
 80011dc:	4622      	mov	r2, r4
 80011de:	f504 6173 	add.w	r1, r4, #3888	@ 0xf30
 80011e2:	4630      	mov	r0, r6
 80011e4:	f001 fed4 	bl	8002f90 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011e8:	4630      	mov	r0, r6
 80011ea:	f001 fc97 	bl	8002b1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80011ee:	4811      	ldr	r0, [pc, #68]	@ (8001234 <touchgfx_init+0xe8>)
 80011f0:	f021 fbb2 	bl	8022958 <atexit>
 80011f4:	4628      	mov	r0, r5
 80011f6:	f020 fc62 	bl	8021abe <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011fa:	480f      	ldr	r0, [pc, #60]	@ (8001238 <touchgfx_init+0xec>)
}
 80011fc:	b002      	add	sp, #8
 80011fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001202:	f7ff bbe7 	b.w	80009d4 <_ZN11TouchGFXHAL10initializeEv>
 8001206:	bf00      	nop
 8001208:	2001405c 	.word	0x2001405c
 800120c:	20000548 	.word	0x20000548
 8001210:	20001398 	.word	0x20001398
 8001214:	20000568 	.word	0x20000568
 8001218:	2000054c 	.word	0x2000054c
 800121c:	20000008 	.word	0x20000008
 8001220:	2000139c 	.word	0x2000139c
 8001224:	08024ac4 	.word	0x08024ac4
 8001228:	08024a28 	.word	0x08024a28
 800122c:	08024a5c 	.word	0x08024a5c
 8001230:	08024a90 	.word	0x08024a90
 8001234:	08001125 	.word	0x08001125
 8001238:	200004c4 	.word	0x200004c4

0800123c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800123c:	4770      	bx	lr
	...

08001240 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001240:	4801      	ldr	r0, [pc, #4]	@ (8001248 <touchgfx_taskEntry+0x8>)
 8001242:	f7ff bbd5 	b.w	80009f0 <_ZN11TouchGFXHAL9taskEntryEv>
 8001246:	bf00      	nop
 8001248:	200004c4 	.word	0x200004c4

0800124c <_GLOBAL__sub_I_touchgfx_init>:
}
 800124c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800124e:	4e26      	ldr	r6, [pc, #152]	@ (80012e8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001250:	4c26      	ldr	r4, [pc, #152]	@ (80012ec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001252:	4d27      	ldr	r5, [pc, #156]	@ (80012f0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001254:	4b27      	ldr	r3, [pc, #156]	@ (80012f4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001256:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001258:	4630      	mov	r0, r6
 800125a:	f7ff fe55 	bl	8000f08 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800125e:	4628      	mov	r0, r5
 8001260:	f016 fc92 	bl	8017b88 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001264:	4824      	ldr	r0, [pc, #144]	@ (80012f8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001266:	f00f fbef 	bl	8010a48 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800126a:	4b24      	ldr	r3, [pc, #144]	@ (80012fc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 800126c:	4824      	ldr	r0, [pc, #144]	@ (8001300 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 800126e:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001270:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001272:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001276:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800127a:	4922      	ldr	r1, [pc, #136]	@ (8001304 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800127c:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 800127e:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001282:	4921      	ldr	r1, [pc, #132]	@ (8001308 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001284:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001288:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 800128c:	491f      	ldr	r1, [pc, #124]	@ (800130c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800128e:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 8001292:	491f      	ldr	r1, [pc, #124]	@ (8001310 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001294:	481f      	ldr	r0, [pc, #124]	@ (8001314 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 8001296:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001298:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 800129a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800129e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012a2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012a6:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80012aa:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80012ae:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012b2:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80012b6:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80012ba:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80012bc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80012c0:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80012c2:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012c6:	8001      	strh	r1, [r0, #0]
 80012c8:	4813      	ldr	r0, [pc, #76]	@ (8001318 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012ca:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80012cc:	4813      	ldr	r0, [pc, #76]	@ (800131c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80012ce:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80012d2:	8001      	strh	r1, [r0, #0]
 80012d4:	4812      	ldr	r0, [pc, #72]	@ (8001320 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80012d6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80012d8:	4912      	ldr	r1, [pc, #72]	@ (8001324 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80012da:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80012dc:	2201      	movs	r2, #1
 80012de:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012e2:	4a11      	ldr	r2, [pc, #68]	@ (8001328 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80012e4:	601a      	str	r2, [r3, #0]
}
 80012e6:	bd70      	pop	{r4, r5, r6, pc}
 80012e8:	200005f4 	.word	0x200005f4
 80012ec:	20001394 	.word	0x20001394
 80012f0:	20000568 	.word	0x20000568
 80012f4:	08023e30 	.word	0x08023e30
 80012f8:	2000054c 	.word	0x2000054c
 80012fc:	200004c4 	.word	0x200004c4
 8001300:	01010000 	.word	0x01010000
 8001304:	01000001 	.word	0x01000001
 8001308:	00500400 	.word	0x00500400
 800130c:	0014001a 	.word	0x0014001a
 8001310:	20013ff8 	.word	0x20013ff8
 8001314:	20013fea 	.word	0x20013fea
 8001318:	20013ff0 	.word	0x20013ff0
 800131c:	20013fec 	.word	0x20013fec
 8001320:	20013ff2 	.word	0x20013ff2
 8001324:	20013fee 	.word	0x20013fee
 8001328:	080248ec 	.word	0x080248ec

0800132c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800132c:	4801      	ldr	r0, [pc, #4]	@ (8001334 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800132e:	f7ff bc77 	b.w	8000c20 <_ZN8STM32DMAD1Ev>
 8001332:	bf00      	nop
 8001334:	200005f4 	.word	0x200005f4

08001338 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001338:	2000      	movs	r0, #0
 800133a:	4770      	bx	lr

0800133c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800133c:	8081      	strh	r1, [r0, #4]
    }
 800133e:	4770      	bx	lr

08001340 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001340:	80c1      	strh	r1, [r0, #6]
    }
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001344:	8101      	strh	r1, [r0, #8]
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001348:	8141      	strh	r1, [r0, #10]
    }
 800134a:	4770      	bx	lr

0800134c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800134c:	4770      	bx	lr

0800134e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800134e:	4770      	bx	lr

08001350 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001350:	4770      	bx	lr

08001352 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001352:	4770      	bx	lr

08001354 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001354:	4770      	bx	lr

08001356 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001356:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001358:	88c4      	ldrh	r4, [r0, #6]
 800135a:	6803      	ldr	r3, [r0, #0]
 800135c:	1b12      	subs	r2, r2, r4
 800135e:	8884      	ldrh	r4, [r0, #4]
 8001360:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001362:	1b09      	subs	r1, r1, r4
 8001364:	b212      	sxth	r2, r2
    }
 8001366:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800136a:	b209      	sxth	r1, r1
 800136c:	4718      	bx	r3

0800136e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800136e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001372:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001374:	f04f 33ff 	mov.w	r3, #4294967295
 8001378:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800137a:	6813      	ldr	r3, [r2, #0]
 800137c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800137e:	6010      	str	r0, [r2, #0]
    }
 8001380:	4770      	bx	lr

08001382 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001382:	2000      	movs	r0, #0
 8001384:	4770      	bx	lr

08001386 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001386:	888b      	ldrh	r3, [r1, #4]
 8001388:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800138a:	2001      	movs	r0, #1
 800138c:	4770      	bx	lr

0800138e <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800138e:	4770      	bx	lr

08001390 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001390:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001394:	4770      	bx	lr

08001396 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001396:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 800139a:	4770      	bx	lr

0800139c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 800139c:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800139e:	2200      	movs	r2, #0
        return rect.width;
 80013a0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80013a4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80013a8:	8002      	strh	r2, [r0, #0]
 80013aa:	8042      	strh	r2, [r0, #2]
 80013ac:	8084      	strh	r4, [r0, #4]
 80013ae:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80013b0:	bd10      	pop	{r4, pc}

080013b2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80013b2:	2200      	movs	r2, #0
 80013b4:	8002      	strh	r2, [r0, #0]
 80013b6:	8042      	strh	r2, [r0, #2]
 80013b8:	8082      	strh	r2, [r0, #4]
 80013ba:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80013bc:	4770      	bx	lr

080013be <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80013be:	7701      	strb	r1, [r0, #28]
    }
 80013c0:	4770      	bx	lr

080013c2 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80013c2:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80013c6:	4770      	bx	lr

080013c8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80013c8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80013cc:	4770      	bx	lr

080013ce <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80013ce:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80013d2:	4770      	bx	lr

080013d4 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80013d4:	2001      	movs	r0, #1
 80013d6:	4770      	bx	lr

080013d8 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80013d8:	3098      	adds	r0, #152	@ 0x98
 80013da:	4770      	bx	lr

080013dc <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80013dc:	308c      	adds	r0, #140	@ 0x8c
 80013de:	4770      	bx	lr

080013e0 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80013e0:	3084      	adds	r0, #132	@ 0x84
 80013e2:	4770      	bx	lr

080013e4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80013e4:	4770      	bx	lr

080013e6 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80013e6:	4770      	bx	lr

080013e8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013e8:	4770      	bx	lr
	...

080013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013ec:	4b03      	ldr	r3, [pc, #12]	@ (80013fc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013ee:	2290      	movs	r2, #144	@ 0x90
 80013f0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013f4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013f8:	4770      	bx	lr
 80013fa:	bf00      	nop
 80013fc:	e000e100 	.word	0xe000e100

08001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001400:	4a09      	ldr	r2, [pc, #36]	@ (8001428 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001402:	490a      	ldr	r1, [pc, #40]	@ (800142c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001404:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001406:	480a      	ldr	r0, [pc, #40]	@ (8001430 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001408:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800140c:	3b01      	subs	r3, #1
 800140e:	b29b      	uxth	r3, r3
 8001410:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001412:	6911      	ldr	r1, [r2, #16]
 8001414:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001418:	3901      	subs	r1, #1
 800141a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800141c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800141e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001420:	f043 0301 	orr.w	r3, r3, #1
 8001424:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001426:	4770      	bx	lr
 8001428:	40016800 	.word	0x40016800
 800142c:	2000242e 	.word	0x2000242e
 8001430:	2000242c 	.word	0x2000242c

08001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001434:	4b01      	ldr	r3, [pc, #4]	@ (800143c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001436:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800143a:	4770      	bx	lr
 800143c:	40016800 	.word	0x40016800

08001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001440:	4b02      	ldr	r3, [pc, #8]	@ (800144c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001442:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001444:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001448:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800144a:	4770      	bx	lr
 800144c:	40016800 	.word	0x40016800

08001450 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001450:	b510      	push	{r4, lr}
 8001452:	212c      	movs	r1, #44	@ 0x2c
 8001454:	4604      	mov	r4, r0
 8001456:	f020 fb24 	bl	8021aa2 <_ZdlPvj>
 800145a:	4620      	mov	r0, r4
 800145c:	bd10      	pop	{r4, pc}

0800145e <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800145e:	b510      	push	{r4, lr}
 8001460:	21bc      	movs	r1, #188	@ 0xbc
 8001462:	4604      	mov	r4, r0
 8001464:	f020 fb1d 	bl	8021aa2 <_ZdlPvj>
 8001468:	4620      	mov	r0, r4
 800146a:	bd10      	pop	{r4, pc}

0800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800146c:	b570      	push	{r4, r5, r6, lr}
 800146e:	4604      	mov	r4, r0
    HAL::initialize();
 8001470:	f009 f8df 	bl	800a632 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001474:	6823      	ldr	r3, [r4, #0]
 8001476:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001478:	f00e f87e 	bl	800f578 <_ZN8touchgfx11Application11getInstanceEv>
 800147c:	4601      	mov	r1, r0
 800147e:	4620      	mov	r0, r4
 8001480:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001482:	6823      	ldr	r3, [r4, #0]
 8001484:	4a05      	ldr	r2, [pc, #20]	@ (800149c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001486:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800148a:	4620      	mov	r0, r4
 800148c:	46ac      	mov	ip, r5
 800148e:	2300      	movs	r3, #0
}
 8001490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001494:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001498:	4760      	bx	ip
 800149a:	bf00      	nop
 800149c:	d004b000 	.word	0xd004b000

080014a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80014a0:	f009 b8ae 	b.w	800a600 <_ZN8touchgfx3HAL10beginFrameEv>

080014a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80014a4:	f009 b8b8 	b.w	800a618 <_ZN8touchgfx3HAL8endFrameEv>

080014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80014a8:	f009 b874 	b.w	800a594 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080014ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80014ac:	f009 b9e3 	b.w	800a876 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080014b0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80014b0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014b4:	b112      	cbz	r2, 80014bc <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80014b6:	6803      	ldr	r3, [r0, #0]
 80014b8:	695b      	ldr	r3, [r3, #20]
 80014ba:	4718      	bx	r3
    }
 80014bc:	4770      	bx	lr

080014be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80014be:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014c2:	b11a      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80014c4:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80014c8:	b102      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80014ca:	6018      	str	r0, [r3, #0]
        }
    }
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d0:	4b03      	ldr	r3, [pc, #12]	@ (80014e0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80014d2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014d6:	609a      	str	r2, [r3, #8]
 80014d8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014dc:	609a      	str	r2, [r3, #8]
}
 80014de:	4770      	bx	lr
 80014e0:	e000e100 	.word	0xe000e100

080014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e4:	4b08      	ldr	r3, [pc, #32]	@ (8001508 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80014e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014ea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014f2:	f3bf 8f6f 	isb	sy
 80014f6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014fa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014fe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001502:	f3bf 8f6f 	isb	sy
}
 8001506:	4770      	bx	lr
 8001508:	e000e100 	.word	0xe000e100

0800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800150c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800150e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001510:	4e12      	ldr	r6, [pc, #72]	@ (800155c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001512:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001514:	4b12      	ldr	r3, [pc, #72]	@ (8001560 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001516:	6003      	str	r3, [r0, #0]
 8001518:	6833      	ldr	r3, [r6, #0]
 800151a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 800151e:	4605      	mov	r5, r0
 8001520:	b10a      	cbz	r2, 8001526 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001522:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001524:	b900      	cbnz	r0, 8001528 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001526:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001528:	6803      	ldr	r3, [r0, #0]
 800152a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800152c:	4798      	blx	r3
        return auxiliaryLCD;
 800152e:	6833      	ldr	r3, [r6, #0]
 8001530:	fab0 f480 	clz	r4, r0
 8001534:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001536:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001538:	b130      	cbz	r0, 8001548 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800153a:	6803      	ldr	r3, [r0, #0]
 800153c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800153e:	4798      	blx	r3
 8001540:	2800      	cmp	r0, #0
 8001542:	bf08      	it	eq
 8001544:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001548:	b92c      	cbnz	r4, 8001556 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800154a:	4b06      	ldr	r3, [pc, #24]	@ (8001564 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 800154c:	4a06      	ldr	r2, [pc, #24]	@ (8001568 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800154e:	4807      	ldr	r0, [pc, #28]	@ (800156c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001550:	212c      	movs	r1, #44	@ 0x2c
 8001552:	f021 f9e3 	bl	802291c <__assert_func>
    }
 8001556:	4628      	mov	r0, r5
 8001558:	bd70      	pop	{r4, r5, r6, pc}
 800155a:	bf00      	nop
 800155c:	20013ff8 	.word	0x20013ff8
 8001560:	08024ad8 	.word	0x08024ad8
 8001564:	080241ed 	.word	0x080241ed
 8001568:	0802424b 	.word	0x0802424b
 800156c:	08024284 	.word	0x08024284

08001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001570:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001572:	4e25      	ldr	r6, [pc, #148]	@ (8001608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001574:	6835      	ldr	r5, [r6, #0]
 8001576:	f3bf 8f5b 	dmb	ish
 800157a:	f015 0501 	ands.w	r5, r5, #1
 800157e:	d140      	bne.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001580:	4630      	mov	r0, r6
 8001582:	f020 fa90 	bl	8021aa6 <__cxa_guard_acquire>
 8001586:	2800      	cmp	r0, #0
 8001588:	d03b      	beq.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 800158a:	4c20      	ldr	r4, [pc, #128]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 800158c:	4b20      	ldr	r3, [pc, #128]	@ (8001610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 800158e:	6125      	str	r5, [r4, #16]
 8001590:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001594:	e9c4 3500 	strd	r3, r5, [r4]
 8001598:	e9c4 5502 	strd	r5, r5, [r4, #8]
 800159c:	84e5      	strh	r5, [r4, #38]	@ 0x26
 800159e:	62a5      	str	r5, [r4, #40]	@ 0x28
 80015a0:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 80015a2:	f00f fd36 	bl	8011012 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 80015a6:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80015aa:	f00c f8ad 	bl	800d708 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80015ae:	4b19      	ldr	r3, [pc, #100]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 80015b0:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80015b2:	4620      	mov	r0, r4
 80015b4:	4b18      	ldr	r3, [pc, #96]	@ (8001618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 80015b6:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80015ba:	f7ff ffa7 	bl	800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80015be:	4b17      	ldr	r3, [pc, #92]	@ (800161c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 80015c0:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 80015c4:	3324      	adds	r3, #36	@ 0x24
 80015c6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 80015ca:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 80015ce:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80015d2:	2300      	movs	r3, #0
 80015d4:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80015d8:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80015dc:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80015e0:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80015e4:	480e      	ldr	r0, [pc, #56]	@ (8001620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80015e6:	4b0f      	ldr	r3, [pc, #60]	@ (8001624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80015e8:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015ec:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015f0:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015f4:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015f8:	f021 f9ae 	bl	8022958 <atexit>
 80015fc:	4630      	mov	r0, r6
 80015fe:	f020 fa5e 	bl	8021abe <__cxa_guard_release>
}
 8001602:	4802      	ldr	r0, [pc, #8]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001604:	bd70      	pop	{r4, r5, r6, pc}
 8001606:	bf00      	nop
 8001608:	20002430 	.word	0x20002430
 800160c:	20002434 	.word	0x20002434
 8001610:	08024fa0 	.word	0x08024fa0
 8001614:	08024af8 	.word	0x08024af8
 8001618:	08024b70 	.word	0x08024b70
 800161c:	08024f54 	.word	0x08024f54
 8001620:	080013e9 	.word	0x080013e9
 8001624:	08024f34 	.word	0x08024f34

08001628 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001628:	b538      	push	{r3, r4, r5, lr}
        return instance;
 800162a:	4c18      	ldr	r4, [pc, #96]	@ (800168c <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 800162c:	6823      	ldr	r3, [r4, #0]
 800162e:	b35b      	cbz	r3, 8001688 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001630:	4b17      	ldr	r3, [pc, #92]	@ (8001690 <HAL_LTDC_LineEventCallback+0x68>)
 8001632:	4a18      	ldr	r2, [pc, #96]	@ (8001694 <HAL_LTDC_LineEventCallback+0x6c>)
 8001634:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001636:	8811      	ldrh	r1, [r2, #0]
 8001638:	428b      	cmp	r3, r1
 800163a:	d116      	bne.n	800166a <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800163c:	4b16      	ldr	r3, [pc, #88]	@ (8001698 <HAL_LTDC_LineEventCallback+0x70>)
 800163e:	8819      	ldrh	r1, [r3, #0]
 8001640:	f003 f95e 	bl	8004900 <HAL_LTDC_ProgramLineEvent>
 8001644:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001646:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800164a:	2500      	movs	r5, #0
        vSyncCnt++;
 800164c:	3201      	adds	r2, #1
 800164e:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001652:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001656:	f7ff fab7 	bl	8000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800165a:	6820      	ldr	r0, [r4, #0]
 800165c:	f009 fd74 	bl	800b148 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001660:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001662:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001666:	f7ff b8f7 	b.w	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800166a:	f003 f949 	bl	8004900 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800166e:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001670:	6823      	ldr	r3, [r4, #0]
 8001672:	4620      	mov	r0, r4
 8001674:	6a1b      	ldr	r3, [r3, #32]
 8001676:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001678:	2301      	movs	r3, #1
 800167a:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 800167e:	2000      	movs	r0, #0
    }
 8001680:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001684:	f7ff b912 	b.w	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001688:	bd38      	pop	{r3, r4, r5, pc}
 800168a:	bf00      	nop
 800168c:	20013ff8 	.word	0x20013ff8
 8001690:	40016800 	.word	0x40016800
 8001694:	2000242e 	.word	0x2000242e
 8001698:	2000242c 	.word	0x2000242c

0800169c <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 800169c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 800169e:	490c      	ldr	r1, [pc, #48]	@ (80016d0 <MX_USB_DEVICE_Init+0x34>)
 80016a0:	480c      	ldr	r0, [pc, #48]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016a2:	2201      	movs	r2, #1
 80016a4:	f007 ff4e 	bl	8009544 <USBD_Init>
 80016a8:	b108      	cbz	r0, 80016ae <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 80016aa:	f000 fd71 	bl	8002190 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 80016ae:	490a      	ldr	r1, [pc, #40]	@ (80016d8 <MX_USB_DEVICE_Init+0x3c>)
 80016b0:	4808      	ldr	r0, [pc, #32]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016b2:	f007 ff5a 	bl	800956a <USBD_RegisterClass>
 80016b6:	b108      	cbz	r0, 80016bc <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 80016b8:	f000 fd6a 	bl	8002190 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 80016bc:	4805      	ldr	r0, [pc, #20]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016be:	f007 ff6d 	bl	800959c <USBD_Start>
 80016c2:	b118      	cbz	r0, 80016cc <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 80016c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 80016c8:	f000 bd62 	b.w	8002190 <Error_Handler>
}
 80016cc:	bd08      	pop	{r3, pc}
 80016ce:	bf00      	nop
 80016d0:	20000040 	.word	0x20000040
 80016d4:	200024f0 	.word	0x200024f0
 80016d8:	20000168 	.word	0x20000168

080016dc <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 80016dc:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 80016de:	4801      	ldr	r0, [pc, #4]	@ (80016e4 <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 80016e0:	800b      	strh	r3, [r1, #0]
}
 80016e2:	4770      	bx	lr
 80016e4:	2000002c 	.word	0x2000002c

080016e8 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 80016e8:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 80016ea:	4801      	ldr	r0, [pc, #4]	@ (80016f0 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 80016ec:	800b      	strh	r3, [r1, #0]
}
 80016ee:	4770      	bx	lr
 80016f0:	20000028 	.word	0x20000028

080016f4 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 80016f4:	2300      	movs	r3, #0
 80016f6:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 80016f8:	1c4d      	adds	r5, r1, #1
 80016fa:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 80016fc:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 80016fe:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 8001702:	bf34      	ite	cc
 8001704:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001706:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001708:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 800170c:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001710:	3301      	adds	r3, #1
 8001712:	b2dc      	uxtb	r4, r3
 8001714:	42a2      	cmp	r2, r4
    value = value << 4;
 8001716:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 800171a:	d8ef      	bhi.n	80016fc <IntToUnicode+0x8>
  }
}
 800171c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001720 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001720:	231a      	movs	r3, #26
{
 8001722:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 8001724:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001726:	4b0a      	ldr	r3, [pc, #40]	@ (8001750 <USBD_HS_SerialStrDescriptor+0x30>)
 8001728:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 800172c:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001730:	1880      	adds	r0, r0, r2
 8001732:	d00a      	beq.n	800174a <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001734:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001738:	4906      	ldr	r1, [pc, #24]	@ (8001754 <USBD_HS_SerialStrDescriptor+0x34>)
 800173a:	2208      	movs	r2, #8
 800173c:	f7ff ffda 	bl	80016f4 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001740:	2204      	movs	r2, #4
 8001742:	3110      	adds	r1, #16
 8001744:	4620      	mov	r0, r4
 8001746:	f7ff ffd5 	bl	80016f4 <IntToUnicode>
}
 800174a:	4803      	ldr	r0, [pc, #12]	@ (8001758 <USBD_HS_SerialStrDescriptor+0x38>)
 800174c:	bd10      	pop	{r4, pc}
 800174e:	bf00      	nop
 8001750:	1fff7000 	.word	0x1fff7000
 8001754:	2000000e 	.word	0x2000000e
 8001758:	2000000c 	.word	0x2000000c

0800175c <USBD_HS_ManufacturerStrDescriptor>:
{
 800175c:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800175e:	4c04      	ldr	r4, [pc, #16]	@ (8001770 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001760:	4804      	ldr	r0, [pc, #16]	@ (8001774 <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 8001762:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001764:	4621      	mov	r1, r4
 8001766:	f008 fae8 	bl	8009d3a <USBD_GetString>
}
 800176a:	4620      	mov	r0, r4
 800176c:	bd10      	pop	{r4, pc}
 800176e:	bf00      	nop
 8001770:	200027cc 	.word	0x200027cc
 8001774:	080242e6 	.word	0x080242e6

08001778 <USBD_HS_ProductStrDescriptor>:
{
 8001778:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 800177a:	4c04      	ldr	r4, [pc, #16]	@ (800178c <USBD_HS_ProductStrDescriptor+0x14>)
 800177c:	4804      	ldr	r0, [pc, #16]	@ (8001790 <USBD_HS_ProductStrDescriptor+0x18>)
{
 800177e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001780:	4621      	mov	r1, r4
 8001782:	f008 fada 	bl	8009d3a <USBD_GetString>
}
 8001786:	4620      	mov	r0, r4
 8001788:	bd10      	pop	{r4, pc}
 800178a:	bf00      	nop
 800178c:	200027cc 	.word	0x200027cc
 8001790:	080242f9 	.word	0x080242f9

08001794 <USBD_HS_ConfigStrDescriptor>:
{
 8001794:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001796:	4c04      	ldr	r4, [pc, #16]	@ (80017a8 <USBD_HS_ConfigStrDescriptor+0x14>)
 8001798:	4804      	ldr	r0, [pc, #16]	@ (80017ac <USBD_HS_ConfigStrDescriptor+0x18>)
{
 800179a:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 800179c:	4621      	mov	r1, r4
 800179e:	f008 facc 	bl	8009d3a <USBD_GetString>
}
 80017a2:	4620      	mov	r0, r4
 80017a4:	bd10      	pop	{r4, pc}
 80017a6:	bf00      	nop
 80017a8:	200027cc 	.word	0x200027cc
 80017ac:	0802430f 	.word	0x0802430f

080017b0 <USBD_HS_InterfaceStrDescriptor>:
{
 80017b0:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b2:	4c04      	ldr	r4, [pc, #16]	@ (80017c4 <USBD_HS_InterfaceStrDescriptor+0x14>)
 80017b4:	4804      	ldr	r0, [pc, #16]	@ (80017c8 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 80017b6:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b8:	4621      	mov	r1, r4
 80017ba:	f008 fabe 	bl	8009d3a <USBD_GetString>
}
 80017be:	4620      	mov	r0, r4
 80017c0:	bd10      	pop	{r4, pc}
 80017c2:	bf00      	nop
 80017c4:	200027cc 	.word	0x200027cc
 80017c8:	0802431a 	.word	0x0802431a

080017cc <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 80017cc:	b530      	push	{r4, r5, lr}
 80017ce:	4604      	mov	r4, r0
 80017d0:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017d2:	2214      	movs	r2, #20
 80017d4:	2100      	movs	r1, #0
 80017d6:	a803      	add	r0, sp, #12
 80017d8:	f021 fadd 	bl	8022d96 <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 80017dc:	6822      	ldr	r2, [r4, #0]
 80017de:	4b1c      	ldr	r3, [pc, #112]	@ (8001850 <HAL_PCD_MspInit+0x84>)
 80017e0:	429a      	cmp	r2, r3
 80017e2:	d133      	bne.n	800184c <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e4:	4c1b      	ldr	r4, [pc, #108]	@ (8001854 <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	481c      	ldr	r0, [pc, #112]	@ (8001858 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e8:	2500      	movs	r5, #0
 80017ea:	9501      	str	r5, [sp, #4]
 80017ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017ee:	f043 0302 	orr.w	r3, r3, #2
 80017f2:	6323      	str	r3, [r4, #48]	@ 0x30
 80017f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017f6:	f003 0302 	and.w	r3, r3, #2
 80017fa:	9301      	str	r3, [sp, #4]
 80017fc:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017fe:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001800:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001804:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001806:	f002 f9a7 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800180a:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 800180e:	2302      	movs	r3, #2
 8001810:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001814:	2103      	movs	r1, #3
 8001816:	230c      	movs	r3, #12
 8001818:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800181c:	480e      	ldr	r0, [pc, #56]	@ (8001858 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800181e:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001820:	eb0d 0103 	add.w	r1, sp, r3
 8001824:	f002 f998 	bl	8003b58 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001828:	9502      	str	r5, [sp, #8]
 800182a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800182c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001830:	6323      	str	r3, [r4, #48]	@ 0x30
 8001832:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001834:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001838:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 800183a:	204d      	movs	r0, #77	@ 0x4d
 800183c:	462a      	mov	r2, r5
 800183e:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001840:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001842:	f002 f83f 	bl	80038c4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 8001846:	204d      	movs	r0, #77	@ 0x4d
 8001848:	f002 f86e 	bl	8003928 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 800184c:	b009      	add	sp, #36	@ 0x24
 800184e:	bd30      	pop	{r4, r5, pc}
 8001850:	40040000 	.word	0x40040000
 8001854:	40023800 	.word	0x40023800
 8001858:	40020400 	.word	0x40020400

0800185c <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800185c:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001860:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001864:	f007 beac 	b.w	80095c0 <USBD_LL_SetupStage>

08001868 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001868:	2324      	movs	r3, #36	@ 0x24
 800186a:	fb03 0301 	mla	r3, r3, r1, r0
 800186e:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001872:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 8001876:	f007 bed3 	b.w	8009620 <USBD_LL_DataOutStage>

0800187a <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800187a:	2324      	movs	r3, #36	@ 0x24
 800187c:	fb03 0301 	mla	r3, r3, r1, r0
 8001880:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001884:	6a1a      	ldr	r2, [r3, #32]
 8001886:	f007 bf05 	b.w	8009694 <USBD_LL_DataInStage>

0800188a <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800188a:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800188e:	f007 bfa1 	b.w	80097d4 <USBD_LL_SOF>

08001892 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001892:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001894:	79c1      	ldrb	r1, [r0, #7]
{
 8001896:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001898:	b121      	cbz	r1, 80018a4 <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 800189a:	2902      	cmp	r1, #2
 800189c:	d001      	beq.n	80018a2 <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 800189e:	f000 fc77 	bl	8002190 <Error_Handler>
    speed = USBD_SPEED_FULL;
 80018a2:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 80018a4:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 80018a8:	f007 ff78 	bl	800979c <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018ac:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 80018b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018b4:	f007 bf42 	b.w	800973c <USBD_LL_Reset>

080018b8 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80018b8:	b510      	push	{r4, lr}
 80018ba:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 80018bc:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018c0:	f007 ff6f 	bl	80097a2 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80018c4:	6822      	ldr	r2, [r4, #0]
 80018c6:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 80018ca:	f043 0301 	orr.w	r3, r3, #1
 80018ce:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 80018d2:	7ae3      	ldrb	r3, [r4, #11]
 80018d4:	b123      	cbz	r3, 80018e0 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80018d6:	4a03      	ldr	r2, [pc, #12]	@ (80018e4 <HAL_PCD_SuspendCallback+0x2c>)
 80018d8:	6913      	ldr	r3, [r2, #16]
 80018da:	f043 0306 	orr.w	r3, r3, #6
 80018de:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 80018e0:	bd10      	pop	{r4, pc}
 80018e2:	bf00      	nop
 80018e4:	e000ed00 	.word	0xe000ed00

080018e8 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 80018e8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018ec:	f007 bf67 	b.w	80097be <USBD_LL_Resume>

080018f0 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018f4:	f007 bf8e 	b.w	8009814 <USBD_LL_IsoOUTIncomplete>

080018f8 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018fc:	f007 bf77 	b.w	80097ee <USBD_LL_IsoINIncomplete>

08001900 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8001900:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001904:	f007 bf99 	b.w	800983a <USBD_LL_DevConnected>

08001908 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001908:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800190c:	f007 bf97 	b.w	800983e <USBD_LL_DevDisconnected>

08001910 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001910:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 8001912:	7802      	ldrb	r2, [r0, #0]
 8001914:	2a01      	cmp	r2, #1
{
 8001916:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001918:	d127      	bne.n	800196a <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 800191a:	4815      	ldr	r0, [pc, #84]	@ (8001970 <USBD_LL_Init+0x60>)
 800191c:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001920:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 8001924:	4b13      	ldr	r3, [pc, #76]	@ (8001974 <USBD_LL_Init+0x64>)
 8001926:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001928:	2306      	movs	r3, #6
 800192a:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 800192c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001930:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 8001932:	2302      	movs	r3, #2
 8001934:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 8001936:	2300      	movs	r3, #0
 8001938:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 800193a:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 800193c:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 800193e:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001940:	f002 fffc 	bl	800493c <HAL_PCD_Init>
 8001944:	b108      	cbz	r0, 800194a <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 8001946:	f000 fc23 	bl	8002190 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 800194a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800194e:	4808      	ldr	r0, [pc, #32]	@ (8001970 <USBD_LL_Init+0x60>)
 8001950:	f003 fd19 	bl	8005386 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 8001954:	2280      	movs	r2, #128	@ 0x80
 8001956:	2100      	movs	r1, #0
 8001958:	4805      	ldr	r0, [pc, #20]	@ (8001970 <USBD_LL_Init+0x60>)
 800195a:	f003 fcf5 	bl	8005348 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 800195e:	4804      	ldr	r0, [pc, #16]	@ (8001970 <USBD_LL_Init+0x60>)
 8001960:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8001964:	2101      	movs	r1, #1
 8001966:	f003 fcef 	bl	8005348 <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 800196a:	2000      	movs	r0, #0
 800196c:	bd08      	pop	{r3, pc}
 800196e:	bf00      	nop
 8001970:	200029e0 	.word	0x200029e0
 8001974:	40040000 	.word	0x40040000

08001978 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001978:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800197c:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001980:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001984:	bf1b      	ittet	ne
 8001986:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 800198a:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800198e:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001992:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001994:	bf08      	it	eq
 8001996:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 800199a:	4770      	bx	lr

0800199c <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 800199c:	4800      	ldr	r0, [pc, #0]	@ (80019a0 <USBD_static_malloc+0x4>)
 800199e:	4770      	bx	lr
 80019a0:	200029cc 	.word	0x200029cc

080019a4 <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 80019a4:	4770      	bx	lr

080019a6 <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 80019a6:	b118      	cbz	r0, 80019b0 <USBD_Get_USB_Status+0xa>
 80019a8:	2802      	cmp	r0, #2
 80019aa:	bf0c      	ite	eq
 80019ac:	2001      	moveq	r0, #1
 80019ae:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 80019b0:	4770      	bx	lr

080019b2 <USBD_LL_Start>:
{
 80019b2:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 80019b4:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019b8:	f003 f82f 	bl	8004a1a <HAL_PCD_Start>
}
 80019bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019c0:	f7ff bff1 	b.w	80019a6 <USBD_Get_USB_Status>

080019c4 <USBD_LL_OpenEP>:
{
 80019c4:	b510      	push	{r4, lr}
 80019c6:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019c8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 80019cc:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019ce:	4623      	mov	r3, r4
 80019d0:	f003 f855 	bl	8004a7e <HAL_PCD_EP_Open>
}
 80019d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019d8:	f7ff bfe5 	b.w	80019a6 <USBD_Get_USB_Status>

080019dc <USBD_LL_CloseEP>:
{
 80019dc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80019de:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019e2:	f003 f885 	bl	8004af0 <HAL_PCD_EP_Close>
}
 80019e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019ea:	f7ff bfdc 	b.w	80019a6 <USBD_Get_USB_Status>

080019ee <USBD_LL_StallEP>:
{
 80019ee:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80019f0:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019f4:	f003 f8e3 	bl	8004bbe <HAL_PCD_EP_SetStall>
}
 80019f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019fc:	f7ff bfd3 	b.w	80019a6 <USBD_Get_USB_Status>

08001a00 <USBD_LL_ClearStallEP>:
{
 8001a00:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8001a02:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a06:	f003 f911 	bl	8004c2c <HAL_PCD_EP_ClrStall>
}
 8001a0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a0e:	f7ff bfca 	b.w	80019a6 <USBD_Get_USB_Status>

08001a12 <USBD_LL_SetUSBAddress>:
{
 8001a12:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001a14:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a18:	f003 f81e 	bl	8004a58 <HAL_PCD_SetAddress>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a20:	f7ff bfc1 	b.w	80019a6 <USBD_Get_USB_Status>

08001a24 <USBD_LL_Transmit>:
{
 8001a24:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001a26:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a2a:	f003 f8ad 	bl	8004b88 <HAL_PCD_EP_Transmit>
}
 8001a2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a32:	f7ff bfb8 	b.w	80019a6 <USBD_Get_USB_Status>

08001a36 <USBD_LL_PrepareReceive>:
{
 8001a36:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001a38:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a3c:	f003 f886 	bl	8004b4c <HAL_PCD_EP_Receive>
}
 8001a40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a44:	f7ff bfaf 	b.w	80019a6 <USBD_Get_USB_Status>

08001a48 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a48:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4a:	4b06      	ldr	r3, [pc, #24]	@ (8001a64 <SPI5_Write+0x1c>)
{
 8001a4c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	4805      	ldr	r0, [pc, #20]	@ (8001a68 <SPI5_Write+0x20>)
 8001a54:	2201      	movs	r2, #1
 8001a56:	f10d 0106 	add.w	r1, sp, #6
 8001a5a:	f004 f9f7 	bl	8005e4c <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a5e:	b003      	add	sp, #12
 8001a60:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a64:	2000005c 	.word	0x2000005c
 8001a68:	20002f54 	.word	0x20002f54

08001a6c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001a6c:	b583      	push	{r0, r1, r7, lr}
  /* USER CODE BEGIN 5 */
  mouseHID evt;
  /* Infinite loop */
  for(;;)
  {
	if (osMessageQueueGet(mouseEventQueueHandle, &evt, NULL, osWaitForever) == osOK){
 8001a6e:	4e26      	ldr	r6, [pc, #152]	@ (8001b08 <StartDefaultTask+0x9c>)
	  if (!hidReady){
 8001a70:	4d26      	ldr	r5, [pc, #152]	@ (8001b0c <StartDefaultTask+0xa0>)
		osDelay(1);
		continue;
	  }

	  mousehid.button = evt.button;
 8001a72:	4c27      	ldr	r4, [pc, #156]	@ (8001b10 <StartDefaultTask+0xa4>)
	if (osMessageQueueGet(mouseEventQueueHandle, &evt, NULL, osWaitForever) == osOK){
 8001a74:	6830      	ldr	r0, [r6, #0]
 8001a76:	f04f 33ff 	mov.w	r3, #4294967295
 8001a7a:	2200      	movs	r2, #0
 8001a7c:	a901      	add	r1, sp, #4
 8001a7e:	f005 fe0e 	bl	800769e <osMessageQueueGet>
 8001a82:	4607      	mov	r7, r0
 8001a84:	2800      	cmp	r0, #0
 8001a86:	d13c      	bne.n	8001b02 <StartDefaultTask+0x96>
	  if (!hidReady){
 8001a88:	782b      	ldrb	r3, [r5, #0]
 8001a8a:	b91b      	cbnz	r3, 8001a94 <StartDefaultTask+0x28>
		osDelay(1);
 8001a8c:	2001      	movs	r0, #1
	  }
	  mousehid.mouse_y = 0;
	  mousehid.mouse_x = 0;
	  mousehid.wheel = 0;
	}
    osDelay(5);
 8001a8e:	f005 fcef 	bl	8007470 <osDelay>
 8001a92:	e7ef      	b.n	8001a74 <StartDefaultTask+0x8>
	  mousehid.button = evt.button;
 8001a94:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001a98:	7023      	strb	r3, [r4, #0]
	  mousehid.mouse_y = -evt.mouse_x * scale_x;
 8001a9a:	f99d 3005 	ldrsb.w	r3, [sp, #5]
	  mousehid.wheel = 0;
 8001a9e:	70e0      	strb	r0, [r4, #3]
	  mousehid.mouse_y = -evt.mouse_x * scale_x;
 8001aa0:	425b      	negs	r3, r3
 8001aa2:	ee07 3a90 	vmov	s15, r3
 8001aa6:	4b1b      	ldr	r3, [pc, #108]	@ (8001b14 <StartDefaultTask+0xa8>)
	  hidReady = false;
 8001aa8:	7028      	strb	r0, [r5, #0]
	  mousehid.mouse_y = -evt.mouse_x * scale_x;
 8001aaa:	ed93 7a00 	vldr	s14, [r3]
	  USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001aae:	4918      	ldr	r1, [pc, #96]	@ (8001b10 <StartDefaultTask+0xa4>)
 8001ab0:	4819      	ldr	r0, [pc, #100]	@ (8001b18 <StartDefaultTask+0xac>)
	  mousehid.mouse_y = -evt.mouse_x * scale_x;
 8001ab2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	  USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001ab6:	2204      	movs	r2, #4
	  mousehid.mouse_y = -evt.mouse_x * scale_x;
 8001ab8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001abc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001ac0:	ee17 3a90 	vmov	r3, s15
 8001ac4:	70a3      	strb	r3, [r4, #2]
	  mousehid.mouse_x = evt.mouse_y * scale_y;
 8001ac6:	f99d 3006 	ldrsb.w	r3, [sp, #6]
 8001aca:	ee07 3a90 	vmov	s15, r3
 8001ace:	4b13      	ldr	r3, [pc, #76]	@ (8001b1c <StartDefaultTask+0xb0>)
 8001ad0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001ad4:	ed93 7a00 	vldr	s14, [r3]
 8001ad8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001adc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001ae0:	ee17 3a90 	vmov	r3, s15
 8001ae4:	7063      	strb	r3, [r4, #1]
	  USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001ae6:	f008 fa33 	bl	8009f50 <USBD_HID_SendReport>
	  if(mousehid.button != 0){
 8001aea:	7823      	ldrb	r3, [r4, #0]
 8001aec:	b12b      	cbz	r3, 8001afa <StartDefaultTask+0x8e>
		USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001aee:	480a      	ldr	r0, [pc, #40]	@ (8001b18 <StartDefaultTask+0xac>)
		mousehid.button = 0;
 8001af0:	7027      	strb	r7, [r4, #0]
		USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001af2:	2204      	movs	r2, #4
 8001af4:	4621      	mov	r1, r4
 8001af6:	f008 fa2b 	bl	8009f50 <USBD_HID_SendReport>
	  mousehid.mouse_y = 0;
 8001afa:	2300      	movs	r3, #0
 8001afc:	70a3      	strb	r3, [r4, #2]
	  mousehid.mouse_x = 0;
 8001afe:	7063      	strb	r3, [r4, #1]
	  mousehid.wheel = 0;
 8001b00:	70e3      	strb	r3, [r4, #3]
    osDelay(5);
 8001b02:	2005      	movs	r0, #5
 8001b04:	e7c3      	b.n	8001a8e <StartDefaultTask+0x22>
 8001b06:	bf00      	nop
 8001b08:	20002ecc 	.word	0x20002ecc
 8001b0c:	200000dc 	.word	0x200000dc
 8001b10:	200030f0 	.word	0x200030f0
 8001b14:	20000068 	.word	0x20000068
 8001b18:	200024f0 	.word	0x200024f0
 8001b1c:	20000064 	.word	0x20000064

08001b20 <SystemClock_Config>:
{
 8001b20:	b530      	push	{r4, r5, lr}
 8001b22:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b24:	2210      	movs	r2, #16
 8001b26:	2100      	movs	r1, #0
 8001b28:	a80a      	add	r0, sp, #40	@ 0x28
 8001b2a:	f021 f934 	bl	8022d96 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b2e:	2214      	movs	r2, #20
 8001b30:	2100      	movs	r1, #0
 8001b32:	a803      	add	r0, sp, #12
 8001b34:	f021 f92f 	bl	8022d96 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b38:	2400      	movs	r4, #0
 8001b3a:	4b1d      	ldr	r3, [pc, #116]	@ (8001bb0 <SystemClock_Config+0x90>)
 8001b3c:	9401      	str	r4, [sp, #4]
 8001b3e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001b40:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001b44:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b48:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b4c:	9301      	str	r3, [sp, #4]
 8001b4e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001b50:	4b18      	ldr	r3, [pc, #96]	@ (8001bb4 <SystemClock_Config+0x94>)
 8001b52:	9402      	str	r4, [sp, #8]
 8001b54:	681a      	ldr	r2, [r3, #0]
 8001b56:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001b5a:	601a      	str	r2, [r3, #0]
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001b62:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001b64:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001b66:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001b68:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001b6c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001b70:	2502      	movs	r5, #2
 8001b72:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001b76:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001b7a:	2104      	movs	r1, #4
 8001b7c:	23a8      	movs	r3, #168	@ 0xa8
 8001b7e:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001b82:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001b84:	2307      	movs	r3, #7
 8001b86:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001b88:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001b8a:	f003 fc01 	bl	8005390 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001b8e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001b90:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001b94:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001b98:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001b9c:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ba0:	2105      	movs	r1, #5
 8001ba2:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001ba4:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ba6:	f003 fdcf 	bl	8005748 <HAL_RCC_ClockConfig>
}
 8001baa:	b015      	add	sp, #84	@ 0x54
 8001bac:	bd30      	pop	{r4, r5, pc}
 8001bae:	bf00      	nop
 8001bb0:	40023800 	.word	0x40023800
 8001bb4:	40007000 	.word	0x40007000

08001bb8 <main>:
{
 8001bb8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001bbc:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8001bbe:	f001 fe2f 	bl	8003820 <HAL_Init>
  SystemClock_Config();
 8001bc2:	f7ff ffad 	bl	8001b20 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bc6:	2214      	movs	r2, #20
 8001bc8:	2100      	movs	r1, #0
 8001bca:	a80d      	add	r0, sp, #52	@ 0x34
 8001bcc:	f021 f8e3 	bl	8022d96 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001bd0:	2400      	movs	r4, #0
 8001bd2:	4bc7      	ldr	r3, [pc, #796]	@ (8001ef0 <main+0x338>)
 8001bd4:	9400      	str	r4, [sp, #0]
 8001bd6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bd8:	48c6      	ldr	r0, [pc, #792]	@ (8001ef4 <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001bda:	4dc7      	ldr	r5, [pc, #796]	@ (8001ef8 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001bdc:	f042 0210 	orr.w	r2, r2, #16
 8001be0:	631a      	str	r2, [r3, #48]	@ 0x30
 8001be2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001be4:	f002 0210 	and.w	r2, r2, #16
 8001be8:	9200      	str	r2, [sp, #0]
 8001bea:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001bec:	9401      	str	r4, [sp, #4]
 8001bee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bf0:	f042 0220 	orr.w	r2, r2, #32
 8001bf4:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bf6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bf8:	f002 0220 	and.w	r2, r2, #32
 8001bfc:	9201      	str	r2, [sp, #4]
 8001bfe:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001c00:	9402      	str	r4, [sp, #8]
 8001c02:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c04:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001c08:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c0a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c0c:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001c10:	9202      	str	r2, [sp, #8]
 8001c12:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c14:	9403      	str	r4, [sp, #12]
 8001c16:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c18:	f042 0204 	orr.w	r2, r2, #4
 8001c1c:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c1e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c20:	f002 0204 	and.w	r2, r2, #4
 8001c24:	9203      	str	r2, [sp, #12]
 8001c26:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c28:	9404      	str	r4, [sp, #16]
 8001c2a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c2c:	f042 0201 	orr.w	r2, r2, #1
 8001c30:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c32:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c34:	f002 0201 	and.w	r2, r2, #1
 8001c38:	9204      	str	r2, [sp, #16]
 8001c3a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c3c:	9405      	str	r4, [sp, #20]
 8001c3e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c40:	f042 0202 	orr.w	r2, r2, #2
 8001c44:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c46:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c48:	f002 0202 	and.w	r2, r2, #2
 8001c4c:	9205      	str	r2, [sp, #20]
 8001c4e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c50:	9406      	str	r4, [sp, #24]
 8001c52:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c54:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001c58:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c5a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c5c:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001c60:	9206      	str	r2, [sp, #24]
 8001c62:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c64:	9407      	str	r4, [sp, #28]
 8001c66:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c68:	f042 0208 	orr.w	r2, r2, #8
 8001c6c:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c6e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c70:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001c74:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c76:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001c78:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c7a:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001c7c:	f002 f856 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001c80:	489e      	ldr	r0, [pc, #632]	@ (8001efc <main+0x344>)
 8001c82:	2201      	movs	r2, #1
 8001c84:	2102      	movs	r1, #2
 8001c86:	f002 f851 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c8a:	4622      	mov	r2, r4
 8001c8c:	489b      	ldr	r0, [pc, #620]	@ (8001efc <main+0x344>)
 8001c8e:	2104      	movs	r1, #4
 8001c90:	f002 f84c 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001c94:	4622      	mov	r2, r4
 8001c96:	489a      	ldr	r0, [pc, #616]	@ (8001f00 <main+0x348>)
 8001c98:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001c9c:	f002 f846 	bl	8003d2c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ca0:	2601      	movs	r6, #1
 8001ca2:	233c      	movs	r3, #60	@ 0x3c
 8001ca4:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ca8:	4892      	ldr	r0, [pc, #584]	@ (8001ef4 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001caa:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cac:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cae:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8001cb0:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cb2:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cb4:	f001 ff50 	bl	8003b58 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001cb8:	4890      	ldr	r0, [pc, #576]	@ (8001efc <main+0x344>)
 8001cba:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cbc:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cc0:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001cc4:	f001 ff48 	bl	8003b58 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001cc8:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cca:	488c      	ldr	r0, [pc, #560]	@ (8001efc <main+0x344>)
 8001ccc:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cce:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cd2:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cd6:	f001 ff3f 	bl	8003b58 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cda:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001cdc:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ce0:	4887      	ldr	r0, [pc, #540]	@ (8001f00 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ce2:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ce6:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cea:	f001 ff35 	bl	8003b58 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001cee:	4885      	ldr	r0, [pc, #532]	@ (8001f04 <main+0x34c>)
 8001cf0:	4b85      	ldr	r3, [pc, #532]	@ (8001f08 <main+0x350>)
 8001cf2:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001cf4:	f001 fe26 	bl	8003944 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001cf8:	f8df c234 	ldr.w	ip, [pc, #564]	@ 8001f30 <main+0x378>
 8001cfc:	4b83      	ldr	r3, [pc, #524]	@ (8001f0c <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001cfe:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001d00:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001d04:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001d06:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001d0a:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001d0e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001d12:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001d16:	f002 fa17 	bl	8004148 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001d1a:	2110      	movs	r1, #16
 8001d1c:	4628      	mov	r0, r5
 8001d1e:	f002 fc5b 	bl	80045d8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001d22:	4621      	mov	r1, r4
 8001d24:	4628      	mov	r0, r5
 8001d26:	f002 fc76 	bl	8004616 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001d2a:	4d79      	ldr	r5, [pc, #484]	@ (8001f10 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001d2c:	f8df e204 	ldr.w	lr, [pc, #516]	@ 8001f34 <main+0x37c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001d30:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001d32:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001d36:	e9c5 e300 	strd	lr, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001d3a:	f44f 7800 	mov.w	r8, #512	@ 0x200
 8001d3e:	2318      	movs	r3, #24
 8001d40:	e9c5 8306 	strd	r8, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001d44:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001d46:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001d48:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001d4c:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001d50:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCPolynomial = 10;
 8001d54:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001d56:	f004 f81d 	bl	8005d94 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001d5a:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001d5c:	4622      	mov	r2, r4
 8001d5e:	4639      	mov	r1, r7
 8001d60:	4866      	ldr	r0, [pc, #408]	@ (8001efc <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001d62:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8001d66:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001d6a:	f001 ffdf 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001d6e:	4632      	mov	r2, r6
 8001d70:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d74:	a909      	add	r1, sp, #36	@ 0x24
 8001d76:	4628      	mov	r0, r5
 8001d78:	f004 f868 	bl	8005e4c <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001d7c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d80:	4632      	mov	r2, r6
 8001d82:	a90d      	add	r1, sp, #52	@ 0x34
 8001d84:	4628      	mov	r0, r5
 8001d86:	f004 fa0d 	bl	80061a4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001d8a:	4632      	mov	r2, r6
 8001d8c:	4639      	mov	r1, r7
 8001d8e:	485b      	ldr	r0, [pc, #364]	@ (8001efc <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001d90:	4d60      	ldr	r5, [pc, #384]	@ (8001f14 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001d92:	f001 ffcb 	bl	8003d2c <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8001d96:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8001d9a:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001d9c:	bf04      	itt	eq
 8001d9e:	4b5e      	ldreq	r3, [pc, #376]	@ (8001f18 <main+0x360>)
 8001da0:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001da2:	4b5e      	ldr	r3, [pc, #376]	@ (8001f1c <main+0x364>)
 8001da4:	2601      	movs	r6, #1
 8001da6:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001daa:	f04f 0910 	mov.w	r9, #16
 8001dae:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001db0:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001db2:	e9c5 9304 	strd	r9, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001db6:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001dba:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001dbe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001dc2:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001dc6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001dca:	2702      	movs	r7, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001dcc:	f04f 0804 	mov.w	r8, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001dd0:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001dd2:	f04f 0b03 	mov.w	fp, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001dd6:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001dd8:	a90d      	add	r1, sp, #52	@ 0x34
 8001dda:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001ddc:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001de0:	e9cd 830f 	strd	r8, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001de4:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001de8:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001dec:	e9cd b711 	strd	fp, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001df0:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001df2:	f003 feb3 	bl	8005b5c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001df6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001dfa:	a909      	add	r1, sp, #36	@ 0x24
 8001dfc:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001dfe:	e9cd a60a 	strd	sl, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001e02:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001e04:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001e06:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e08:	f003 fec8 	bl	8005b9c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001e0c:	4630      	mov	r0, r6
 8001e0e:	f001 fd33 	bl	8003878 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e12:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001e16:	a909      	add	r1, sp, #36	@ 0x24
 8001e18:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001e1a:	e9cd 7a09 	strd	r7, sl, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001e1e:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e22:	f003 febb 	bl	8005b9c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e26:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001e2a:	a909      	add	r1, sp, #36	@ 0x24
 8001e2c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001e2e:	e9cd ba09 	strd	fp, sl, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001e32:	e9cd 840b 	strd	r8, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e36:	f003 feb1 	bl	8005b9c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001e3a:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001e3e:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001e40:	9b08      	ldr	r3, [sp, #32]
 8001e42:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e44:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001e48:	a909      	add	r1, sp, #36	@ 0x24
 8001e4a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001e4c:	e9cd 8a09 	strd	r8, sl, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001e50:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e52:	f003 fea3 	bl	8005b9c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001e56:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001e5a:	4628      	mov	r0, r5
 8001e5c:	f003 febc 	bl	8005bd8 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001e60:	2234      	movs	r2, #52	@ 0x34
 8001e62:	4621      	mov	r1, r4
 8001e64:	eb0d 0002 	add.w	r0, sp, r2
 8001e68:	f020 ff95 	bl	8022d96 <memset>
  hltdc.Instance = LTDC;
 8001e6c:	4d2c      	ldr	r5, [pc, #176]	@ (8001f20 <main+0x368>)
 8001e6e:	4b2d      	ldr	r3, [pc, #180]	@ (8001f24 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001e70:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001e72:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001e76:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001e78:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001e7c:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001e7e:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001e82:	f240 120d 	movw	r2, #269	@ 0x10d
 8001e86:	f240 1343 	movw	r3, #323	@ 0x143
 8001e8a:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001e8e:	f240 1117 	movw	r1, #279	@ 0x117
 8001e92:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001e96:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001e98:	e9c5 130b 	strd	r1, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001e9c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001ea0:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001ea2:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001ea6:	f002 fc49 	bl	800473c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001eaa:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001eac:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001eae:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001eb2:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8001eb6:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001eb8:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001ebc:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
 8001ec0:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ec4:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.ImageWidth = 240;
 8001ec6:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001eca:	4628      	mov	r0, r5
 8001ecc:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001ece:	4d16      	ldr	r5, [pc, #88]	@ (8001f28 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001ed0:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001ed2:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8001ed6:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001ed8:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001edc:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ee0:	f002 fce0 	bl	80048a4 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001ee4:	4b11      	ldr	r3, [pc, #68]	@ (8001f2c <main+0x374>)
 8001ee6:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001eec:	682b      	ldr	r3, [r5, #0]
 8001eee:	e023      	b.n	8001f38 <main+0x380>
 8001ef0:	40023800 	.word	0x40023800
 8001ef4:	40021000 	.word	0x40021000
 8001ef8:	20003054 	.word	0x20003054
 8001efc:	40020800 	.word	0x40020800
 8001f00:	40020c00 	.word	0x40020c00
 8001f04:	200030e8 	.word	0x200030e8
 8001f08:	40023000 	.word	0x40023000
 8001f0c:	000186a0 	.word	0x000186a0
 8001f10:	20002f54 	.word	0x20002f54
 8001f14:	20002ed8 	.word	0x20002ed8
 8001f18:	20002ec8 	.word	0x20002ec8
 8001f1c:	a0000140 	.word	0xa0000140
 8001f20:	20002fac 	.word	0x20002fac
 8001f24:	40016800 	.word	0x40016800
 8001f28:	20002ec4 	.word	0x20002ec4
 8001f2c:	2000006c 	.word	0x2000006c
 8001f30:	40005c00 	.word	0x40005c00
 8001f34:	40015000 	.word	0x40015000
  hdma2d.Instance = DMA2D;
 8001f38:	4d20      	ldr	r5, [pc, #128]	@ (8001fbc <main+0x404>)
  LcdDrv->DisplayOff();
 8001f3a:	68db      	ldr	r3, [r3, #12]
 8001f3c:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001f3e:	4b20      	ldr	r3, [pc, #128]	@ (8001fc0 <main+0x408>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001f40:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001f42:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001f46:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001f4a:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001f4e:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001f52:	f001 fd07 	bl	8003964 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001f56:	4631      	mov	r1, r6
 8001f58:	4628      	mov	r0, r5
 8001f5a:	f001 fdb9 	bl	8003ad0 <HAL_DMA2D_ConfigLayer>
  huart1.Init.BaudRate = 115200;
 8001f5e:	4d19      	ldr	r5, [pc, #100]	@ (8001fc4 <main+0x40c>)
  huart1.Instance = USART1;
 8001f60:	4819      	ldr	r0, [pc, #100]	@ (8001fc8 <main+0x410>)
  huart1.Init.BaudRate = 115200;
 8001f62:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 8001f66:	e9c0 5300 	strd	r5, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001f6a:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001f6c:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001f70:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001f74:	6104      	str	r4, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001f76:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001f78:	f004 fbca 	bl	8006710 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8001f7c:	f7fe fba0 	bl	80006c0 <MX_TouchGFX_Init>
  MX_USB_DEVICE_Init();
 8001f80:	f7ff fb8c 	bl	800169c <MX_USB_DEVICE_Init>
  MX_TouchGFX_PreOSInit();
 8001f84:	f7fe fb9b 	bl	80006be <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001f88:	f005 fa02 	bl	8007390 <osKernelInitialize>
  mouseEventQueueHandle = osMessageQueueNew (16, sizeof(mouseHID), &mouseEventQueue_attributes);
 8001f8c:	4a0f      	ldr	r2, [pc, #60]	@ (8001fcc <main+0x414>)
 8001f8e:	4641      	mov	r1, r8
 8001f90:	4648      	mov	r0, r9
 8001f92:	f005 fb18 	bl	80075c6 <osMessageQueueNew>
 8001f96:	4b0e      	ldr	r3, [pc, #56]	@ (8001fd0 <main+0x418>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001f98:	4a0e      	ldr	r2, [pc, #56]	@ (8001fd4 <main+0x41c>)
  mouseEventQueueHandle = osMessageQueueNew (16, sizeof(mouseHID), &mouseEventQueue_attributes);
 8001f9a:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001f9c:	4621      	mov	r1, r4
 8001f9e:	480e      	ldr	r0, [pc, #56]	@ (8001fd8 <main+0x420>)
 8001fa0:	f005 fa22 	bl	80073e8 <osThreadNew>
 8001fa4:	4b0d      	ldr	r3, [pc, #52]	@ (8001fdc <main+0x424>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001fa6:	4a0e      	ldr	r2, [pc, #56]	@ (8001fe0 <main+0x428>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001fa8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001faa:	4621      	mov	r1, r4
 8001fac:	480d      	ldr	r0, [pc, #52]	@ (8001fe4 <main+0x42c>)
 8001fae:	f005 fa1b 	bl	80073e8 <osThreadNew>
 8001fb2:	4b0d      	ldr	r3, [pc, #52]	@ (8001fe8 <main+0x430>)
 8001fb4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001fb6:	f005 f9fd 	bl	80073b4 <osKernelStart>
  while (1)
 8001fba:	e7fe      	b.n	8001fba <main+0x402>
 8001fbc:	200030a8 	.word	0x200030a8
 8001fc0:	4002b000 	.word	0x4002b000
 8001fc4:	40011000 	.word	0x40011000
 8001fc8:	20002f0c 	.word	0x20002f0c
 8001fcc:	08024bb4 	.word	0x08024bb4
 8001fd0:	20002ecc 	.word	0x20002ecc
 8001fd4:	08024bf0 	.word	0x08024bf0
 8001fd8:	08001a6d 	.word	0x08001a6d
 8001fdc:	20002ed4 	.word	0x20002ed4
 8001fe0:	08024bcc 	.word	0x08024bcc
 8001fe4:	080006cf 	.word	0x080006cf
 8001fe8:	20002ed0 	.word	0x20002ed0

08001fec <IOE_Init>:
void IOE_Init(void)
 8001fec:	4770      	bx	lr

08001fee <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001fee:	4770      	bx	lr

08001ff0 <IOE_Write>:
{
 8001ff0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001ff2:	4b09      	ldr	r3, [pc, #36]	@ (8002018 <IOE_Write+0x28>)
 8001ff4:	f88d 2017 	strb.w	r2, [sp, #23]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	9302      	str	r3, [sp, #8]
 8001ffc:	f10d 0217 	add.w	r2, sp, #23
 8002000:	2301      	movs	r3, #1
 8002002:	9200      	str	r2, [sp, #0]
 8002004:	9301      	str	r3, [sp, #4]
 8002006:	460a      	mov	r2, r1
 8002008:	4601      	mov	r1, r0
 800200a:	4804      	ldr	r0, [pc, #16]	@ (800201c <IOE_Write+0x2c>)
 800200c:	f002 f944 	bl	8004298 <HAL_I2C_Mem_Write>
}
 8002010:	b007      	add	sp, #28
 8002012:	f85d fb04 	ldr.w	pc, [sp], #4
 8002016:	bf00      	nop
 8002018:	20000060 	.word	0x20000060
 800201c:	20003054 	.word	0x20003054

08002020 <IOE_Read>:
{
 8002020:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8002022:	2300      	movs	r3, #0
 8002024:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002028:	4b08      	ldr	r3, [pc, #32]	@ (800204c <IOE_Read+0x2c>)
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	9302      	str	r3, [sp, #8]
{
 800202e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002030:	2301      	movs	r3, #1
 8002032:	f10d 0117 	add.w	r1, sp, #23
 8002036:	9100      	str	r1, [sp, #0]
 8002038:	9301      	str	r3, [sp, #4]
 800203a:	4601      	mov	r1, r0
 800203c:	4804      	ldr	r0, [pc, #16]	@ (8002050 <IOE_Read+0x30>)
 800203e:	f002 f9bb 	bl	80043b8 <HAL_I2C_Mem_Read>
}
 8002042:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002046:	b007      	add	sp, #28
 8002048:	f85d fb04 	ldr.w	pc, [sp], #4
 800204c:	20000060 	.word	0x20000060
 8002050:	20003054 	.word	0x20003054

08002054 <IOE_ReadMultiple>:
{
 8002054:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002056:	4c08      	ldr	r4, [pc, #32]	@ (8002078 <IOE_ReadMultiple+0x24>)
 8002058:	6824      	ldr	r4, [r4, #0]
 800205a:	9200      	str	r2, [sp, #0]
 800205c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002060:	460a      	mov	r2, r1
 8002062:	2301      	movs	r3, #1
 8002064:	4601      	mov	r1, r0
 8002066:	4805      	ldr	r0, [pc, #20]	@ (800207c <IOE_ReadMultiple+0x28>)
 8002068:	f002 f9a6 	bl	80043b8 <HAL_I2C_Mem_Read>
}
 800206c:	3800      	subs	r0, #0
 800206e:	bf18      	it	ne
 8002070:	2001      	movne	r0, #1
 8002072:	b004      	add	sp, #16
 8002074:	bd10      	pop	{r4, pc}
 8002076:	bf00      	nop
 8002078:	20000060 	.word	0x20000060
 800207c:	20003054 	.word	0x20003054

08002080 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002080:	f001 bbfa 	b.w	8003878 <HAL_Delay>

08002084 <LCD_IO_Init>:
{
 8002084:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002086:	4c06      	ldr	r4, [pc, #24]	@ (80020a0 <LCD_IO_Init+0x1c>)
 8002088:	2200      	movs	r2, #0
 800208a:	4620      	mov	r0, r4
 800208c:	2104      	movs	r1, #4
 800208e:	f001 fe4d 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002092:	4620      	mov	r0, r4
 8002094:	2201      	movs	r2, #1
}
 8002096:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800209a:	2104      	movs	r1, #4
 800209c:	f001 be46 	b.w	8003d2c <HAL_GPIO_WritePin>
 80020a0:	40020800 	.word	0x40020800

080020a4 <LCD_IO_WriteData>:
{
 80020a4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020a6:	4d0b      	ldr	r5, [pc, #44]	@ (80020d4 <LCD_IO_WriteData+0x30>)
{
 80020a8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020aa:	2201      	movs	r2, #1
 80020ac:	480a      	ldr	r0, [pc, #40]	@ (80020d8 <LCD_IO_WriteData+0x34>)
 80020ae:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80020b2:	f001 fe3b 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020b6:	2200      	movs	r2, #0
 80020b8:	2104      	movs	r1, #4
 80020ba:	4628      	mov	r0, r5
 80020bc:	f001 fe36 	bl	8003d2c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80020c0:	4620      	mov	r0, r4
 80020c2:	f7ff fcc1 	bl	8001a48 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020c6:	4628      	mov	r0, r5
 80020c8:	2201      	movs	r2, #1
}
 80020ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020ce:	2104      	movs	r1, #4
 80020d0:	f001 be2c 	b.w	8003d2c <HAL_GPIO_WritePin>
 80020d4:	40020800 	.word	0x40020800
 80020d8:	40020c00 	.word	0x40020c00

080020dc <LCD_IO_WriteReg>:
{
 80020dc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020de:	4d0b      	ldr	r5, [pc, #44]	@ (800210c <LCD_IO_WriteReg+0x30>)
{
 80020e0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020e2:	2200      	movs	r2, #0
 80020e4:	480a      	ldr	r0, [pc, #40]	@ (8002110 <LCD_IO_WriteReg+0x34>)
 80020e6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80020ea:	f001 fe1f 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ee:	2200      	movs	r2, #0
 80020f0:	2104      	movs	r1, #4
 80020f2:	4628      	mov	r0, r5
 80020f4:	f001 fe1a 	bl	8003d2c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80020f8:	4620      	mov	r0, r4
 80020fa:	f7ff fca5 	bl	8001a48 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020fe:	4628      	mov	r0, r5
 8002100:	2201      	movs	r2, #1
}
 8002102:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002106:	2104      	movs	r1, #4
 8002108:	f001 be10 	b.w	8003d2c <HAL_GPIO_WritePin>
 800210c:	40020800 	.word	0x40020800
 8002110:	40020c00 	.word	0x40020c00

08002114 <LCD_IO_ReadData>:
{
 8002114:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002116:	4e14      	ldr	r6, [pc, #80]	@ (8002168 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002118:	4f14      	ldr	r7, [pc, #80]	@ (800216c <LCD_IO_ReadData+0x58>)
{
 800211a:	4605      	mov	r5, r0
 800211c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800211e:	4630      	mov	r0, r6
 8002120:	2200      	movs	r2, #0
 8002122:	2104      	movs	r1, #4
 8002124:	f001 fe02 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002128:	2200      	movs	r2, #0
 800212a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800212e:	4638      	mov	r0, r7
 8002130:	f001 fdfc 	bl	8003d2c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002134:	4628      	mov	r0, r5
 8002136:	f7ff fc87 	bl	8001a48 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800213a:	4b0d      	ldr	r3, [pc, #52]	@ (8002170 <LCD_IO_ReadData+0x5c>)
 800213c:	480d      	ldr	r0, [pc, #52]	@ (8002174 <LCD_IO_ReadData+0x60>)
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	4622      	mov	r2, r4
 8002142:	a901      	add	r1, sp, #4
 8002144:	f004 f82e 	bl	80061a4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002148:	4638      	mov	r0, r7
 800214a:	2201      	movs	r2, #1
 800214c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8002150:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002152:	f001 fdeb 	bl	8003d2c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002156:	4630      	mov	r0, r6
 8002158:	2201      	movs	r2, #1
 800215a:	2104      	movs	r1, #4
 800215c:	f001 fde6 	bl	8003d2c <HAL_GPIO_WritePin>
}
 8002160:	4620      	mov	r0, r4
 8002162:	b003      	add	sp, #12
 8002164:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002166:	bf00      	nop
 8002168:	40020800 	.word	0x40020800
 800216c:	40020c00 	.word	0x40020c00
 8002170:	2000005c 	.word	0x2000005c
 8002174:	20002f54 	.word	0x20002f54

08002178 <LCD_Delay>:
  HAL_Delay(Delay);
 8002178:	f001 bb7e 	b.w	8003878 <HAL_Delay>

0800217c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 800217c:	6802      	ldr	r2, [r0, #0]
 800217e:	4b03      	ldr	r3, [pc, #12]	@ (800218c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002180:	429a      	cmp	r2, r3
 8002182:	d101      	bne.n	8002188 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002184:	f001 bb66 	b.w	8003854 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002188:	4770      	bx	lr
 800218a:	bf00      	nop
 800218c:	40001000 	.word	0x40001000

08002190 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002190:	4770      	bx	lr
	...

08002194 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002194:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002196:	4b0e      	ldr	r3, [pc, #56]	@ (80021d0 <HAL_MspInit+0x3c>)
 8002198:	2200      	movs	r2, #0
 800219a:	9200      	str	r2, [sp, #0]
 800219c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800219e:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 80021a2:	6459      	str	r1, [r3, #68]	@ 0x44
 80021a4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80021a6:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 80021aa:	9100      	str	r1, [sp, #0]
 80021ac:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021ae:	9201      	str	r2, [sp, #4]
 80021b0:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80021b2:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80021b6:	6419      	str	r1, [r3, #64]	@ 0x40
 80021b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021ba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80021be:	9301      	str	r3, [sp, #4]
 80021c0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021c2:	210f      	movs	r1, #15
 80021c4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80021c8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021ca:	f001 bb7b 	b.w	80038c4 <HAL_NVIC_SetPriority>
 80021ce:	bf00      	nop
 80021d0:	40023800 	.word	0x40023800

080021d4 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80021d4:	6802      	ldr	r2, [r0, #0]
 80021d6:	4b09      	ldr	r3, [pc, #36]	@ (80021fc <HAL_CRC_MspInit+0x28>)
 80021d8:	429a      	cmp	r2, r3
{
 80021da:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80021dc:	d10b      	bne.n	80021f6 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80021de:	2300      	movs	r3, #0
 80021e0:	9301      	str	r3, [sp, #4]
 80021e2:	4b07      	ldr	r3, [pc, #28]	@ (8002200 <HAL_CRC_MspInit+0x2c>)
 80021e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80021e6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80021ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80021ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021ee:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80021f2:	9301      	str	r3, [sp, #4]
 80021f4:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 80021f6:	b002      	add	sp, #8
 80021f8:	4770      	bx	lr
 80021fa:	bf00      	nop
 80021fc:	40023000 	.word	0x40023000
 8002200:	40023800 	.word	0x40023800

08002204 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002204:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002206:	4b0f      	ldr	r3, [pc, #60]	@ (8002244 <HAL_DMA2D_MspInit+0x40>)
 8002208:	6802      	ldr	r2, [r0, #0]
 800220a:	429a      	cmp	r2, r3
 800220c:	d116      	bne.n	800223c <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800220e:	2200      	movs	r2, #0
 8002210:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002214:	9201      	str	r2, [sp, #4]
 8002216:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002218:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 800221c:	6319      	str	r1, [r3, #48]	@ 0x30
 800221e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002220:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002224:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002226:	2105      	movs	r1, #5
 8002228:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800222a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800222c:	f001 fb4a 	bl	80038c4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002230:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8002232:	b003      	add	sp, #12
 8002234:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002238:	f001 bb76 	b.w	8003928 <HAL_NVIC_EnableIRQ>
}
 800223c:	b003      	add	sp, #12
 800223e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002242:	bf00      	nop
 8002244:	4002b000 	.word	0x4002b000

08002248 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002248:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800224c:	4604      	mov	r4, r0
 800224e:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002250:	2214      	movs	r2, #20
 8002252:	2100      	movs	r1, #0
 8002254:	a803      	add	r0, sp, #12
 8002256:	f020 fd9e 	bl	8022d96 <memset>
  if(hi2c->Instance==I2C3)
 800225a:	6822      	ldr	r2, [r4, #0]
 800225c:	4b24      	ldr	r3, [pc, #144]	@ (80022f0 <HAL_I2C_MspInit+0xa8>)
 800225e:	429a      	cmp	r2, r3
 8002260:	d143      	bne.n	80022ea <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002262:	4c24      	ldr	r4, [pc, #144]	@ (80022f4 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002264:	4824      	ldr	r0, [pc, #144]	@ (80022f8 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002266:	2500      	movs	r5, #0
 8002268:	9500      	str	r5, [sp, #0]
 800226a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800226c:	f043 0304 	orr.w	r3, r3, #4
 8002270:	6323      	str	r3, [r4, #48]	@ 0x30
 8002272:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002274:	f003 0304 	and.w	r3, r3, #4
 8002278:	9300      	str	r3, [sp, #0]
 800227a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800227c:	9501      	str	r5, [sp, #4]
 800227e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002280:	f043 0301 	orr.w	r3, r3, #1
 8002284:	6323      	str	r3, [r4, #48]	@ 0x30
 8002286:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002288:	f003 0301 	and.w	r3, r3, #1
 800228c:	9301      	str	r3, [sp, #4]
 800228e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002290:	f04f 0912 	mov.w	r9, #18
 8002294:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002298:	f04f 0801 	mov.w	r8, #1
 800229c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800229e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022a2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022a6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022aa:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022ac:	f001 fc54 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022b0:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b4:	4811      	ldr	r0, [pc, #68]	@ (80022fc <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022b6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022ba:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022be:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022c2:	f001 fc49 	bl	8003b58 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022c6:	9502      	str	r5, [sp, #8]
 80022c8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80022ca:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80022ce:	6423      	str	r3, [r4, #64]	@ 0x40
 80022d0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80022d2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80022d6:	9302      	str	r3, [sp, #8]
 80022d8:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 80022da:	6a23      	ldr	r3, [r4, #32]
 80022dc:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80022e0:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80022e2:	6a23      	ldr	r3, [r4, #32]
 80022e4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80022e8:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 80022ea:	b009      	add	sp, #36	@ 0x24
 80022ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80022f0:	40005c00 	.word	0x40005c00
 80022f4:	40023800 	.word	0x40023800
 80022f8:	40020800 	.word	0x40020800
 80022fc:	40020000 	.word	0x40020000

08002300 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002302:	b099      	sub	sp, #100	@ 0x64
 8002304:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002306:	2214      	movs	r2, #20
 8002308:	2100      	movs	r1, #0
 800230a:	a807      	add	r0, sp, #28
 800230c:	f020 fd43 	bl	8022d96 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002310:	2230      	movs	r2, #48	@ 0x30
 8002312:	eb0d 0002 	add.w	r0, sp, r2
 8002316:	2100      	movs	r1, #0
 8002318:	f020 fd3d 	bl	8022d96 <memset>
  if(hltdc->Instance==LTDC)
 800231c:	6822      	ldr	r2, [r4, #0]
 800231e:	4b5e      	ldr	r3, [pc, #376]	@ (8002498 <HAL_LTDC_MspInit+0x198>)
 8002320:	429a      	cmp	r2, r3
 8002322:	f040 80b7 	bne.w	8002494 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002326:	2308      	movs	r3, #8
 8002328:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800232a:	23c0      	movs	r3, #192	@ 0xc0
 800232c:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800232e:	2304      	movs	r3, #4
 8002330:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002332:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002334:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8002338:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800233a:	f003 fae3 	bl	8005904 <HAL_RCCEx_PeriphCLKConfig>
 800233e:	b108      	cbz	r0, 8002344 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002340:	f7ff ff26 	bl	8002190 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002344:	4b55      	ldr	r3, [pc, #340]	@ (800249c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002346:	4856      	ldr	r0, [pc, #344]	@ (80024a0 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002348:	2400      	movs	r4, #0
 800234a:	9400      	str	r4, [sp, #0]
 800234c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800234e:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002352:	645a      	str	r2, [r3, #68]	@ 0x44
 8002354:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002356:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 800235a:	9200      	str	r2, [sp, #0]
 800235c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800235e:	9401      	str	r4, [sp, #4]
 8002360:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002362:	f042 0220 	orr.w	r2, r2, #32
 8002366:	631a      	str	r2, [r3, #48]	@ 0x30
 8002368:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800236a:	f002 0220 	and.w	r2, r2, #32
 800236e:	9201      	str	r2, [sp, #4]
 8002370:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002372:	9402      	str	r4, [sp, #8]
 8002374:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002376:	f042 0201 	orr.w	r2, r2, #1
 800237a:	631a      	str	r2, [r3, #48]	@ 0x30
 800237c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800237e:	f002 0201 	and.w	r2, r2, #1
 8002382:	9202      	str	r2, [sp, #8]
 8002384:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002386:	9403      	str	r4, [sp, #12]
 8002388:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800238a:	f042 0202 	orr.w	r2, r2, #2
 800238e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002390:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002392:	f002 0202 	and.w	r2, r2, #2
 8002396:	9203      	str	r2, [sp, #12]
 8002398:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800239a:	9404      	str	r4, [sp, #16]
 800239c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800239e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80023a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80023a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023a6:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80023aa:	9204      	str	r2, [sp, #16]
 80023ac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ae:	9405      	str	r4, [sp, #20]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023b2:	f042 0204 	orr.w	r2, r2, #4
 80023b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023ba:	f002 0204 	and.w	r2, r2, #4
 80023be:	9205      	str	r2, [sp, #20]
 80023c0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023c2:	9406      	str	r4, [sp, #24]
 80023c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023c6:	f042 0208 	orr.w	r2, r2, #8
 80023ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80023cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023ce:	f003 0308 	and.w	r3, r3, #8
 80023d2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023d4:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023d6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023d8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023da:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023dc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023e6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023ea:	f001 fbb5 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80023ee:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023f2:	482c      	ldr	r0, [pc, #176]	@ (80024a4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f4:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023f6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f8:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80023fc:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023fe:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002402:	f001 fba9 	bl	8003b58 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002406:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002408:	4827      	ldr	r0, [pc, #156]	@ (80024a8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240a:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800240c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800240e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002412:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002416:	f001 fb9f 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800241a:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800241e:	4822      	ldr	r0, [pc, #136]	@ (80024a8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002420:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002422:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002424:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002428:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800242c:	f001 fb94 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002430:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002434:	481d      	ldr	r0, [pc, #116]	@ (80024ac <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002436:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002438:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800243a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800243e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002442:	f001 fb89 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002446:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002448:	4819      	ldr	r0, [pc, #100]	@ (80024b0 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800244a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800244c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800244e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002452:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002456:	f001 fb7f 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800245a:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800245c:	4815      	ldr	r0, [pc, #84]	@ (80024b4 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800245e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002460:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002462:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002466:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800246a:	f001 fb75 	bl	8003b58 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800246e:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002472:	480e      	ldr	r0, [pc, #56]	@ (80024ac <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002474:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002476:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002478:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800247c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002480:	f001 fb6a 	bl	8003b58 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002484:	2058      	movs	r0, #88	@ 0x58
 8002486:	4622      	mov	r2, r4
 8002488:	2105      	movs	r1, #5
 800248a:	f001 fa1b 	bl	80038c4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800248e:	2058      	movs	r0, #88	@ 0x58
 8002490:	f001 fa4a 	bl	8003928 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002494:	b019      	add	sp, #100	@ 0x64
 8002496:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002498:	40016800 	.word	0x40016800
 800249c:	40023800 	.word	0x40023800
 80024a0:	40021400 	.word	0x40021400
 80024a4:	40020000 	.word	0x40020000
 80024a8:	40020400 	.word	0x40020400
 80024ac:	40021800 	.word	0x40021800
 80024b0:	40020800 	.word	0x40020800
 80024b4:	40020c00 	.word	0x40020c00

080024b8 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024b8:	b510      	push	{r4, lr}
 80024ba:	4604      	mov	r4, r0
 80024bc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024be:	2214      	movs	r2, #20
 80024c0:	2100      	movs	r1, #0
 80024c2:	a803      	add	r0, sp, #12
 80024c4:	f020 fc67 	bl	8022d96 <memset>
  if(hspi->Instance==SPI5)
 80024c8:	6822      	ldr	r2, [r4, #0]
 80024ca:	4b14      	ldr	r3, [pc, #80]	@ (800251c <HAL_SPI_MspInit+0x64>)
 80024cc:	429a      	cmp	r2, r3
 80024ce:	d123      	bne.n	8002518 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024d0:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 80024d4:	2100      	movs	r1, #0
 80024d6:	9101      	str	r1, [sp, #4]
 80024d8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024da:	4811      	ldr	r0, [pc, #68]	@ (8002520 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024dc:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 80024e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80024e2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80024e4:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 80024e8:	9201      	str	r2, [sp, #4]
 80024ea:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024ec:	9102      	str	r1, [sp, #8]
 80024ee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80024f0:	f042 0220 	orr.w	r2, r2, #32
 80024f4:	631a      	str	r2, [r3, #48]	@ 0x30
 80024f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024f8:	f003 0320 	and.w	r3, r3, #32
 80024fc:	9302      	str	r3, [sp, #8]
 80024fe:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002500:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002504:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002506:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002508:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800250c:	2305      	movs	r3, #5
 800250e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002512:	a903      	add	r1, sp, #12
 8002514:	f001 fb20 	bl	8003b58 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002518:	b008      	add	sp, #32
 800251a:	bd10      	pop	{r4, pc}
 800251c:	40015000 	.word	0x40015000
 8002520:	40021400 	.word	0x40021400

08002524 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002524:	b510      	push	{r4, lr}
 8002526:	4604      	mov	r4, r0
 8002528:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800252a:	2214      	movs	r2, #20
 800252c:	2100      	movs	r1, #0
 800252e:	a803      	add	r0, sp, #12
 8002530:	f020 fc31 	bl	8022d96 <memset>
  if(huart->Instance==USART1)
 8002534:	6822      	ldr	r2, [r4, #0]
 8002536:	4b14      	ldr	r3, [pc, #80]	@ (8002588 <HAL_UART_MspInit+0x64>)
 8002538:	429a      	cmp	r2, r3
 800253a:	d123      	bne.n	8002584 <HAL_UART_MspInit+0x60>
  {
    /* USER CODE BEGIN USART1_MspInit 0 */

    /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800253c:	f503 3394 	add.w	r3, r3, #75776	@ 0x12800
 8002540:	2100      	movs	r1, #0
 8002542:	9101      	str	r1, [sp, #4]
 8002544:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002546:	4811      	ldr	r0, [pc, #68]	@ (800258c <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8002548:	f042 0210 	orr.w	r2, r2, #16
 800254c:	645a      	str	r2, [r3, #68]	@ 0x44
 800254e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002550:	f002 0210 	and.w	r2, r2, #16
 8002554:	9201      	str	r2, [sp, #4]
 8002556:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002558:	9102      	str	r1, [sp, #8]
 800255a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800255c:	f042 0201 	orr.w	r2, r2, #1
 8002560:	631a      	str	r2, [r3, #48]	@ 0x30
 8002562:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002564:	f003 0301 	and.w	r3, r3, #1
 8002568:	9302      	str	r3, [sp, #8]
 800256a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800256c:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 8002570:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002572:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002574:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002578:	2307      	movs	r3, #7
 800257a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800257e:	a903      	add	r1, sp, #12
 8002580:	f001 faea 	bl	8003b58 <HAL_GPIO_Init>

    /* USER CODE END USART1_MspInit 1 */

  }

}
 8002584:	b008      	add	sp, #32
 8002586:	bd10      	pop	{r4, pc}
 8002588:	40011000 	.word	0x40011000
 800258c:	40020000 	.word	0x40020000

08002590 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002594:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002596:	2300      	movs	r3, #0
 8002598:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800259a:	4b2b      	ldr	r3, [pc, #172]	@ (8002648 <HAL_SDRAM_MspInit+0xb8>)
 800259c:	681c      	ldr	r4, [r3, #0]
 800259e:	2c00      	cmp	r4, #0
 80025a0:	d14f      	bne.n	8002642 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80025a2:	f04f 0801 	mov.w	r8, #1
 80025a6:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80025aa:	4b28      	ldr	r3, [pc, #160]	@ (800264c <HAL_SDRAM_MspInit+0xbc>)
 80025ac:	9400      	str	r4, [sp, #0]
 80025ae:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025b0:	4827      	ldr	r0, [pc, #156]	@ (8002650 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80025b2:	ea42 0208 	orr.w	r2, r2, r8
 80025b6:	639a      	str	r2, [r3, #56]	@ 0x38
 80025b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80025ba:	ea03 0308 	and.w	r3, r3, r8
 80025be:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025c0:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025c2:	2603      	movs	r6, #3
 80025c4:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80025c6:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025c8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025ca:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80025ce:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025d2:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025d6:	f001 fabf 	bl	8003b58 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025da:	481e      	ldr	r0, [pc, #120]	@ (8002654 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025dc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025de:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025e0:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025e4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025e8:	f001 fab6 	bl	8003b58 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80025ec:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025f0:	4819      	ldr	r0, [pc, #100]	@ (8002658 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025f2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025f4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025f6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025fa:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025fe:	f001 faab 	bl	8003b58 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002602:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002606:	4815      	ldr	r0, [pc, #84]	@ (800265c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002608:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800260a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800260c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002610:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002614:	f001 faa0 	bl	8003b58 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002618:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800261c:	4810      	ldr	r0, [pc, #64]	@ (8002660 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800261e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002620:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002622:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002626:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800262a:	f001 fa95 	bl	8003b58 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800262e:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002630:	480c      	ldr	r0, [pc, #48]	@ (8002664 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002632:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002634:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002636:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800263a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800263e:	f001 fa8b 	bl	8003b58 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002642:	b006      	add	sp, #24
 8002644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002648:	200030f4 	.word	0x200030f4
 800264c:	40023800 	.word	0x40023800
 8002650:	40021400 	.word	0x40021400
 8002654:	40020800 	.word	0x40020800
 8002658:	40021800 	.word	0x40021800
 800265c:	40021000 	.word	0x40021000
 8002660:	40020c00 	.word	0x40020c00
 8002664:	40020400 	.word	0x40020400

08002668 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002668:	b570      	push	{r4, r5, r6, lr}
 800266a:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800266c:	2300      	movs	r3, #0
 800266e:	9302      	str	r3, [sp, #8]
 8002670:	4b20      	ldr	r3, [pc, #128]	@ (80026f4 <HAL_InitTick+0x8c>)
 8002672:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002674:	f042 0210 	orr.w	r2, r2, #16
 8002678:	641a      	str	r2, [r3, #64]	@ 0x40
 800267a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800267c:	f003 0310 	and.w	r3, r3, #16
 8002680:	9302      	str	r3, [sp, #8]
{
 8002682:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002684:	a901      	add	r1, sp, #4
 8002686:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002688:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800268a:	f003 f91d 	bl	80058c8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800268e:	9b06      	ldr	r3, [sp, #24]
 8002690:	bb4b      	cbnz	r3, 80026e6 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002692:	f003 f8f9 	bl	8005888 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002696:	4e18      	ldr	r6, [pc, #96]	@ (80026f8 <HAL_InitTick+0x90>)
 8002698:	4b18      	ldr	r3, [pc, #96]	@ (80026fc <HAL_InitTick+0x94>)
 800269a:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800269c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80026a0:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80026a2:	4b17      	ldr	r3, [pc, #92]	@ (8002700 <HAL_InitTick+0x98>)
 80026a4:	fbb0 f3f3 	udiv	r3, r0, r3
 80026a8:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80026aa:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80026ac:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 80026ae:	2300      	movs	r3, #0
 80026b0:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026b2:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80026b4:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80026b6:	f003 ff3f 	bl	8006538 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80026ba:	4604      	mov	r4, r0
 80026bc:	b980      	cbnz	r0, 80026e0 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80026be:	4630      	mov	r0, r6
 80026c0:	f003 fe14 	bl	80062ec <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80026c4:	4604      	mov	r4, r0
 80026c6:	b958      	cbnz	r0, 80026e0 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80026c8:	2036      	movs	r0, #54	@ 0x36
 80026ca:	f001 f92d 	bl	8003928 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80026ce:	2d0f      	cmp	r5, #15
 80026d0:	d80d      	bhi.n	80026ee <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80026d2:	4622      	mov	r2, r4
 80026d4:	4629      	mov	r1, r5
 80026d6:	2036      	movs	r0, #54	@ 0x36
 80026d8:	f001 f8f4 	bl	80038c4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80026dc:	4b09      	ldr	r3, [pc, #36]	@ (8002704 <HAL_InitTick+0x9c>)
 80026de:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 80026e0:	4620      	mov	r0, r4
 80026e2:	b008      	add	sp, #32
 80026e4:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80026e6:	f003 f8cf 	bl	8005888 <HAL_RCC_GetPCLK1Freq>
 80026ea:	0040      	lsls	r0, r0, #1
 80026ec:	e7d3      	b.n	8002696 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 80026ee:	2401      	movs	r4, #1
 80026f0:	e7f6      	b.n	80026e0 <HAL_InitTick+0x78>
 80026f2:	bf00      	nop
 80026f4:	40023800 	.word	0x40023800
 80026f8:	200030f8 	.word	0x200030f8
 80026fc:	40001000 	.word	0x40001000
 8002700:	000f4240 	.word	0x000f4240
 8002704:	200000d4 	.word	0x200000d4

08002708 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002708:	4770      	bx	lr

0800270a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800270a:	e7fe      	b.n	800270a <HardFault_Handler>

0800270c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800270c:	e7fe      	b.n	800270c <MemManage_Handler>

0800270e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800270e:	e7fe      	b.n	800270e <BusFault_Handler>

08002710 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002710:	e7fe      	b.n	8002710 <UsageFault_Handler>

08002712 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002712:	4770      	bx	lr

08002714 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002714:	4801      	ldr	r0, [pc, #4]	@ (800271c <TIM6_DAC_IRQHandler+0x8>)
 8002716:	f003 be27 	b.w	8006368 <HAL_TIM_IRQHandler>
 800271a:	bf00      	nop
 800271c:	200030f8 	.word	0x200030f8

08002720 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002720:	4801      	ldr	r0, [pc, #4]	@ (8002728 <OTG_HS_IRQHandler+0x8>)
 8002722:	f002 bac9 	b.w	8004cb8 <HAL_PCD_IRQHandler>
 8002726:	bf00      	nop
 8002728:	200029e0 	.word	0x200029e0

0800272c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800272c:	4801      	ldr	r0, [pc, #4]	@ (8002734 <LTDC_IRQHandler+0x8>)
 800272e:	f002 b85c 	b.w	80047ea <HAL_LTDC_IRQHandler>
 8002732:	bf00      	nop
 8002734:	20002fac 	.word	0x20002fac

08002738 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002738:	4801      	ldr	r0, [pc, #4]	@ (8002740 <DMA2D_IRQHandler+0x8>)
 800273a:	f001 b93f 	b.w	80039bc <HAL_DMA2D_IRQHandler>
 800273e:	bf00      	nop
 8002740:	200030a8 	.word	0x200030a8

08002744 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002744:	2001      	movs	r0, #1
 8002746:	4770      	bx	lr

08002748 <_kill>:

int _kill(int pid, int sig)
{
 8002748:	b508      	push	{r3, lr}
	errno = EINVAL;
 800274a:	f020 fc25 	bl	8022f98 <__errno>
 800274e:	2316      	movs	r3, #22
 8002750:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002752:	f04f 30ff 	mov.w	r0, #4294967295
 8002756:	bd08      	pop	{r3, pc}

08002758 <_exit>:

void _exit (int status)
{
 8002758:	b508      	push	{r3, lr}
	errno = EINVAL;
 800275a:	f020 fc1d 	bl	8022f98 <__errno>
 800275e:	2316      	movs	r3, #22
 8002760:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002762:	e7fe      	b.n	8002762 <_exit+0xa>

08002764 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002764:	b570      	push	{r4, r5, r6, lr}
 8002766:	460d      	mov	r5, r1
 8002768:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800276a:	460e      	mov	r6, r1
 800276c:	1b73      	subs	r3, r6, r5
 800276e:	429c      	cmp	r4, r3
 8002770:	dc01      	bgt.n	8002776 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002772:	4620      	mov	r0, r4
 8002774:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002776:	f3af 8000 	nop.w
 800277a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800277e:	e7f5      	b.n	800276c <_read+0x8>

08002780 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002780:	b570      	push	{r4, r5, r6, lr}
 8002782:	460d      	mov	r5, r1
 8002784:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002786:	460e      	mov	r6, r1
 8002788:	1b73      	subs	r3, r6, r5
 800278a:	429c      	cmp	r4, r3
 800278c:	dc01      	bgt.n	8002792 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800278e:	4620      	mov	r0, r4
 8002790:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002792:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002796:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800279a:	e7f5      	b.n	8002788 <_write+0x8>

0800279c <_close>:

int _close(int file)
{
	return -1;
}
 800279c:	f04f 30ff 	mov.w	r0, #4294967295
 80027a0:	4770      	bx	lr

080027a2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80027a2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80027a6:	604b      	str	r3, [r1, #4]
	return 0;
}
 80027a8:	2000      	movs	r0, #0
 80027aa:	4770      	bx	lr

080027ac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80027ac:	2001      	movs	r0, #1
 80027ae:	4770      	bx	lr

080027b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80027b0:	2000      	movs	r0, #0
 80027b2:	4770      	bx	lr

080027b4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80027b4:	4a0a      	ldr	r2, [pc, #40]	@ (80027e0 <_sbrk+0x2c>)
 80027b6:	6811      	ldr	r1, [r2, #0]
{
 80027b8:	b508      	push	{r3, lr}
 80027ba:	4603      	mov	r3, r0
	if (heap_end == 0)
 80027bc:	b909      	cbnz	r1, 80027c2 <_sbrk+0xe>
		heap_end = &end;
 80027be:	4909      	ldr	r1, [pc, #36]	@ (80027e4 <_sbrk+0x30>)
 80027c0:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80027c2:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80027c4:	4669      	mov	r1, sp
 80027c6:	4403      	add	r3, r0
 80027c8:	428b      	cmp	r3, r1
 80027ca:	d906      	bls.n	80027da <_sbrk+0x26>
	{
		errno = ENOMEM;
 80027cc:	f020 fbe4 	bl	8022f98 <__errno>
 80027d0:	230c      	movs	r3, #12
 80027d2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80027d4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80027d8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80027da:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80027dc:	e7fc      	b.n	80027d8 <_sbrk+0x24>
 80027de:	bf00      	nop
 80027e0:	20003140 	.word	0x20003140
 80027e4:	20014d38 	.word	0x20014d38

080027e8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80027e8:	4770      	bx	lr

080027ea <_ZN23ApplicationFontProviderD0Ev>:
 80027ea:	b510      	push	{r4, lr}
 80027ec:	2104      	movs	r1, #4
 80027ee:	4604      	mov	r4, r0
 80027f0:	f01f f957 	bl	8021aa2 <_ZdlPvj>
 80027f4:	4620      	mov	r0, r4
 80027f6:	bd10      	pop	{r4, pc}

080027f8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80027f8:	2901      	cmp	r1, #1
{
 80027fa:	b508      	push	{r3, lr}
    switch (typography)
 80027fc:	d006      	beq.n	800280c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80027fe:	2902      	cmp	r1, #2
 8002800:	d008      	beq.n	8002814 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002802:	b959      	cbnz	r1, 800281c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002804:	f000 fb96 	bl	8002f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002808:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800280a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800280c:	f000 fb92 	bl	8002f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002810:	6840      	ldr	r0, [r0, #4]
 8002812:	e7fa      	b.n	800280a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002814:	f000 fb8e 	bl	8002f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002818:	6880      	ldr	r0, [r0, #8]
 800281a:	e7f6      	b.n	800280a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 800281c:	2000      	movs	r0, #0
 800281e:	e7f4      	b.n	800280a <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002820 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002820:	4800      	ldr	r0, [pc, #0]	@ (8002824 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002822:	4770      	bx	lr
 8002824:	08024c28 	.word	0x08024c28

08002828 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002828:	2001      	movs	r0, #1
 800282a:	4770      	bx	lr

0800282c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800282c:	b513      	push	{r0, r1, r4, lr}
 800282e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002830:	b151      	cbz	r1, 8002848 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002832:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002834:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002836:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800283a:	aa01      	add	r2, sp, #4
 800283c:	689c      	ldr	r4, [r3, #8]
 800283e:	f10d 0303 	add.w	r3, sp, #3
 8002842:	47a0      	blx	r4
        return glyph;
    }
 8002844:	b002      	add	sp, #8
 8002846:	bd10      	pop	{r4, pc}
            return 0;
 8002848:	4608      	mov	r0, r1
 800284a:	e7fb      	b.n	8002844 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800284c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800284c:	89c0      	ldrh	r0, [r0, #14]
 800284e:	4770      	bx	lr

08002850 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002850:	8a00      	ldrh	r0, [r0, #16]
 8002852:	4770      	bx	lr

08002854 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002854:	88c0      	ldrh	r0, [r0, #6]
 8002856:	4770      	bx	lr

08002858 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002858:	8880      	ldrh	r0, [r0, #4]
 800285a:	4770      	bx	lr

0800285c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800285c:	7a80      	ldrb	r0, [r0, #10]
    }
 800285e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002862:	4770      	bx	lr

08002864 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002864:	7a80      	ldrb	r0, [r0, #10]
    }
 8002866:	09c0      	lsrs	r0, r0, #7
 8002868:	4770      	bx	lr

0800286a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 800286a:	2000      	movs	r0, #0
 800286c:	4770      	bx	lr
	...

08002870 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002870:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002878 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002874:	4770      	bx	lr
 8002876:	bf00      	nop
 8002878:	00000000 	.word	0x00000000

0800287c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800287c:	4770      	bx	lr

0800287e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800287e:	4770      	bx	lr

08002880 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002880:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002884:	6808      	ldr	r0, [r1, #0]
 8002886:	6849      	ldr	r1, [r1, #4]
 8002888:	c303      	stmia	r3!, {r0, r1}
    }
 800288a:	4770      	bx	lr

0800288c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800288c:	4770      	bx	lr

0800288e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800288e:	4770      	bx	lr

08002890 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002890:	6041      	str	r1, [r0, #4]
    }
 8002892:	4770      	bx	lr

08002894 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002894:	4770      	bx	lr

08002896 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002896:	4770      	bx	lr

08002898 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002898:	4b06      	ldr	r3, [pc, #24]	@ (80028b4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800289a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800289e:	2300      	movs	r3, #0
 80028a0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80028a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80028a8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80028ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80028b0:	4770      	bx	lr
 80028b2:	bf00      	nop
 80028b4:	08002959 	.word	0x08002959

080028b8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80028b8:	2301      	movs	r3, #1
 80028ba:	7203      	strb	r3, [r0, #8]
    }
 80028bc:	4770      	bx	lr

080028be <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80028be:	4770      	bx	lr

080028c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80028c0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80028c2:	68c2      	ldr	r2, [r0, #12]
 80028c4:	6841      	ldr	r1, [r0, #4]
 80028c6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80028c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80028ca:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80028ce:	07d2      	lsls	r2, r2, #31
 80028d0:	bf48      	it	mi
 80028d2:	590a      	ldrmi	r2, [r1, r4]
 80028d4:	689b      	ldr	r3, [r3, #8]
    }
 80028d6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80028da:	bf48      	it	mi
 80028dc:	58d3      	ldrmi	r3, [r2, r3]
 80028de:	4718      	bx	r3

080028e0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80028e0:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 80028e2:	6840      	ldr	r0, [r0, #4]
 80028e4:	b130      	cbz	r0, 80028f4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80028e6:	689a      	ldr	r2, [r3, #8]
 80028e8:	b91a      	cbnz	r2, 80028f2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 80028ea:	68d8      	ldr	r0, [r3, #12]
 80028ec:	f000 0001 	and.w	r0, r0, #1
 80028f0:	4770      	bx	lr
 80028f2:	2001      	movs	r0, #1
    }
 80028f4:	4770      	bx	lr

080028f6 <_ZN8touchgfx12NoTransitionD0Ev>:
 80028f6:	b510      	push	{r4, lr}
 80028f8:	210c      	movs	r1, #12
 80028fa:	4604      	mov	r4, r0
 80028fc:	f01f f8d1 	bl	8021aa2 <_ZdlPvj>
 8002900:	4620      	mov	r0, r4
 8002902:	bd10      	pop	{r4, pc}

08002904 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002904:	b510      	push	{r4, lr}
 8002906:	2110      	movs	r1, #16
 8002908:	4604      	mov	r4, r0
 800290a:	f01f f8ca 	bl	8021aa2 <_ZdlPvj>
 800290e:	4620      	mov	r0, r4
 8002910:	bd10      	pop	{r4, pc}

08002912 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002912:	b510      	push	{r4, lr}
 8002914:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002918:	4604      	mov	r4, r0
 800291a:	f01f f8c2 	bl	8021aa2 <_ZdlPvj>
 800291e:	4620      	mov	r0, r4
 8002920:	bd10      	pop	{r4, pc}

08002922 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002922:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002924:	f00c fe28 	bl	800f578 <_ZN8touchgfx11Application11getInstanceEv>
 8002928:	6803      	ldr	r3, [r0, #0]
    }
 800292a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800292e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002930:	4718      	bx	r3

08002932 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002932:	b510      	push	{r4, lr}
 8002934:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002936:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800293a:	b158      	cbz	r0, 8002954 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800293c:	6803      	ldr	r3, [r0, #0]
 800293e:	68db      	ldr	r3, [r3, #12]
 8002940:	4798      	blx	r3
 8002942:	b138      	cbz	r0, 8002954 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002944:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002948:	6803      	ldr	r3, [r0, #0]
 800294a:	689b      	ldr	r3, [r3, #8]
 800294c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800294e:	2300      	movs	r3, #0
 8002950:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002954:	bd10      	pop	{r4, pc}
	...

08002958 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002958:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800295c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002960:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002962:	68b0      	ldr	r0, [r6, #8]
 8002964:	6803      	ldr	r3, [r0, #0]
 8002966:	6a1b      	ldr	r3, [r3, #32]
 8002968:	4798      	blx	r3
 800296a:	f640 63e7 	movw	r3, #3815	@ 0xee7
 800296e:	4298      	cmp	r0, r3
 8002970:	d805      	bhi.n	800297e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 8002972:	4b44      	ldr	r3, [pc, #272]	@ (8002a84 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002974:	4a44      	ldr	r2, [pc, #272]	@ (8002a88 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002976:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002978:	4844      	ldr	r0, [pc, #272]	@ (8002a8c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800297a:	f01f ffcf 	bl	802291c <__assert_func>
 800297e:	6870      	ldr	r0, [r6, #4]
 8002980:	6803      	ldr	r3, [r0, #0]
 8002982:	6a1b      	ldr	r3, [r3, #32]
 8002984:	4798      	blx	r3
 8002986:	280f      	cmp	r0, #15
 8002988:	d803      	bhi.n	8002992 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 800298a:	4b41      	ldr	r3, [pc, #260]	@ (8002a90 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 800298c:	4a3e      	ldr	r2, [pc, #248]	@ (8002a88 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800298e:	21a4      	movs	r1, #164	@ 0xa4
 8002990:	e7f2      	b.n	8002978 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002992:	68f0      	ldr	r0, [r6, #12]
 8002994:	6803      	ldr	r3, [r0, #0]
 8002996:	6a1b      	ldr	r3, [r3, #32]
 8002998:	4798      	blx	r3
 800299a:	280b      	cmp	r0, #11
 800299c:	d803      	bhi.n	80029a6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 800299e:	4b3d      	ldr	r3, [pc, #244]	@ (8002a94 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80029a0:	4a39      	ldr	r2, [pc, #228]	@ (8002a88 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80029a2:	21a5      	movs	r1, #165	@ 0xa5
 80029a4:	e7e8      	b.n	8002978 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80029a6:	f00c fde7 	bl	800f578 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80029aa:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002a9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80029ae:	3004      	adds	r0, #4
 80029b0:	f00c fe07 	bl	800f5c2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80029b4:	f8d9 0000 	ldr.w	r0, [r9]
 80029b8:	b110      	cbz	r0, 80029c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80029ba:	6803      	ldr	r3, [r0, #0]
 80029bc:	68db      	ldr	r3, [r3, #12]
 80029be:	4798      	blx	r3
    if (*currentTrans)
 80029c0:	f8d9 0000 	ldr.w	r0, [r9]
 80029c4:	b110      	cbz	r0, 80029cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80029c6:	6803      	ldr	r3, [r0, #0]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	4798      	blx	r3
    if (*currentScreen)
 80029cc:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002aa0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 80029d0:	f8d8 0000 	ldr.w	r0, [r8]
 80029d4:	b110      	cbz	r0, 80029dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80029d6:	6803      	ldr	r3, [r0, #0]
 80029d8:	695b      	ldr	r3, [r3, #20]
 80029da:	4798      	blx	r3
    if (*currentPresenter)
 80029dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80029e0:	b110      	cbz	r0, 80029e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80029e2:	6803      	ldr	r3, [r0, #0]
 80029e4:	685b      	ldr	r3, [r3, #4]
 80029e6:	4798      	blx	r3
    if (*currentScreen)
 80029e8:	f8d8 0000 	ldr.w	r0, [r8]
 80029ec:	b110      	cbz	r0, 80029f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80029ee:	6803      	ldr	r3, [r0, #0]
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	4798      	blx	r3
    if (*currentPresenter)
 80029f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80029f8:	b110      	cbz	r0, 8002a00 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80029fa:	6803      	ldr	r3, [r0, #0]
 80029fc:	689b      	ldr	r3, [r3, #8]
 80029fe:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002a00:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002a02:	6803      	ldr	r3, [r0, #0]
 8002a04:	2100      	movs	r1, #0
 8002a06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a08:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002a0a:	f04f 0b00 	mov.w	fp, #0
 8002a0e:	4b22      	ldr	r3, [pc, #136]	@ (8002a98 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002a10:	f8c0 b004 	str.w	fp, [r0, #4]
 8002a14:	4604      	mov	r4, r0
 8002a16:	f880 b008 	strb.w	fp, [r0, #8]
 8002a1a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a1c:	68b0      	ldr	r0, [r6, #8]
 8002a1e:	6803      	ldr	r3, [r0, #0]
 8002a20:	4659      	mov	r1, fp
 8002a22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a24:	4798      	blx	r3
 8002a26:	4605      	mov	r5, r0
 8002a28:	f000 fb0a 	bl	8003040 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a2c:	6870      	ldr	r0, [r6, #4]
 8002a2e:	6803      	ldr	r3, [r0, #0]
 8002a30:	4659      	mov	r1, fp
 8002a32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a34:	4798      	blx	r3
 8002a36:	4629      	mov	r1, r5
 8002a38:	4606      	mov	r6, r0
 8002a3a:	f000 fac5 	bl	8002fc8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002a3e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002a40:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002a44:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002a48:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002a4c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002a50:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002a52:	f8c6 a008 	str.w	sl, [r6, #8]
 8002a56:	4628      	mov	r0, r5
 8002a58:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002a5a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002a5c:	4798      	blx	r3
    newPresenter->activate();
 8002a5e:	6833      	ldr	r3, [r6, #0]
 8002a60:	4630      	mov	r0, r6
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002a66:	4621      	mov	r1, r4
 8002a68:	4628      	mov	r0, r5
 8002a6a:	f00e ffc1 	bl	80119f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002a6e:	6823      	ldr	r3, [r4, #0]
 8002a70:	4620      	mov	r0, r4
 8002a72:	691b      	ldr	r3, [r3, #16]
 8002a74:	4798      	blx	r3
    newTransition->invalidate();
 8002a76:	6823      	ldr	r3, [r4, #0]
 8002a78:	695b      	ldr	r3, [r3, #20]
 8002a7a:	4620      	mov	r0, r4
}
 8002a7c:	b001      	add	sp, #4
 8002a7e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a82:	4718      	bx	r3
 8002a84:	0802434d 	.word	0x0802434d
 8002a88:	080243db 	.word	0x080243db
 8002a8c:	080244ad 	.word	0x080244ad
 8002a90:	080244f4 	.word	0x080244f4
 8002a94:	08024597 	.word	0x08024597
 8002a98:	08024cb0 	.word	0x08024cb0
 8002a9c:	20014040 	.word	0x20014040
 8002aa0:	2001403c 	.word	0x2001403c

08002aa4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002aa4:	4b04      	ldr	r3, [pc, #16]	@ (8002ab8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002aac:	b10a      	cbz	r2, 8002ab2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002aae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002ab0:	b900      	cbnz	r0, 8002ab4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002ab2:	6898      	ldr	r0, [r3, #8]
    }
 8002ab4:	4770      	bx	lr
 8002ab6:	bf00      	nop
 8002ab8:	20013ff8 	.word	0x20013ff8

08002abc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002abc:	b570      	push	{r4, r5, r6, lr}
 8002abe:	4604      	mov	r4, r0
 8002ac0:	460d      	mov	r5, r1
 8002ac2:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002ac4:	f00c fe1a 	bl	800f6fc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002ac8:	4a10      	ldr	r2, [pc, #64]	@ (8002b0c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002aca:	6014      	str	r4, [r2, #0]
      model(m)
 8002acc:	4a10      	ldr	r2, [pc, #64]	@ (8002b10 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002ace:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 8002ad0:	4a10      	ldr	r2, [pc, #64]	@ (8002b14 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 8002ad8:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8002adc:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 8002ae0:	4b0d      	ldr	r3, [pc, #52]	@ (8002b18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002ae2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002ae4:	6803      	ldr	r3, [r0, #0]
 8002ae6:	2101      	movs	r1, #1
 8002ae8:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002aea:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002aee:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002af0:	f7ff ffd8 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8002af4:	f016 fef1 	bl	80198da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002af8:	f7ff ffd4 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8002afc:	f016 ff68 	bl	80199d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002b00:	f7ff ffd0 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8002b04:	f016 ff70 	bl	80199e8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8002b08:	4620      	mov	r0, r4
 8002b0a:	bd70      	pop	{r4, r5, r6, pc}
 8002b0c:	2001404c 	.word	0x2001404c
 8002b10:	08024c5c 	.word	0x08024c5c
 8002b14:	08024c44 	.word	0x08024c44
 8002b18:	20013ff8 	.word	0x20013ff8

08002b1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b1c:	4b06      	ldr	r3, [pc, #24]	@ (8002b38 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002b1e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002b22:	2300      	movs	r3, #0
 8002b24:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002b28:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002b2c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002b30:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002b34:	4770      	bx	lr
 8002b36:	bf00      	nop
 8002b38:	08002959 	.word	0x08002959

08002b3c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002b3c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002b3e:	4770      	bx	lr

08002b40 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002b40:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002b42:	4770      	bx	lr

08002b44 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002b44:	4770      	bx	lr

08002b46 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002b46:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8002b48:	880b      	ldrh	r3, [r1, #0]
{
 8002b4a:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002b4c:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8002b4e:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002b50:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8002b52:	b29b      	uxth	r3, r3
    return pixels + offset;
 8002b54:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8002b58:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8002b5c:	4418      	add	r0, r3
 8002b5e:	bd10      	pop	{r4, pc}

08002b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002b60:	b510      	push	{r4, lr}
 8002b62:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002b64:	b1ba      	cbz	r2, 8002b96 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002b66:	7b10      	ldrb	r0, [r2, #12]
 8002b68:	b168      	cbz	r0, 8002b86 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002b6a:	7b53      	ldrb	r3, [r2, #13]
 8002b6c:	7ad2      	ldrb	r2, [r2, #11]
 8002b6e:	021b      	lsls	r3, r3, #8
 8002b70:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002b74:	431a      	orrs	r2, r3
 8002b76:	6a23      	ldr	r3, [r4, #32]
 8002b78:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002b7c:	881a      	ldrh	r2, [r3, #0]
 8002b7e:	428a      	cmp	r2, r1
 8002b80:	d102      	bne.n	8002b88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002b82:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002b86:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002b88:	d805      	bhi.n	8002b96 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002b8a:	3801      	subs	r0, #1
 8002b8c:	b280      	uxth	r0, r0
 8002b8e:	3304      	adds	r3, #4
 8002b90:	2800      	cmp	r0, #0
 8002b92:	d1f3      	bne.n	8002b7c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002b94:	e7f7      	b.n	8002b86 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002b96:	2000      	movs	r0, #0
 8002b98:	e7f5      	b.n	8002b86 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002b9a <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002b9a:	b510      	push	{r4, lr}
 8002b9c:	212c      	movs	r1, #44	@ 0x2c
 8002b9e:	4604      	mov	r4, r0
 8002ba0:	f01e ff7f 	bl	8021aa2 <_ZdlPvj>
 8002ba4:	4620      	mov	r0, r4
 8002ba6:	bd10      	pop	{r4, pc}

08002ba8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002ba8:	b530      	push	{r4, r5, lr}
 8002baa:	b08b      	sub	sp, #44	@ 0x2c
 8002bac:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002bae:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002bb2:	9508      	str	r5, [sp, #32]
 8002bb4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002bb8:	9507      	str	r5, [sp, #28]
 8002bba:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002bbe:	9506      	str	r5, [sp, #24]
 8002bc0:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002bc4:	9505      	str	r5, [sp, #20]
 8002bc6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002bca:	9504      	str	r5, [sp, #16]
 8002bcc:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002bd0:	9503      	str	r5, [sp, #12]
 8002bd2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002bd6:	9502      	str	r5, [sp, #8]
 8002bd8:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002bdc:	9501      	str	r5, [sp, #4]
 8002bde:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002be2:	9500      	str	r5, [sp, #0]
 8002be4:	f00e fad2 	bl	801118c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002be8:	4b06      	ldr	r3, [pc, #24]	@ (8002c04 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002bea:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002bec:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002bee:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002bf0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002bf2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002bf4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002bf6:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002bf8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002bfa:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002bfc:	4620      	mov	r0, r4
 8002bfe:	b00b      	add	sp, #44	@ 0x2c
 8002c00:	bd30      	pop	{r4, r5, pc}
 8002c02:	bf00      	nop
 8002c04:	08024cd4 	.word	0x08024cd4

08002c08 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002c08:	4770      	bx	lr

08002c0a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002c0a:	4770      	bx	lr

08002c0c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002c0c:	4770      	bx	lr

08002c0e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002c0e:	4770      	bx	lr

08002c10 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002c10:	4770      	bx	lr

08002c12 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8002c12:	4770      	bx	lr

08002c14 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8002c14:	4770      	bx	lr

08002c16 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002c16:	b510      	push	{r4, lr}
}
 8002c18:	216c      	movs	r1, #108	@ 0x6c
Screen1ViewBase::~Screen1ViewBase()
 8002c1a:	4604      	mov	r4, r0
}
 8002c1c:	f01e ff41 	bl	8021aa2 <_ZdlPvj>
 8002c20:	4620      	mov	r0, r4
 8002c22:	bd10      	pop	{r4, pc}

08002c24 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 8002c24:	b538      	push	{r3, r4, r5, lr}
 8002c26:	4604      	mov	r4, r0
        : presenter(0)
 8002c28:	f00e fd36 	bl	8011698 <_ZN8touchgfx6ScreenC1Ev>
 8002c2c:	2300      	movs	r3, #0
 8002c2e:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
 8002c32:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
          nextSibling(0),
 8002c36:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
          cachedAbsX(0),
 8002c3a:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
 8002c3e:	63e3      	str	r3, [r4, #60]	@ 0x3c
        : color(col)
 8002c40:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002c42:	4a0f      	ldr	r2, [pc, #60]	@ (8002c80 <_ZN15Screen1ViewBaseC1Ev+0x5c>)
 8002c44:	6022      	str	r2, [r4, #0]
          touchable(false),
 8002c46:	f44f 7380 	mov.w	r3, #256	@ 0x100
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002c4a:	4a0e      	ldr	r2, [pc, #56]	@ (8002c84 <_ZN15Screen1ViewBaseC1Ev+0x60>)
 8002c4c:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
    __background.setPosition(0, 0, 240, 320);
 8002c50:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8002c54:	23ff      	movs	r3, #255	@ 0xff
 8002c56:	6422      	str	r2, [r4, #64]	@ 0x40
 8002c58:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        setWidth(width);
 8002c5c:	4628      	mov	r0, r5
 8002c5e:	21f0      	movs	r1, #240	@ 0xf0
 8002c60:	f7fe fb70 	bl	8001344 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002c64:	4628      	mov	r0, r5
 8002c66:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002c6a:	f7fe fb6d 	bl	8001348 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002c6e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002c72:	1d20      	adds	r0, r4, #4
 8002c74:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002c76:	4629      	mov	r1, r5
 8002c78:	f007 f9f0 	bl	800a05c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002c7c:	4620      	mov	r0, r4
 8002c7e:	bd38      	pop	{r3, r4, r5, pc}
 8002c80:	08024d3c 	.word	0x08024d3c
 8002c84:	08025194 	.word	0x08025194

08002c88 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002c88:	4770      	bx	lr
	...

08002c8c <_Z23getFont_verdana_10_4bppv>:
{
 8002c8c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002c8e:	4d16      	ldr	r5, [pc, #88]	@ (8002ce8 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002c90:	682c      	ldr	r4, [r5, #0]
 8002c92:	f014 0401 	ands.w	r4, r4, #1
{
 8002c96:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002c98:	f3bf 8f5b 	dmb	ish
 8002c9c:	d120      	bne.n	8002ce0 <_Z23getFont_verdana_10_4bppv+0x54>
 8002c9e:	4628      	mov	r0, r5
 8002ca0:	f01e ff01 	bl	8021aa6 <__cxa_guard_acquire>
 8002ca4:	b1e0      	cbz	r0, 8002ce0 <_Z23getFont_verdana_10_4bppv+0x54>
 8002ca6:	233f      	movs	r3, #63	@ 0x3f
 8002ca8:	9309      	str	r3, [sp, #36]	@ 0x24
 8002caa:	4b10      	ldr	r3, [pc, #64]	@ (8002cec <_Z23getFont_verdana_10_4bppv+0x60>)
 8002cac:	9308      	str	r3, [sp, #32]
 8002cae:	4b10      	ldr	r3, [pc, #64]	@ (8002cf0 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002cb0:	4910      	ldr	r1, [pc, #64]	@ (8002cf4 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002cb2:	4811      	ldr	r0, [pc, #68]	@ (8002cf8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002cb4:	940a      	str	r4, [sp, #40]	@ 0x28
 8002cb6:	2201      	movs	r2, #1
 8002cb8:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002cbc:	2304      	movs	r3, #4
 8002cbe:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002cc2:	230a      	movs	r3, #10
 8002cc4:	9300      	str	r3, [sp, #0]
 8002cc6:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002cca:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002cce:	9405      	str	r4, [sp, #20]
 8002cd0:	f7ff ff6a 	bl	8002ba8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002cd4:	4809      	ldr	r0, [pc, #36]	@ (8002cfc <_Z23getFont_verdana_10_4bppv+0x70>)
 8002cd6:	f01f fe3f 	bl	8022958 <atexit>
 8002cda:	4628      	mov	r0, r5
 8002cdc:	f01e feef 	bl	8021abe <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002ce0:	4805      	ldr	r0, [pc, #20]	@ (8002cf8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002ce2:	b00f      	add	sp, #60	@ 0x3c
 8002ce4:	bd30      	pop	{r4, r5, pc}
 8002ce6:	bf00      	nop
 8002ce8:	20003144 	.word	0x20003144
 8002cec:	08025c00 	.word	0x08025c00
 8002cf0:	08025c0c 	.word	0x08025c0c
 8002cf4:	08025bd0 	.word	0x08025bd0
 8002cf8:	20003148 	.word	0x20003148
 8002cfc:	08002c89 	.word	0x08002c89

08002d00 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002d00:	4770      	bx	lr
	...

08002d04 <_Z23getFont_verdana_20_4bppv>:
{
 8002d04:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002d06:	4d16      	ldr	r5, [pc, #88]	@ (8002d60 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002d08:	682c      	ldr	r4, [r5, #0]
 8002d0a:	f014 0401 	ands.w	r4, r4, #1
{
 8002d0e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002d10:	f3bf 8f5b 	dmb	ish
 8002d14:	d120      	bne.n	8002d58 <_Z23getFont_verdana_20_4bppv+0x54>
 8002d16:	4628      	mov	r0, r5
 8002d18:	f01e fec5 	bl	8021aa6 <__cxa_guard_acquire>
 8002d1c:	b1e0      	cbz	r0, 8002d58 <_Z23getFont_verdana_20_4bppv+0x54>
 8002d1e:	233f      	movs	r3, #63	@ 0x3f
 8002d20:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d22:	4b10      	ldr	r3, [pc, #64]	@ (8002d64 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002d24:	9308      	str	r3, [sp, #32]
 8002d26:	4b10      	ldr	r3, [pc, #64]	@ (8002d68 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002d28:	4910      	ldr	r1, [pc, #64]	@ (8002d6c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002d2a:	4811      	ldr	r0, [pc, #68]	@ (8002d70 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002d2c:	940a      	str	r4, [sp, #40]	@ 0x28
 8002d2e:	2201      	movs	r2, #1
 8002d30:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002d34:	2304      	movs	r3, #4
 8002d36:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002d3a:	2314      	movs	r3, #20
 8002d3c:	9300      	str	r3, [sp, #0]
 8002d3e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002d42:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002d46:	9405      	str	r4, [sp, #20]
 8002d48:	f7ff ff2e 	bl	8002ba8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002d4c:	4809      	ldr	r0, [pc, #36]	@ (8002d74 <_Z23getFont_verdana_20_4bppv+0x70>)
 8002d4e:	f01f fe03 	bl	8022958 <atexit>
 8002d52:	4628      	mov	r0, r5
 8002d54:	f01e feb3 	bl	8021abe <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002d58:	4805      	ldr	r0, [pc, #20]	@ (8002d70 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002d5a:	b00f      	add	sp, #60	@ 0x3c
 8002d5c:	bd30      	pop	{r4, r5, pc}
 8002d5e:	bf00      	nop
 8002d60:	20003174 	.word	0x20003174
 8002d64:	08025c04 	.word	0x08025c04
 8002d68:	08025c10 	.word	0x08025c10
 8002d6c:	08025be0 	.word	0x08025be0
 8002d70:	20003178 	.word	0x20003178
 8002d74:	08002d01 	.word	0x08002d01

08002d78 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002d78:	4770      	bx	lr
	...

08002d7c <_Z23getFont_verdana_40_4bppv>:
{
 8002d7c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002d7e:	4d16      	ldr	r5, [pc, #88]	@ (8002dd8 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002d80:	682c      	ldr	r4, [r5, #0]
 8002d82:	f014 0401 	ands.w	r4, r4, #1
{
 8002d86:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002d88:	f3bf 8f5b 	dmb	ish
 8002d8c:	d120      	bne.n	8002dd0 <_Z23getFont_verdana_40_4bppv+0x54>
 8002d8e:	4628      	mov	r0, r5
 8002d90:	f01e fe89 	bl	8021aa6 <__cxa_guard_acquire>
 8002d94:	b1e0      	cbz	r0, 8002dd0 <_Z23getFont_verdana_40_4bppv+0x54>
 8002d96:	233f      	movs	r3, #63	@ 0x3f
 8002d98:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d9a:	4b10      	ldr	r3, [pc, #64]	@ (8002ddc <_Z23getFont_verdana_40_4bppv+0x60>)
 8002d9c:	9308      	str	r3, [sp, #32]
 8002d9e:	4b10      	ldr	r3, [pc, #64]	@ (8002de0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002da0:	4910      	ldr	r1, [pc, #64]	@ (8002de4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002da2:	4811      	ldr	r0, [pc, #68]	@ (8002de8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002da4:	940a      	str	r4, [sp, #40]	@ 0x28
 8002da6:	2201      	movs	r2, #1
 8002da8:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002dac:	2304      	movs	r3, #4
 8002dae:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002db2:	2328      	movs	r3, #40	@ 0x28
 8002db4:	9300      	str	r3, [sp, #0]
 8002db6:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002dba:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002dbe:	9405      	str	r4, [sp, #20]
 8002dc0:	f7ff fef2 	bl	8002ba8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002dc4:	4809      	ldr	r0, [pc, #36]	@ (8002dec <_Z23getFont_verdana_40_4bppv+0x70>)
 8002dc6:	f01f fdc7 	bl	8022958 <atexit>
 8002dca:	4628      	mov	r0, r5
 8002dcc:	f01e fe77 	bl	8021abe <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002dd0:	4805      	ldr	r0, [pc, #20]	@ (8002de8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002dd2:	b00f      	add	sp, #60	@ 0x3c
 8002dd4:	bd30      	pop	{r4, r5, pc}
 8002dd6:	bf00      	nop
 8002dd8:	200031a4 	.word	0x200031a4
 8002ddc:	08025c08 	.word	0x08025c08
 8002de0:	08025c14 	.word	0x08025c14
 8002de4:	08025bf0 	.word	0x08025bf0
 8002de8:	200031a8 	.word	0x200031a8
 8002dec:	08002d79 	.word	0x08002d79

08002df0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8002df0:	2000      	movs	r0, #0
 8002df2:	4770      	bx	lr

08002df4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8002df4:	2000      	movs	r0, #0
 8002df6:	4770      	bx	lr

08002df8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002df8:	b40e      	push	{r1, r2, r3}
 8002dfa:	b503      	push	{r0, r1, lr}
 8002dfc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002dfe:	2100      	movs	r1, #0
{
 8002e00:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002e04:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002e06:	f00d fc3f 	bl	8010688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002e0a:	b002      	add	sp, #8
 8002e0c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002e10:	b003      	add	sp, #12
 8002e12:	4770      	bx	lr

08002e14 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002e14:	b40c      	push	{r2, r3}
 8002e16:	b507      	push	{r0, r1, r2, lr}
 8002e18:	ab04      	add	r3, sp, #16
 8002e1a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002e1e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002e20:	f00d fc32 	bl	8010688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002e24:	b003      	add	sp, #12
 8002e26:	f85d eb04 	ldr.w	lr, [sp], #4
 8002e2a:	b002      	add	sp, #8
 8002e2c:	4770      	bx	lr
	...

08002e30 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002e30:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8002e32:	b510      	push	{r4, lr}
 8002e34:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002e36:	b373      	cbz	r3, 8002e96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002e38:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8002e3a:	b92b      	cbnz	r3, 8002e48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002e3c:	4b18      	ldr	r3, [pc, #96]	@ (8002ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002e3e:	4a19      	ldr	r2, [pc, #100]	@ (8002ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002e40:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002e42:	4819      	ldr	r0, [pc, #100]	@ (8002ea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002e44:	f01f fd6a 	bl	802291c <__assert_func>
            return buffer[pos];
 8002e48:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8002e4a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002e4e:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8002e50:	b30b      	cbz	r3, 8002e96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002e52:	f00f fac0 	bl	80123d6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002e56:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8002e58:	2b01      	cmp	r3, #1
 8002e5a:	d803      	bhi.n	8002e64 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002e5c:	4b13      	ldr	r3, [pc, #76]	@ (8002eac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002e5e:	4a14      	ldr	r2, [pc, #80]	@ (8002eb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002e60:	21cb      	movs	r1, #203	@ 0xcb
 8002e62:	e7ee      	b.n	8002e42 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002e64:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002e66:	1c53      	adds	r3, r2, #1
 8002e68:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002e6a:	2b09      	cmp	r3, #9
 8002e6c:	4619      	mov	r1, r3
 8002e6e:	bf88      	it	hi
 8002e70:	f1a3 010a 	subhi.w	r1, r3, #10
 8002e74:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002e78:	f640 103f 	movw	r0, #2367	@ 0x93f
 8002e7c:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8002e7e:	4281      	cmp	r1, r0
 8002e80:	d109      	bne.n	8002e96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002e82:	2b0a      	cmp	r3, #10
 8002e84:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002e88:	bf28      	it	cs
 8002e8a:	2300      	movcs	r3, #0
 8002e8c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002e90:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8002e92:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8002e94:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002e96:	4620      	mov	r0, r4
}
 8002e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002e9c:	f00f b99e 	b.w	80121dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002ea0:	0802463a 	.word	0x0802463a
 8002ea4:	08024643 	.word	0x08024643
 8002ea8:	080246ee 	.word	0x080246ee
 8002eac:	08024738 	.word	0x08024738
 8002eb0:	08024746 	.word	0x08024746

08002eb4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002eb4:	f00f b959 	b.w	801216a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002eb8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002eb8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002eba:	bb18      	cbnz	r0, 8002f04 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002ebc:	4b12      	ldr	r3, [pc, #72]	@ (8002f08 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002ebe:	4813      	ldr	r0, [pc, #76]	@ (8002f0c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002ec0:	681c      	ldr	r4, [r3, #0]
 8002ec2:	4913      	ldr	r1, [pc, #76]	@ (8002f10 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002ec4:	b1b4      	cbz	r4, 8002ef4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002ec6:	6822      	ldr	r2, [r4, #0]
 8002ec8:	4422      	add	r2, r4
 8002eca:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002ecc:	6862      	ldr	r2, [r4, #4]
 8002ece:	4422      	add	r2, r4
 8002ed0:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002ed2:	68a2      	ldr	r2, [r4, #8]
 8002ed4:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002ed6:	4b0f      	ldr	r3, [pc, #60]	@ (8002f14 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002ed8:	2200      	movs	r2, #0
 8002eda:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002edc:	f000 f82a 	bl	8002f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002ee0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002ee2:	f000 f825 	bl	8002f30 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002ee6:	4b0c      	ldr	r3, [pc, #48]	@ (8002f18 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002ee8:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002eea:	4b0c      	ldr	r3, [pc, #48]	@ (8002f1c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002eec:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002eee:	4b0c      	ldr	r3, [pc, #48]	@ (8002f20 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002ef0:	8018      	strh	r0, [r3, #0]
    }
}
 8002ef2:	e007      	b.n	8002f04 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002ef4:	4b0b      	ldr	r3, [pc, #44]	@ (8002f24 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002ef6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002ef8:	4b0b      	ldr	r3, [pc, #44]	@ (8002f28 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002efa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002efc:	4b0b      	ldr	r3, [pc, #44]	@ (8002f2c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002efe:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002f00:	2c00      	cmp	r4, #0
 8002f02:	d1e8      	bne.n	8002ed6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002f04:	bd38      	pop	{r3, r4, r5, pc}
 8002f06:	bf00      	nop
 8002f08:	200031e0 	.word	0x200031e0
 8002f0c:	200031d8 	.word	0x200031d8
 8002f10:	200031d4 	.word	0x200031d4
 8002f14:	200031dc 	.word	0x200031dc
 8002f18:	20014050 	.word	0x20014050
 8002f1c:	20014058 	.word	0x20014058
 8002f20:	20014054 	.word	0x20014054
 8002f24:	08025c1c 	.word	0x08025c1c
 8002f28:	08025c18 	.word	0x08025c18
 8002f2c:	08025c20 	.word	0x08025c20

08002f30 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8002f30:	2000      	movs	r0, #0
 8002f32:	4770      	bx	lr

08002f34 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002f34:	4800      	ldr	r0, [pc, #0]	@ (8002f38 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002f36:	4770      	bx	lr
 8002f38:	200031e4 	.word	0x200031e4

08002f3c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002f3c:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002f3e:	f7ff fee1 	bl	8002d04 <_Z23getFont_verdana_20_4bppv>
};
 8002f42:	4c04      	ldr	r4, [pc, #16]	@ (8002f54 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002f44:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002f46:	f7ff ff19 	bl	8002d7c <_Z23getFont_verdana_40_4bppv>
};
 8002f4a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002f4c:	f7ff fe9e 	bl	8002c8c <_Z23getFont_verdana_10_4bppv>
};
 8002f50:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002f52:	bd10      	pop	{r4, pc}
 8002f54:	200031e4 	.word	0x200031e4

08002f58 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8002f58:	b510      	push	{r4, lr}
    pointArray = 0;
 8002f5a:	2400      	movs	r4, #0
 8002f5c:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8002f5e:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8002f60:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8002f62:	601c      	str	r4, [r3, #0]
}
 8002f64:	bd10      	pop	{r4, pc}

08002f66 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002f66:	4770      	bx	lr

08002f68 <_ZN19FrontendApplicationD0Ev>:
 8002f68:	b510      	push	{r4, lr}
 8002f6a:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002f6e:	4604      	mov	r4, r0
 8002f70:	f01e fd97 	bl	8021aa2 <_ZdlPvj>
 8002f74:	4620      	mov	r0, r4
 8002f76:	bd10      	pop	{r4, pc}

08002f78 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002f78:	b510      	push	{r4, lr}
 8002f7a:	4604      	mov	r4, r0
    {
        model.tick();
 8002f7c:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8002f80:	f000 f813 	bl	8002faa <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002f84:	4620      	mov	r0, r4
    }
 8002f86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002f8a:	f00c bb77 	b.w	800f67c <_ZN8touchgfx11Application15handleTickEventEv>
	...

08002f90 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002f90:	b510      	push	{r4, lr}
 8002f92:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002f94:	f7ff fd92 	bl	8002abc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002f98:	4b01      	ldr	r3, [pc, #4]	@ (8002fa0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002f9a:	6023      	str	r3, [r4, #0]
{

}
 8002f9c:	4620      	mov	r0, r4
 8002f9e:	bd10      	pop	{r4, pc}
 8002fa0:	08024d70 	.word	0x08024d70

08002fa4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	6002      	str	r2, [r0, #0]
{

}
 8002fa8:	4770      	bx	lr

08002faa <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002faa:	4770      	bx	lr

08002fac <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8002fac:	4770      	bx	lr

08002fae <_ZThn4_N16Screen1PresenterD1Ev>:
 8002fae:	3804      	subs	r0, #4
 8002fb0:	4770      	bx	lr

08002fb2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002fb2:	4770      	bx	lr

08002fb4 <_ZN16Screen1PresenterD0Ev>:
 8002fb4:	b510      	push	{r4, lr}
 8002fb6:	2110      	movs	r1, #16
 8002fb8:	4604      	mov	r4, r0
 8002fba:	f01e fd72 	bl	8021aa2 <_ZdlPvj>
 8002fbe:	4620      	mov	r0, r4
 8002fc0:	bd10      	pop	{r4, pc}

08002fc2 <_ZThn4_N16Screen1PresenterD0Ev>:
 8002fc2:	f1a0 0004 	sub.w	r0, r0, #4
 8002fc6:	e7f5      	b.n	8002fb4 <_ZN16Screen1PresenterD0Ev>

08002fc8 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8002fc8:	2200      	movs	r2, #0
 8002fca:	6082      	str	r2, [r0, #8]
    : view(v)
 8002fcc:	4a02      	ldr	r2, [pc, #8]	@ (8002fd8 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8002fce:	6002      	str	r2, [r0, #0]
 8002fd0:	3218      	adds	r2, #24
 8002fd2:	6042      	str	r2, [r0, #4]
 8002fd4:	60c1      	str	r1, [r0, #12]
}
 8002fd6:	4770      	bx	lr
 8002fd8:	08024dc4 	.word	0x08024dc4

08002fdc <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002fdc:	4770      	bx	lr
	...

08002fe0 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002fe0:	b510      	push	{r4, lr}
 8002fe2:	4b03      	ldr	r3, [pc, #12]	@ (8002ff0 <_ZN11Screen1ViewD1Ev+0x10>)
 8002fe4:	6003      	str	r3, [r0, #0]
 8002fe6:	4604      	mov	r4, r0
 8002fe8:	f7ff fe13 	bl	8002c12 <_ZN15Screen1ViewBaseD1Ev>
 8002fec:	4620      	mov	r0, r4
 8002fee:	bd10      	pop	{r4, pc}
 8002ff0:	08024dec 	.word	0x08024dec

08002ff4 <_ZN11Screen1ViewD0Ev>:
 8002ff4:	b510      	push	{r4, lr}
 8002ff6:	4604      	mov	r4, r0
 8002ff8:	f7ff fff2 	bl	8002fe0 <_ZN11Screen1ViewD1Ev>
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	f640 61e8 	movw	r1, #3816	@ 0xee8
 8003002:	f01e fd4e 	bl	8021aa2 <_ZdlPvj>
 8003006:	4620      	mov	r0, r4
 8003008:	bd10      	pop	{r4, pc}

0800300a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800300a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800300e:	461d      	mov	r5, r3
        setX(x);
 8003010:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003012:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8003016:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003018:	4604      	mov	r4, r0
 800301a:	4616      	mov	r6, r2
        setX(x);
 800301c:	4798      	blx	r3
        setY(y);
 800301e:	6823      	ldr	r3, [r4, #0]
 8003020:	4631      	mov	r1, r6
 8003022:	4620      	mov	r0, r4
 8003024:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003026:	4798      	blx	r3
        setWidth(width);
 8003028:	6823      	ldr	r3, [r4, #0]
 800302a:	4629      	mov	r1, r5
 800302c:	4620      	mov	r0, r4
 800302e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003030:	4798      	blx	r3
        setHeight(height);
 8003032:	6823      	ldr	r3, [r4, #0]
 8003034:	4639      	mov	r1, r7
 8003036:	4620      	mov	r0, r4
 8003038:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 800303a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 800303e:	4718      	bx	r3

08003040 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003040:	b510      	push	{r4, lr}
 8003042:	4604      	mov	r4, r0
 8003044:	f7ff fdee 	bl	8002c24 <_ZN15Screen1ViewBaseC1Ev>
 8003048:	4620      	mov	r0, r4
 800304a:	4b0c      	ldr	r3, [pc, #48]	@ (800307c <_ZN11Screen1ViewC1Ev+0x3c>)
 800304c:	f840 3b6c 	str.w	r3, [r0], #108
 8003050:	f009 fe4c 	bl	800ccec <_ZN8touchgfx6CircleC1Ev>
 8003054:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
 8003058:	f7fe fa58 	bl	800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800305c:	4b08      	ldr	r3, [pc, #32]	@ (8003080 <_ZN11Screen1ViewC1Ev+0x40>)
 800305e:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8003062:	3324      	adds	r3, #36	@ 0x24
 8003064:	2200      	movs	r2, #0
 8003066:	f8c4 30bc 	str.w	r3, [r4, #188]	@ 0xbc
 800306a:	2314      	movs	r3, #20
 800306c:	f8c4 20c0 	str.w	r2, [r4, #192]	@ 0xc0
 8003070:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
 8003074:	f884 20d4 	strb.w	r2, [r4, #212]	@ 0xd4
}
 8003078:	4620      	mov	r0, r4
 800307a:	bd10      	pop	{r4, pc}
 800307c:	08024dec 	.word	0x08024dec
 8003080:	08024f54 	.word	0x08024f54

08003084 <_Z9uartPrintPKc>:
{
 8003084:	b510      	push	{r4, lr}
 8003086:	4604      	mov	r4, r0
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8003088:	f7fd f8b2 	bl	80001f0 <strlen>
 800308c:	4621      	mov	r1, r4
 800308e:	b282      	uxth	r2, r0
}
 8003090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8003094:	4802      	ldr	r0, [pc, #8]	@ (80030a0 <_Z9uartPrintPKc+0x1c>)
 8003096:	f04f 33ff 	mov.w	r3, #4294967295
 800309a:	f003 bb68 	b.w	800676e <HAL_UART_Transmit>
 800309e:	bf00      	nop
 80030a0:	20002f0c 	.word	0x20002f0c

080030a4 <_ZN11Screen1View15handleTickEventEv>:
    }

}

void Screen1View::handleTickEvent()
{
 80030a4:	b5f0      	push	{r4, r5, r6, r7, lr}

	//Xu ly hinh tron
    if (isScaling){
 80030a6:	f890 30d4 	ldrb.w	r3, [r0, #212]	@ 0xd4
{
 80030aa:	b08f      	sub	sp, #60	@ 0x3c
 80030ac:	4604      	mov	r4, r0
    if (isScaling){
 80030ae:	b383      	cbz	r3, 8003112 <_ZN11Screen1View15handleTickEventEv+0x6e>
    	int dentaTick = HAL_GetTick() - startTime;
 80030b0:	4d19      	ldr	r5, [pc, #100]	@ (8003118 <_ZN11Screen1View15handleTickEventEv+0x74>)
 80030b2:	f000 fbdb 	bl	800386c <HAL_GetTick>
 80030b6:	682b      	ldr	r3, [r5, #0]
 80030b8:	1ac3      	subs	r3, r0, r3

    	//Xu ly voi denta
    	if(dentaTick <= 1000){
 80030ba:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80030be:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
 80030c2:	dc11      	bgt.n	80030e8 <_ZN11Screen1View15handleTickEventEv+0x44>
    		int newRadius = currentRadius - currentRadius * dentaTick / 1000;
 80030c4:	f8d4 20d0 	ldr.w	r2, [r4, #208]	@ 0xd0
 80030c8:	4914      	ldr	r1, [pc, #80]	@ (800311c <_ZN11Screen1View15handleTickEventEv+0x78>)
 80030ca:	4353      	muls	r3, r2
 80030cc:	fb93 f3f1 	sdiv	r3, r3, r1
 80030d0:	4413      	add	r3, r2
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 80030d2:	015b      	lsls	r3, r3, #5
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80030d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    		myCircle.setRadius(newRadius);
    		myCircle.invalidate();
 80030d8:	4630      	mov	r0, r6
 80030da:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    		char msg1[50];
    		snprintf(msg1, sizeof(msg1), "lastTime = %d\n", lastTime);
    		uartPrint(msg1);
    	}
    }
}
 80030de:	b00f      	add	sp, #60	@ 0x3c
 80030e0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    		myCircle.invalidate();
 80030e4:	f00a baf4 	b.w	800d6d0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    		isScaling = false;
 80030e8:	2700      	movs	r7, #0
 80030ea:	f884 70d4 	strb.w	r7, [r4, #212]	@ 0xd4
    		int lastTime = HAL_GetTick() - startTime;
 80030ee:	f000 fbbd 	bl	800386c <HAL_GetTick>
 80030f2:	682d      	ldr	r5, [r5, #0]
        visible = vis;
 80030f4:	f884 7091 	strb.w	r7, [r4, #145]	@ 0x91
 80030f8:	1b45      	subs	r5, r0, r5
    		myCircle.invalidate();
 80030fa:	4630      	mov	r0, r6
 80030fc:	f00a fae8 	bl	800d6d0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    		snprintf(msg1, sizeof(msg1), "lastTime = %d\n", lastTime);
 8003100:	4a07      	ldr	r2, [pc, #28]	@ (8003120 <_ZN11Screen1View15handleTickEventEv+0x7c>)
 8003102:	462b      	mov	r3, r5
 8003104:	2132      	movs	r1, #50	@ 0x32
 8003106:	a801      	add	r0, sp, #4
 8003108:	f01f fdcc 	bl	8022ca4 <sniprintf>
    		uartPrint(msg1);
 800310c:	a801      	add	r0, sp, #4
 800310e:	f7ff ffb9 	bl	8003084 <_Z9uartPrintPKc>
}
 8003112:	b00f      	add	sp, #60	@ 0x3c
 8003114:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003116:	bf00      	nop
 8003118:	200031f0 	.word	0x200031f0
 800311c:	fffffc18 	.word	0xfffffc18
 8003120:	08024818 	.word	0x08024818

08003124 <_ZN11Screen1View11setupScreenEv>:
{
 8003124:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003126:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 8003128:	f7ff fd74 	bl	8002c14 <_ZN15Screen1ViewBase11setupScreenEv>
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800312c:	f104 00d5 	add.w	r0, r4, #213	@ 0xd5
 8003130:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8003134:	f00b f9d0 	bl	800e4d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
 8003138:	f04f 33ff 	mov.w	r3, #4294967295
 800313c:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003140:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
    myCircle.setPosition(0, 0, currentRadius * 2, currentRadius * 2);
 8003144:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003148:	005b      	lsls	r3, r3, #1
 800314a:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
 800314e:	b21b      	sxth	r3, r3
 8003150:	2200      	movs	r2, #0
 8003152:	9300      	str	r3, [sp, #0]
 8003154:	4611      	mov	r1, r2
 8003156:	4628      	mov	r0, r5
 8003158:	f7ff ff57 	bl	800300a <_ZN8touchgfx8Drawable11setPositionEssss>
 800315c:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003160:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003162:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003166:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800316a:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    myCircle.setPainter(circlePainter);
 800316e:	f104 02b4 	add.w	r2, r4, #180	@ 0xb4
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8003172:	2300      	movs	r3, #0
 8003174:	4629      	mov	r1, r5
 8003176:	1d20      	adds	r0, r4, #4
 8003178:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
        canvasPainter = &painter;
 800317c:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 8003180:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
}
 8003184:	b003      	add	sp, #12
 8003186:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800318a:	f006 bf67 	b.w	800a05c <_ZN8touchgfx9Container3addERNS_8DrawableE>
	...

08003190 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE>:
{
 8003190:	b570      	push	{r4, r5, r6, lr}
 8003192:	460e      	mov	r6, r1
 8003194:	b090      	sub	sp, #64	@ 0x40
	Screen1ViewBase::handleDragEvent(evt);
 8003196:	f00e f9bd 	bl	8011514 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaX() const
    {
        return dragNewX - dragOldX;
 800319a:	88f3      	ldrh	r3, [r6, #6]
 800319c:	8975      	ldrh	r5, [r6, #10]
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 800319e:	89b4      	ldrh	r4, [r6, #12]
    snprintf(msg, sizeof(msg), "%d, %d\r\n", dentaX, dentaY);
 80031a0:	4a12      	ldr	r2, [pc, #72]	@ (80031ec <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x5c>)
        return dragNewX - dragOldX;
 80031a2:	1aed      	subs	r5, r5, r3
        return dragNewY - dragOldY;
 80031a4:	8933      	ldrh	r3, [r6, #8]
        return dragNewX - dragOldX;
 80031a6:	b22d      	sxth	r5, r5
        return dragNewY - dragOldY;
 80031a8:	1ae4      	subs	r4, r4, r3
 80031aa:	b224      	sxth	r4, r4
	if(dentaX <= 1 && dentaX >= -1){
 80031ac:	1c6b      	adds	r3, r5, #1
 80031ae:	2b02      	cmp	r3, #2
	if(dentaY <= 1 && dentaY >= -1){
 80031b0:	f104 0301 	add.w	r3, r4, #1
	if(dentaX <= 1 && dentaX >= -1){
 80031b4:	bf98      	it	ls
 80031b6:	2500      	movls	r5, #0
	if(dentaY <= 1 && dentaY >= -1){
 80031b8:	2b02      	cmp	r3, #2
 80031ba:	bf98      	it	ls
 80031bc:	2400      	movls	r4, #0
    snprintf(msg, sizeof(msg), "%d, %d\r\n", dentaX, dentaY);
 80031be:	462b      	mov	r3, r5
 80031c0:	2132      	movs	r1, #50	@ 0x32
 80031c2:	9400      	str	r4, [sp, #0]
 80031c4:	a803      	add	r0, sp, #12
 80031c6:	f01f fd6d 	bl	8022ca4 <sniprintf>
    uartPrint(msg);
 80031ca:	a803      	add	r0, sp, #12
 80031cc:	f7ff ff5a 	bl	8003084 <_Z9uartPrintPKc>
    osMessageQueuePut(mouseEventQueueHandle, &mouseEvent, 0, 0);
 80031d0:	4807      	ldr	r0, [pc, #28]	@ (80031f0 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x60>)
    mouseHID mouseEvent = {0, dentaX, dentaY, 0};
 80031d2:	2300      	movs	r3, #0
    osMessageQueuePut(mouseEventQueueHandle, &mouseEvent, 0, 0);
 80031d4:	461a      	mov	r2, r3
 80031d6:	a902      	add	r1, sp, #8
 80031d8:	6800      	ldr	r0, [r0, #0]
    mouseHID mouseEvent = {0, dentaX, dentaY, 0};
 80031da:	9302      	str	r3, [sp, #8]
 80031dc:	f88d 5009 	strb.w	r5, [sp, #9]
 80031e0:	f88d 400a 	strb.w	r4, [sp, #10]
    osMessageQueuePut(mouseEventQueueHandle, &mouseEvent, 0, 0);
 80031e4:	f004 fa2a 	bl	800763c <osMessageQueuePut>
}
 80031e8:	b010      	add	sp, #64	@ 0x40
 80031ea:	bd70      	pop	{r4, r5, r6, pc}
 80031ec:	08024827 	.word	0x08024827
 80031f0:	20002ecc 	.word	0x20002ecc

080031f4 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 80031f4:	b530      	push	{r4, r5, lr}
 80031f6:	460d      	mov	r5, r1
 80031f8:	b091      	sub	sp, #68	@ 0x44
 80031fa:	4604      	mov	r4, r0
    Screen1ViewBase::handleClickEvent(event);
 80031fc:	f00e f936 	bl	801146c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
     *
     * @return The x coordinate of this event.
     */
    int16_t getX() const
    {
        return clickX;
 8003200:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
     *
     * @return The y coordinate of this event.
     */
    int16_t getY() const
    {
        return clickY;
 8003204:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8003208:	792d      	ldrb	r5, [r5, #4]
    touch_x = event.getX();
 800320a:	f8c4 10c8 	str.w	r1, [r4, #200]	@ 0xc8
    currentRadius = 20;
 800320e:	2314      	movs	r3, #20
 8003210:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
    touch_y = event.getY();
 8003214:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
    if (event.getType() == ClickEvent::PRESSED)
 8003218:	bb55      	cbnz	r5, 8003270 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x7c>
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 800321a:	2328      	movs	r3, #40	@ 0x28
 800321c:	3a14      	subs	r2, #20
 800321e:	3914      	subs	r1, #20
 8003220:	b212      	sxth	r2, r2
 8003222:	9300      	str	r3, [sp, #0]
 8003224:	b209      	sxth	r1, r1
 8003226:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 800322a:	f7ff feee 	bl	800300a <_ZN8touchgfx8Drawable11setPositionEssss>
 800322e:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003232:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003234:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003238:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800323c:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8003240:	2301      	movs	r3, #1
 8003242:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
    	isScaling = true;
 8003246:	f884 30d4 	strb.w	r3, [r4, #212]	@ 0xd4
    	startTime = HAL_GetTick();
 800324a:	f000 fb0f 	bl	800386c <HAL_GetTick>
 800324e:	4b1a      	ldr	r3, [pc, #104]	@ (80032b8 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xc4>)
    	snprintf(msg, sizeof(msg), "Pressed at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003250:	4a1a      	ldr	r2, [pc, #104]	@ (80032bc <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xc8>)
    	startTime = HAL_GetTick();
 8003252:	6018      	str	r0, [r3, #0]
    	snprintf(msg, sizeof(msg), "Pressed at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003254:	f8d4 30cc 	ldr.w	r3, [r4, #204]	@ 0xcc
 8003258:	9300      	str	r3, [sp, #0]
 800325a:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
        snprintf(msg, sizeof(msg), "Released at: x=%d, y=%d\r\n", touch_x, touch_y);
 800325e:	2132      	movs	r1, #50	@ 0x32
 8003260:	a803      	add	r0, sp, #12
 8003262:	f01f fd1f 	bl	8022ca4 <sniprintf>
        uartPrint(msg);
 8003266:	a803      	add	r0, sp, #12
 8003268:	f7ff ff0c 	bl	8003084 <_Z9uartPrintPKc>
}
 800326c:	b011      	add	sp, #68	@ 0x44
 800326e:	bd30      	pop	{r4, r5, pc}
    else if(event.getType() == ClickEvent::RELEASED){
 8003270:	2d01      	cmp	r5, #1
 8003272:	d1fb      	bne.n	800326c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x78>
        myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 8003274:	2328      	movs	r3, #40	@ 0x28
 8003276:	3a14      	subs	r2, #20
 8003278:	3914      	subs	r1, #20
 800327a:	b212      	sxth	r2, r2
 800327c:	9300      	str	r3, [sp, #0]
 800327e:	b209      	sxth	r1, r1
 8003280:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 8003284:	f7ff fec1 	bl	800300a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003288:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 800328c:	f884 5091 	strb.w	r5, [r4, #145]	@ 0x91
 8003290:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003292:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003296:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800329a:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
        isScaling = true;
 800329e:	f884 50d4 	strb.w	r5, [r4, #212]	@ 0xd4
        startTime = HAL_GetTick();
 80032a2:	f000 fae3 	bl	800386c <HAL_GetTick>
 80032a6:	4b04      	ldr	r3, [pc, #16]	@ (80032b8 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xc4>)
        snprintf(msg, sizeof(msg), "Released at: x=%d, y=%d\r\n", touch_x, touch_y);
 80032a8:	4a05      	ldr	r2, [pc, #20]	@ (80032c0 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xcc>)
        startTime = HAL_GetTick();
 80032aa:	6018      	str	r0, [r3, #0]
        snprintf(msg, sizeof(msg), "Released at: x=%d, y=%d\r\n", touch_x, touch_y);
 80032ac:	f8d4 30cc 	ldr.w	r3, [r4, #204]	@ 0xcc
 80032b0:	9300      	str	r3, [sp, #0]
 80032b2:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 80032b6:	e7d2      	b.n	800325e <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x6a>
 80032b8:	200031f0 	.word	0x200031f0
 80032bc:	08024830 	.word	0x08024830
 80032c0:	08024849 	.word	0x08024849

080032c4 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80032c4:	20f0      	movs	r0, #240	@ 0xf0
 80032c6:	4770      	bx	lr

080032c8 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80032c8:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 80032cc:	4770      	bx	lr

080032ce <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80032ce:	2029      	movs	r0, #41	@ 0x29
 80032d0:	f7fe bf04 	b.w	80020dc <LCD_IO_WriteReg>

080032d4 <ili9341_DisplayOff>:
 80032d4:	2028      	movs	r0, #40	@ 0x28
 80032d6:	f7fe bf01 	b.w	80020dc <LCD_IO_WriteReg>

080032da <ili9341_Init>:
{
 80032da:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80032dc:	f7fe fed2 	bl	8002084 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80032e0:	20ca      	movs	r0, #202	@ 0xca
 80032e2:	f7fe fefb 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032e6:	20c3      	movs	r0, #195	@ 0xc3
 80032e8:	f7fe fedc 	bl	80020a4 <LCD_IO_WriteData>
 80032ec:	2008      	movs	r0, #8
 80032ee:	f7fe fed9 	bl	80020a4 <LCD_IO_WriteData>
 80032f2:	2050      	movs	r0, #80	@ 0x50
 80032f4:	f7fe fed6 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80032f8:	20cf      	movs	r0, #207	@ 0xcf
 80032fa:	f7fe feef 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032fe:	2000      	movs	r0, #0
 8003300:	f7fe fed0 	bl	80020a4 <LCD_IO_WriteData>
 8003304:	20c1      	movs	r0, #193	@ 0xc1
 8003306:	f7fe fecd 	bl	80020a4 <LCD_IO_WriteData>
 800330a:	2030      	movs	r0, #48	@ 0x30
 800330c:	f7fe feca 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003310:	20ed      	movs	r0, #237	@ 0xed
 8003312:	f7fe fee3 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003316:	2064      	movs	r0, #100	@ 0x64
 8003318:	f7fe fec4 	bl	80020a4 <LCD_IO_WriteData>
 800331c:	2003      	movs	r0, #3
 800331e:	f7fe fec1 	bl	80020a4 <LCD_IO_WriteData>
 8003322:	2012      	movs	r0, #18
 8003324:	f7fe febe 	bl	80020a4 <LCD_IO_WriteData>
 8003328:	2081      	movs	r0, #129	@ 0x81
 800332a:	f7fe febb 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800332e:	20e8      	movs	r0, #232	@ 0xe8
 8003330:	f7fe fed4 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003334:	2085      	movs	r0, #133	@ 0x85
 8003336:	f7fe feb5 	bl	80020a4 <LCD_IO_WriteData>
 800333a:	2000      	movs	r0, #0
 800333c:	f7fe feb2 	bl	80020a4 <LCD_IO_WriteData>
 8003340:	2078      	movs	r0, #120	@ 0x78
 8003342:	f7fe feaf 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003346:	20cb      	movs	r0, #203	@ 0xcb
 8003348:	f7fe fec8 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800334c:	2039      	movs	r0, #57	@ 0x39
 800334e:	f7fe fea9 	bl	80020a4 <LCD_IO_WriteData>
 8003352:	202c      	movs	r0, #44	@ 0x2c
 8003354:	f7fe fea6 	bl	80020a4 <LCD_IO_WriteData>
 8003358:	2000      	movs	r0, #0
 800335a:	f7fe fea3 	bl	80020a4 <LCD_IO_WriteData>
 800335e:	2034      	movs	r0, #52	@ 0x34
 8003360:	f7fe fea0 	bl	80020a4 <LCD_IO_WriteData>
 8003364:	2002      	movs	r0, #2
 8003366:	f7fe fe9d 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800336a:	20f7      	movs	r0, #247	@ 0xf7
 800336c:	f7fe feb6 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003370:	2020      	movs	r0, #32
 8003372:	f7fe fe97 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003376:	20ea      	movs	r0, #234	@ 0xea
 8003378:	f7fe feb0 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800337c:	2000      	movs	r0, #0
 800337e:	f7fe fe91 	bl	80020a4 <LCD_IO_WriteData>
 8003382:	2000      	movs	r0, #0
 8003384:	f7fe fe8e 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003388:	20b1      	movs	r0, #177	@ 0xb1
 800338a:	f7fe fea7 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800338e:	2000      	movs	r0, #0
 8003390:	f7fe fe88 	bl	80020a4 <LCD_IO_WriteData>
 8003394:	201b      	movs	r0, #27
 8003396:	f7fe fe85 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800339a:	20b6      	movs	r0, #182	@ 0xb6
 800339c:	f7fe fe9e 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033a0:	200a      	movs	r0, #10
 80033a2:	f7fe fe7f 	bl	80020a4 <LCD_IO_WriteData>
 80033a6:	20a2      	movs	r0, #162	@ 0xa2
 80033a8:	f7fe fe7c 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033ac:	20c0      	movs	r0, #192	@ 0xc0
 80033ae:	f7fe fe95 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033b2:	2010      	movs	r0, #16
 80033b4:	f7fe fe76 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033b8:	20c1      	movs	r0, #193	@ 0xc1
 80033ba:	f7fe fe8f 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033be:	2010      	movs	r0, #16
 80033c0:	f7fe fe70 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033c4:	20c5      	movs	r0, #197	@ 0xc5
 80033c6:	f7fe fe89 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033ca:	2045      	movs	r0, #69	@ 0x45
 80033cc:	f7fe fe6a 	bl	80020a4 <LCD_IO_WriteData>
 80033d0:	2015      	movs	r0, #21
 80033d2:	f7fe fe67 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033d6:	20c7      	movs	r0, #199	@ 0xc7
 80033d8:	f7fe fe80 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033dc:	2090      	movs	r0, #144	@ 0x90
 80033de:	f7fe fe61 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033e2:	2036      	movs	r0, #54	@ 0x36
 80033e4:	f7fe fe7a 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033e8:	20c8      	movs	r0, #200	@ 0xc8
 80033ea:	f7fe fe5b 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033ee:	20f2      	movs	r0, #242	@ 0xf2
 80033f0:	f7fe fe74 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033f4:	2000      	movs	r0, #0
 80033f6:	f7fe fe55 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033fa:	20b0      	movs	r0, #176	@ 0xb0
 80033fc:	f7fe fe6e 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003400:	20c2      	movs	r0, #194	@ 0xc2
 8003402:	f7fe fe4f 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003406:	20b6      	movs	r0, #182	@ 0xb6
 8003408:	f7fe fe68 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800340c:	200a      	movs	r0, #10
 800340e:	f7fe fe49 	bl	80020a4 <LCD_IO_WriteData>
 8003412:	20a7      	movs	r0, #167	@ 0xa7
 8003414:	f7fe fe46 	bl	80020a4 <LCD_IO_WriteData>
 8003418:	2027      	movs	r0, #39	@ 0x27
 800341a:	f7fe fe43 	bl	80020a4 <LCD_IO_WriteData>
 800341e:	2004      	movs	r0, #4
 8003420:	f7fe fe40 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003424:	202a      	movs	r0, #42	@ 0x2a
 8003426:	f7fe fe59 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800342a:	2000      	movs	r0, #0
 800342c:	f7fe fe3a 	bl	80020a4 <LCD_IO_WriteData>
 8003430:	2000      	movs	r0, #0
 8003432:	f7fe fe37 	bl	80020a4 <LCD_IO_WriteData>
 8003436:	2000      	movs	r0, #0
 8003438:	f7fe fe34 	bl	80020a4 <LCD_IO_WriteData>
 800343c:	20ef      	movs	r0, #239	@ 0xef
 800343e:	f7fe fe31 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003442:	202b      	movs	r0, #43	@ 0x2b
 8003444:	f7fe fe4a 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003448:	2000      	movs	r0, #0
 800344a:	f7fe fe2b 	bl	80020a4 <LCD_IO_WriteData>
 800344e:	2000      	movs	r0, #0
 8003450:	f7fe fe28 	bl	80020a4 <LCD_IO_WriteData>
 8003454:	2001      	movs	r0, #1
 8003456:	f7fe fe25 	bl	80020a4 <LCD_IO_WriteData>
 800345a:	203f      	movs	r0, #63	@ 0x3f
 800345c:	f7fe fe22 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003460:	20f6      	movs	r0, #246	@ 0xf6
 8003462:	f7fe fe3b 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003466:	2001      	movs	r0, #1
 8003468:	f7fe fe1c 	bl	80020a4 <LCD_IO_WriteData>
 800346c:	2000      	movs	r0, #0
 800346e:	f7fe fe19 	bl	80020a4 <LCD_IO_WriteData>
 8003472:	2006      	movs	r0, #6
 8003474:	f7fe fe16 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003478:	202c      	movs	r0, #44	@ 0x2c
 800347a:	f7fe fe2f 	bl	80020dc <LCD_IO_WriteReg>
  LCD_Delay(200);
 800347e:	20c8      	movs	r0, #200	@ 0xc8
 8003480:	f7fe fe7a 	bl	8002178 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003484:	2026      	movs	r0, #38	@ 0x26
 8003486:	f7fe fe29 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800348a:	2001      	movs	r0, #1
 800348c:	f7fe fe0a 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003490:	20e0      	movs	r0, #224	@ 0xe0
 8003492:	f7fe fe23 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003496:	200f      	movs	r0, #15
 8003498:	f7fe fe04 	bl	80020a4 <LCD_IO_WriteData>
 800349c:	2029      	movs	r0, #41	@ 0x29
 800349e:	f7fe fe01 	bl	80020a4 <LCD_IO_WriteData>
 80034a2:	2024      	movs	r0, #36	@ 0x24
 80034a4:	f7fe fdfe 	bl	80020a4 <LCD_IO_WriteData>
 80034a8:	200c      	movs	r0, #12
 80034aa:	f7fe fdfb 	bl	80020a4 <LCD_IO_WriteData>
 80034ae:	200e      	movs	r0, #14
 80034b0:	f7fe fdf8 	bl	80020a4 <LCD_IO_WriteData>
 80034b4:	2009      	movs	r0, #9
 80034b6:	f7fe fdf5 	bl	80020a4 <LCD_IO_WriteData>
 80034ba:	204e      	movs	r0, #78	@ 0x4e
 80034bc:	f7fe fdf2 	bl	80020a4 <LCD_IO_WriteData>
 80034c0:	2078      	movs	r0, #120	@ 0x78
 80034c2:	f7fe fdef 	bl	80020a4 <LCD_IO_WriteData>
 80034c6:	203c      	movs	r0, #60	@ 0x3c
 80034c8:	f7fe fdec 	bl	80020a4 <LCD_IO_WriteData>
 80034cc:	2009      	movs	r0, #9
 80034ce:	f7fe fde9 	bl	80020a4 <LCD_IO_WriteData>
 80034d2:	2013      	movs	r0, #19
 80034d4:	f7fe fde6 	bl	80020a4 <LCD_IO_WriteData>
 80034d8:	2005      	movs	r0, #5
 80034da:	f7fe fde3 	bl	80020a4 <LCD_IO_WriteData>
 80034de:	2017      	movs	r0, #23
 80034e0:	f7fe fde0 	bl	80020a4 <LCD_IO_WriteData>
 80034e4:	2011      	movs	r0, #17
 80034e6:	f7fe fddd 	bl	80020a4 <LCD_IO_WriteData>
 80034ea:	2000      	movs	r0, #0
 80034ec:	f7fe fdda 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80034f0:	20e1      	movs	r0, #225	@ 0xe1
 80034f2:	f7fe fdf3 	bl	80020dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80034f6:	2000      	movs	r0, #0
 80034f8:	f7fe fdd4 	bl	80020a4 <LCD_IO_WriteData>
 80034fc:	2016      	movs	r0, #22
 80034fe:	f7fe fdd1 	bl	80020a4 <LCD_IO_WriteData>
 8003502:	201b      	movs	r0, #27
 8003504:	f7fe fdce 	bl	80020a4 <LCD_IO_WriteData>
 8003508:	2004      	movs	r0, #4
 800350a:	f7fe fdcb 	bl	80020a4 <LCD_IO_WriteData>
 800350e:	2011      	movs	r0, #17
 8003510:	f7fe fdc8 	bl	80020a4 <LCD_IO_WriteData>
 8003514:	2007      	movs	r0, #7
 8003516:	f7fe fdc5 	bl	80020a4 <LCD_IO_WriteData>
 800351a:	2031      	movs	r0, #49	@ 0x31
 800351c:	f7fe fdc2 	bl	80020a4 <LCD_IO_WriteData>
 8003520:	2033      	movs	r0, #51	@ 0x33
 8003522:	f7fe fdbf 	bl	80020a4 <LCD_IO_WriteData>
 8003526:	2042      	movs	r0, #66	@ 0x42
 8003528:	f7fe fdbc 	bl	80020a4 <LCD_IO_WriteData>
 800352c:	2005      	movs	r0, #5
 800352e:	f7fe fdb9 	bl	80020a4 <LCD_IO_WriteData>
 8003532:	200c      	movs	r0, #12
 8003534:	f7fe fdb6 	bl	80020a4 <LCD_IO_WriteData>
 8003538:	200a      	movs	r0, #10
 800353a:	f7fe fdb3 	bl	80020a4 <LCD_IO_WriteData>
 800353e:	2028      	movs	r0, #40	@ 0x28
 8003540:	f7fe fdb0 	bl	80020a4 <LCD_IO_WriteData>
 8003544:	202f      	movs	r0, #47	@ 0x2f
 8003546:	f7fe fdad 	bl	80020a4 <LCD_IO_WriteData>
 800354a:	200f      	movs	r0, #15
 800354c:	f7fe fdaa 	bl	80020a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003550:	2011      	movs	r0, #17
 8003552:	f7fe fdc3 	bl	80020dc <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003556:	20c8      	movs	r0, #200	@ 0xc8
 8003558:	f7fe fe0e 	bl	8002178 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800355c:	2029      	movs	r0, #41	@ 0x29
 800355e:	f7fe fdbd 	bl	80020dc <LCD_IO_WriteReg>
}
 8003562:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8003566:	202c      	movs	r0, #44	@ 0x2c
 8003568:	f7fe bdb8 	b.w	80020dc <LCD_IO_WriteReg>

0800356c <ili9341_ReadID>:
{
 800356c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800356e:	f7fe fd89 	bl	8002084 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8003572:	2103      	movs	r1, #3
 8003574:	20d3      	movs	r0, #211	@ 0xd3
 8003576:	f7fe fdcd 	bl	8002114 <LCD_IO_ReadData>
}
 800357a:	b280      	uxth	r0, r0
 800357c:	bd08      	pop	{r3, pc}

0800357e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800357e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003580:	b2c4      	uxtb	r4, r0
 8003582:	2202      	movs	r2, #2
 8003584:	2103      	movs	r1, #3
 8003586:	4620      	mov	r0, r4
 8003588:	f7fe fd32 	bl	8001ff0 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800358c:	200a      	movs	r0, #10
 800358e:	f7fe fd77 	bl	8002080 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003592:	4620      	mov	r0, r4
 8003594:	2200      	movs	r2, #0
 8003596:	2103      	movs	r1, #3
 8003598:	f7fe fd2a 	bl	8001ff0 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800359c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80035a0:	2002      	movs	r0, #2
 80035a2:	f7fe bd6d 	b.w	8002080 <IOE_Delay>

080035a6 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80035a6:	b538      	push	{r3, r4, r5, lr}
 80035a8:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80035aa:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80035ac:	f7fe fd1e 	bl	8001fec <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80035b0:	2100      	movs	r1, #0
 80035b2:	4620      	mov	r0, r4
 80035b4:	f7fe fd34 	bl	8002020 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80035b8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80035ba:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80035bc:	4620      	mov	r0, r4
 80035be:	f7fe fd2f 	bl	8002020 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80035c2:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80035c6:	b280      	uxth	r0, r0
 80035c8:	bd38      	pop	{r3, r4, r5, pc}

080035ca <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80035ca:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80035cc:	b2c4      	uxtb	r4, r0
 80035ce:	2140      	movs	r1, #64	@ 0x40
 80035d0:	4620      	mov	r0, r4
 80035d2:	f7fe fd25 	bl	8002020 <IOE_Read>
  
  if(state > 0)
 80035d6:	0603      	lsls	r3, r0, #24
 80035d8:	d507      	bpl.n	80035ea <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80035da:	214c      	movs	r1, #76	@ 0x4c
 80035dc:	4620      	mov	r0, r4
 80035de:	f7fe fd1f 	bl	8002020 <IOE_Read>
 80035e2:	3800      	subs	r0, #0
 80035e4:	bf18      	it	ne
 80035e6:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80035e8:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80035ea:	2201      	movs	r2, #1
 80035ec:	214b      	movs	r1, #75	@ 0x4b
 80035ee:	4620      	mov	r0, r4
 80035f0:	f7fe fcfe 	bl	8001ff0 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80035f4:	4620      	mov	r0, r4
 80035f6:	2200      	movs	r2, #0
 80035f8:	214b      	movs	r1, #75	@ 0x4b
 80035fa:	f7fe fcf9 	bl	8001ff0 <IOE_Write>
  uint8_t ret = 0;
 80035fe:	2000      	movs	r0, #0
 8003600:	e7f2      	b.n	80035e8 <stmpe811_TS_DetectTouch+0x1e>

08003602 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003602:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003604:	2304      	movs	r3, #4
 8003606:	b2c4      	uxtb	r4, r0
{
 8003608:	460e      	mov	r6, r1
 800360a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800360c:	21d7      	movs	r1, #215	@ 0xd7
 800360e:	eb0d 0203 	add.w	r2, sp, r3
 8003612:	4620      	mov	r0, r4
 8003614:	f7fe fd1e 	bl	8002054 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8003618:	9b01      	ldr	r3, [sp, #4]
 800361a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800361c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800361e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003622:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003624:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003626:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003628:	2201      	movs	r2, #1
 800362a:	214b      	movs	r1, #75	@ 0x4b
 800362c:	f7fe fce0 	bl	8001ff0 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003630:	2200      	movs	r2, #0
 8003632:	214b      	movs	r1, #75	@ 0x4b
 8003634:	4620      	mov	r0, r4
 8003636:	f7fe fcdb 	bl	8001ff0 <IOE_Write>
}
 800363a:	b002      	add	sp, #8
 800363c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003640 <stmpe811_Init>:
{
 8003640:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003642:	4a0a      	ldr	r2, [pc, #40]	@ (800366c <stmpe811_Init+0x2c>)
 8003644:	7813      	ldrb	r3, [r2, #0]
 8003646:	4298      	cmp	r0, r3
{
 8003648:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800364a:	d00d      	beq.n	8003668 <stmpe811_Init+0x28>
 800364c:	7851      	ldrb	r1, [r2, #1]
 800364e:	4288      	cmp	r0, r1
 8003650:	d00a      	beq.n	8003668 <stmpe811_Init+0x28>
 8003652:	b10b      	cbz	r3, 8003658 <stmpe811_Init+0x18>
 8003654:	b941      	cbnz	r1, 8003668 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8003656:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003658:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800365a:	f7fe fcc7 	bl	8001fec <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800365e:	4620      	mov	r0, r4
}
 8003660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003664:	f7ff bf8b 	b.w	800357e <stmpe811_Reset>
}
 8003668:	bd10      	pop	{r4, pc}
 800366a:	bf00      	nop
 800366c:	200031f4 	.word	0x200031f4

08003670 <stmpe811_EnableGlobalIT>:
{
 8003670:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003672:	b2c4      	uxtb	r4, r0
 8003674:	2109      	movs	r1, #9
 8003676:	4620      	mov	r0, r4
 8003678:	f7fe fcd2 	bl	8002020 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800367c:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003680:	b2d2      	uxtb	r2, r2
 8003682:	4620      	mov	r0, r4
 8003684:	2109      	movs	r1, #9
}
 8003686:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800368a:	f7fe bcb1 	b.w	8001ff0 <IOE_Write>

0800368e <stmpe811_DisableGlobalIT>:
{
 800368e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003690:	b2c4      	uxtb	r4, r0
 8003692:	2109      	movs	r1, #9
 8003694:	4620      	mov	r0, r4
 8003696:	f7fe fcc3 	bl	8002020 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800369a:	2109      	movs	r1, #9
 800369c:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 80036a0:	4620      	mov	r0, r4
}
 80036a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80036a6:	f7fe bca3 	b.w	8001ff0 <IOE_Write>

080036aa <stmpe811_EnableITSource>:
{
 80036aa:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80036ac:	b2c4      	uxtb	r4, r0
{
 80036ae:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80036b0:	4620      	mov	r0, r4
 80036b2:	210a      	movs	r1, #10
 80036b4:	f7fe fcb4 	bl	8002020 <IOE_Read>
  tmp |= Source; 
 80036b8:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80036bc:	b2d2      	uxtb	r2, r2
 80036be:	4620      	mov	r0, r4
 80036c0:	210a      	movs	r1, #10
}
 80036c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80036c6:	f7fe bc93 	b.w	8001ff0 <IOE_Write>

080036ca <stmpe811_TS_EnableIT>:
{
 80036ca:	b510      	push	{r4, lr}
 80036cc:	4604      	mov	r4, r0
  IOE_ITConfig();
 80036ce:	f7fe fc8e 	bl	8001fee <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80036d2:	4620      	mov	r0, r4
 80036d4:	211f      	movs	r1, #31
 80036d6:	f7ff ffe8 	bl	80036aa <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80036da:	4620      	mov	r0, r4
}
 80036dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80036e0:	f7ff bfc6 	b.w	8003670 <stmpe811_EnableGlobalIT>

080036e4 <stmpe811_DisableITSource>:
{
 80036e4:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80036e6:	b2c4      	uxtb	r4, r0
{
 80036e8:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80036ea:	4620      	mov	r0, r4
 80036ec:	210a      	movs	r1, #10
 80036ee:	f7fe fc97 	bl	8002020 <IOE_Read>
  tmp &= ~Source; 
 80036f2:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80036f6:	b2d2      	uxtb	r2, r2
 80036f8:	4620      	mov	r0, r4
 80036fa:	210a      	movs	r1, #10
}
 80036fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003700:	f7fe bc76 	b.w	8001ff0 <IOE_Write>

08003704 <stmpe811_TS_DisableIT>:
{
 8003704:	b510      	push	{r4, lr}
 8003706:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003708:	f7ff ffc1 	bl	800368e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800370c:	4620      	mov	r0, r4
 800370e:	211f      	movs	r1, #31
}
 8003710:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003714:	f7ff bfe6 	b.w	80036e4 <stmpe811_DisableITSource>

08003718 <stmpe811_ReadGITStatus>:
{
 8003718:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800371a:	b2c0      	uxtb	r0, r0
{
 800371c:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800371e:	210b      	movs	r1, #11
 8003720:	f7fe fc7e 	bl	8002020 <IOE_Read>
}
 8003724:	4020      	ands	r0, r4
 8003726:	bd10      	pop	{r4, pc}

08003728 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003728:	211f      	movs	r1, #31
 800372a:	f7ff bff5 	b.w	8003718 <stmpe811_ReadGITStatus>

0800372e <stmpe811_ClearGlobalIT>:
{
 800372e:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003730:	b2c0      	uxtb	r0, r0
 8003732:	210b      	movs	r1, #11
 8003734:	f7fe bc5c 	b.w	8001ff0 <IOE_Write>

08003738 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003738:	211f      	movs	r1, #31
 800373a:	f7ff bff8 	b.w	800372e <stmpe811_ClearGlobalIT>

0800373e <stmpe811_IO_EnableAF>:
{
 800373e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003740:	b2c4      	uxtb	r4, r0
{
 8003742:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003744:	4620      	mov	r0, r4
 8003746:	2117      	movs	r1, #23
 8003748:	f7fe fc6a 	bl	8002020 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800374c:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003750:	b2d2      	uxtb	r2, r2
 8003752:	4620      	mov	r0, r4
 8003754:	2117      	movs	r1, #23
}
 8003756:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800375a:	f7fe bc49 	b.w	8001ff0 <IOE_Write>

0800375e <stmpe811_TS_Start>:
{
 800375e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003760:	b2c4      	uxtb	r4, r0
{
 8003762:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003764:	2104      	movs	r1, #4
 8003766:	4620      	mov	r0, r4
 8003768:	f7fe fc5a 	bl	8002020 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800376c:	2104      	movs	r1, #4
 800376e:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003772:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003774:	4620      	mov	r0, r4
 8003776:	f7fe fc3b 	bl	8001ff0 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800377a:	4630      	mov	r0, r6
 800377c:	21f0      	movs	r1, #240	@ 0xf0
 800377e:	f7ff ffde 	bl	800373e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003782:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8003786:	4620      	mov	r0, r4
 8003788:	2104      	movs	r1, #4
 800378a:	f7fe fc31 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800378e:	2249      	movs	r2, #73	@ 0x49
 8003790:	2120      	movs	r1, #32
 8003792:	4620      	mov	r0, r4
 8003794:	f7fe fc2c 	bl	8001ff0 <IOE_Write>
  IOE_Delay(2); 
 8003798:	2002      	movs	r0, #2
 800379a:	f7fe fc71 	bl	8002080 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800379e:	4620      	mov	r0, r4
 80037a0:	2201      	movs	r2, #1
 80037a2:	2121      	movs	r1, #33	@ 0x21
 80037a4:	f7fe fc24 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80037a8:	4620      	mov	r0, r4
 80037aa:	229a      	movs	r2, #154	@ 0x9a
 80037ac:	2141      	movs	r1, #65	@ 0x41
 80037ae:	f7fe fc1f 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80037b2:	4620      	mov	r0, r4
 80037b4:	2201      	movs	r2, #1
 80037b6:	214a      	movs	r1, #74	@ 0x4a
 80037b8:	f7fe fc1a 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80037bc:	4620      	mov	r0, r4
 80037be:	2201      	movs	r2, #1
 80037c0:	214b      	movs	r1, #75	@ 0x4b
 80037c2:	f7fe fc15 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80037c6:	4620      	mov	r0, r4
 80037c8:	2200      	movs	r2, #0
 80037ca:	214b      	movs	r1, #75	@ 0x4b
 80037cc:	f7fe fc10 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80037d0:	4620      	mov	r0, r4
 80037d2:	2201      	movs	r2, #1
 80037d4:	2156      	movs	r1, #86	@ 0x56
 80037d6:	f7fe fc0b 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80037da:	4620      	mov	r0, r4
 80037dc:	2201      	movs	r2, #1
 80037de:	2158      	movs	r1, #88	@ 0x58
 80037e0:	f7fe fc06 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80037e4:	4620      	mov	r0, r4
 80037e6:	2201      	movs	r2, #1
 80037e8:	2140      	movs	r1, #64	@ 0x40
 80037ea:	f7fe fc01 	bl	8001ff0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80037ee:	4620      	mov	r0, r4
 80037f0:	22ff      	movs	r2, #255	@ 0xff
 80037f2:	210b      	movs	r1, #11
 80037f4:	f7fe fbfc 	bl	8001ff0 <IOE_Write>
}
 80037f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80037fc:	2002      	movs	r0, #2
 80037fe:	f7fe bc3f 	b.w	8002080 <IOE_Delay>
	...

08003804 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003804:	4b05      	ldr	r3, [pc, #20]	@ (800381c <SystemInit+0x18>)
 8003806:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800380a:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800380e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003812:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003816:	609a      	str	r2, [r3, #8]
#endif
}
 8003818:	4770      	bx	lr
 800381a:	bf00      	nop
 800381c:	e000ed00 	.word	0xe000ed00

08003820 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003820:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003822:	4b0b      	ldr	r3, [pc, #44]	@ (8003850 <HAL_Init+0x30>)
 8003824:	681a      	ldr	r2, [r3, #0]
 8003826:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800382a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800382c:	681a      	ldr	r2, [r3, #0]
 800382e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003832:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003834:	681a      	ldr	r2, [r3, #0]
 8003836:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800383a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800383c:	2003      	movs	r0, #3
 800383e:	f000 f82f 	bl	80038a0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003842:	2000      	movs	r0, #0
 8003844:	f7fe ff10 	bl	8002668 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003848:	f7fe fca4 	bl	8002194 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800384c:	2000      	movs	r0, #0
 800384e:	bd08      	pop	{r3, pc}
 8003850:	40023c00 	.word	0x40023c00

08003854 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003854:	4a03      	ldr	r2, [pc, #12]	@ (8003864 <HAL_IncTick+0x10>)
 8003856:	4b04      	ldr	r3, [pc, #16]	@ (8003868 <HAL_IncTick+0x14>)
 8003858:	6811      	ldr	r1, [r2, #0]
 800385a:	781b      	ldrb	r3, [r3, #0]
 800385c:	440b      	add	r3, r1
 800385e:	6013      	str	r3, [r2, #0]
}
 8003860:	4770      	bx	lr
 8003862:	bf00      	nop
 8003864:	200031f8 	.word	0x200031f8
 8003868:	200000d0 	.word	0x200000d0

0800386c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800386c:	4b01      	ldr	r3, [pc, #4]	@ (8003874 <HAL_GetTick+0x8>)
 800386e:	6818      	ldr	r0, [r3, #0]
}
 8003870:	4770      	bx	lr
 8003872:	bf00      	nop
 8003874:	200031f8 	.word	0x200031f8

08003878 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003878:	b538      	push	{r3, r4, r5, lr}
 800387a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800387c:	f7ff fff6 	bl	800386c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003880:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003882:	bf1c      	itt	ne
 8003884:	4b05      	ldrne	r3, [pc, #20]	@ (800389c <HAL_Delay+0x24>)
 8003886:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003888:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800388a:	bf18      	it	ne
 800388c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800388e:	f7ff ffed 	bl	800386c <HAL_GetTick>
 8003892:	1b43      	subs	r3, r0, r5
 8003894:	42a3      	cmp	r3, r4
 8003896:	d3fa      	bcc.n	800388e <HAL_Delay+0x16>
  {
  }
}
 8003898:	bd38      	pop	{r3, r4, r5, pc}
 800389a:	bf00      	nop
 800389c:	200000d0 	.word	0x200000d0

080038a0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80038a0:	4907      	ldr	r1, [pc, #28]	@ (80038c0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80038a2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80038a4:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80038a8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80038aa:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80038ac:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80038b0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80038b2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80038b4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80038b8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80038bc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80038be:	4770      	bx	lr
 80038c0:	e000ed00 	.word	0xe000ed00

080038c4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80038c4:	4b16      	ldr	r3, [pc, #88]	@ (8003920 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80038c6:	b530      	push	{r4, r5, lr}
 80038c8:	68dc      	ldr	r4, [r3, #12]
 80038ca:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80038ce:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80038d2:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80038d4:	2b04      	cmp	r3, #4
 80038d6:	bf28      	it	cs
 80038d8:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80038da:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038dc:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80038e0:	bf8c      	ite	hi
 80038e2:	3c03      	subhi	r4, #3
 80038e4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038e6:	fa05 f303 	lsl.w	r3, r5, r3
 80038ea:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80038ee:	40a5      	lsls	r5, r4
 80038f0:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038f4:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80038f6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038f8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038fc:	bfac      	ite	ge
 80038fe:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003902:	4a08      	ldrlt	r2, [pc, #32]	@ (8003924 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003904:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003908:	bfb8      	it	lt
 800390a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800390e:	b2db      	uxtb	r3, r3
 8003910:	bfaa      	itet	ge
 8003912:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003916:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003918:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800391c:	bd30      	pop	{r4, r5, pc}
 800391e:	bf00      	nop
 8003920:	e000ed00 	.word	0xe000ed00
 8003924:	e000ed14 	.word	0xe000ed14

08003928 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003928:	2800      	cmp	r0, #0
 800392a:	db07      	blt.n	800393c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800392c:	4a04      	ldr	r2, [pc, #16]	@ (8003940 <HAL_NVIC_EnableIRQ+0x18>)
 800392e:	0941      	lsrs	r1, r0, #5
 8003930:	2301      	movs	r3, #1
 8003932:	f000 001f 	and.w	r0, r0, #31
 8003936:	4083      	lsls	r3, r0
 8003938:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800393c:	4770      	bx	lr
 800393e:	bf00      	nop
 8003940:	e000e100 	.word	0xe000e100

08003944 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003944:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003946:	4604      	mov	r4, r0
 8003948:	b150      	cbz	r0, 8003960 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800394a:	7943      	ldrb	r3, [r0, #5]
 800394c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003950:	b913      	cbnz	r3, 8003958 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003952:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003954:	f7fe fc3e 	bl	80021d4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003958:	2301      	movs	r3, #1
 800395a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800395c:	2000      	movs	r0, #0
}
 800395e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003960:	2001      	movs	r0, #1
 8003962:	e7fc      	b.n	800395e <HAL_CRC_Init+0x1a>

08003964 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003964:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003966:	4604      	mov	r4, r0
 8003968:	b320      	cbz	r0, 80039b4 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800396a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800396e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003972:	b91b      	cbnz	r3, 800397c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003974:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003978:	f7fe fc44 	bl	8002204 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800397c:	2302      	movs	r3, #2
 800397e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003982:	6823      	ldr	r3, [r4, #0]
 8003984:	6861      	ldr	r1, [r4, #4]
 8003986:	681a      	ldr	r2, [r3, #0]
 8003988:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800398c:	430a      	orrs	r2, r1
 800398e:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003990:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003992:	68a1      	ldr	r1, [r4, #8]
 8003994:	f022 0207 	bic.w	r2, r2, #7
 8003998:	430a      	orrs	r2, r1
 800399a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800399c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800399e:	68e1      	ldr	r1, [r4, #12]
 80039a0:	f36f 020d 	bfc	r2, #0, #14
 80039a4:	430a      	orrs	r2, r1
 80039a6:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80039a8:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80039aa:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80039ac:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80039ae:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80039b2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80039b4:	2001      	movs	r0, #1
 80039b6:	e7fc      	b.n	80039b2 <HAL_DMA2D_Init+0x4e>

080039b8 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80039b8:	4770      	bx	lr

080039ba <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80039ba:	4770      	bx	lr

080039bc <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80039bc:	6803      	ldr	r3, [r0, #0]
{
 80039be:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80039c0:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80039c2:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80039c4:	07f2      	lsls	r2, r6, #31
{
 80039c6:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80039c8:	d514      	bpl.n	80039f4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80039ca:	05e9      	lsls	r1, r5, #23
 80039cc:	d512      	bpl.n	80039f4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80039ce:	681a      	ldr	r2, [r3, #0]
 80039d0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80039d4:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80039d6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80039d8:	f042 0201 	orr.w	r2, r2, #1
 80039dc:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80039de:	2201      	movs	r2, #1
 80039e0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80039e2:	2304      	movs	r3, #4
 80039e4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80039e8:	2300      	movs	r3, #0
 80039ea:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80039ee:	6943      	ldr	r3, [r0, #20]
 80039f0:	b103      	cbz	r3, 80039f4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80039f2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80039f4:	06b2      	lsls	r2, r6, #26
 80039f6:	d516      	bpl.n	8003a26 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80039f8:	04ab      	lsls	r3, r5, #18
 80039fa:	d514      	bpl.n	8003a26 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80039fc:	6823      	ldr	r3, [r4, #0]
 80039fe:	681a      	ldr	r2, [r3, #0]
 8003a00:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003a04:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003a06:	2220      	movs	r2, #32
 8003a08:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003a0a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003a0c:	f043 0302 	orr.w	r3, r3, #2
 8003a10:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003a12:	2304      	movs	r3, #4
 8003a14:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003a18:	2300      	movs	r3, #0
 8003a1a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003a1e:	6963      	ldr	r3, [r4, #20]
 8003a20:	b10b      	cbz	r3, 8003a26 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8003a22:	4620      	mov	r0, r4
 8003a24:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003a26:	0730      	lsls	r0, r6, #28
 8003a28:	d516      	bpl.n	8003a58 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003a2a:	0529      	lsls	r1, r5, #20
 8003a2c:	d514      	bpl.n	8003a58 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003a2e:	6823      	ldr	r3, [r4, #0]
 8003a30:	681a      	ldr	r2, [r3, #0]
 8003a32:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003a36:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003a38:	2208      	movs	r2, #8
 8003a3a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003a3c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003a3e:	f043 0304 	orr.w	r3, r3, #4
 8003a42:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003a44:	2304      	movs	r3, #4
 8003a46:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003a4a:	2300      	movs	r3, #0
 8003a4c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003a50:	6963      	ldr	r3, [r4, #20]
 8003a52:	b10b      	cbz	r3, 8003a58 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8003a54:	4620      	mov	r0, r4
 8003a56:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003a58:	0772      	lsls	r2, r6, #29
 8003a5a:	d50b      	bpl.n	8003a74 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003a5c:	056b      	lsls	r3, r5, #21
 8003a5e:	d509      	bpl.n	8003a74 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003a60:	6823      	ldr	r3, [r4, #0]
 8003a62:	681a      	ldr	r2, [r3, #0]
 8003a64:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003a68:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003a6a:	2204      	movs	r2, #4
 8003a6c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003a6e:	4620      	mov	r0, r4
 8003a70:	f7ff ffa2 	bl	80039b8 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003a74:	07b0      	lsls	r0, r6, #30
 8003a76:	d514      	bpl.n	8003aa2 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003a78:	05a9      	lsls	r1, r5, #22
 8003a7a:	d512      	bpl.n	8003aa2 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003a7c:	6823      	ldr	r3, [r4, #0]
 8003a7e:	681a      	ldr	r2, [r3, #0]
 8003a80:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8003a84:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003a86:	2202      	movs	r2, #2
 8003a88:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003a8a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003a8c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003a8e:	2301      	movs	r3, #1
 8003a90:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003a94:	2300      	movs	r3, #0
 8003a96:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8003a9a:	6923      	ldr	r3, [r4, #16]
 8003a9c:	b10b      	cbz	r3, 8003aa2 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8003a9e:	4620      	mov	r0, r4
 8003aa0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003aa2:	06f2      	lsls	r2, r6, #27
 8003aa4:	d513      	bpl.n	8003ace <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003aa6:	04eb      	lsls	r3, r5, #19
 8003aa8:	d511      	bpl.n	8003ace <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003aaa:	6823      	ldr	r3, [r4, #0]
 8003aac:	681a      	ldr	r2, [r3, #0]
 8003aae:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003ab2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003ab4:	2210      	movs	r2, #16
 8003ab6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003ab8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003aba:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003abc:	2301      	movs	r3, #1
 8003abe:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003ac2:	2300      	movs	r3, #0
 8003ac4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003ac8:	4620      	mov	r0, r4
 8003aca:	f7ff ff76 	bl	80039ba <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8003ace:	bd70      	pop	{r4, r5, r6, pc}

08003ad0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003ad2:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8003ad6:	2a01      	cmp	r2, #1
{
 8003ad8:	4603      	mov	r3, r0
 8003ada:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8003ade:	d02b      	beq.n	8003b38 <HAL_DMA2D_ConfigLayer+0x68>
 8003ae0:	2201      	movs	r2, #1
 8003ae2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003ae6:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003aea:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8003aee:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8003af2:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8003af4:	4f17      	ldr	r7, [pc, #92]	@ (8003b54 <HAL_DMA2D_ConfigLayer+0x84>)
 8003af6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003afa:	3c09      	subs	r4, #9
 8003afc:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003afe:	bf9c      	itt	ls
 8003b00:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8003b04:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003b06:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003b0a:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003b0c:	bf88      	it	hi
 8003b0e:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003b12:	b991      	cbnz	r1, 8003b3a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003b14:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8003b16:	4039      	ands	r1, r7
 8003b18:	4301      	orrs	r1, r0
 8003b1a:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b1c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003b1e:	6999      	ldr	r1, [r3, #24]
 8003b20:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b22:	d803      	bhi.n	8003b2c <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003b24:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8003b26:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8003b2a:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003b2c:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003b2e:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003b30:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8003b34:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8003b38:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003b3a:	69d1      	ldr	r1, [r2, #28]
 8003b3c:	4039      	ands	r1, r7
 8003b3e:	4301      	orrs	r1, r0
 8003b40:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003b42:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b44:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003b46:	6989      	ldr	r1, [r1, #24]
 8003b48:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003b4a:	bf9c      	itt	ls
 8003b4c:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8003b50:	6215      	strls	r5, [r2, #32]
 8003b52:	e7eb      	b.n	8003b2c <HAL_DMA2D_ConfigLayer+0x5c>
 8003b54:	00fcfff0 	.word	0x00fcfff0

08003b58 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003b58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003b5c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8003d1c <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003b60:	4a6c      	ldr	r2, [pc, #432]	@ (8003d14 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003b62:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003b64:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8003b66:	2401      	movs	r4, #1
 8003b68:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003b6a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8003b6e:	43ac      	bics	r4, r5
 8003b70:	f040 80b7 	bne.w	8003ce2 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b74:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b76:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b78:	f005 0403 	and.w	r4, r5, #3
 8003b7c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b80:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b84:	1e67      	subs	r7, r4, #1
 8003b86:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b88:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b8c:	d834      	bhi.n	8003bf8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8003b8e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b90:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003b94:	68cf      	ldr	r7, [r1, #12]
 8003b96:	fa07 f708 	lsl.w	r7, r7, r8
 8003b9a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8003b9e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8003ba0:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003ba2:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003ba6:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8003baa:	409f      	lsls	r7, r3
 8003bac:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8003bb0:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8003bb2:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003bb4:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003bb8:	688f      	ldr	r7, [r1, #8]
 8003bba:	fa07 f708 	lsl.w	r7, r7, r8
 8003bbe:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003bc2:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8003bc4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003bc6:	d119      	bne.n	8003bfc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8003bc8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8003bcc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003bd0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8003bd4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003bd8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8003bdc:	f04f 0e0f 	mov.w	lr, #15
 8003be0:	fa0e fe0b 	lsl.w	lr, lr, fp
 8003be4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003be8:	690f      	ldr	r7, [r1, #16]
 8003bea:	fa07 f70b 	lsl.w	r7, r7, fp
 8003bee:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8003bf2:	f8ca 7020 	str.w	r7, [sl, #32]
 8003bf6:	e001      	b.n	8003bfc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003bf8:	2c03      	cmp	r4, #3
 8003bfa:	d1da      	bne.n	8003bb2 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8003bfc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003bfe:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003c02:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003c06:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003c08:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8003c0c:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003c0e:	d068      	beq.n	8003ce2 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003c10:	2400      	movs	r4, #0
 8003c12:	9401      	str	r4, [sp, #4]
 8003c14:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003c18:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8003c1c:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8003c20:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003c24:	f023 0703 	bic.w	r7, r3, #3
 8003c28:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8003c2c:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8003c30:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8003c34:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003c36:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003c3a:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8003c3c:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003c40:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8003c44:	240f      	movs	r4, #15
 8003c46:	fa04 f40c 	lsl.w	r4, r4, ip
 8003c4a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003c4e:	4c32      	ldr	r4, [pc, #200]	@ (8003d18 <HAL_GPIO_Init+0x1c0>)
 8003c50:	42a0      	cmp	r0, r4
 8003c52:	d04d      	beq.n	8003cf0 <HAL_GPIO_Init+0x198>
 8003c54:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c58:	42a0      	cmp	r0, r4
 8003c5a:	d04b      	beq.n	8003cf4 <HAL_GPIO_Init+0x19c>
 8003c5c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c60:	42a0      	cmp	r0, r4
 8003c62:	d049      	beq.n	8003cf8 <HAL_GPIO_Init+0x1a0>
 8003c64:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c68:	42a0      	cmp	r0, r4
 8003c6a:	d047      	beq.n	8003cfc <HAL_GPIO_Init+0x1a4>
 8003c6c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c70:	42a0      	cmp	r0, r4
 8003c72:	d045      	beq.n	8003d00 <HAL_GPIO_Init+0x1a8>
 8003c74:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c78:	42a0      	cmp	r0, r4
 8003c7a:	d043      	beq.n	8003d04 <HAL_GPIO_Init+0x1ac>
 8003c7c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c80:	42a0      	cmp	r0, r4
 8003c82:	d041      	beq.n	8003d08 <HAL_GPIO_Init+0x1b0>
 8003c84:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c88:	42a0      	cmp	r0, r4
 8003c8a:	d03f      	beq.n	8003d0c <HAL_GPIO_Init+0x1b4>
 8003c8c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c90:	42a0      	cmp	r0, r4
 8003c92:	d03d      	beq.n	8003d10 <HAL_GPIO_Init+0x1b8>
 8003c94:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c98:	42a0      	cmp	r0, r4
 8003c9a:	bf14      	ite	ne
 8003c9c:	240a      	movne	r4, #10
 8003c9e:	2409      	moveq	r4, #9
 8003ca0:	fa04 f40c 	lsl.w	r4, r4, ip
 8003ca4:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003ca8:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8003caa:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8003cac:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003cae:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8003cb2:	bf0c      	ite	eq
 8003cb4:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003cb6:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8003cb8:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8003cba:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8003cbc:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8003cc0:	bf0c      	ite	eq
 8003cc2:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003cc4:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8003cc6:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8003cc8:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003cca:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 8003cce:	bf0c      	ite	eq
 8003cd0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003cd2:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8003cd4:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003cd6:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003cd8:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8003cda:	bf54      	ite	pl
 8003cdc:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8003cde:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8003ce0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003ce2:	3301      	adds	r3, #1
 8003ce4:	2b10      	cmp	r3, #16
 8003ce6:	f47f af3d 	bne.w	8003b64 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8003cea:	b003      	add	sp, #12
 8003cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003cf0:	2400      	movs	r4, #0
 8003cf2:	e7d5      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003cf4:	2401      	movs	r4, #1
 8003cf6:	e7d3      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003cf8:	2402      	movs	r4, #2
 8003cfa:	e7d1      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003cfc:	2403      	movs	r4, #3
 8003cfe:	e7cf      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003d00:	2404      	movs	r4, #4
 8003d02:	e7cd      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003d04:	2405      	movs	r4, #5
 8003d06:	e7cb      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003d08:	2406      	movs	r4, #6
 8003d0a:	e7c9      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003d0c:	2407      	movs	r4, #7
 8003d0e:	e7c7      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003d10:	2408      	movs	r4, #8
 8003d12:	e7c5      	b.n	8003ca0 <HAL_GPIO_Init+0x148>
 8003d14:	40013c00 	.word	0x40013c00
 8003d18:	40020000 	.word	0x40020000
 8003d1c:	40023800 	.word	0x40023800

08003d20 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003d20:	6903      	ldr	r3, [r0, #16]
 8003d22:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8003d24:	bf14      	ite	ne
 8003d26:	2001      	movne	r0, #1
 8003d28:	2000      	moveq	r0, #0
 8003d2a:	4770      	bx	lr

08003d2c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003d2c:	b10a      	cbz	r2, 8003d32 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003d2e:	6181      	str	r1, [r0, #24]
  }
}
 8003d30:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003d32:	0409      	lsls	r1, r1, #16
 8003d34:	e7fb      	b.n	8003d2e <HAL_GPIO_WritePin+0x2>

08003d36 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8003d36:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8003d38:	ea01 0203 	and.w	r2, r1, r3
 8003d3c:	ea21 0103 	bic.w	r1, r1, r3
 8003d40:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003d44:	6181      	str	r1, [r0, #24]
}
 8003d46:	4770      	bx	lr

08003d48 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003d48:	6801      	ldr	r1, [r0, #0]
 8003d4a:	694b      	ldr	r3, [r1, #20]
 8003d4c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8003d50:	f04f 0200 	mov.w	r2, #0
 8003d54:	d010      	beq.n	8003d78 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003d56:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8003d5a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8003d5c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8003d5e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8003d60:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003d64:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003d68:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003d6a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003d6e:	f043 0304 	orr.w	r3, r3, #4
 8003d72:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8003d74:	2001      	movs	r0, #1
 8003d76:	4770      	bx	lr
  }
  return HAL_OK;
 8003d78:	4618      	mov	r0, r3
}
 8003d7a:	4770      	bx	lr

08003d7c <I2C_WaitOnFlagUntilTimeout>:
{
 8003d7c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8003d80:	4606      	mov	r6, r0
 8003d82:	460f      	mov	r7, r1
 8003d84:	4691      	mov	r9, r2
 8003d86:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003d88:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003d8c:	6833      	ldr	r3, [r6, #0]
 8003d8e:	f1ba 0f01 	cmp.w	sl, #1
 8003d92:	bf0c      	ite	eq
 8003d94:	695c      	ldreq	r4, [r3, #20]
 8003d96:	699c      	ldrne	r4, [r3, #24]
 8003d98:	ea27 0404 	bic.w	r4, r7, r4
 8003d9c:	b2a4      	uxth	r4, r4
 8003d9e:	fab4 f484 	clz	r4, r4
 8003da2:	0964      	lsrs	r4, r4, #5
 8003da4:	45a1      	cmp	r9, r4
 8003da6:	d001      	beq.n	8003dac <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8003da8:	2000      	movs	r0, #0
 8003daa:	e025      	b.n	8003df8 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8003dac:	1c6a      	adds	r2, r5, #1
 8003dae:	d0ee      	beq.n	8003d8e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003db0:	f7ff fd5c 	bl	800386c <HAL_GetTick>
 8003db4:	9b08      	ldr	r3, [sp, #32]
 8003db6:	1ac0      	subs	r0, r0, r3
 8003db8:	42a8      	cmp	r0, r5
 8003dba:	d801      	bhi.n	8003dc0 <I2C_WaitOnFlagUntilTimeout+0x44>
 8003dbc:	2d00      	cmp	r5, #0
 8003dbe:	d1e5      	bne.n	8003d8c <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8003dc0:	6833      	ldr	r3, [r6, #0]
 8003dc2:	f1ba 0f01 	cmp.w	sl, #1
 8003dc6:	bf0c      	ite	eq
 8003dc8:	695b      	ldreq	r3, [r3, #20]
 8003dca:	699b      	ldrne	r3, [r3, #24]
 8003dcc:	ea27 0303 	bic.w	r3, r7, r3
 8003dd0:	b29b      	uxth	r3, r3
 8003dd2:	fab3 f383 	clz	r3, r3
 8003dd6:	095b      	lsrs	r3, r3, #5
 8003dd8:	4599      	cmp	r9, r3
 8003dda:	d1d7      	bne.n	8003d8c <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8003ddc:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8003dde:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8003de0:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8003de2:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003de6:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003dea:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003dec:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003df0:	f042 0220 	orr.w	r2, r2, #32
 8003df4:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8003df6:	2001      	movs	r0, #1
}
 8003df8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08003dfc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8003dfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e00:	4604      	mov	r4, r0
 8003e02:	460f      	mov	r7, r1
 8003e04:	4616      	mov	r6, r2
 8003e06:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8003e08:	6825      	ldr	r5, [r4, #0]
 8003e0a:	6968      	ldr	r0, [r5, #20]
 8003e0c:	ea27 0000 	bic.w	r0, r7, r0
 8003e10:	b280      	uxth	r0, r0
 8003e12:	b1c0      	cbz	r0, 8003e46 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003e14:	696b      	ldr	r3, [r5, #20]
 8003e16:	055a      	lsls	r2, r3, #21
 8003e18:	d517      	bpl.n	8003e4a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003e1a:	682b      	ldr	r3, [r5, #0]
 8003e1c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003e20:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003e22:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8003e26:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003e28:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003e2a:	2300      	movs	r3, #0
 8003e2c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003e2e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003e32:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003e36:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003e38:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e3c:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003e3e:	2300      	movs	r3, #0
 8003e40:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8003e44:	2001      	movs	r0, #1
}
 8003e46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8003e4a:	1c73      	adds	r3, r6, #1
 8003e4c:	d0dd      	beq.n	8003e0a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003e4e:	f7ff fd0d 	bl	800386c <HAL_GetTick>
 8003e52:	eba0 0008 	sub.w	r0, r0, r8
 8003e56:	42b0      	cmp	r0, r6
 8003e58:	d801      	bhi.n	8003e5e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8003e5a:	2e00      	cmp	r6, #0
 8003e5c:	d1d4      	bne.n	8003e08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8003e5e:	6823      	ldr	r3, [r4, #0]
 8003e60:	695a      	ldr	r2, [r3, #20]
 8003e62:	ea27 0202 	bic.w	r2, r7, r2
 8003e66:	b292      	uxth	r2, r2
 8003e68:	2a00      	cmp	r2, #0
 8003e6a:	d0cd      	beq.n	8003e08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003e6c:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8003e6e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003e70:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8003e72:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003e76:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e7a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003e7c:	4313      	orrs	r3, r2
 8003e7e:	e7dd      	b.n	8003e3c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08003e80 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8003e80:	b570      	push	{r4, r5, r6, lr}
 8003e82:	4604      	mov	r4, r0
 8003e84:	460d      	mov	r5, r1
 8003e86:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003e88:	6823      	ldr	r3, [r4, #0]
 8003e8a:	695b      	ldr	r3, [r3, #20]
 8003e8c:	061b      	lsls	r3, r3, #24
 8003e8e:	d501      	bpl.n	8003e94 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8003e90:	2000      	movs	r0, #0
 8003e92:	e01e      	b.n	8003ed2 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003e94:	4620      	mov	r0, r4
 8003e96:	f7ff ff57 	bl	8003d48 <I2C_IsAcknowledgeFailed>
 8003e9a:	b9c8      	cbnz	r0, 8003ed0 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8003e9c:	1c6a      	adds	r2, r5, #1
 8003e9e:	d0f3      	beq.n	8003e88 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003ea0:	f7ff fce4 	bl	800386c <HAL_GetTick>
 8003ea4:	1b80      	subs	r0, r0, r6
 8003ea6:	42a8      	cmp	r0, r5
 8003ea8:	d801      	bhi.n	8003eae <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8003eaa:	2d00      	cmp	r5, #0
 8003eac:	d1ec      	bne.n	8003e88 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8003eae:	6823      	ldr	r3, [r4, #0]
 8003eb0:	695b      	ldr	r3, [r3, #20]
 8003eb2:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8003eb6:	d1e7      	bne.n	8003e88 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8003eb8:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003eba:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8003ebc:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003ec0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003ec4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003ec6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003eca:	f042 0220 	orr.w	r2, r2, #32
 8003ece:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8003ed0:	2001      	movs	r0, #1
}
 8003ed2:	bd70      	pop	{r4, r5, r6, pc}

08003ed4 <I2C_RequestMemoryWrite>:
{
 8003ed4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ed8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003eda:	6802      	ldr	r2, [r0, #0]
{
 8003edc:	b085      	sub	sp, #20
 8003ede:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8003ee2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003ee4:	6813      	ldr	r3, [r2, #0]
 8003ee6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003eea:	6013      	str	r3, [r2, #0]
{
 8003eec:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003eee:	463b      	mov	r3, r7
 8003ef0:	f8cd 8000 	str.w	r8, [sp]
 8003ef4:	2200      	movs	r2, #0
 8003ef6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8003efa:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003efc:	f7ff ff3e 	bl	8003d7c <I2C_WaitOnFlagUntilTimeout>
 8003f00:	6823      	ldr	r3, [r4, #0]
 8003f02:	b138      	cbz	r0, 8003f14 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003f04:	681b      	ldr	r3, [r3, #0]
 8003f06:	05db      	lsls	r3, r3, #23
 8003f08:	d502      	bpl.n	8003f10 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003f0a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003f0e:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8003f10:	2603      	movs	r6, #3
 8003f12:	e020      	b.n	8003f56 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003f14:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8003f18:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003f1a:	491a      	ldr	r1, [pc, #104]	@ (8003f84 <I2C_RequestMemoryWrite+0xb0>)
 8003f1c:	4643      	mov	r3, r8
 8003f1e:	463a      	mov	r2, r7
 8003f20:	4620      	mov	r0, r4
 8003f22:	f7ff ff6b 	bl	8003dfc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003f26:	b9a8      	cbnz	r0, 8003f54 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003f28:	6823      	ldr	r3, [r4, #0]
 8003f2a:	9003      	str	r0, [sp, #12]
 8003f2c:	695a      	ldr	r2, [r3, #20]
 8003f2e:	9203      	str	r2, [sp, #12]
 8003f30:	699b      	ldr	r3, [r3, #24]
 8003f32:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f34:	4642      	mov	r2, r8
 8003f36:	4639      	mov	r1, r7
 8003f38:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003f3a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f3c:	f7ff ffa0 	bl	8003e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003f40:	4606      	mov	r6, r0
 8003f42:	b160      	cbz	r0, 8003f5e <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003f44:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003f46:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003f48:	bf01      	itttt	eq
 8003f4a:	6822      	ldreq	r2, [r4, #0]
 8003f4c:	6813      	ldreq	r3, [r2, #0]
 8003f4e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8003f52:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8003f54:	2601      	movs	r6, #1
}
 8003f56:	4630      	mov	r0, r6
 8003f58:	b005      	add	sp, #20
 8003f5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003f5e:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003f62:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003f64:	d102      	bne.n	8003f6c <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003f66:	b2ed      	uxtb	r5, r5
 8003f68:	611d      	str	r5, [r3, #16]
 8003f6a:	e7f4      	b.n	8003f56 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003f6c:	0a2a      	lsrs	r2, r5, #8
 8003f6e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f70:	4639      	mov	r1, r7
 8003f72:	4642      	mov	r2, r8
 8003f74:	4620      	mov	r0, r4
 8003f76:	f7ff ff83 	bl	8003e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003f7a:	2800      	cmp	r0, #0
 8003f7c:	d1e2      	bne.n	8003f44 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003f7e:	6823      	ldr	r3, [r4, #0]
 8003f80:	e7f1      	b.n	8003f66 <I2C_RequestMemoryWrite+0x92>
 8003f82:	bf00      	nop
 8003f84:	00010002 	.word	0x00010002

08003f88 <I2C_RequestMemoryRead>:
{
 8003f88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f8c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003f8e:	6803      	ldr	r3, [r0, #0]
{
 8003f90:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003f92:	681a      	ldr	r2, [r3, #0]
 8003f94:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003f98:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003f9a:	681a      	ldr	r2, [r3, #0]
{
 8003f9c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003fa0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003fa4:	601a      	str	r2, [r3, #0]
{
 8003fa6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003fa8:	463b      	mov	r3, r7
 8003faa:	f8cd 8000 	str.w	r8, [sp]
 8003fae:	2200      	movs	r2, #0
 8003fb0:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8003fb4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003fb6:	f7ff fee1 	bl	8003d7c <I2C_WaitOnFlagUntilTimeout>
 8003fba:	6823      	ldr	r3, [r4, #0]
 8003fbc:	b138      	cbz	r0, 8003fce <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003fbe:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003fc0:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003fc2:	bf44      	itt	mi
 8003fc4:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8003fc8:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8003fca:	2003      	movs	r0, #3
 8003fcc:	e021      	b.n	8004012 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003fce:	fa5f f986 	uxtb.w	r9, r6
 8003fd2:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8003fd6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003fd8:	492b      	ldr	r1, [pc, #172]	@ (8004088 <I2C_RequestMemoryRead+0x100>)
 8003fda:	4643      	mov	r3, r8
 8003fdc:	463a      	mov	r2, r7
 8003fde:	4620      	mov	r0, r4
 8003fe0:	f7ff ff0c 	bl	8003dfc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003fe4:	b9a0      	cbnz	r0, 8004010 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003fe6:	6823      	ldr	r3, [r4, #0]
 8003fe8:	9003      	str	r0, [sp, #12]
 8003fea:	695a      	ldr	r2, [r3, #20]
 8003fec:	9203      	str	r2, [sp, #12]
 8003fee:	699b      	ldr	r3, [r3, #24]
 8003ff0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003ff2:	4642      	mov	r2, r8
 8003ff4:	4639      	mov	r1, r7
 8003ff6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003ff8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003ffa:	f7ff ff41 	bl	8003e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8003ffe:	b158      	cbz	r0, 8004018 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004000:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004002:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004004:	bf01      	itttt	eq
 8004006:	6822      	ldreq	r2, [r4, #0]
 8004008:	6813      	ldreq	r3, [r2, #0]
 800400a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800400e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8004010:	2001      	movs	r0, #1
}
 8004012:	b004      	add	sp, #16
 8004014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004018:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800401c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800401e:	d11a      	bne.n	8004056 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004020:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004022:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004024:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004026:	4639      	mov	r1, r7
 8004028:	4620      	mov	r0, r4
 800402a:	f7ff ff29 	bl	8003e80 <I2C_WaitOnTXEFlagUntilTimeout>
 800402e:	4602      	mov	r2, r0
 8004030:	2800      	cmp	r0, #0
 8004032:	d1e5      	bne.n	8004000 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004034:	6821      	ldr	r1, [r4, #0]
 8004036:	680b      	ldr	r3, [r1, #0]
 8004038:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800403c:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800403e:	4620      	mov	r0, r4
 8004040:	f8cd 8000 	str.w	r8, [sp]
 8004044:	463b      	mov	r3, r7
 8004046:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800404a:	f7ff fe97 	bl	8003d7c <I2C_WaitOnFlagUntilTimeout>
 800404e:	6822      	ldr	r2, [r4, #0]
 8004050:	b160      	cbz	r0, 800406c <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004052:	6813      	ldr	r3, [r2, #0]
 8004054:	e7b4      	b.n	8003fc0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004056:	0a2a      	lsrs	r2, r5, #8
 8004058:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800405a:	4639      	mov	r1, r7
 800405c:	4642      	mov	r2, r8
 800405e:	4620      	mov	r0, r4
 8004060:	f7ff ff0e 	bl	8003e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8004064:	2800      	cmp	r0, #0
 8004066:	d1cb      	bne.n	8004000 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004068:	6823      	ldr	r3, [r4, #0]
 800406a:	e7d9      	b.n	8004020 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800406c:	f049 0301 	orr.w	r3, r9, #1
 8004070:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004072:	4905      	ldr	r1, [pc, #20]	@ (8004088 <I2C_RequestMemoryRead+0x100>)
 8004074:	4643      	mov	r3, r8
 8004076:	463a      	mov	r2, r7
 8004078:	4620      	mov	r0, r4
 800407a:	f7ff febf 	bl	8003dfc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800407e:	3800      	subs	r0, #0
 8004080:	bf18      	it	ne
 8004082:	2001      	movne	r0, #1
 8004084:	e7c5      	b.n	8004012 <I2C_RequestMemoryRead+0x8a>
 8004086:	bf00      	nop
 8004088:	00010002 	.word	0x00010002

0800408c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800408c:	b570      	push	{r4, r5, r6, lr}
 800408e:	4604      	mov	r4, r0
 8004090:	460d      	mov	r5, r1
 8004092:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004094:	6823      	ldr	r3, [r4, #0]
 8004096:	695b      	ldr	r3, [r3, #20]
 8004098:	075b      	lsls	r3, r3, #29
 800409a:	d501      	bpl.n	80040a0 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800409c:	2000      	movs	r0, #0
 800409e:	e01e      	b.n	80040de <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80040a0:	4620      	mov	r0, r4
 80040a2:	f7ff fe51 	bl	8003d48 <I2C_IsAcknowledgeFailed>
 80040a6:	b9c8      	cbnz	r0, 80040dc <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80040a8:	1c6a      	adds	r2, r5, #1
 80040aa:	d0f3      	beq.n	8004094 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040ac:	f7ff fbde 	bl	800386c <HAL_GetTick>
 80040b0:	1b80      	subs	r0, r0, r6
 80040b2:	42a8      	cmp	r0, r5
 80040b4:	d801      	bhi.n	80040ba <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80040b6:	2d00      	cmp	r5, #0
 80040b8:	d1ec      	bne.n	8004094 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 80040ba:	6823      	ldr	r3, [r4, #0]
 80040bc:	695b      	ldr	r3, [r3, #20]
 80040be:	f013 0304 	ands.w	r3, r3, #4
 80040c2:	d1e7      	bne.n	8004094 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 80040c4:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80040c6:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80040c8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80040cc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80040d0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80040d2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80040d6:	f042 0220 	orr.w	r2, r2, #32
 80040da:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80040dc:	2001      	movs	r0, #1
}
 80040de:	bd70      	pop	{r4, r5, r6, pc}

080040e0 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80040e0:	b570      	push	{r4, r5, r6, lr}
 80040e2:	4604      	mov	r4, r0
 80040e4:	460d      	mov	r5, r1
 80040e6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80040e8:	6821      	ldr	r1, [r4, #0]
 80040ea:	694b      	ldr	r3, [r1, #20]
 80040ec:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80040f0:	d001      	beq.n	80040f6 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80040f2:	2000      	movs	r0, #0
 80040f4:	e011      	b.n	800411a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80040f6:	694a      	ldr	r2, [r1, #20]
 80040f8:	06d2      	lsls	r2, r2, #27
 80040fa:	d50f      	bpl.n	800411c <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80040fc:	f06f 0210 	mvn.w	r2, #16
 8004100:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004102:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004104:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004106:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800410a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800410e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004110:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8004112:	2300      	movs	r3, #0
 8004114:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004118:	2001      	movs	r0, #1
}
 800411a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800411c:	f7ff fba6 	bl	800386c <HAL_GetTick>
 8004120:	1b80      	subs	r0, r0, r6
 8004122:	42a8      	cmp	r0, r5
 8004124:	d801      	bhi.n	800412a <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8004126:	2d00      	cmp	r5, #0
 8004128:	d1de      	bne.n	80040e8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800412a:	6823      	ldr	r3, [r4, #0]
 800412c:	695b      	ldr	r3, [r3, #20]
 800412e:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004132:	d1d9      	bne.n	80040e8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8004134:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004136:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004138:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800413c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004140:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004142:	4313      	orrs	r3, r2
 8004144:	e7e4      	b.n	8004110 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08004148 <HAL_I2C_Init>:
{
 8004148:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800414a:	4604      	mov	r4, r0
 800414c:	b908      	cbnz	r0, 8004152 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800414e:	2001      	movs	r0, #1
}
 8004150:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004152:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004156:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800415a:	b91b      	cbnz	r3, 8004164 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800415c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8004160:	f7fe f872 	bl	8002248 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004164:	2324      	movs	r3, #36	@ 0x24
 8004166:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800416a:	6823      	ldr	r3, [r4, #0]
 800416c:	681a      	ldr	r2, [r3, #0]
 800416e:	f022 0201 	bic.w	r2, r2, #1
 8004172:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004174:	681a      	ldr	r2, [r3, #0]
 8004176:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800417a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800417c:	681a      	ldr	r2, [r3, #0]
 800417e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004182:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004184:	f001 fb80 	bl	8005888 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004188:	4b3f      	ldr	r3, [pc, #252]	@ (8004288 <HAL_I2C_Init+0x140>)
 800418a:	6865      	ldr	r5, [r4, #4]
 800418c:	429d      	cmp	r5, r3
 800418e:	bf94      	ite	ls
 8004190:	4b3e      	ldrls	r3, [pc, #248]	@ (800428c <HAL_I2C_Init+0x144>)
 8004192:	4b3f      	ldrhi	r3, [pc, #252]	@ (8004290 <HAL_I2C_Init+0x148>)
 8004194:	4298      	cmp	r0, r3
 8004196:	bf8c      	ite	hi
 8004198:	2300      	movhi	r3, #0
 800419a:	2301      	movls	r3, #1
 800419c:	2b00      	cmp	r3, #0
 800419e:	d1d6      	bne.n	800414e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80041a0:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80041a2:	4e39      	ldr	r6, [pc, #228]	@ (8004288 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80041a4:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80041a6:	4b3b      	ldr	r3, [pc, #236]	@ (8004294 <HAL_I2C_Init+0x14c>)
 80041a8:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80041ac:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80041b0:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80041b2:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80041b4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80041b6:	bf88      	it	hi
 80041b8:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 80041bc:	6a11      	ldr	r1, [r2, #32]
 80041be:	bf88      	it	hi
 80041c0:	4373      	mulhi	r3, r6
 80041c2:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80041c6:	bf84      	itt	hi
 80041c8:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 80041cc:	fbb3 f3f6 	udivhi	r3, r3, r6
 80041d0:	3301      	adds	r3, #1
 80041d2:	430b      	orrs	r3, r1
 80041d4:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80041d6:	69d1      	ldr	r1, [r2, #28]
 80041d8:	1e43      	subs	r3, r0, #1
 80041da:	482b      	ldr	r0, [pc, #172]	@ (8004288 <HAL_I2C_Init+0x140>)
 80041dc:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 80041e0:	4285      	cmp	r5, r0
 80041e2:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80041e6:	d832      	bhi.n	800424e <HAL_I2C_Init+0x106>
 80041e8:	006d      	lsls	r5, r5, #1
 80041ea:	f640 70fc 	movw	r0, #4092	@ 0xffc
 80041ee:	fbb3 f3f5 	udiv	r3, r3, r5
 80041f2:	3301      	adds	r3, #1
 80041f4:	4203      	tst	r3, r0
 80041f6:	d042      	beq.n	800427e <HAL_I2C_Init+0x136>
 80041f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80041fc:	4319      	orrs	r1, r3
 80041fe:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004200:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004204:	6811      	ldr	r1, [r2, #0]
 8004206:	4303      	orrs	r3, r0
 8004208:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 800420c:	430b      	orrs	r3, r1
 800420e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004210:	6891      	ldr	r1, [r2, #8]
 8004212:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004216:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 800421a:	4303      	orrs	r3, r0
 800421c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004220:	430b      	orrs	r3, r1
 8004222:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004224:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004228:	68d1      	ldr	r1, [r2, #12]
 800422a:	4303      	orrs	r3, r0
 800422c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004230:	430b      	orrs	r3, r1
 8004232:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004234:	6813      	ldr	r3, [r2, #0]
 8004236:	f043 0301 	orr.w	r3, r3, #1
 800423a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800423c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800423e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004240:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004242:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004246:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004248:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 800424c:	e780      	b.n	8004150 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800424e:	68a0      	ldr	r0, [r4, #8]
 8004250:	b950      	cbnz	r0, 8004268 <HAL_I2C_Init+0x120>
 8004252:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004256:	fbb3 f3f5 	udiv	r3, r3, r5
 800425a:	3301      	adds	r3, #1
 800425c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004260:	b17b      	cbz	r3, 8004282 <HAL_I2C_Init+0x13a>
 8004262:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004266:	e7c9      	b.n	80041fc <HAL_I2C_Init+0xb4>
 8004268:	2019      	movs	r0, #25
 800426a:	4368      	muls	r0, r5
 800426c:	fbb3 f3f0 	udiv	r3, r3, r0
 8004270:	3301      	adds	r3, #1
 8004272:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004276:	b123      	cbz	r3, 8004282 <HAL_I2C_Init+0x13a>
 8004278:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800427c:	e7be      	b.n	80041fc <HAL_I2C_Init+0xb4>
 800427e:	2304      	movs	r3, #4
 8004280:	e7bc      	b.n	80041fc <HAL_I2C_Init+0xb4>
 8004282:	2301      	movs	r3, #1
 8004284:	e7ba      	b.n	80041fc <HAL_I2C_Init+0xb4>
 8004286:	bf00      	nop
 8004288:	000186a0 	.word	0x000186a0
 800428c:	001e847f 	.word	0x001e847f
 8004290:	003d08ff 	.word	0x003d08ff
 8004294:	000f4240 	.word	0x000f4240

08004298 <HAL_I2C_Mem_Write>:
{
 8004298:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800429c:	4604      	mov	r4, r0
 800429e:	4699      	mov	r9, r3
 80042a0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80042a2:	460f      	mov	r7, r1
 80042a4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80042a6:	f7ff fae1 	bl	800386c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80042aa:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80042ae:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80042b0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80042b2:	d003      	beq.n	80042bc <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 80042b4:	2002      	movs	r0, #2
}
 80042b6:	b003      	add	sp, #12
 80042b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80042bc:	9000      	str	r0, [sp, #0]
 80042be:	493c      	ldr	r1, [pc, #240]	@ (80043b0 <HAL_I2C_Mem_Write+0x118>)
 80042c0:	2319      	movs	r3, #25
 80042c2:	2201      	movs	r2, #1
 80042c4:	4620      	mov	r0, r4
 80042c6:	f7ff fd59 	bl	8003d7c <I2C_WaitOnFlagUntilTimeout>
 80042ca:	2800      	cmp	r0, #0
 80042cc:	d1f2      	bne.n	80042b4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80042ce:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80042d2:	2b01      	cmp	r3, #1
 80042d4:	d0ee      	beq.n	80042b4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80042d6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80042d8:	2301      	movs	r3, #1
 80042da:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80042de:	6803      	ldr	r3, [r0, #0]
 80042e0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80042e2:	bf5e      	ittt	pl
 80042e4:	6803      	ldrpl	r3, [r0, #0]
 80042e6:	f043 0301 	orrpl.w	r3, r3, #1
 80042ea:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80042ec:	6803      	ldr	r3, [r0, #0]
 80042ee:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80042f2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80042f4:	2321      	movs	r3, #33	@ 0x21
 80042f6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80042fa:	2340      	movs	r3, #64	@ 0x40
 80042fc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004300:	2300      	movs	r3, #0
 8004302:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004304:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004306:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004308:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800430c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800430e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004310:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004312:	4b28      	ldr	r3, [pc, #160]	@ (80043b4 <HAL_I2C_Mem_Write+0x11c>)
 8004314:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004316:	4642      	mov	r2, r8
 8004318:	e9cd 6500 	strd	r6, r5, [sp]
 800431c:	464b      	mov	r3, r9
 800431e:	4639      	mov	r1, r7
 8004320:	4620      	mov	r0, r4
 8004322:	f7ff fdd7 	bl	8003ed4 <I2C_RequestMemoryWrite>
 8004326:	2800      	cmp	r0, #0
 8004328:	d02a      	beq.n	8004380 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800432a:	2001      	movs	r0, #1
 800432c:	e7c3      	b.n	80042b6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800432e:	f7ff fda7 	bl	8003e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8004332:	b140      	cbz	r0, 8004346 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004334:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004336:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004338:	bf01      	itttt	eq
 800433a:	6822      	ldreq	r2, [r4, #0]
 800433c:	6813      	ldreq	r3, [r2, #0]
 800433e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004342:	6013      	streq	r3, [r2, #0]
 8004344:	e7f1      	b.n	800432a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004346:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004348:	6827      	ldr	r7, [r4, #0]
 800434a:	461a      	mov	r2, r3
 800434c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004350:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004352:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004354:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004356:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004358:	3a01      	subs	r2, #1
 800435a:	b292      	uxth	r2, r2
 800435c:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800435e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004360:	1e48      	subs	r0, r1, #1
 8004362:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004364:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004366:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004368:	d50a      	bpl.n	8004380 <HAL_I2C_Mem_Write+0xe8>
 800436a:	b148      	cbz	r0, 8004380 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800436c:	785a      	ldrb	r2, [r3, #1]
 800436e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004370:	3302      	adds	r3, #2
 8004372:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004374:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004376:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004378:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800437a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800437c:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800437e:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004380:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004382:	462a      	mov	r2, r5
 8004384:	4631      	mov	r1, r6
 8004386:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004388:	2b00      	cmp	r3, #0
 800438a:	d1d0      	bne.n	800432e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800438c:	f7ff fe7e 	bl	800408c <I2C_WaitOnBTFFlagUntilTimeout>
 8004390:	2800      	cmp	r0, #0
 8004392:	d1cf      	bne.n	8004334 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004394:	6822      	ldr	r2, [r4, #0]
 8004396:	6813      	ldr	r3, [r2, #0]
 8004398:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800439c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800439e:	2320      	movs	r3, #32
 80043a0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 80043a4:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80043a8:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 80043ac:	e783      	b.n	80042b6 <HAL_I2C_Mem_Write+0x1e>
 80043ae:	bf00      	nop
 80043b0:	00100002 	.word	0x00100002
 80043b4:	ffff0000 	.word	0xffff0000

080043b8 <HAL_I2C_Mem_Read>:
{
 80043b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80043bc:	4604      	mov	r4, r0
 80043be:	b087      	sub	sp, #28
 80043c0:	4699      	mov	r9, r3
 80043c2:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 80043c4:	460d      	mov	r5, r1
 80043c6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80043c8:	f7ff fa50 	bl	800386c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80043cc:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80043d0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80043d2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80043d4:	d004      	beq.n	80043e0 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 80043d6:	2502      	movs	r5, #2
}
 80043d8:	4628      	mov	r0, r5
 80043da:	b007      	add	sp, #28
 80043dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80043e0:	9000      	str	r0, [sp, #0]
 80043e2:	497a      	ldr	r1, [pc, #488]	@ (80045cc <HAL_I2C_Mem_Read+0x214>)
 80043e4:	2319      	movs	r3, #25
 80043e6:	2201      	movs	r2, #1
 80043e8:	4620      	mov	r0, r4
 80043ea:	f7ff fcc7 	bl	8003d7c <I2C_WaitOnFlagUntilTimeout>
 80043ee:	2800      	cmp	r0, #0
 80043f0:	d1f1      	bne.n	80043d6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80043f2:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80043f6:	2b01      	cmp	r3, #1
 80043f8:	d0ed      	beq.n	80043d6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80043fa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80043fc:	2301      	movs	r3, #1
 80043fe:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004402:	6803      	ldr	r3, [r0, #0]
 8004404:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004406:	bf5e      	ittt	pl
 8004408:	6803      	ldrpl	r3, [r0, #0]
 800440a:	f043 0301 	orrpl.w	r3, r3, #1
 800440e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004410:	6803      	ldr	r3, [r0, #0]
 8004412:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004416:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004418:	2322      	movs	r3, #34	@ 0x22
 800441a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800441e:	2340      	movs	r3, #64	@ 0x40
 8004420:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004424:	2300      	movs	r3, #0
 8004426:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004428:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800442a:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800442c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8004430:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004432:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004434:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004436:	4b66      	ldr	r3, [pc, #408]	@ (80045d0 <HAL_I2C_Mem_Read+0x218>)
 8004438:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800443a:	4629      	mov	r1, r5
 800443c:	e9cd 7600 	strd	r7, r6, [sp]
 8004440:	464b      	mov	r3, r9
 8004442:	4642      	mov	r2, r8
 8004444:	4620      	mov	r0, r4
 8004446:	f7ff fd9f 	bl	8003f88 <I2C_RequestMemoryRead>
 800444a:	4605      	mov	r5, r0
 800444c:	b108      	cbz	r0, 8004452 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800444e:	2501      	movs	r5, #1
 8004450:	e7c2      	b.n	80043d8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004452:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004454:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8004456:	b9b2      	cbnz	r2, 8004486 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004458:	9002      	str	r0, [sp, #8]
 800445a:	695a      	ldr	r2, [r3, #20]
 800445c:	9202      	str	r2, [sp, #8]
 800445e:	699a      	ldr	r2, [r3, #24]
 8004460:	9202      	str	r2, [sp, #8]
 8004462:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004464:	681a      	ldr	r2, [r3, #0]
 8004466:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800446a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800446c:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 80045d4 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8004470:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004472:	2b00      	cmp	r3, #0
 8004474:	d12c      	bne.n	80044d0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8004476:	2220      	movs	r2, #32
 8004478:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800447c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004480:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004484:	e7a8      	b.n	80043d8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004486:	2a01      	cmp	r2, #1
 8004488:	d10a      	bne.n	80044a0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800448a:	681a      	ldr	r2, [r3, #0]
 800448c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004490:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004492:	9003      	str	r0, [sp, #12]
 8004494:	695a      	ldr	r2, [r3, #20]
 8004496:	9203      	str	r2, [sp, #12]
 8004498:	699a      	ldr	r2, [r3, #24]
 800449a:	9203      	str	r2, [sp, #12]
 800449c:	9a03      	ldr	r2, [sp, #12]
 800449e:	e7e1      	b.n	8004464 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80044a0:	2a02      	cmp	r2, #2
 80044a2:	d10e      	bne.n	80044c2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80044a4:	681a      	ldr	r2, [r3, #0]
 80044a6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80044aa:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80044ac:	681a      	ldr	r2, [r3, #0]
 80044ae:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80044b2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80044b4:	9004      	str	r0, [sp, #16]
 80044b6:	695a      	ldr	r2, [r3, #20]
 80044b8:	9204      	str	r2, [sp, #16]
 80044ba:	699b      	ldr	r3, [r3, #24]
 80044bc:	9304      	str	r3, [sp, #16]
 80044be:	9b04      	ldr	r3, [sp, #16]
 80044c0:	e7d4      	b.n	800446c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80044c2:	9005      	str	r0, [sp, #20]
 80044c4:	695a      	ldr	r2, [r3, #20]
 80044c6:	9205      	str	r2, [sp, #20]
 80044c8:	699b      	ldr	r3, [r3, #24]
 80044ca:	9305      	str	r3, [sp, #20]
 80044cc:	9b05      	ldr	r3, [sp, #20]
 80044ce:	e7cd      	b.n	800446c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80044d0:	2b03      	cmp	r3, #3
 80044d2:	d856      	bhi.n	8004582 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80044d4:	2b01      	cmp	r3, #1
 80044d6:	d115      	bne.n	8004504 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80044d8:	4632      	mov	r2, r6
 80044da:	4639      	mov	r1, r7
 80044dc:	4620      	mov	r0, r4
 80044de:	f7ff fdff 	bl	80040e0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80044e2:	2800      	cmp	r0, #0
 80044e4:	d1b3      	bne.n	800444e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80044e6:	6823      	ldr	r3, [r4, #0]
 80044e8:	691a      	ldr	r2, [r3, #16]
 80044ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80044ec:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80044ee:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80044f0:	3301      	adds	r3, #1
 80044f2:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80044f4:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80044f6:	3b01      	subs	r3, #1
 80044f8:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80044fa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80044fc:	3b01      	subs	r3, #1
 80044fe:	b29b      	uxth	r3, r3
 8004500:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8004502:	e7b5      	b.n	8004470 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8004504:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004506:	9600      	str	r6, [sp, #0]
 8004508:	463b      	mov	r3, r7
 800450a:	f04f 0200 	mov.w	r2, #0
 800450e:	4641      	mov	r1, r8
 8004510:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004512:	d119      	bne.n	8004548 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004514:	f7ff fc32 	bl	8003d7c <I2C_WaitOnFlagUntilTimeout>
 8004518:	2800      	cmp	r0, #0
 800451a:	d198      	bne.n	800444e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800451c:	6823      	ldr	r3, [r4, #0]
 800451e:	681a      	ldr	r2, [r3, #0]
 8004520:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004524:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004526:	691a      	ldr	r2, [r3, #16]
 8004528:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800452a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800452c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800452e:	1c53      	adds	r3, r2, #1
 8004530:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004532:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004534:	3b01      	subs	r3, #1
 8004536:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004538:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800453a:	3b01      	subs	r3, #1
 800453c:	b29b      	uxth	r3, r3
 800453e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004540:	6823      	ldr	r3, [r4, #0]
 8004542:	691b      	ldr	r3, [r3, #16]
 8004544:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8004546:	e7d2      	b.n	80044ee <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004548:	f7ff fc18 	bl	8003d7c <I2C_WaitOnFlagUntilTimeout>
 800454c:	4602      	mov	r2, r0
 800454e:	2800      	cmp	r0, #0
 8004550:	f47f af7d 	bne.w	800444e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004554:	6823      	ldr	r3, [r4, #0]
 8004556:	6819      	ldr	r1, [r3, #0]
 8004558:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800455c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800455e:	6919      	ldr	r1, [r3, #16]
 8004560:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004562:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004564:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004566:	3301      	adds	r3, #1
 8004568:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800456a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800456c:	3b01      	subs	r3, #1
 800456e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004570:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004572:	3b01      	subs	r3, #1
 8004574:	b29b      	uxth	r3, r3
 8004576:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004578:	4641      	mov	r1, r8
 800457a:	9600      	str	r6, [sp, #0]
 800457c:	463b      	mov	r3, r7
 800457e:	4620      	mov	r0, r4
 8004580:	e7c8      	b.n	8004514 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004582:	4632      	mov	r2, r6
 8004584:	4639      	mov	r1, r7
 8004586:	4620      	mov	r0, r4
 8004588:	f7ff fdaa 	bl	80040e0 <I2C_WaitOnRXNEFlagUntilTimeout>
 800458c:	2800      	cmp	r0, #0
 800458e:	f47f af5e 	bne.w	800444e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004592:	6823      	ldr	r3, [r4, #0]
 8004594:	691a      	ldr	r2, [r3, #16]
 8004596:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004598:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 800459a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 800459c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800459e:	3a01      	subs	r2, #1
 80045a0:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 80045a2:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 80045a4:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80045a6:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 80045a8:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 80045aa:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80045ac:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 80045ae:	3b01      	subs	r3, #1
 80045b0:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80045b2:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 80045b4:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80045b6:	f57f af5b 	bpl.w	8004470 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 80045ba:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80045bc:	bf02      	ittt	eq
 80045be:	6813      	ldreq	r3, [r2, #0]
 80045c0:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 80045c4:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80045c6:	6913      	ldr	r3, [r2, #16]
 80045c8:	704b      	strb	r3, [r1, #1]
 80045ca:	e790      	b.n	80044ee <HAL_I2C_Mem_Read+0x136>
 80045cc:	00100002 	.word	0x00100002
 80045d0:	ffff0000 	.word	0xffff0000
 80045d4:	00010004 	.word	0x00010004

080045d8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80045d8:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80045da:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80045de:	2b20      	cmp	r3, #32
 80045e0:	b2dc      	uxtb	r4, r3
 80045e2:	d116      	bne.n	8004612 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80045e4:	2324      	movs	r3, #36	@ 0x24
 80045e6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80045ea:	6803      	ldr	r3, [r0, #0]
 80045ec:	681a      	ldr	r2, [r3, #0]
 80045ee:	f022 0201 	bic.w	r2, r2, #1
 80045f2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80045f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80045f6:	f022 0210 	bic.w	r2, r2, #16
 80045fa:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80045fc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80045fe:	4311      	orrs	r1, r2
 8004600:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004602:	681a      	ldr	r2, [r3, #0]
 8004604:	f042 0201 	orr.w	r2, r2, #1
 8004608:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800460a:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800460e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004610:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004612:	2002      	movs	r0, #2
 8004614:	e7fc      	b.n	8004610 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004616 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004616:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004618:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800461c:	2b20      	cmp	r3, #32
 800461e:	b2dc      	uxtb	r4, r3
 8004620:	d116      	bne.n	8004650 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004622:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004624:	2324      	movs	r3, #36	@ 0x24
 8004626:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800462a:	6813      	ldr	r3, [r2, #0]
 800462c:	f023 0301 	bic.w	r3, r3, #1
 8004630:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004632:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004634:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8004638:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800463a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800463c:	b29b      	uxth	r3, r3
 800463e:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004640:	6813      	ldr	r3, [r2, #0]
 8004642:	f043 0301 	orr.w	r3, r3, #1
 8004646:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004648:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800464c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800464e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004650:	2002      	movs	r0, #2
 8004652:	e7fc      	b.n	800464e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004654 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004654:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004656:	01d2      	lsls	r2, r2, #7
 8004658:	3284      	adds	r2, #132	@ 0x84
 800465a:	1883      	adds	r3, r0, r2
{
 800465c:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800465e:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004660:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004662:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004664:	680e      	ldr	r6, [r1, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004666:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800466a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800466c:	68c5      	ldr	r5, [r0, #12]
 800466e:	f106 0c01 	add.w	ip, r6, #1
 8004672:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004676:	f3c7 470b 	ubfx	r7, r7, #16, #12
 800467a:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800467c:	4465      	add	r5, ip
 800467e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004682:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004684:	68c7      	ldr	r7, [r0, #12]
 8004686:	68cd      	ldr	r5, [r1, #12]
 8004688:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800468c:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800468e:	689d      	ldr	r5, [r3, #8]
 8004690:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004694:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004696:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 800469a:	688d      	ldr	r5, [r1, #8]
 800469c:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 80046a0:	3501      	adds	r5, #1
 80046a2:	4465      	add	r5, ip
 80046a4:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80046a8:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80046aa:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80046ac:	f8d1 c010 	ldr.w	ip, [r1, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80046b0:	698f      	ldr	r7, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80046b2:	f025 0507 	bic.w	r5, r5, #7
 80046b6:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80046b8:	f8c3 c010 	str.w	ip, [r3, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80046bc:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80046c0:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80046c4:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80046c8:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80046cc:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80046d0:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80046d4:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80046d6:	695d      	ldr	r5, [r3, #20]
 80046d8:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80046dc:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80046de:	694d      	ldr	r5, [r1, #20]
 80046e0:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80046e2:	69dd      	ldr	r5, [r3, #28]
 80046e4:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80046e8:	f025 0507 	bic.w	r5, r5, #7
 80046ec:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80046ee:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80046f2:	433d      	orrs	r5, r7
 80046f4:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 80046f6:	f1bc 0f07 	cmp.w	ip, #7
 80046fa:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 80046fc:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80046fe:	bf9c      	itt	ls
 8004700:	4d0d      	ldrls	r5, [pc, #52]	@ (8004738 <LTDC_SetConfig+0xe4>)
 8004702:	f815 700c 	ldrbls.w	r7, [r5, ip]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004706:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004708:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 800470c:	62dd      	str	r5, [r3, #44]	@ 0x2c
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 800470e:	bf88      	it	hi
 8004710:	2701      	movhi	r7, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004712:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004714:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004716:	1ba4      	subs	r4, r4, r6
 8004718:	437c      	muls	r4, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800471a:	437d      	muls	r5, r7
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800471c:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800471e:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8004722:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004724:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8004726:	f36f 040a 	bfc	r4, #0, #11
 800472a:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800472c:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800472e:	5883      	ldr	r3, [r0, r2]
 8004730:	f043 0301 	orr.w	r3, r3, #1
 8004734:	5083      	str	r3, [r0, r2]
}
 8004736:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004738:	08024e30 	.word	0x08024e30

0800473c <HAL_LTDC_Init>:
{
 800473c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800473e:	4604      	mov	r4, r0
 8004740:	2800      	cmp	r0, #0
 8004742:	d04e      	beq.n	80047e2 <HAL_LTDC_Init+0xa6>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004744:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8004748:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800474c:	b91b      	cbnz	r3, 8004756 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800474e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004752:	f7fd fdd5 	bl	8002300 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004756:	2302      	movs	r3, #2
 8004758:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800475c:	6823      	ldr	r3, [r4, #0]
 800475e:	699a      	ldr	r2, [r3, #24]
 8004760:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8004764:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004766:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800476a:	4302      	orrs	r2, r0
 800476c:	68e0      	ldr	r0, [r4, #12]
 800476e:	6999      	ldr	r1, [r3, #24]
 8004770:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004772:	6920      	ldr	r0, [r4, #16]
 8004774:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004776:	430a      	orrs	r2, r1
 8004778:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
 800477a:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 800477e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004782:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
 8004784:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8004788:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800478c:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
 800478e:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	@ 0x24
 8004792:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004796:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
 8004798:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800479c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80047a0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80047a2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80047a4:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80047a8:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80047ac:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80047b0:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80047b2:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80047b4:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80047b8:	432a      	orrs	r2, r5
 80047ba:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80047be:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80047c2:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80047c4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80047c6:	f042 0206 	orr.w	r2, r2, #6
 80047ca:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80047cc:	699a      	ldr	r2, [r3, #24]
 80047ce:	f042 0201 	orr.w	r2, r2, #1
 80047d2:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80047d4:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80047d6:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80047d8:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80047dc:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80047e0:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80047e2:	2001      	movs	r0, #1
 80047e4:	e7fc      	b.n	80047e0 <HAL_LTDC_Init+0xa4>

080047e6 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80047e6:	4770      	bx	lr

080047e8 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80047e8:	4770      	bx	lr

080047ea <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80047ea:	6803      	ldr	r3, [r0, #0]
{
 80047ec:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80047ee:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80047f0:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80047f2:	0772      	lsls	r2, r6, #29
{
 80047f4:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80047f6:	d514      	bpl.n	8004822 <HAL_LTDC_IRQHandler+0x38>
 80047f8:	0769      	lsls	r1, r5, #29
 80047fa:	d512      	bpl.n	8004822 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80047fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80047fe:	f022 0204 	bic.w	r2, r2, #4
 8004802:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004804:	2204      	movs	r2, #4
 8004806:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8004808:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800480c:	f043 0301 	orr.w	r3, r3, #1
 8004810:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8004814:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004816:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800481a:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800481e:	f7ff ffe2 	bl	80047e6 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004822:	07b2      	lsls	r2, r6, #30
 8004824:	d516      	bpl.n	8004854 <HAL_LTDC_IRQHandler+0x6a>
 8004826:	07ab      	lsls	r3, r5, #30
 8004828:	d514      	bpl.n	8004854 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800482a:	6823      	ldr	r3, [r4, #0]
 800482c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800482e:	f022 0202 	bic.w	r2, r2, #2
 8004832:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004834:	2202      	movs	r2, #2
 8004836:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004838:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800483c:	4313      	orrs	r3, r2
 800483e:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004842:	2304      	movs	r3, #4
 8004844:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004848:	2300      	movs	r3, #0
 800484a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800484e:	4620      	mov	r0, r4
 8004850:	f7ff ffc9 	bl	80047e6 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004854:	07f0      	lsls	r0, r6, #31
 8004856:	d510      	bpl.n	800487a <HAL_LTDC_IRQHandler+0x90>
 8004858:	07e9      	lsls	r1, r5, #31
 800485a:	d50e      	bpl.n	800487a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800485c:	6823      	ldr	r3, [r4, #0]
 800485e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004860:	f022 0201 	bic.w	r2, r2, #1
 8004864:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004866:	2201      	movs	r2, #1
 8004868:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800486a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800486c:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004870:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8004874:	4620      	mov	r0, r4
 8004876:	f7fc fed7 	bl	8001628 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800487a:	0732      	lsls	r2, r6, #28
 800487c:	d511      	bpl.n	80048a2 <HAL_LTDC_IRQHandler+0xb8>
 800487e:	072b      	lsls	r3, r5, #28
 8004880:	d50f      	bpl.n	80048a2 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004882:	6823      	ldr	r3, [r4, #0]
 8004884:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004886:	f022 0208 	bic.w	r2, r2, #8
 800488a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800488c:	2208      	movs	r2, #8
 800488e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8004890:	2301      	movs	r3, #1
 8004892:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004896:	2300      	movs	r3, #0
 8004898:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800489c:	4620      	mov	r0, r4
 800489e:	f7ff ffa3 	bl	80047e8 <HAL_LTDC_ReloadEventCallback>
}
 80048a2:	bd70      	pop	{r4, r5, r6, pc}

080048a4 <HAL_LTDC_ConfigLayer>:
{
 80048a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80048a8:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80048ac:	2b01      	cmp	r3, #1
{
 80048ae:	4606      	mov	r6, r0
 80048b0:	460f      	mov	r7, r1
 80048b2:	4694      	mov	ip, r2
 80048b4:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80048b8:	d01f      	beq.n	80048fa <HAL_LTDC_ConfigLayer+0x56>
 80048ba:	f04f 0801 	mov.w	r8, #1
 80048be:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80048c2:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80048c6:	2434      	movs	r4, #52	@ 0x34
 80048c8:	460d      	mov	r5, r1
 80048ca:	fb04 6402 	mla	r4, r4, r2, r6
 80048ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80048d0:	3438      	adds	r4, #56	@ 0x38
 80048d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80048d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80048d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80048d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80048da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80048dc:	682b      	ldr	r3, [r5, #0]
 80048de:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80048e0:	4630      	mov	r0, r6
 80048e2:	4662      	mov	r2, ip
 80048e4:	4639      	mov	r1, r7
 80048e6:	f7ff feb5 	bl	8004654 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80048ea:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80048ec:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80048ee:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80048f2:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 80048f6:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 80048fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08004900 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004900:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8004904:	2a01      	cmp	r2, #1
{
 8004906:	4603      	mov	r3, r0
 8004908:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800490c:	d012      	beq.n	8004934 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800490e:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004910:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004914:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8004916:	f020 0001 	bic.w	r0, r0, #1
 800491a:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800491c:	4806      	ldr	r0, [pc, #24]	@ (8004938 <HAL_LTDC_ProgramLineEvent+0x38>)
 800491e:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004920:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8004922:	f041 0101 	orr.w	r1, r1, #1
 8004926:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8004928:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800492a:	2201      	movs	r2, #1
 800492c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004930:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8004934:	4770      	bx	lr
 8004936:	bf00      	nop
 8004938:	40016800 	.word	0x40016800

0800493c <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 800493c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 800493e:	4604      	mov	r4, r0
 8004940:	b310      	cbz	r0, 8004988 <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004942:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 8004946:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004948:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800494c:	b91b      	cbnz	r3, 8004956 <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 800494e:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 8004952:	f7fc ff3b 	bl	80017cc <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8004956:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 8004958:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 800495c:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 8004960:	bf04      	itt	eq
 8004962:	2300      	moveq	r3, #0
 8004964:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 8004966:	6820      	ldr	r0, [r4, #0]
 8004968:	f002 f8ca 	bl	8006b00 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 800496c:	7c23      	ldrb	r3, [r4, #16]
 800496e:	f88d 3000 	strb.w	r3, [sp]
 8004972:	1d25      	adds	r5, r4, #4
 8004974:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8004978:	6820      	ldr	r0, [r4, #0]
 800497a:	f002 f806 	bl	800698a <USB_CoreInit>
 800497e:	4601      	mov	r1, r0
 8004980:	b130      	cbz	r0, 8004990 <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8004982:	2302      	movs	r3, #2
 8004984:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 8004988:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 800498a:	4628      	mov	r0, r5
 800498c:	b003      	add	sp, #12
 800498e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 8004990:	6820      	ldr	r0, [r4, #0]
 8004992:	f002 f8bb 	bl	8006b0c <USB_SetCurrentMode>
 8004996:	2800      	cmp	r0, #0
 8004998:	d1f3      	bne.n	8004982 <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800499a:	7926      	ldrb	r6, [r4, #4]
 800499c:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 80049a0:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80049a2:	4602      	mov	r2, r0
 80049a4:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80049a6:	428e      	cmp	r6, r1
 80049a8:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80049ac:	d81b      	bhi.n	80049e6 <HAL_PCD_Init+0xaa>
 80049ae:	2100      	movs	r1, #0
 80049b0:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 80049b4:	460a      	mov	r2, r1
 80049b6:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80049b8:	4286      	cmp	r6, r0
 80049ba:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80049be:	d820      	bhi.n	8004a02 <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 80049c0:	7c23      	ldrb	r3, [r4, #16]
 80049c2:	f88d 3000 	strb.w	r3, [sp]
 80049c6:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80049ca:	6820      	ldr	r0, [r4, #0]
 80049cc:	f002 f91a 	bl	8006c04 <USB_DevInit>
 80049d0:	4605      	mov	r5, r0
 80049d2:	2800      	cmp	r0, #0
 80049d4:	d1d5      	bne.n	8004982 <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 80049d6:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 80049d8:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 80049da:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 80049dc:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 80049e0:	f002 fc54 	bl	800728c <USB_DevDisconnect>
  return HAL_OK;
 80049e4:	e7d1      	b.n	800498a <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 80049e6:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 80049ea:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 80049ee:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 80049f2:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80049f6:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 80049fa:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80049fe:	3001      	adds	r0, #1
 8004a00:	e7d0      	b.n	80049a4 <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8004a02:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 8004a06:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 8004a0a:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8004a0e:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 8004a12:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004a16:	3101      	adds	r1, #1
 8004a18:	e7cd      	b.n	80049b6 <HAL_PCD_Init+0x7a>

08004a1a <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8004a1a:	b510      	push	{r4, lr}
 8004a1c:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004a1e:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 8004a20:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004a24:	2b01      	cmp	r3, #1
 8004a26:	d015      	beq.n	8004a54 <HAL_PCD_Start+0x3a>
 8004a28:	2301      	movs	r3, #1
 8004a2a:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8004a2e:	68c3      	ldr	r3, [r0, #12]
 8004a30:	065b      	lsls	r3, r3, #25
 8004a32:	d506      	bpl.n	8004a42 <HAL_PCD_Start+0x28>
 8004a34:	7b63      	ldrb	r3, [r4, #13]
 8004a36:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8004a38:	bf02      	ittt	eq
 8004a3a:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8004a3c:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 8004a40:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 8004a42:	f002 f857 	bl	8006af4 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8004a46:	6820      	ldr	r0, [r4, #0]
 8004a48:	f002 fc12 	bl	8007270 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8004a4c:	2000      	movs	r0, #0
 8004a4e:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004a52:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004a54:	2002      	movs	r0, #2
 8004a56:	e7fc      	b.n	8004a52 <HAL_PCD_Start+0x38>

08004a58 <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 8004a58:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 8004a5a:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 8004a5e:	2a01      	cmp	r2, #1
{
 8004a60:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8004a62:	d00a      	beq.n	8004a7a <HAL_PCD_SetAddress+0x22>
 8004a64:	2201      	movs	r2, #1
 8004a66:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 8004a6a:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8004a6c:	6800      	ldr	r0, [r0, #0]
 8004a6e:	f002 fbef 	bl	8007250 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 8004a72:	2000      	movs	r0, #0
 8004a74:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004a78:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004a7a:	2002      	movs	r0, #2
 8004a7c:	e7fc      	b.n	8004a78 <HAL_PCD_SetAddress+0x20>

08004a7e <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 8004a7e:	b570      	push	{r4, r5, r6, lr}
 8004a80:	f001 060f 	and.w	r6, r1, #15
 8004a84:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004a88:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 8004a8c:	4605      	mov	r5, r0
 8004a8e:	ea4f 0484 	mov.w	r4, r4, lsl #2
 8004a92:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 8004a96:	d020      	beq.n	8004ada <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004a98:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004a9c:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 8004aa0:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004aa2:	4429      	add	r1, r5
    ep->is_in = 1U;
 8004aa4:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 8004aa6:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8004aaa:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 8004aac:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004aae:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 8004ab0:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 8004ab2:	b102      	cbz	r2, 8004ab6 <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 8004ab4:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 8004ab6:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 8004ab8:	bf04      	itt	eq
 8004aba:	2300      	moveq	r3, #0
 8004abc:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 8004abe:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 8004ac2:	2b01      	cmp	r3, #1
 8004ac4:	d012      	beq.n	8004aec <HAL_PCD_EP_Open+0x6e>
 8004ac6:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004ac8:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 8004aca:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004ace:	f002 f95e 	bl	8006d8e <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004ad2:	2000      	movs	r0, #0
 8004ad4:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 8004ad8:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 8004ada:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004ade:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 8004ae2:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004ae4:	4429      	add	r1, r5
    ep->is_in = 0U;
 8004ae6:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 8004aea:	e7dc      	b.n	8004aa6 <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8004aec:	2002      	movs	r0, #2
 8004aee:	e7f3      	b.n	8004ad8 <HAL_PCD_EP_Open+0x5a>

08004af0 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004af0:	b510      	push	{r4, lr}
 8004af2:	4604      	mov	r4, r0
 8004af4:	f001 000f 	and.w	r0, r1, #15
 8004af8:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004afc:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004b00:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004b04:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8004b08:	d015      	beq.n	8004b36 <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004b0a:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004b0e:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004b12:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004b14:	4421      	add	r1, r4
    ep->is_in = 1U;
 8004b16:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8004b18:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8004b1a:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004b1e:	2b01      	cmp	r3, #1
 8004b20:	d012      	beq.n	8004b48 <HAL_PCD_EP_Close+0x58>
 8004b22:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004b24:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004b26:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004b2a:	f002 f96f 	bl	8006e0c <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004b2e:	2000      	movs	r0, #0
 8004b30:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8004b34:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 8004b36:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b3a:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004b3e:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b40:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004b42:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004b46:	e7e7      	b.n	8004b18 <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8004b48:	2002      	movs	r0, #2
 8004b4a:	e7f3      	b.n	8004b34 <HAL_PCD_EP_Close+0x44>

08004b4c <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004b4c:	b570      	push	{r4, r5, r6, lr}
 8004b4e:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b52:	2424      	movs	r4, #36	@ 0x24
 8004b54:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004b58:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004b5c:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 8004b60:	2300      	movs	r3, #0
 8004b62:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 8004b66:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 8004b6a:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 8004b6e:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004b70:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004b72:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004b74:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b76:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 8004b7a:	bf08      	it	eq
 8004b7c:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004b80:	f002 f9f0 	bl	8006f64 <USB_EPStartXfer>

  return HAL_OK;
}
 8004b84:	2000      	movs	r0, #0
 8004b86:	bd70      	pop	{r4, r5, r6, pc}

08004b88 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004b88:	b570      	push	{r4, r5, r6, lr}
 8004b8a:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004b8e:	2424      	movs	r4, #36	@ 0x24
 8004b90:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004b94:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004b98:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 8004b9c:	2300      	movs	r3, #0
 8004b9e:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 8004ba0:	2301      	movs	r3, #1
 8004ba2:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004ba4:	7525      	strb	r5, [r4, #20]
{
 8004ba6:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004ba8:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004baa:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004bac:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004bae:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 8004bb2:	bf08      	it	eq
 8004bb4:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004bb6:	f002 f9d5 	bl	8006f64 <USB_EPStartXfer>

  return HAL_OK;
}
 8004bba:	2000      	movs	r0, #0
 8004bbc:	bd70      	pop	{r4, r5, r6, pc}

08004bbe <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004bbe:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004bc0:	7903      	ldrb	r3, [r0, #4]
 8004bc2:	f001 050f 	and.w	r5, r1, #15
 8004bc6:	42ab      	cmp	r3, r5
{
 8004bc8:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004bca:	d32b      	bcc.n	8004c24 <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004bcc:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004bd0:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004bd4:	d01d      	beq.n	8004c12 <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004bd6:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8004bda:	fb00 4005 	mla	r0, r0, r5, r4
 8004bde:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004be0:	3114      	adds	r1, #20
    ep->is_in = 1U;
 8004be2:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8004be4:	2301      	movs	r3, #1
 8004be6:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004be8:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8004bea:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8004bee:	429a      	cmp	r2, r3
 8004bf0:	d01a      	beq.n	8004c28 <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004bf2:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004bf4:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004bf8:	f002 fad6 	bl	80071a8 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8004bfc:	b92d      	cbnz	r5, 8004c0a <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8004bfe:	79a1      	ldrb	r1, [r4, #6]
 8004c00:	6820      	ldr	r0, [r4, #0]
 8004c02:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004c06:	f002 fb8f 	bl	8007328 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8004c0a:	2000      	movs	r0, #0
 8004c0c:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004c10:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 8004c12:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 8004c16:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8004c18:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004c22:	e7df      	b.n	8004be4 <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8004c24:	2001      	movs	r0, #1
 8004c26:	e7f3      	b.n	8004c10 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8004c28:	2002      	movs	r0, #2
 8004c2a:	e7f1      	b.n	8004c10 <HAL_PCD_EP_SetStall+0x52>

08004c2c <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004c2c:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004c2e:	7903      	ldrb	r3, [r0, #4]
 8004c30:	f001 020f 	and.w	r2, r1, #15
 8004c34:	4293      	cmp	r3, r2
{
 8004c36:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004c38:	d329      	bcc.n	8004c8e <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004c3a:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8004c3e:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004c42:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004c46:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004c4a:	d017      	beq.n	8004c7c <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004c4c:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004c50:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004c54:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004c56:	4421      	add	r1, r4
    ep->is_in = 1U;
 8004c58:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 8004c5a:	2500      	movs	r5, #0
 8004c5c:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004c5e:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 8004c60:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004c64:	2b01      	cmp	r3, #1
 8004c66:	d014      	beq.n	8004c92 <HAL_PCD_EP_ClrStall+0x66>
 8004c68:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8004c6a:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004c6c:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8004c70:	f002 fac5 	bl	80071fe <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8004c74:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 8004c78:	4628      	mov	r0, r5
}
 8004c7a:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 8004c7c:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004c80:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004c84:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004c86:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004c88:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 8004c8c:	e7e5      	b.n	8004c5a <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 8004c8e:	2001      	movs	r0, #1
 8004c90:	e7f3      	b.n	8004c7a <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 8004c92:	2002      	movs	r0, #2
 8004c94:	e7f1      	b.n	8004c7a <HAL_PCD_EP_ClrStall+0x4e>

08004c96 <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 8004c96:	f001 030f 	and.w	r3, r1, #15
 8004c9a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8004c9e:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004ca0:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004ca4:	bf4c      	ite	mi
 8004ca6:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004caa:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 8004cae:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 8004cb0:	6800      	ldr	r0, [r0, #0]
 8004cb2:	f002 b901 	b.w	8006eb8 <USB_EPStopXfer>
	...

08004cb8 <HAL_PCD_IRQHandler>:
{
 8004cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004cbc:	6806      	ldr	r6, [r0, #0]
{
 8004cbe:	b089      	sub	sp, #36	@ 0x24
 8004cc0:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 8004cc2:	4630      	mov	r0, r6
 8004cc4:	f002 fb1e 	bl	8007304 <USB_GetMode>
 8004cc8:	9003      	str	r0, [sp, #12]
 8004cca:	2800      	cmp	r0, #0
 8004ccc:	f040 8156 	bne.w	8004f7c <HAL_PCD_IRQHandler+0x2c4>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8004cd0:	6820      	ldr	r0, [r4, #0]
 8004cd2:	f002 fae9 	bl	80072a8 <USB_ReadInterrupts>
 8004cd6:	2800      	cmp	r0, #0
 8004cd8:	f000 8150 	beq.w	8004f7c <HAL_PCD_IRQHandler+0x2c4>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004cdc:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8004ce0:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004ce2:	f3c3 230d 	ubfx	r3, r3, #8, #14
 8004ce6:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8004cea:	f002 fadd 	bl	80072a8 <USB_ReadInterrupts>
 8004cee:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8004cf0:	bf48      	it	mi
 8004cf2:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004cf4:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8004cf6:	bf42      	ittt	mi
 8004cf8:	6953      	ldrmi	r3, [r2, #20]
 8004cfa:	f003 0302 	andmi.w	r3, r3, #2
 8004cfe:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004d00:	f002 fad2 	bl	80072a8 <USB_ReadInterrupts>
 8004d04:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004d06:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004d0a:	d52d      	bpl.n	8004d68 <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004d0c:	6822      	ldr	r2, [r4, #0]
 8004d0e:	6993      	ldr	r3, [r2, #24]
 8004d10:	f023 0310 	bic.w	r3, r3, #16
 8004d14:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 8004d16:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8004d1a:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 8004d1e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 8004d22:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8004d26:	f040 812c 	bne.w	8004f82 <HAL_PCD_IRQHandler+0x2ca>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 8004d2a:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8004d2e:	ea18 0f03 	tst.w	r8, r3
 8004d32:	d014      	beq.n	8004d5e <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8004d34:	2324      	movs	r3, #36	@ 0x24
 8004d36:	fb03 4707 	mla	r7, r3, r7, r4
 8004d3a:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8004d3e:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 8004d42:	464a      	mov	r2, r9
 8004d44:	4630      	mov	r0, r6
 8004d46:	f002 fa0f 	bl	8007168 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004d4a:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8004d4e:	444b      	add	r3, r9
 8004d50:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004d54:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8004d58:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004d5a:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004d5e:	6822      	ldr	r2, [r4, #0]
 8004d60:	6993      	ldr	r3, [r2, #24]
 8004d62:	f043 0310 	orr.w	r3, r3, #16
 8004d66:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8004d68:	6820      	ldr	r0, [r4, #0]
 8004d6a:	f002 fa9d 	bl	80072a8 <USB_ReadInterrupts>
 8004d6e:	0301      	lsls	r1, r0, #12
 8004d70:	f100 811a 	bmi.w	8004fa8 <HAL_PCD_IRQHandler+0x2f0>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8004d74:	6820      	ldr	r0, [r4, #0]
 8004d76:	f002 fa97 	bl	80072a8 <USB_ReadInterrupts>
 8004d7a:	0342      	lsls	r2, r0, #13
 8004d7c:	d50d      	bpl.n	8004d9a <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8004d7e:	6820      	ldr	r0, [r4, #0]
 8004d80:	f002 fa9e 	bl	80072c0 <USB_ReadDevAllInEpInterrupt>
 8004d84:	4627      	mov	r7, r4
 8004d86:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8004d88:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 8004d8c:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 8004d90:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004d92:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	f040 81d1 	bne.w	800513c <HAL_PCD_IRQHandler+0x484>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 8004d9a:	6820      	ldr	r0, [r4, #0]
 8004d9c:	f002 fa84 	bl	80072a8 <USB_ReadInterrupts>
 8004da0:	2800      	cmp	r0, #0
 8004da2:	da13      	bge.n	8004dcc <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004da4:	686b      	ldr	r3, [r5, #4]
 8004da6:	f023 0301 	bic.w	r3, r3, #1
 8004daa:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 8004dac:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 8004db0:	2b01      	cmp	r3, #1
 8004db2:	f040 8269 	bne.w	8005288 <HAL_PCD_IRQHandler+0x5d0>
        hpcd->LPM_State = LPM_L0;
 8004db6:	2100      	movs	r1, #0
 8004db8:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8004dbc:	4620      	mov	r0, r4
 8004dbe:	f000 fae6 	bl	800538e <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8004dc2:	6822      	ldr	r2, [r4, #0]
 8004dc4:	6953      	ldr	r3, [r2, #20]
 8004dc6:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8004dca:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8004dcc:	6820      	ldr	r0, [r4, #0]
 8004dce:	f002 fa6b 	bl	80072a8 <USB_ReadInterrupts>
 8004dd2:	0507      	lsls	r7, r0, #20
 8004dd4:	d50a      	bpl.n	8004dec <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8004dd6:	68ab      	ldr	r3, [r5, #8]
 8004dd8:	07d8      	lsls	r0, r3, #31
 8004dda:	d502      	bpl.n	8004de2 <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 8004ddc:	4620      	mov	r0, r4
 8004dde:	f7fc fd6b 	bl	80018b8 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 8004de2:	6822      	ldr	r2, [r4, #0]
 8004de4:	6953      	ldr	r3, [r2, #20]
 8004de6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004dea:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8004dec:	6820      	ldr	r0, [r4, #0]
 8004dee:	f002 fa5b 	bl	80072a8 <USB_ReadInterrupts>
 8004df2:	04c1      	lsls	r1, r0, #19
 8004df4:	d533      	bpl.n	8004e5e <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004df6:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8004df8:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004dfa:	f023 0301 	bic.w	r3, r3, #1
 8004dfe:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8004e00:	2110      	movs	r1, #16
 8004e02:	f001 feb3 	bl	8006b6c <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004e06:	7920      	ldrb	r0, [r4, #4]
 8004e08:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8004e0c:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004e10:	9a03      	ldr	r2, [sp, #12]
 8004e12:	4290      	cmp	r0, r2
 8004e14:	f200 823c 	bhi.w	8005290 <HAL_PCD_IRQHandler+0x5d8>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8004e18:	69eb      	ldr	r3, [r5, #28]
 8004e1a:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8004e1e:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8004e20:	7be3      	ldrb	r3, [r4, #15]
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	f000 8250 	beq.w	80052c8 <HAL_PCD_IRQHandler+0x610>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8004e28:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 8004e2c:	f043 030b 	orr.w	r3, r3, #11
 8004e30:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 8004e34:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004e36:	f043 030b 	orr.w	r3, r3, #11
 8004e3a:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8004e3c:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8004e40:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8004e42:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8004e46:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8004e4a:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004e4e:	79a1      	ldrb	r1, [r4, #6]
 8004e50:	f002 fa6a 	bl	8007328 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8004e54:	6822      	ldr	r2, [r4, #0]
 8004e56:	6953      	ldr	r3, [r2, #20]
 8004e58:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004e5c:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8004e5e:	6820      	ldr	r0, [r4, #0]
 8004e60:	f002 fa22 	bl	80072a8 <USB_ReadInterrupts>
 8004e64:	0482      	lsls	r2, r0, #18
 8004e66:	d516      	bpl.n	8004e96 <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 8004e68:	6820      	ldr	r0, [r4, #0]
 8004e6a:	f002 fa4f 	bl	800730c <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8004e6e:	6820      	ldr	r0, [r4, #0]
 8004e70:	f001 ff82 	bl	8006d78 <USB_GetDevSpeed>
 8004e74:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 8004e76:	6827      	ldr	r7, [r4, #0]
 8004e78:	f000 fd00 	bl	800587c <HAL_RCC_GetHCLKFreq>
 8004e7c:	79e2      	ldrb	r2, [r4, #7]
 8004e7e:	4601      	mov	r1, r0
 8004e80:	4638      	mov	r0, r7
 8004e82:	f001 fdc7 	bl	8006a14 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 8004e86:	4620      	mov	r0, r4
 8004e88:	f7fc fd03 	bl	8001892 <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8004e8c:	6822      	ldr	r2, [r4, #0]
 8004e8e:	6953      	ldr	r3, [r2, #20]
 8004e90:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004e94:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 8004e96:	6820      	ldr	r0, [r4, #0]
 8004e98:	f002 fa06 	bl	80072a8 <USB_ReadInterrupts>
 8004e9c:	0703      	lsls	r3, r0, #28
 8004e9e:	d507      	bpl.n	8004eb0 <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 8004ea0:	4620      	mov	r0, r4
 8004ea2:	f7fc fcf2 	bl	800188a <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 8004ea6:	6822      	ldr	r2, [r4, #0]
 8004ea8:	6953      	ldr	r3, [r2, #20]
 8004eaa:	f003 0308 	and.w	r3, r3, #8
 8004eae:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8004eb0:	6820      	ldr	r0, [r4, #0]
 8004eb2:	f002 f9f9 	bl	80072a8 <USB_ReadInterrupts>
 8004eb6:	0607      	lsls	r7, r0, #24
 8004eb8:	f100 8211 	bmi.w	80052de <HAL_PCD_IRQHandler+0x626>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8004ebc:	6820      	ldr	r0, [r4, #0]
 8004ebe:	f002 f9f3 	bl	80072a8 <USB_ReadInterrupts>
 8004ec2:	02c0      	lsls	r0, r0, #11
 8004ec4:	d50c      	bpl.n	8004ee0 <HAL_PCD_IRQHandler+0x228>
 8004ec6:	46a0      	mov	r8, r4
 8004ec8:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004ecc:	2701      	movs	r7, #1
 8004ece:	7923      	ldrb	r3, [r4, #4]
 8004ed0:	42bb      	cmp	r3, r7
 8004ed2:	f200 821d 	bhi.w	8005310 <HAL_PCD_IRQHandler+0x658>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8004ed6:	6822      	ldr	r2, [r4, #0]
 8004ed8:	6953      	ldr	r3, [r2, #20]
 8004eda:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004ede:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8004ee0:	6820      	ldr	r0, [r4, #0]
 8004ee2:	f002 f9e1 	bl	80072a8 <USB_ReadInterrupts>
 8004ee6:	0281      	lsls	r1, r0, #10
 8004ee8:	d52b      	bpl.n	8004f42 <HAL_PCD_IRQHandler+0x28a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004eea:	f894 e004 	ldrb.w	lr, [r4, #4]
 8004eee:	4623      	mov	r3, r4
 8004ef0:	f506 6132 	add.w	r1, r6, #2848	@ 0xb20
 8004ef4:	f04f 0c01 	mov.w	ip, #1
 8004ef8:	45e6      	cmp	lr, ip
 8004efa:	d91d      	bls.n	8004f38 <HAL_PCD_IRQHandler+0x280>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8004efc:	f893 727c 	ldrb.w	r7, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8004f00:	6808      	ldr	r0, [r1, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8004f02:	2f01      	cmp	r7, #1
 8004f04:	f040 821a 	bne.w	800533c <HAL_PCD_IRQHandler+0x684>
 8004f08:	2800      	cmp	r0, #0
 8004f0a:	f280 8217 	bge.w	800533c <HAL_PCD_IRQHandler+0x684>
            (((RegVal & (0x1U << 16)) >> 16U) == (hpcd->FrameNumber & 0x1U)))
 8004f0e:	f8d4 24d4 	ldr.w	r2, [r4, #1236]	@ 0x4d4
 8004f12:	ea82 4010 	eor.w	r0, r2, r0, lsr #16
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 8004f16:	07c2      	lsls	r2, r0, #31
 8004f18:	f100 8210 	bmi.w	800533c <HAL_PCD_IRQHandler+0x684>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 8004f1c:	f883 727b 	strb.w	r7, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 8004f20:	69b0      	ldr	r0, [r6, #24]
 8004f22:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
 8004f26:	61b0      	str	r0, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8004f28:	6970      	ldr	r0, [r6, #20]
 8004f2a:	0600      	lsls	r0, r0, #24
 8004f2c:	f100 8206 	bmi.w	800533c <HAL_PCD_IRQHandler+0x684>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 8004f30:	686b      	ldr	r3, [r5, #4]
 8004f32:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004f36:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8004f38:	6822      	ldr	r2, [r4, #0]
 8004f3a:	6953      	ldr	r3, [r2, #20]
 8004f3c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004f40:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 8004f42:	6820      	ldr	r0, [r4, #0]
 8004f44:	f002 f9b0 	bl	80072a8 <USB_ReadInterrupts>
 8004f48:	0041      	lsls	r1, r0, #1
 8004f4a:	d507      	bpl.n	8004f5c <HAL_PCD_IRQHandler+0x2a4>
      HAL_PCD_ConnectCallback(hpcd);
 8004f4c:	4620      	mov	r0, r4
 8004f4e:	f7fc fcd7 	bl	8001900 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 8004f52:	6822      	ldr	r2, [r4, #0]
 8004f54:	6953      	ldr	r3, [r2, #20]
 8004f56:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8004f5a:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8004f5c:	6820      	ldr	r0, [r4, #0]
 8004f5e:	f002 f9a3 	bl	80072a8 <USB_ReadInterrupts>
 8004f62:	0742      	lsls	r2, r0, #29
 8004f64:	d50a      	bpl.n	8004f7c <HAL_PCD_IRQHandler+0x2c4>
      RegVal = hpcd->Instance->GOTGINT;
 8004f66:	6823      	ldr	r3, [r4, #0]
 8004f68:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8004f6a:	076b      	lsls	r3, r5, #29
 8004f6c:	d502      	bpl.n	8004f74 <HAL_PCD_IRQHandler+0x2bc>
        HAL_PCD_DisconnectCallback(hpcd);
 8004f6e:	4620      	mov	r0, r4
 8004f70:	f7fc fcca 	bl	8001908 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 8004f74:	6822      	ldr	r2, [r4, #0]
 8004f76:	6853      	ldr	r3, [r2, #4]
 8004f78:	432b      	orrs	r3, r5
 8004f7a:	6053      	str	r3, [r2, #4]
}
 8004f7c:	b009      	add	sp, #36	@ 0x24
 8004f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 8004f82:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8004f86:	f47f aeea 	bne.w	8004d5e <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8004f8a:	2208      	movs	r2, #8
 8004f8c:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 8004f90:	4630      	mov	r0, r6
 8004f92:	f002 f8e9 	bl	8007168 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004f96:	2324      	movs	r3, #36	@ 0x24
 8004f98:	fb03 4707 	mla	r7, r3, r7, r4
 8004f9c:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8004fa0:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8004fa4:	4443      	add	r3, r8
 8004fa6:	e6d8      	b.n	8004d5a <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8004fa8:	6820      	ldr	r0, [r4, #0]
 8004faa:	f002 f981 	bl	80072b0 <USB_ReadDevAllOutEpInterrupt>
 8004fae:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 8004fb2:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8004fb4:	46a2      	mov	sl, r4
      epnum = 0U;
 8004fb6:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8004fb8:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004fba:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	f43f aed9 	beq.w	8004d74 <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 8004fc2:	9b04      	ldr	r3, [sp, #16]
 8004fc4:	07db      	lsls	r3, r3, #31
 8004fc6:	d578      	bpl.n	80050ba <HAL_PCD_IRQHandler+0x402>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004fc8:	fa5f fb87 	uxtb.w	fp, r7
 8004fcc:	4659      	mov	r1, fp
 8004fce:	f002 f97f 	bl	80072d0 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8004fd2:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004fd6:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8004fd8:	d01f      	beq.n	800501a <HAL_PCD_IRQHandler+0x362>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004fda:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8004fdc:	2301      	movs	r3, #1
 8004fde:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 8004fe2:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8004fe6:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004fe8:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8004fec:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 8004ff0:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004ff4:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 8004ff6:	f040 808b 	bne.w	8005110 <HAL_PCD_IRQHandler+0x458>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8004ffa:	f012 0f08 	tst.w	r2, #8
 8004ffe:	d007      	beq.n	8005010 <HAL_PCD_IRQHandler+0x358>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005000:	48af      	ldr	r0, [pc, #700]	@ (80052c0 <HAL_PCD_IRQHandler+0x608>)
 8005002:	4281      	cmp	r1, r0
 8005004:	d909      	bls.n	800501a <HAL_PCD_IRQHandler+0x362>
 8005006:	0412      	lsls	r2, r2, #16
 8005008:	d507      	bpl.n	800501a <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 800500a:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800500e:	e003      	b.n	8005018 <HAL_PCD_IRQHandler+0x360>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 8005010:	f012 0f20 	tst.w	r2, #32
 8005014:	d05a      	beq.n	80050cc <HAL_PCD_IRQHandler+0x414>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8005016:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005018:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 800501a:	f019 0f08 	tst.w	r9, #8
 800501e:	d021      	beq.n	8005064 <HAL_PCD_IRQHandler+0x3ac>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8005020:	2308      	movs	r3, #8
 8005022:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005026:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005028:	49a5      	ldr	r1, [pc, #660]	@ (80052c0 <HAL_PCD_IRQHandler+0x608>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 800502a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800502c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005030:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005034:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005036:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005038:	d904      	bls.n	8005044 <HAL_PCD_IRQHandler+0x38c>
 800503a:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 800503c:	bf44      	itt	mi
 800503e:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 8005042:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 8005044:	4620      	mov	r0, r4
 8005046:	9205      	str	r2, [sp, #20]
 8005048:	f7fc fc08 	bl	800185c <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 800504c:	9a05      	ldr	r2, [sp, #20]
 800504e:	499c      	ldr	r1, [pc, #624]	@ (80052c0 <HAL_PCD_IRQHandler+0x608>)
 8005050:	428a      	cmp	r2, r1
 8005052:	d907      	bls.n	8005064 <HAL_PCD_IRQHandler+0x3ac>
 8005054:	79a1      	ldrb	r1, [r4, #6]
 8005056:	2901      	cmp	r1, #1
 8005058:	d104      	bne.n	8005064 <HAL_PCD_IRQHandler+0x3ac>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800505a:	6820      	ldr	r0, [r4, #0]
 800505c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005060:	f002 f962 	bl	8007328 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8005064:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8005068:	bf1c      	itt	ne
 800506a:	2310      	movne	r3, #16
 800506c:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 8005070:	f019 0f02 	tst.w	r9, #2
 8005074:	d014      	beq.n	80050a0 <HAL_PCD_IRQHandler+0x3e8>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 8005076:	6973      	ldr	r3, [r6, #20]
 8005078:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 800507a:	bf42      	ittt	mi
 800507c:	686b      	ldrmi	r3, [r5, #4]
 800507e:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 8005082:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 8005084:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 8005088:	2b01      	cmp	r3, #1
 800508a:	d106      	bne.n	800509a <HAL_PCD_IRQHandler+0x3e2>
              ep->is_iso_incomplete = 0U;
 800508c:	2300      	movs	r3, #0
 800508e:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 8005092:	4659      	mov	r1, fp
 8005094:	4620      	mov	r0, r4
 8005096:	f7fc fc2b 	bl	80018f0 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 800509a:	2302      	movs	r3, #2
 800509c:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80050a0:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80050a4:	bf1c      	itt	ne
 80050a6:	2320      	movne	r3, #32
 80050a8:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 80050ac:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 80050b0:	bf1c      	itt	ne
 80050b2:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 80050b6:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 80050ba:	9b04      	ldr	r3, [sp, #16]
 80050bc:	085b      	lsrs	r3, r3, #1
        epnum++;
 80050be:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 80050c0:	9304      	str	r3, [sp, #16]
 80050c2:	f108 0820 	add.w	r8, r8, #32
 80050c6:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 80050ca:	e775      	b.n	8004fb8 <HAL_PCD_IRQHandler+0x300>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80050cc:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 80052c0 <HAL_PCD_IRQHandler+0x608>
 80050d0:	4561      	cmp	r1, ip
 80050d2:	d901      	bls.n	80050d8 <HAL_PCD_IRQHandler+0x420>
 80050d4:	0412      	lsls	r2, r2, #16
 80050d6:	d498      	bmi.n	800500a <HAL_PCD_IRQHandler+0x352>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 80050d8:	691a      	ldr	r2, [r3, #16]
 80050da:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 80050de:	f3c2 0212 	ubfx	r2, r2, #0, #19
 80050e2:	1a9b      	subs	r3, r3, r2
 80050e4:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 80050e8:	b96f      	cbnz	r7, 8005106 <HAL_PCD_IRQHandler+0x44e>
          if (ep->xfer_len == 0U)
 80050ea:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 80050ee:	b92a      	cbnz	r2, 80050fc <HAL_PCD_IRQHandler+0x444>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80050f0:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80050f4:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 80050f6:	f002 f917 	bl	8007328 <USB_EP0_OutStart>
 80050fa:	e004      	b.n	8005106 <HAL_PCD_IRQHandler+0x44e>
            ep->xfer_buff += ep->xfer_count;
 80050fc:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 8005100:	441a      	add	r2, r3
 8005102:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8005106:	4659      	mov	r1, fp
 8005108:	4620      	mov	r0, r4
 800510a:	f7fc fbad 	bl	8001868 <HAL_PCD_DataOutStageCallback>
 800510e:	e784      	b.n	800501a <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 8005110:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 80052c4 <HAL_PCD_IRQHandler+0x60c>
 8005114:	4561      	cmp	r1, ip
 8005116:	d107      	bne.n	8005128 <HAL_PCD_IRQHandler+0x470>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 8005118:	0411      	lsls	r1, r2, #16
 800511a:	f53f af76 	bmi.w	800500a <HAL_PCD_IRQHandler+0x352>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 800511e:	0690      	lsls	r0, r2, #26
 8005120:	d5f1      	bpl.n	8005106 <HAL_PCD_IRQHandler+0x44e>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8005122:	2220      	movs	r2, #32
 8005124:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8005126:	e7ee      	b.n	8005106 <HAL_PCD_IRQHandler+0x44e>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8005128:	2f00      	cmp	r7, #0
 800512a:	d1ec      	bne.n	8005106 <HAL_PCD_IRQHandler+0x44e>
 800512c:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 8005130:	2b00      	cmp	r3, #0
 8005132:	d1e8      	bne.n	8005106 <HAL_PCD_IRQHandler+0x44e>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8005134:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005138:	4639      	mov	r1, r7
 800513a:	e7dc      	b.n	80050f6 <HAL_PCD_IRQHandler+0x43e>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 800513c:	9b04      	ldr	r3, [sp, #16]
 800513e:	07db      	lsls	r3, r3, #31
 8005140:	f140 8099 	bpl.w	8005276 <HAL_PCD_IRQHandler+0x5be>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005144:	fa5f f38a 	uxtb.w	r3, sl
 8005148:	4619      	mov	r1, r3
 800514a:	9305      	str	r3, [sp, #20]
 800514c:	f002 f8c9 	bl	80072e2 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8005150:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005154:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8005156:	d01f      	beq.n	8005198 <HAL_PCD_IRQHandler+0x4e0>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005158:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 800515a:	2101      	movs	r1, #1
 800515c:	f00a 020f 	and.w	r2, sl, #15
 8005160:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005164:	ea23 0302 	bic.w	r3, r3, r2
 8005168:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 800516a:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 800516e:	79a1      	ldrb	r1, [r4, #6]
 8005170:	2901      	cmp	r1, #1
 8005172:	d10d      	bne.n	8005190 <HAL_PCD_IRQHandler+0x4d8>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 8005174:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 8005178:	4413      	add	r3, r2
 800517a:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 800517c:	f1ba 0f00 	cmp.w	sl, #0
 8005180:	d106      	bne.n	8005190 <HAL_PCD_IRQHandler+0x4d8>
 8005182:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005184:	b923      	cbnz	r3, 8005190 <HAL_PCD_IRQHandler+0x4d8>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005186:	6820      	ldr	r0, [r4, #0]
 8005188:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800518c:	f002 f8cc 	bl	8007328 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8005190:	9905      	ldr	r1, [sp, #20]
 8005192:	4620      	mov	r0, r4
 8005194:	f7fc fb71 	bl	800187a <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8005198:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 800519c:	bf1c      	itt	ne
 800519e:	2308      	movne	r3, #8
 80051a0:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 80051a4:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 80051a8:	bf1c      	itt	ne
 80051aa:	2310      	movne	r3, #16
 80051ac:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 80051b0:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 80051b4:	bf1c      	itt	ne
 80051b6:	2340      	movne	r3, #64	@ 0x40
 80051b8:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 80051bc:	f018 0f02 	tst.w	r8, #2
 80051c0:	d00f      	beq.n	80051e2 <HAL_PCD_IRQHandler+0x52a>
            (void)USB_FlushTxFifo(USBx, epnum);
 80051c2:	4651      	mov	r1, sl
 80051c4:	4630      	mov	r0, r6
 80051c6:	f001 fcd1 	bl	8006b6c <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 80051ca:	7dfb      	ldrb	r3, [r7, #23]
 80051cc:	2b01      	cmp	r3, #1
 80051ce:	d105      	bne.n	80051dc <HAL_PCD_IRQHandler+0x524>
              ep->is_iso_incomplete = 0U;
 80051d0:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80051d2:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 80051d4:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80051d6:	4620      	mov	r0, r4
 80051d8:	f7fc fb8e 	bl	80018f8 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 80051dc:	2302      	movs	r3, #2
 80051de:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80051e2:	6823      	ldr	r3, [r4, #0]
 80051e4:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 80051e6:	f018 0f80 	tst.w	r8, #128	@ 0x80
 80051ea:	d044      	beq.n	8005276 <HAL_PCD_IRQHandler+0x5be>
  if (ep->xfer_count > ep->xfer_len)
 80051ec:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80051f0:	429a      	cmp	r2, r3
 80051f2:	d840      	bhi.n	8005276 <HAL_PCD_IRQHandler+0x5be>
  len = ep->xfer_len - ep->xfer_count;
 80051f4:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 80051f8:	69fb      	ldr	r3, [r7, #28]
 80051fa:	4598      	cmp	r8, r3
 80051fc:	bf28      	it	cs
 80051fe:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005200:	9b06      	ldr	r3, [sp, #24]
 8005202:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 8005206:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800520a:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 800520e:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005212:	9307      	str	r3, [sp, #28]
 8005214:	9b07      	ldr	r3, [sp, #28]
 8005216:	6999      	ldr	r1, [r3, #24]
 8005218:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 800521a:	4541      	cmp	r1, r8
 800521c:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8005220:	d327      	bcc.n	8005272 <HAL_PCD_IRQHandler+0x5ba>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005222:	4293      	cmp	r3, r2
 8005224:	d80b      	bhi.n	800523e <HAL_PCD_IRQHandler+0x586>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005226:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005228:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800522c:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005230:	2101      	movs	r1, #1
 8005232:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005234:	ea22 0201 	bic.w	r2, r2, r1
 8005238:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 800523c:	e01b      	b.n	8005276 <HAL_PCD_IRQHandler+0x5be>
    len = ep->xfer_len - ep->xfer_count;
 800523e:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 8005242:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8005244:	9a05      	ldr	r2, [sp, #20]
 8005246:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8005248:	4599      	cmp	r9, r3
 800524a:	bf28      	it	cs
 800524c:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 800524e:	79a3      	ldrb	r3, [r4, #6]
 8005250:	9300      	str	r3, [sp, #0]
 8005252:	6a39      	ldr	r1, [r7, #32]
 8005254:	fa1f f389 	uxth.w	r3, r9
 8005258:	f001 fe70 	bl	8006f3c <USB_WritePacket>
    ep->xfer_buff  += len;
 800525c:	6a3b      	ldr	r3, [r7, #32]
 800525e:	444b      	add	r3, r9
 8005260:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 8005262:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 8005264:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8005268:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 800526a:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 800526e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005270:	e7d0      	b.n	8005214 <HAL_PCD_IRQHandler+0x55c>
  if (ep->xfer_len <= ep->xfer_count)
 8005272:	4293      	cmp	r3, r2
 8005274:	d9d7      	bls.n	8005226 <HAL_PCD_IRQHandler+0x56e>
        ep_intr >>= 1U;
 8005276:	9b04      	ldr	r3, [sp, #16]
 8005278:	085b      	lsrs	r3, r3, #1
        epnum++;
 800527a:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 800527e:	9304      	str	r3, [sp, #16]
 8005280:	3724      	adds	r7, #36	@ 0x24
 8005282:	f10b 0b20 	add.w	fp, fp, #32
 8005286:	e583      	b.n	8004d90 <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8005288:	4620      	mov	r0, r4
 800528a:	f7fc fb2d 	bl	80018e8 <HAL_PCD_ResumeCallback>
 800528e:	e598      	b.n	8004dc2 <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005290:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8005292:	681a      	ldr	r2, [r3, #0]
 8005294:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005298:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 800529a:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800529e:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80052a2:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 80052a6:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 80052aa:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80052ae:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80052b2:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80052b6:	9a03      	ldr	r2, [sp, #12]
 80052b8:	3201      	adds	r2, #1
 80052ba:	9203      	str	r2, [sp, #12]
 80052bc:	3320      	adds	r3, #32
 80052be:	e5a7      	b.n	8004e10 <HAL_PCD_IRQHandler+0x158>
 80052c0:	4f54300a 	.word	0x4f54300a
 80052c4:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 80052c8:	696b      	ldr	r3, [r5, #20]
 80052ca:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80052ce:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 80052d2:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 80052d4:	692b      	ldr	r3, [r5, #16]
 80052d6:	f043 030b 	orr.w	r3, r3, #11
 80052da:	612b      	str	r3, [r5, #16]
 80052dc:	e5ae      	b.n	8004e3c <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 80052de:	69b3      	ldr	r3, [r6, #24]
 80052e0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80052e4:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80052e6:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80052e8:	f204 2857 	addw	r8, r4, #599	@ 0x257
 80052ec:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80052f0:	7923      	ldrb	r3, [r4, #4]
 80052f2:	42bb      	cmp	r3, r7
 80052f4:	f67f ade2 	bls.w	8004ebc <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80052f8:	fb09 f307 	mul.w	r3, r9, r7
 80052fc:	f818 3003 	ldrb.w	r3, [r8, r3]
 8005300:	2b01      	cmp	r3, #1
 8005302:	d103      	bne.n	800530c <HAL_PCD_IRQHandler+0x654>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 8005304:	b2f9      	uxtb	r1, r7
 8005306:	4620      	mov	r0, r4
 8005308:	f7ff fcc5 	bl	8004c96 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800530c:	3701      	adds	r7, #1
 800530e:	e7ef      	b.n	80052f0 <HAL_PCD_IRQHandler+0x638>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8005310:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 8005314:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8005318:	2b01      	cmp	r3, #1
 800531a:	d109      	bne.n	8005330 <HAL_PCD_IRQHandler+0x678>
 800531c:	2a00      	cmp	r2, #0
 800531e:	da07      	bge.n	8005330 <HAL_PCD_IRQHandler+0x678>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8005320:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 8005324:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8005328:	b2c9      	uxtb	r1, r1
 800532a:	4620      	mov	r0, r4
 800532c:	f7ff fcb3 	bl	8004c96 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005330:	3701      	adds	r7, #1
 8005332:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 8005336:	f109 0920 	add.w	r9, r9, #32
 800533a:	e5c8      	b.n	8004ece <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800533c:	f10c 0c01 	add.w	ip, ip, #1
 8005340:	3324      	adds	r3, #36	@ 0x24
 8005342:	3120      	adds	r1, #32
 8005344:	e5d8      	b.n	8004ef8 <HAL_PCD_IRQHandler+0x240>
 8005346:	bf00      	nop

08005348 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005348:	6800      	ldr	r0, [r0, #0]
{
 800534a:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 800534c:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 800534e:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 8005350:	b919      	cbnz	r1, 800535a <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8005352:	4313      	orrs	r3, r2
 8005354:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 8005356:	2000      	movs	r0, #0
 8005358:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 800535a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 800535c:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 800535e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005362:	2400      	movs	r4, #0
 8005364:	42b4      	cmp	r4, r6
 8005366:	d305      	bcc.n	8005374 <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8005368:	313f      	adds	r1, #63	@ 0x3f
 800536a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 800536e:	4313      	orrs	r3, r2
 8005370:	6043      	str	r3, [r0, #4]
 8005372:	e7f0      	b.n	8005356 <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8005374:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8005378:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800537c:	3401      	adds	r4, #1
 800537e:	686d      	ldr	r5, [r5, #4]
 8005380:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005384:	e7ee      	b.n	8005364 <HAL_PCDEx_SetTxFiFo+0x1c>

08005386 <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8005386:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8005388:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 800538a:	6259      	str	r1, [r3, #36]	@ 0x24
}
 800538c:	4770      	bx	lr

0800538e <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 800538e:	4770      	bx	lr

08005390 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005390:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005394:	4604      	mov	r4, r0
 8005396:	b340      	cbz	r0, 80053ea <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005398:	6803      	ldr	r3, [r0, #0]
 800539a:	07de      	lsls	r6, r3, #31
 800539c:	d410      	bmi.n	80053c0 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800539e:	6823      	ldr	r3, [r4, #0]
 80053a0:	079d      	lsls	r5, r3, #30
 80053a2:	d45b      	bmi.n	800545c <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80053a4:	6823      	ldr	r3, [r4, #0]
 80053a6:	0719      	lsls	r1, r3, #28
 80053a8:	f100 809d 	bmi.w	80054e6 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80053ac:	6823      	ldr	r3, [r4, #0]
 80053ae:	075a      	lsls	r2, r3, #29
 80053b0:	f100 80bd 	bmi.w	800552e <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80053b4:	69a3      	ldr	r3, [r4, #24]
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	f040 8124 	bne.w	8005604 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80053bc:	2000      	movs	r0, #0
 80053be:	e02c      	b.n	800541a <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80053c0:	4b8d      	ldr	r3, [pc, #564]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 80053c2:	689a      	ldr	r2, [r3, #8]
 80053c4:	f002 020c 	and.w	r2, r2, #12
 80053c8:	2a04      	cmp	r2, #4
 80053ca:	d007      	beq.n	80053dc <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80053cc:	689a      	ldr	r2, [r3, #8]
 80053ce:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80053d2:	2a08      	cmp	r2, #8
 80053d4:	d10b      	bne.n	80053ee <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80053d6:	685b      	ldr	r3, [r3, #4]
 80053d8:	0259      	lsls	r1, r3, #9
 80053da:	d508      	bpl.n	80053ee <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80053dc:	4b86      	ldr	r3, [pc, #536]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	039a      	lsls	r2, r3, #14
 80053e2:	d5dc      	bpl.n	800539e <HAL_RCC_OscConfig+0xe>
 80053e4:	6863      	ldr	r3, [r4, #4]
 80053e6:	2b00      	cmp	r3, #0
 80053e8:	d1d9      	bne.n	800539e <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80053ea:	2001      	movs	r0, #1
 80053ec:	e015      	b.n	800541a <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80053ee:	6863      	ldr	r3, [r4, #4]
 80053f0:	4d81      	ldr	r5, [pc, #516]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 80053f2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80053f6:	d113      	bne.n	8005420 <HAL_RCC_OscConfig+0x90>
 80053f8:	682b      	ldr	r3, [r5, #0]
 80053fa:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80053fe:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005400:	f7fe fa34 	bl	800386c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005404:	4e7c      	ldr	r6, [pc, #496]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005406:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005408:	6833      	ldr	r3, [r6, #0]
 800540a:	039b      	lsls	r3, r3, #14
 800540c:	d4c7      	bmi.n	800539e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800540e:	f7fe fa2d 	bl	800386c <HAL_GetTick>
 8005412:	1b40      	subs	r0, r0, r5
 8005414:	2864      	cmp	r0, #100	@ 0x64
 8005416:	d9f7      	bls.n	8005408 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005418:	2003      	movs	r0, #3
}
 800541a:	b002      	add	sp, #8
 800541c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005420:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005424:	d104      	bne.n	8005430 <HAL_RCC_OscConfig+0xa0>
 8005426:	682b      	ldr	r3, [r5, #0]
 8005428:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800542c:	602b      	str	r3, [r5, #0]
 800542e:	e7e3      	b.n	80053f8 <HAL_RCC_OscConfig+0x68>
 8005430:	682a      	ldr	r2, [r5, #0]
 8005432:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8005436:	602a      	str	r2, [r5, #0]
 8005438:	682a      	ldr	r2, [r5, #0]
 800543a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800543e:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005440:	2b00      	cmp	r3, #0
 8005442:	d1dd      	bne.n	8005400 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005444:	f7fe fa12 	bl	800386c <HAL_GetTick>
 8005448:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800544a:	682b      	ldr	r3, [r5, #0]
 800544c:	039f      	lsls	r7, r3, #14
 800544e:	d5a6      	bpl.n	800539e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005450:	f7fe fa0c 	bl	800386c <HAL_GetTick>
 8005454:	1b80      	subs	r0, r0, r6
 8005456:	2864      	cmp	r0, #100	@ 0x64
 8005458:	d9f7      	bls.n	800544a <HAL_RCC_OscConfig+0xba>
 800545a:	e7dd      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800545c:	4b66      	ldr	r3, [pc, #408]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 800545e:	689a      	ldr	r2, [r3, #8]
 8005460:	f012 0f0c 	tst.w	r2, #12
 8005464:	d007      	beq.n	8005476 <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005466:	689a      	ldr	r2, [r3, #8]
 8005468:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800546c:	2a08      	cmp	r2, #8
 800546e:	d111      	bne.n	8005494 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005470:	685b      	ldr	r3, [r3, #4]
 8005472:	025d      	lsls	r5, r3, #9
 8005474:	d40e      	bmi.n	8005494 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005476:	4a60      	ldr	r2, [pc, #384]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 8005478:	6813      	ldr	r3, [r2, #0]
 800547a:	0799      	lsls	r1, r3, #30
 800547c:	d502      	bpl.n	8005484 <HAL_RCC_OscConfig+0xf4>
 800547e:	68e3      	ldr	r3, [r4, #12]
 8005480:	2b01      	cmp	r3, #1
 8005482:	d1b2      	bne.n	80053ea <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005484:	6813      	ldr	r3, [r2, #0]
 8005486:	6921      	ldr	r1, [r4, #16]
 8005488:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800548c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005490:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005492:	e787      	b.n	80053a4 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005494:	68e2      	ldr	r2, [r4, #12]
 8005496:	4b59      	ldr	r3, [pc, #356]	@ (80055fc <HAL_RCC_OscConfig+0x26c>)
 8005498:	b1b2      	cbz	r2, 80054c8 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800549a:	2201      	movs	r2, #1
 800549c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800549e:	f7fe f9e5 	bl	800386c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80054a2:	4d55      	ldr	r5, [pc, #340]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80054a4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80054a6:	682b      	ldr	r3, [r5, #0]
 80054a8:	079b      	lsls	r3, r3, #30
 80054aa:	d507      	bpl.n	80054bc <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80054ac:	682b      	ldr	r3, [r5, #0]
 80054ae:	6922      	ldr	r2, [r4, #16]
 80054b0:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80054b4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80054b8:	602b      	str	r3, [r5, #0]
 80054ba:	e773      	b.n	80053a4 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80054bc:	f7fe f9d6 	bl	800386c <HAL_GetTick>
 80054c0:	1b80      	subs	r0, r0, r6
 80054c2:	2802      	cmp	r0, #2
 80054c4:	d9ef      	bls.n	80054a6 <HAL_RCC_OscConfig+0x116>
 80054c6:	e7a7      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80054c8:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80054ca:	f7fe f9cf 	bl	800386c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80054ce:	4e4a      	ldr	r6, [pc, #296]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80054d0:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80054d2:	6833      	ldr	r3, [r6, #0]
 80054d4:	079f      	lsls	r7, r3, #30
 80054d6:	f57f af65 	bpl.w	80053a4 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80054da:	f7fe f9c7 	bl	800386c <HAL_GetTick>
 80054de:	1b40      	subs	r0, r0, r5
 80054e0:	2802      	cmp	r0, #2
 80054e2:	d9f6      	bls.n	80054d2 <HAL_RCC_OscConfig+0x142>
 80054e4:	e798      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80054e6:	6962      	ldr	r2, [r4, #20]
 80054e8:	4b44      	ldr	r3, [pc, #272]	@ (80055fc <HAL_RCC_OscConfig+0x26c>)
 80054ea:	b182      	cbz	r2, 800550e <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80054ec:	2201      	movs	r2, #1
 80054ee:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80054f2:	f7fe f9bb 	bl	800386c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80054f6:	4e40      	ldr	r6, [pc, #256]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80054f8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80054fa:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80054fc:	079b      	lsls	r3, r3, #30
 80054fe:	f53f af55 	bmi.w	80053ac <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005502:	f7fe f9b3 	bl	800386c <HAL_GetTick>
 8005506:	1b40      	subs	r0, r0, r5
 8005508:	2802      	cmp	r0, #2
 800550a:	d9f6      	bls.n	80054fa <HAL_RCC_OscConfig+0x16a>
 800550c:	e784      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800550e:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005512:	f7fe f9ab 	bl	800386c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005516:	4e38      	ldr	r6, [pc, #224]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005518:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800551a:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800551c:	079f      	lsls	r7, r3, #30
 800551e:	f57f af45 	bpl.w	80053ac <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005522:	f7fe f9a3 	bl	800386c <HAL_GetTick>
 8005526:	1b40      	subs	r0, r0, r5
 8005528:	2802      	cmp	r0, #2
 800552a:	d9f6      	bls.n	800551a <HAL_RCC_OscConfig+0x18a>
 800552c:	e774      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800552e:	4b32      	ldr	r3, [pc, #200]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 8005530:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005532:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8005536:	d128      	bne.n	800558a <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005538:	9201      	str	r2, [sp, #4]
 800553a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800553c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005540:	641a      	str	r2, [r3, #64]	@ 0x40
 8005542:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005544:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005548:	9301      	str	r3, [sp, #4]
 800554a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800554c:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800554e:	4d2c      	ldr	r5, [pc, #176]	@ (8005600 <HAL_RCC_OscConfig+0x270>)
 8005550:	682b      	ldr	r3, [r5, #0]
 8005552:	05d8      	lsls	r0, r3, #23
 8005554:	d51b      	bpl.n	800558e <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005556:	68a3      	ldr	r3, [r4, #8]
 8005558:	4d27      	ldr	r5, [pc, #156]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 800555a:	2b01      	cmp	r3, #1
 800555c:	d127      	bne.n	80055ae <HAL_RCC_OscConfig+0x21e>
 800555e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005560:	f043 0301 	orr.w	r3, r3, #1
 8005564:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005566:	f7fe f981 	bl	800386c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800556a:	4e23      	ldr	r6, [pc, #140]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800556c:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800556e:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005572:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005574:	079a      	lsls	r2, r3, #30
 8005576:	d539      	bpl.n	80055ec <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8005578:	2f00      	cmp	r7, #0
 800557a:	f43f af1b 	beq.w	80053b4 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800557e:	4a1e      	ldr	r2, [pc, #120]	@ (80055f8 <HAL_RCC_OscConfig+0x268>)
 8005580:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005582:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005586:	6413      	str	r3, [r2, #64]	@ 0x40
 8005588:	e714      	b.n	80053b4 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800558a:	2700      	movs	r7, #0
 800558c:	e7df      	b.n	800554e <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800558e:	682b      	ldr	r3, [r5, #0]
 8005590:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005594:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005596:	f7fe f969 	bl	800386c <HAL_GetTick>
 800559a:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800559c:	682b      	ldr	r3, [r5, #0]
 800559e:	05d9      	lsls	r1, r3, #23
 80055a0:	d4d9      	bmi.n	8005556 <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80055a2:	f7fe f963 	bl	800386c <HAL_GetTick>
 80055a6:	1b80      	subs	r0, r0, r6
 80055a8:	2802      	cmp	r0, #2
 80055aa:	d9f7      	bls.n	800559c <HAL_RCC_OscConfig+0x20c>
 80055ac:	e734      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80055ae:	2b05      	cmp	r3, #5
 80055b0:	d104      	bne.n	80055bc <HAL_RCC_OscConfig+0x22c>
 80055b2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80055b4:	f043 0304 	orr.w	r3, r3, #4
 80055b8:	672b      	str	r3, [r5, #112]	@ 0x70
 80055ba:	e7d0      	b.n	800555e <HAL_RCC_OscConfig+0x1ce>
 80055bc:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80055be:	f022 0201 	bic.w	r2, r2, #1
 80055c2:	672a      	str	r2, [r5, #112]	@ 0x70
 80055c4:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80055c6:	f022 0204 	bic.w	r2, r2, #4
 80055ca:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80055cc:	2b00      	cmp	r3, #0
 80055ce:	d1ca      	bne.n	8005566 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 80055d0:	f7fe f94c 	bl	800386c <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80055d4:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80055d8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80055da:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80055dc:	079b      	lsls	r3, r3, #30
 80055de:	d5cb      	bpl.n	8005578 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80055e0:	f7fe f944 	bl	800386c <HAL_GetTick>
 80055e4:	1b80      	subs	r0, r0, r6
 80055e6:	4540      	cmp	r0, r8
 80055e8:	d9f7      	bls.n	80055da <HAL_RCC_OscConfig+0x24a>
 80055ea:	e715      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80055ec:	f7fe f93e 	bl	800386c <HAL_GetTick>
 80055f0:	1b40      	subs	r0, r0, r5
 80055f2:	4540      	cmp	r0, r8
 80055f4:	d9bd      	bls.n	8005572 <HAL_RCC_OscConfig+0x1e2>
 80055f6:	e70f      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
 80055f8:	40023800 	.word	0x40023800
 80055fc:	42470000 	.word	0x42470000
 8005600:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005604:	4d37      	ldr	r5, [pc, #220]	@ (80056e4 <HAL_RCC_OscConfig+0x354>)
 8005606:	68aa      	ldr	r2, [r5, #8]
 8005608:	f002 020c 	and.w	r2, r2, #12
 800560c:	2a08      	cmp	r2, #8
 800560e:	d03e      	beq.n	800568e <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005610:	2b02      	cmp	r3, #2
 8005612:	4b35      	ldr	r3, [pc, #212]	@ (80056e8 <HAL_RCC_OscConfig+0x358>)
 8005614:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8005618:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800561a:	d12b      	bne.n	8005674 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 800561c:	f7fe f926 	bl	800386c <HAL_GetTick>
 8005620:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005622:	682b      	ldr	r3, [r5, #0]
 8005624:	0199      	lsls	r1, r3, #6
 8005626:	d41f      	bmi.n	8005668 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005628:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800562c:	4313      	orrs	r3, r2
 800562e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005630:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005634:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005636:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800563a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800563c:	0852      	lsrs	r2, r2, #1
 800563e:	3a01      	subs	r2, #1
 8005640:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005644:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005646:	4b28      	ldr	r3, [pc, #160]	@ (80056e8 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005648:	4d26      	ldr	r5, [pc, #152]	@ (80056e4 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800564a:	2201      	movs	r2, #1
 800564c:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800564e:	f7fe f90d 	bl	800386c <HAL_GetTick>
 8005652:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005654:	682b      	ldr	r3, [r5, #0]
 8005656:	019a      	lsls	r2, r3, #6
 8005658:	f53f aeb0 	bmi.w	80053bc <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800565c:	f7fe f906 	bl	800386c <HAL_GetTick>
 8005660:	1b00      	subs	r0, r0, r4
 8005662:	2802      	cmp	r0, #2
 8005664:	d9f6      	bls.n	8005654 <HAL_RCC_OscConfig+0x2c4>
 8005666:	e6d7      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005668:	f7fe f900 	bl	800386c <HAL_GetTick>
 800566c:	1b80      	subs	r0, r0, r6
 800566e:	2802      	cmp	r0, #2
 8005670:	d9d7      	bls.n	8005622 <HAL_RCC_OscConfig+0x292>
 8005672:	e6d1      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8005674:	f7fe f8fa 	bl	800386c <HAL_GetTick>
 8005678:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800567a:	682b      	ldr	r3, [r5, #0]
 800567c:	019b      	lsls	r3, r3, #6
 800567e:	f57f ae9d 	bpl.w	80053bc <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005682:	f7fe f8f3 	bl	800386c <HAL_GetTick>
 8005686:	1b00      	subs	r0, r0, r4
 8005688:	2802      	cmp	r0, #2
 800568a:	d9f6      	bls.n	800567a <HAL_RCC_OscConfig+0x2ea>
 800568c:	e6c4      	b.n	8005418 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800568e:	2b01      	cmp	r3, #1
 8005690:	f43f aeab 	beq.w	80053ea <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8005694:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005696:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005698:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800569c:	4291      	cmp	r1, r2
 800569e:	f47f aea4 	bne.w	80053ea <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80056a2:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80056a4:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80056a8:	428a      	cmp	r2, r1
 80056aa:	f47f ae9e 	bne.w	80053ea <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80056ae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80056b0:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 80056b4:	401a      	ands	r2, r3
 80056b6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80056ba:	f47f ae96 	bne.w	80053ea <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80056be:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80056c0:	0852      	lsrs	r2, r2, #1
 80056c2:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 80056c6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80056c8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80056cc:	f47f ae8d 	bne.w	80053ea <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80056d0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80056d2:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80056d6:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80056da:	bf14      	ite	ne
 80056dc:	2001      	movne	r0, #1
 80056de:	2000      	moveq	r0, #0
 80056e0:	e69b      	b.n	800541a <HAL_RCC_OscConfig+0x8a>
 80056e2:	bf00      	nop
 80056e4:	40023800 	.word	0x40023800
 80056e8:	42470000 	.word	0x42470000

080056ec <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80056ec:	4913      	ldr	r1, [pc, #76]	@ (800573c <HAL_RCC_GetSysClockFreq+0x50>)
{
 80056ee:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80056f0:	688b      	ldr	r3, [r1, #8]
 80056f2:	f003 030c 	and.w	r3, r3, #12
 80056f6:	2b04      	cmp	r3, #4
 80056f8:	d01c      	beq.n	8005734 <HAL_RCC_GetSysClockFreq+0x48>
 80056fa:	2b08      	cmp	r3, #8
 80056fc:	d11c      	bne.n	8005738 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80056fe:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005700:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005702:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005704:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005708:	bf14      	ite	ne
 800570a:	480d      	ldrne	r0, [pc, #52]	@ (8005740 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800570c:	480d      	ldreq	r0, [pc, #52]	@ (8005744 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800570e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005712:	bf18      	it	ne
 8005714:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005716:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800571a:	fba1 0100 	umull	r0, r1, r1, r0
 800571e:	f7fa fe0f 	bl	8000340 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8005722:	4b06      	ldr	r3, [pc, #24]	@ (800573c <HAL_RCC_GetSysClockFreq+0x50>)
 8005724:	685b      	ldr	r3, [r3, #4]
 8005726:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800572a:	3301      	adds	r3, #1
 800572c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800572e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005732:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005734:	4802      	ldr	r0, [pc, #8]	@ (8005740 <HAL_RCC_GetSysClockFreq+0x54>)
 8005736:	e7fc      	b.n	8005732 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005738:	4802      	ldr	r0, [pc, #8]	@ (8005744 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800573a:	e7fa      	b.n	8005732 <HAL_RCC_GetSysClockFreq+0x46>
 800573c:	40023800 	.word	0x40023800
 8005740:	007a1200 	.word	0x007a1200
 8005744:	00f42400 	.word	0x00f42400

08005748 <HAL_RCC_ClockConfig>:
{
 8005748:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800574c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800574e:	4604      	mov	r4, r0
 8005750:	b910      	cbnz	r0, 8005758 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005752:	2001      	movs	r0, #1
}
 8005754:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005758:	4b43      	ldr	r3, [pc, #268]	@ (8005868 <HAL_RCC_ClockConfig+0x120>)
 800575a:	681a      	ldr	r2, [r3, #0]
 800575c:	f002 020f 	and.w	r2, r2, #15
 8005760:	428a      	cmp	r2, r1
 8005762:	d328      	bcc.n	80057b6 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005764:	6821      	ldr	r1, [r4, #0]
 8005766:	078f      	lsls	r7, r1, #30
 8005768:	d42d      	bmi.n	80057c6 <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800576a:	07c8      	lsls	r0, r1, #31
 800576c:	d440      	bmi.n	80057f0 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800576e:	4b3e      	ldr	r3, [pc, #248]	@ (8005868 <HAL_RCC_ClockConfig+0x120>)
 8005770:	681a      	ldr	r2, [r3, #0]
 8005772:	f002 020f 	and.w	r2, r2, #15
 8005776:	42aa      	cmp	r2, r5
 8005778:	d865      	bhi.n	8005846 <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800577a:	6822      	ldr	r2, [r4, #0]
 800577c:	0751      	lsls	r1, r2, #29
 800577e:	d46b      	bmi.n	8005858 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005780:	0713      	lsls	r3, r2, #28
 8005782:	d507      	bpl.n	8005794 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005784:	4a39      	ldr	r2, [pc, #228]	@ (800586c <HAL_RCC_ClockConfig+0x124>)
 8005786:	6921      	ldr	r1, [r4, #16]
 8005788:	6893      	ldr	r3, [r2, #8]
 800578a:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800578e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005792:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005794:	f7ff ffaa 	bl	80056ec <HAL_RCC_GetSysClockFreq>
 8005798:	4b34      	ldr	r3, [pc, #208]	@ (800586c <HAL_RCC_ClockConfig+0x124>)
 800579a:	4a35      	ldr	r2, [pc, #212]	@ (8005870 <HAL_RCC_ClockConfig+0x128>)
 800579c:	689b      	ldr	r3, [r3, #8]
 800579e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80057a2:	5cd3      	ldrb	r3, [r2, r3]
 80057a4:	40d8      	lsrs	r0, r3
 80057a6:	4b33      	ldr	r3, [pc, #204]	@ (8005874 <HAL_RCC_ClockConfig+0x12c>)
 80057a8:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 80057aa:	4b33      	ldr	r3, [pc, #204]	@ (8005878 <HAL_RCC_ClockConfig+0x130>)
 80057ac:	6818      	ldr	r0, [r3, #0]
 80057ae:	f7fc ff5b 	bl	8002668 <HAL_InitTick>
  return HAL_OK;
 80057b2:	2000      	movs	r0, #0
 80057b4:	e7ce      	b.n	8005754 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80057b6:	b2ca      	uxtb	r2, r1
 80057b8:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	f003 030f 	and.w	r3, r3, #15
 80057c0:	428b      	cmp	r3, r1
 80057c2:	d1c6      	bne.n	8005752 <HAL_RCC_ClockConfig+0xa>
 80057c4:	e7ce      	b.n	8005764 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80057c6:	4b29      	ldr	r3, [pc, #164]	@ (800586c <HAL_RCC_ClockConfig+0x124>)
 80057c8:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80057cc:	bf1e      	ittt	ne
 80057ce:	689a      	ldrne	r2, [r3, #8]
 80057d0:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 80057d4:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80057d6:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80057d8:	bf42      	ittt	mi
 80057da:	689a      	ldrmi	r2, [r3, #8]
 80057dc:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 80057e0:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80057e2:	689a      	ldr	r2, [r3, #8]
 80057e4:	68a0      	ldr	r0, [r4, #8]
 80057e6:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80057ea:	4302      	orrs	r2, r0
 80057ec:	609a      	str	r2, [r3, #8]
 80057ee:	e7bc      	b.n	800576a <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80057f0:	6862      	ldr	r2, [r4, #4]
 80057f2:	4b1e      	ldr	r3, [pc, #120]	@ (800586c <HAL_RCC_ClockConfig+0x124>)
 80057f4:	2a01      	cmp	r2, #1
 80057f6:	d11c      	bne.n	8005832 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80057fe:	d0a8      	beq.n	8005752 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005800:	4e1a      	ldr	r6, [pc, #104]	@ (800586c <HAL_RCC_ClockConfig+0x124>)
 8005802:	68b3      	ldr	r3, [r6, #8]
 8005804:	f023 0303 	bic.w	r3, r3, #3
 8005808:	4313      	orrs	r3, r2
 800580a:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800580c:	f7fe f82e 	bl	800386c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005810:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8005814:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005816:	68b3      	ldr	r3, [r6, #8]
 8005818:	6862      	ldr	r2, [r4, #4]
 800581a:	f003 030c 	and.w	r3, r3, #12
 800581e:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005822:	d0a4      	beq.n	800576e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005824:	f7fe f822 	bl	800386c <HAL_GetTick>
 8005828:	1bc0      	subs	r0, r0, r7
 800582a:	4540      	cmp	r0, r8
 800582c:	d9f3      	bls.n	8005816 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800582e:	2003      	movs	r0, #3
 8005830:	e790      	b.n	8005754 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005832:	1e91      	subs	r1, r2, #2
 8005834:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005836:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005838:	d802      	bhi.n	8005840 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800583a:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800583e:	e7de      	b.n	80057fe <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005840:	f013 0f02 	tst.w	r3, #2
 8005844:	e7db      	b.n	80057fe <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005846:	b2ea      	uxtb	r2, r5
 8005848:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	f003 030f 	and.w	r3, r3, #15
 8005850:	42ab      	cmp	r3, r5
 8005852:	f47f af7e 	bne.w	8005752 <HAL_RCC_ClockConfig+0xa>
 8005856:	e790      	b.n	800577a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005858:	4904      	ldr	r1, [pc, #16]	@ (800586c <HAL_RCC_ClockConfig+0x124>)
 800585a:	68e0      	ldr	r0, [r4, #12]
 800585c:	688b      	ldr	r3, [r1, #8]
 800585e:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005862:	4303      	orrs	r3, r0
 8005864:	608b      	str	r3, [r1, #8]
 8005866:	e78b      	b.n	8005780 <HAL_RCC_ClockConfig+0x38>
 8005868:	40023c00 	.word	0x40023c00
 800586c:	40023800 	.word	0x40023800
 8005870:	08024e20 	.word	0x08024e20
 8005874:	200000cc 	.word	0x200000cc
 8005878:	200000d4 	.word	0x200000d4

0800587c <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 800587c:	4b01      	ldr	r3, [pc, #4]	@ (8005884 <HAL_RCC_GetHCLKFreq+0x8>)
 800587e:	6818      	ldr	r0, [r3, #0]
 8005880:	4770      	bx	lr
 8005882:	bf00      	nop
 8005884:	200000cc 	.word	0x200000cc

08005888 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005888:	4b04      	ldr	r3, [pc, #16]	@ (800589c <HAL_RCC_GetPCLK1Freq+0x14>)
 800588a:	4a05      	ldr	r2, [pc, #20]	@ (80058a0 <HAL_RCC_GetPCLK1Freq+0x18>)
 800588c:	689b      	ldr	r3, [r3, #8]
 800588e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005892:	5cd3      	ldrb	r3, [r2, r3]
 8005894:	4a03      	ldr	r2, [pc, #12]	@ (80058a4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005896:	6810      	ldr	r0, [r2, #0]
}
 8005898:	40d8      	lsrs	r0, r3
 800589a:	4770      	bx	lr
 800589c:	40023800 	.word	0x40023800
 80058a0:	08024e18 	.word	0x08024e18
 80058a4:	200000cc 	.word	0x200000cc

080058a8 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80058a8:	4b04      	ldr	r3, [pc, #16]	@ (80058bc <HAL_RCC_GetPCLK2Freq+0x14>)
 80058aa:	4a05      	ldr	r2, [pc, #20]	@ (80058c0 <HAL_RCC_GetPCLK2Freq+0x18>)
 80058ac:	689b      	ldr	r3, [r3, #8]
 80058ae:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80058b2:	5cd3      	ldrb	r3, [r2, r3]
 80058b4:	4a03      	ldr	r2, [pc, #12]	@ (80058c4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80058b6:	6810      	ldr	r0, [r2, #0]
}
 80058b8:	40d8      	lsrs	r0, r3
 80058ba:	4770      	bx	lr
 80058bc:	40023800 	.word	0x40023800
 80058c0:	08024e18 	.word	0x08024e18
 80058c4:	200000cc 	.word	0x200000cc

080058c8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80058c8:	230f      	movs	r3, #15
 80058ca:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80058cc:	4b0b      	ldr	r3, [pc, #44]	@ (80058fc <HAL_RCC_GetClockConfig+0x34>)
 80058ce:	689a      	ldr	r2, [r3, #8]
 80058d0:	f002 0203 	and.w	r2, r2, #3
 80058d4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80058d6:	689a      	ldr	r2, [r3, #8]
 80058d8:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 80058dc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80058de:	689a      	ldr	r2, [r3, #8]
 80058e0:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 80058e4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80058e6:	689b      	ldr	r3, [r3, #8]
 80058e8:	08db      	lsrs	r3, r3, #3
 80058ea:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80058ee:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80058f0:	4b03      	ldr	r3, [pc, #12]	@ (8005900 <HAL_RCC_GetClockConfig+0x38>)
 80058f2:	681b      	ldr	r3, [r3, #0]
 80058f4:	f003 030f 	and.w	r3, r3, #15
 80058f8:	600b      	str	r3, [r1, #0]
}
 80058fa:	4770      	bx	lr
 80058fc:	40023800 	.word	0x40023800
 8005900:	40023c00 	.word	0x40023c00

08005904 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005904:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005906:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800590a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800590c:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800590e:	f040 8088 	bne.w	8005a22 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005912:	6823      	ldr	r3, [r4, #0]
 8005914:	f013 0f0c 	tst.w	r3, #12
 8005918:	d045      	beq.n	80059a6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800591a:	4b8c      	ldr	r3, [pc, #560]	@ (8005b4c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800591c:	4d8c      	ldr	r5, [pc, #560]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800591e:	2200      	movs	r2, #0
 8005920:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005922:	f7fd ffa3 	bl	800386c <HAL_GetTick>
 8005926:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005928:	682b      	ldr	r3, [r5, #0]
 800592a:	0099      	lsls	r1, r3, #2
 800592c:	f100 80cb 	bmi.w	8005ac6 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005930:	6821      	ldr	r1, [r4, #0]
 8005932:	074a      	lsls	r2, r1, #29
 8005934:	d515      	bpl.n	8005962 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005936:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800593a:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800593e:	061b      	lsls	r3, r3, #24
 8005940:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8005944:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005948:	4313      	orrs	r3, r2
 800594a:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800594e:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8005952:	6a22      	ldr	r2, [r4, #32]
 8005954:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8005958:	3a01      	subs	r2, #1
 800595a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800595e:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005962:	070b      	lsls	r3, r1, #28
 8005964:	d514      	bpl.n	8005990 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005966:	4a7a      	ldr	r2, [pc, #488]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005968:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800596a:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800596e:	6920      	ldr	r0, [r4, #16]
 8005970:	071b      	lsls	r3, r3, #28
 8005972:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8005976:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800597a:	430b      	orrs	r3, r1
 800597c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005980:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005984:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005986:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800598a:	430b      	orrs	r3, r1
 800598c:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005990:	4b6e      	ldr	r3, [pc, #440]	@ (8005b4c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005992:	4e6f      	ldr	r6, [pc, #444]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8005994:	2201      	movs	r2, #1
 8005996:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005998:	f7fd ff68 	bl	800386c <HAL_GetTick>
 800599c:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800599e:	6833      	ldr	r3, [r6, #0]
 80059a0:	009f      	lsls	r7, r3, #2
 80059a2:	f140 8097 	bpl.w	8005ad4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80059a6:	6823      	ldr	r3, [r4, #0]
 80059a8:	0698      	lsls	r0, r3, #26
 80059aa:	d534      	bpl.n	8005a16 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80059ac:	2300      	movs	r3, #0
 80059ae:	9301      	str	r3, [sp, #4]
 80059b0:	4b67      	ldr	r3, [pc, #412]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80059b2:	4d68      	ldr	r5, [pc, #416]	@ (8005b54 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80059b4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80059b6:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80059ba:	641a      	str	r2, [r3, #64]	@ 0x40
 80059bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80059be:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80059c2:	9301      	str	r3, [sp, #4]
 80059c4:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80059c6:	682b      	ldr	r3, [r5, #0]
 80059c8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80059cc:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80059ce:	f7fd ff4d 	bl	800386c <HAL_GetTick>
 80059d2:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 80059d4:	682b      	ldr	r3, [r5, #0]
 80059d6:	05d8      	lsls	r0, r3, #23
 80059d8:	f140 8083 	bpl.w	8005ae2 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80059dc:	4d5c      	ldr	r5, [pc, #368]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80059de:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80059e0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80059e2:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80059e6:	f040 8083 	bne.w	8005af0 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80059ea:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80059ec:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 80059f0:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 80059f4:	4a56      	ldr	r2, [pc, #344]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80059f6:	f040 809e 	bne.w	8005b36 <HAL_RCCEx_PeriphCLKConfig+0x232>
 80059fa:	6891      	ldr	r1, [r2, #8]
 80059fc:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8005a00:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005a04:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8005a08:	4301      	orrs	r1, r0
 8005a0a:	6091      	str	r1, [r2, #8]
 8005a0c:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8005a0e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a12:	430b      	orrs	r3, r1
 8005a14:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005a16:	6823      	ldr	r3, [r4, #0]
 8005a18:	06db      	lsls	r3, r3, #27
 8005a1a:	f100 8090 	bmi.w	8005b3e <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8005a1e:	2000      	movs	r0, #0
 8005a20:	e04f      	b.n	8005ac2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8005a22:	4b4a      	ldr	r3, [pc, #296]	@ (8005b4c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005a24:	4e4a      	ldr	r6, [pc, #296]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005a26:	2200      	movs	r2, #0
 8005a28:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005a2a:	f7fd ff1f 	bl	800386c <HAL_GetTick>
 8005a2e:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005a30:	6833      	ldr	r3, [r6, #0]
 8005a32:	011f      	lsls	r7, r3, #4
 8005a34:	d43f      	bmi.n	8005ab6 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005a36:	6821      	ldr	r1, [r4, #0]
 8005a38:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8005a3a:	bf41      	itttt	mi
 8005a3c:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005a40:	071b      	lslmi	r3, r3, #28
 8005a42:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005a46:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005a4a:	078a      	lsls	r2, r1, #30
 8005a4c:	d515      	bpl.n	8005a7a <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005a4e:	4a40      	ldr	r2, [pc, #256]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005a50:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005a52:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005a56:	6865      	ldr	r5, [r4, #4]
 8005a58:	061b      	lsls	r3, r3, #24
 8005a5a:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005a5e:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8005a62:	4303      	orrs	r3, r0
 8005a64:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005a68:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8005a6c:	69e3      	ldr	r3, [r4, #28]
 8005a6e:	f020 001f 	bic.w	r0, r0, #31
 8005a72:	3b01      	subs	r3, #1
 8005a74:	4303      	orrs	r3, r0
 8005a76:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005a7a:	064b      	lsls	r3, r1, #25
 8005a7c:	d50a      	bpl.n	8005a94 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8005a7e:	68e3      	ldr	r3, [r4, #12]
 8005a80:	6862      	ldr	r2, [r4, #4]
 8005a82:	061b      	lsls	r3, r3, #24
 8005a84:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005a88:	68a2      	ldr	r2, [r4, #8]
 8005a8a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005a8e:	4a30      	ldr	r2, [pc, #192]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005a90:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005a94:	4b2d      	ldr	r3, [pc, #180]	@ (8005b4c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005a96:	4e2e      	ldr	r6, [pc, #184]	@ (8005b50 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8005a98:	2201      	movs	r2, #1
 8005a9a:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005a9c:	f7fd fee6 	bl	800386c <HAL_GetTick>
 8005aa0:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005aa2:	6833      	ldr	r3, [r6, #0]
 8005aa4:	011f      	lsls	r7, r3, #4
 8005aa6:	f53f af34 	bmi.w	8005912 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005aaa:	f7fd fedf 	bl	800386c <HAL_GetTick>
 8005aae:	1b40      	subs	r0, r0, r5
 8005ab0:	2802      	cmp	r0, #2
 8005ab2:	d9f6      	bls.n	8005aa2 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8005ab4:	e004      	b.n	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005ab6:	f7fd fed9 	bl	800386c <HAL_GetTick>
 8005aba:	1b40      	subs	r0, r0, r5
 8005abc:	2802      	cmp	r0, #2
 8005abe:	d9b7      	bls.n	8005a30 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005ac0:	2003      	movs	r0, #3
}
 8005ac2:	b003      	add	sp, #12
 8005ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005ac6:	f7fd fed1 	bl	800386c <HAL_GetTick>
 8005aca:	1b80      	subs	r0, r0, r6
 8005acc:	2802      	cmp	r0, #2
 8005ace:	f67f af2b 	bls.w	8005928 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005ad2:	e7f5      	b.n	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005ad4:	f7fd feca 	bl	800386c <HAL_GetTick>
 8005ad8:	1b40      	subs	r0, r0, r5
 8005ada:	2802      	cmp	r0, #2
 8005adc:	f67f af5f 	bls.w	800599e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005ae0:	e7ee      	b.n	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005ae2:	f7fd fec3 	bl	800386c <HAL_GetTick>
 8005ae6:	1b80      	subs	r0, r0, r6
 8005ae8:	2802      	cmp	r0, #2
 8005aea:	f67f af73 	bls.w	80059d4 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8005aee:	e7e7      	b.n	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005af0:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8005af4:	4293      	cmp	r3, r2
 8005af6:	f43f af78 	beq.w	80059ea <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005afa:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005afc:	4a13      	ldr	r2, [pc, #76]	@ (8005b4c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005afe:	2101      	movs	r1, #1
 8005b00:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005b04:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005b08:	2100      	movs	r1, #0
 8005b0a:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8005b0e:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005b10:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005b12:	07d9      	lsls	r1, r3, #31
 8005b14:	f57f af69 	bpl.w	80059ea <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8005b18:	f7fd fea8 	bl	800386c <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005b1c:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8005b20:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005b22:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005b24:	079a      	lsls	r2, r3, #30
 8005b26:	f53f af60 	bmi.w	80059ea <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005b2a:	f7fd fe9f 	bl	800386c <HAL_GetTick>
 8005b2e:	1b80      	subs	r0, r0, r6
 8005b30:	42b8      	cmp	r0, r7
 8005b32:	d9f6      	bls.n	8005b22 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005b34:	e7c4      	b.n	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005b36:	6891      	ldr	r1, [r2, #8]
 8005b38:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005b3c:	e765      	b.n	8005a0a <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005b3e:	4b06      	ldr	r3, [pc, #24]	@ (8005b58 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005b40:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8005b44:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8005b48:	e769      	b.n	8005a1e <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8005b4a:	bf00      	nop
 8005b4c:	42470000 	.word	0x42470000
 8005b50:	40023800 	.word	0x40023800
 8005b54:	40007000 	.word	0x40007000
 8005b58:	42471000 	.word	0x42471000

08005b5c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8005b5c:	b538      	push	{r3, r4, r5, lr}
 8005b5e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8005b60:	4604      	mov	r4, r0
 8005b62:	b1c8      	cbz	r0, 8005b98 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8005b64:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005b68:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005b6c:	b91b      	cbnz	r3, 8005b76 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005b6e:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005b72:	f7fc fd0d 	bl	8002590 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005b76:	2302      	movs	r3, #2
 8005b78:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005b7c:	1d21      	adds	r1, r4, #4
 8005b7e:	6820      	ldr	r0, [r4, #0]
 8005b80:	f000 fe43 	bl	800680a <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8005b84:	6862      	ldr	r2, [r4, #4]
 8005b86:	6820      	ldr	r0, [r4, #0]
 8005b88:	4629      	mov	r1, r5
 8005b8a:	f000 fe74 	bl	8006876 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005b8e:	2301      	movs	r3, #1
 8005b90:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8005b94:	2000      	movs	r0, #0
}
 8005b96:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005b98:	2001      	movs	r0, #1
 8005b9a:	e7fc      	b.n	8005b96 <HAL_SDRAM_Init+0x3a>

08005b9c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8005b9c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005b9e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8005ba2:	2b02      	cmp	r3, #2
{
 8005ba4:	4605      	mov	r5, r0
 8005ba6:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005ba8:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8005baa:	d012      	beq.n	8005bd2 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8005bac:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8005bb0:	2c01      	cmp	r4, #1
 8005bb2:	d10f      	bne.n	8005bd4 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005bb4:	2302      	movs	r3, #2
 8005bb6:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005bba:	6828      	ldr	r0, [r5, #0]
 8005bbc:	f000 fe91 	bl	80068e2 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8005bc0:	6833      	ldr	r3, [r6, #0]
 8005bc2:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005bc4:	bf06      	itte	eq
 8005bc6:	2305      	moveq	r3, #5
 8005bc8:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8005bcc:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005bd0:	2000      	movs	r0, #0
}
 8005bd2:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8005bd4:	2001      	movs	r0, #1
 8005bd6:	e7fc      	b.n	8005bd2 <HAL_SDRAM_SendCommand+0x36>

08005bd8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8005bd8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005bda:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005bde:	2b02      	cmp	r3, #2
{
 8005be0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005be2:	b2d8      	uxtb	r0, r3
 8005be4:	d00d      	beq.n	8005c02 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8005be6:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8005bea:	2b01      	cmp	r3, #1
 8005bec:	b2dd      	uxtb	r5, r3
 8005bee:	d109      	bne.n	8005c04 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005bf0:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005bf2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005bf4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005bf8:	f000 fe97 	bl	800692a <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005bfc:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005c00:	2000      	movs	r0, #0
}
 8005c02:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005c04:	2001      	movs	r0, #1
 8005c06:	e7fc      	b.n	8005c02 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08005c08 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8005c08:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005c0c:	461f      	mov	r7, r3
 8005c0e:	4689      	mov	r9, r1
 8005c10:	4690      	mov	r8, r2
 8005c12:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8005c14:	f7fd fe2a 	bl	800386c <HAL_GetTick>
 8005c18:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8005c1a:	443d      	add	r5, r7
 8005c1c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8005c1e:	f7fd fe25 	bl	800386c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005c22:	4b26      	ldr	r3, [pc, #152]	@ (8005cbc <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8005c24:	681e      	ldr	r6, [r3, #0]
 8005c26:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8005c2a:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8005c2c:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005c2e:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005c30:	6822      	ldr	r2, [r4, #0]
 8005c32:	6893      	ldr	r3, [r2, #8]
 8005c34:	ea39 0303 	bics.w	r3, r9, r3
 8005c38:	bf0c      	ite	eq
 8005c3a:	2301      	moveq	r3, #1
 8005c3c:	2300      	movne	r3, #0
 8005c3e:	4543      	cmp	r3, r8
 8005c40:	d101      	bne.n	8005c46 <SPI_WaitFlagStateUntilTimeout+0x3e>
        count--;
      }
    }
  }

  return HAL_OK;
 8005c42:	2000      	movs	r0, #0
 8005c44:	e02e      	b.n	8005ca4 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8005c46:	1c7b      	adds	r3, r7, #1
 8005c48:	d0f3      	beq.n	8005c32 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005c4a:	f7fd fe0f 	bl	800386c <HAL_GetTick>
 8005c4e:	eba0 000a 	sub.w	r0, r0, sl
 8005c52:	42a8      	cmp	r0, r5
 8005c54:	d329      	bcc.n	8005caa <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005c56:	6823      	ldr	r3, [r4, #0]
 8005c58:	685a      	ldr	r2, [r3, #4]
 8005c5a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005c5e:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005c60:	6862      	ldr	r2, [r4, #4]
 8005c62:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005c66:	d10a      	bne.n	8005c7e <SPI_WaitFlagStateUntilTimeout+0x76>
 8005c68:	68a2      	ldr	r2, [r4, #8]
 8005c6a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8005c6e:	d002      	beq.n	8005c76 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005c70:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8005c74:	d103      	bne.n	8005c7e <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8005c76:	681a      	ldr	r2, [r3, #0]
 8005c78:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005c7c:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005c7e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005c80:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8005c84:	d107      	bne.n	8005c96 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8005c86:	681a      	ldr	r2, [r3, #0]
 8005c88:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005c8c:	601a      	str	r2, [r3, #0]
 8005c8e:	681a      	ldr	r2, [r3, #0]
 8005c90:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005c94:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005c96:	2301      	movs	r3, #1
 8005c98:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8005c9c:	2300      	movs	r3, #0
 8005c9e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8005ca2:	2003      	movs	r0, #3
}
 8005ca4:	b002      	add	sp, #8
 8005ca6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 8005caa:	9b01      	ldr	r3, [sp, #4]
 8005cac:	b11b      	cbz	r3, 8005cb6 <SPI_WaitFlagStateUntilTimeout+0xae>
        count--;
 8005cae:	9b01      	ldr	r3, [sp, #4]
 8005cb0:	3b01      	subs	r3, #1
 8005cb2:	9301      	str	r3, [sp, #4]
 8005cb4:	e7bc      	b.n	8005c30 <SPI_WaitFlagStateUntilTimeout+0x28>
        tmp_timeout = 0U;
 8005cb6:	461d      	mov	r5, r3
 8005cb8:	e7ba      	b.n	8005c30 <SPI_WaitFlagStateUntilTimeout+0x28>
 8005cba:	bf00      	nop
 8005cbc:	200000cc 	.word	0x200000cc

08005cc0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cc2:	b085      	sub	sp, #20
  __IO uint32_t count;

  /* Wait until TXE flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005cc4:	460b      	mov	r3, r1
 8005cc6:	9200      	str	r2, [sp, #0]
{
 8005cc8:	460e      	mov	r6, r1
 8005cca:	4617      	mov	r7, r2
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005ccc:	2102      	movs	r1, #2
 8005cce:	2201      	movs	r2, #1
{
 8005cd0:	4604      	mov	r4, r0
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005cd2:	f7ff ff99 	bl	8005c08 <SPI_WaitFlagStateUntilTimeout>
 8005cd6:	4605      	mov	r5, r0
 8005cd8:	b128      	cbz	r0, 8005ce6 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005cda:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005cdc:	f043 0320 	orr.w	r3, r3, #32
 8005ce0:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8005ce2:	2503      	movs	r5, #3
 8005ce4:	e015      	b.n	8005d12 <SPI_EndRxTxTransaction+0x52>
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005ce6:	4b12      	ldr	r3, [pc, #72]	@ (8005d30 <SPI_EndRxTxTransaction+0x70>)
 8005ce8:	6818      	ldr	r0, [r3, #0]
 8005cea:	4b12      	ldr	r3, [pc, #72]	@ (8005d34 <SPI_EndRxTxTransaction+0x74>)
 8005cec:	fbb0 f0f3 	udiv	r0, r0, r3
 8005cf0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8005cf4:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005cf6:	6863      	ldr	r3, [r4, #4]
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005cf8:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005cfa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005cfe:	d10b      	bne.n	8005d18 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005d00:	9700      	str	r7, [sp, #0]
 8005d02:	4633      	mov	r3, r6
 8005d04:	462a      	mov	r2, r5
 8005d06:	2180      	movs	r1, #128	@ 0x80
 8005d08:	4620      	mov	r0, r4
 8005d0a:	f7ff ff7d 	bl	8005c08 <SPI_WaitFlagStateUntilTimeout>
 8005d0e:	2800      	cmp	r0, #0
 8005d10:	d1e3      	bne.n	8005cda <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005d12:	4628      	mov	r0, r5
 8005d14:	b005      	add	sp, #20
 8005d16:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8005d18:	9b03      	ldr	r3, [sp, #12]
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d0f9      	beq.n	8005d12 <SPI_EndRxTxTransaction+0x52>
      count--;
 8005d1e:	9b03      	ldr	r3, [sp, #12]
 8005d20:	3b01      	subs	r3, #1
 8005d22:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005d24:	6823      	ldr	r3, [r4, #0]
 8005d26:	689b      	ldr	r3, [r3, #8]
 8005d28:	061b      	lsls	r3, r3, #24
 8005d2a:	d4f5      	bmi.n	8005d18 <SPI_EndRxTxTransaction+0x58>
 8005d2c:	e7f1      	b.n	8005d12 <SPI_EndRxTxTransaction+0x52>
 8005d2e:	bf00      	nop
 8005d30:	200000cc 	.word	0x200000cc
 8005d34:	016e3600 	.word	0x016e3600

08005d38 <SPI_EndRxTransaction>:
{
 8005d38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005d3a:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d3c:	6841      	ldr	r1, [r0, #4]
 8005d3e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8005d42:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d44:	d008      	beq.n	8005d58 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005d46:	9200      	str	r2, [sp, #0]
 8005d48:	2101      	movs	r1, #1
 8005d4a:	2200      	movs	r2, #0
 8005d4c:	f7ff ff5c 	bl	8005c08 <SPI_WaitFlagStateUntilTimeout>
 8005d50:	b9d0      	cbnz	r0, 8005d88 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8005d52:	2000      	movs	r0, #0
}
 8005d54:	b003      	add	sp, #12
 8005d56:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d58:	6881      	ldr	r1, [r0, #8]
 8005d5a:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8005d5e:	d002      	beq.n	8005d66 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005d60:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8005d64:	d107      	bne.n	8005d76 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8005d66:	6825      	ldr	r5, [r4, #0]
 8005d68:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005d6a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8005d6e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8005d72:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005d74:	d004      	beq.n	8005d80 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005d76:	9200      	str	r2, [sp, #0]
 8005d78:	2180      	movs	r1, #128	@ 0x80
 8005d7a:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005d7c:	4620      	mov	r0, r4
 8005d7e:	e7e5      	b.n	8005d4c <SPI_EndRxTransaction+0x14>
 8005d80:	9200      	str	r2, [sp, #0]
 8005d82:	2101      	movs	r1, #1
 8005d84:	2200      	movs	r2, #0
 8005d86:	e7f9      	b.n	8005d7c <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005d88:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005d8a:	f043 0320 	orr.w	r3, r3, #32
 8005d8e:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8005d90:	2003      	movs	r0, #3
 8005d92:	e7df      	b.n	8005d54 <SPI_EndRxTransaction+0x1c>

08005d94 <HAL_SPI_Init>:
{
 8005d94:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8005d96:	4604      	mov	r4, r0
 8005d98:	2800      	cmp	r0, #0
 8005d9a:	d055      	beq.n	8005e48 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005d9c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	d14e      	bne.n	8005e40 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005da2:	6842      	ldr	r2, [r0, #4]
 8005da4:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005da8:	d000      	beq.n	8005dac <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005daa:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005dac:	2300      	movs	r3, #0
 8005dae:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005db0:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8005db4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005db8:	b923      	cbnz	r3, 8005dc4 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8005dba:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8005dbe:	4620      	mov	r0, r4
 8005dc0:	f7fc fb7a 	bl	80024b8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8005dc4:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005dc6:	68a0      	ldr	r0, [r4, #8]
 8005dc8:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8005dca:	2302      	movs	r3, #2
 8005dcc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8005dd0:	680b      	ldr	r3, [r1, #0]
 8005dd2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005dd6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005dd8:	6863      	ldr	r3, [r4, #4]
 8005dda:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8005dde:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8005de2:	4303      	orrs	r3, r0
 8005de4:	68e0      	ldr	r0, [r4, #12]
 8005de6:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8005dea:	4303      	orrs	r3, r0
 8005dec:	6920      	ldr	r0, [r4, #16]
 8005dee:	f000 0002 	and.w	r0, r0, #2
 8005df2:	4303      	orrs	r3, r0
 8005df4:	6960      	ldr	r0, [r4, #20]
 8005df6:	f000 0001 	and.w	r0, r0, #1
 8005dfa:	4303      	orrs	r3, r0
 8005dfc:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8005e00:	4303      	orrs	r3, r0
 8005e02:	69e0      	ldr	r0, [r4, #28]
 8005e04:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8005e08:	4303      	orrs	r3, r0
 8005e0a:	6a20      	ldr	r0, [r4, #32]
 8005e0c:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8005e10:	4303      	orrs	r3, r0
 8005e12:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005e14:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8005e18:	4303      	orrs	r3, r0
 8005e1a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8005e1c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005e1e:	0c12      	lsrs	r2, r2, #16
 8005e20:	f003 0310 	and.w	r3, r3, #16
 8005e24:	f002 0204 	and.w	r2, r2, #4
 8005e28:	431a      	orrs	r2, r3
 8005e2a:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005e2c:	69cb      	ldr	r3, [r1, #28]
 8005e2e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005e32:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005e34:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005e36:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005e38:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005e3a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8005e3e:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005e40:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005e42:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005e46:	e7b1      	b.n	8005dac <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8005e48:	2001      	movs	r0, #1
 8005e4a:	e7f8      	b.n	8005e3e <HAL_SPI_Init+0xaa>

08005e4c <HAL_SPI_Transmit>:
{
 8005e4c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005e50:	4604      	mov	r4, r0
 8005e52:	461f      	mov	r7, r3
 8005e54:	460d      	mov	r5, r1
 8005e56:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8005e58:	f7fd fd08 	bl	800386c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8005e5c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8005e60:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005e62:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005e64:	b2d8      	uxtb	r0, r3
 8005e66:	f040 809f 	bne.w	8005fa8 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8005e6a:	2d00      	cmp	r5, #0
 8005e6c:	d074      	beq.n	8005f58 <HAL_SPI_Transmit+0x10c>
 8005e6e:	f1b8 0f00 	cmp.w	r8, #0
 8005e72:	d071      	beq.n	8005f58 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 8005e74:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8005e78:	2b01      	cmp	r3, #1
 8005e7a:	f000 8095 	beq.w	8005fa8 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005e7e:	2303      	movs	r3, #3
 8005e80:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005e84:	2300      	movs	r3, #0
 8005e86:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8005e88:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8005e8c:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005e90:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8005e92:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005e94:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e96:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 8005e98:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 8005e9a:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e9e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005ea2:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005ea4:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ea8:	d107      	bne.n	8005eba <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 8005eaa:	6833      	ldr	r3, [r6, #0]
 8005eac:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005eb0:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8005eb2:	6833      	ldr	r3, [r6, #0]
 8005eb4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005eb8:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005eba:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ebc:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ebe:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8005ec0:	bf5e      	ittt	pl
 8005ec2:	6833      	ldrpl	r3, [r6, #0]
 8005ec4:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8005ec8:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005eca:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005ece:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ed0:	d145      	bne.n	8005f5e <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005ed2:	b113      	cbz	r3, 8005eda <HAL_SPI_Transmit+0x8e>
 8005ed4:	f1b8 0f01 	cmp.w	r8, #1
 8005ed8:	d107      	bne.n	8005eea <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005eda:	f835 3b02 	ldrh.w	r3, [r5], #2
 8005ede:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005ee0:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005ee2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005ee4:	3b01      	subs	r3, #1
 8005ee6:	b29b      	uxth	r3, r3
 8005ee8:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8005eea:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005eec:	b29b      	uxth	r3, r3
 8005eee:	b9d3      	cbnz	r3, 8005f26 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005ef0:	464a      	mov	r2, r9
 8005ef2:	4639      	mov	r1, r7
 8005ef4:	4620      	mov	r0, r4
 8005ef6:	f7ff fee3 	bl	8005cc0 <SPI_EndRxTxTransaction>
 8005efa:	2800      	cmp	r0, #0
 8005efc:	d151      	bne.n	8005fa2 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005efe:	68a3      	ldr	r3, [r4, #8]
 8005f00:	b933      	cbnz	r3, 8005f10 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005f02:	9301      	str	r3, [sp, #4]
 8005f04:	6823      	ldr	r3, [r4, #0]
 8005f06:	68da      	ldr	r2, [r3, #12]
 8005f08:	9201      	str	r2, [sp, #4]
 8005f0a:	689b      	ldr	r3, [r3, #8]
 8005f0c:	9301      	str	r3, [sp, #4]
 8005f0e:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8005f10:	2301      	movs	r3, #1
 8005f12:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005f16:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8005f18:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005f1a:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8005f1c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005f20:	bf18      	it	ne
 8005f22:	2001      	movne	r0, #1
 8005f24:	e018      	b.n	8005f58 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005f26:	6822      	ldr	r2, [r4, #0]
 8005f28:	6893      	ldr	r3, [r2, #8]
 8005f2a:	0798      	lsls	r0, r3, #30
 8005f2c:	d505      	bpl.n	8005f3a <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005f2e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005f30:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005f34:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f36:	6323      	str	r3, [r4, #48]	@ 0x30
 8005f38:	e7d3      	b.n	8005ee2 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f3a:	f7fd fc97 	bl	800386c <HAL_GetTick>
 8005f3e:	eba0 0009 	sub.w	r0, r0, r9
 8005f42:	42b8      	cmp	r0, r7
 8005f44:	d3d1      	bcc.n	8005eea <HAL_SPI_Transmit+0x9e>
 8005f46:	1c79      	adds	r1, r7, #1
 8005f48:	d0cf      	beq.n	8005eea <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8005f4a:	2301      	movs	r3, #1
 8005f4c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005f50:	2300      	movs	r3, #0
 8005f52:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005f56:	2003      	movs	r0, #3
}
 8005f58:	b003      	add	sp, #12
 8005f5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005f5e:	b113      	cbz	r3, 8005f66 <HAL_SPI_Transmit+0x11a>
 8005f60:	f1b8 0f01 	cmp.w	r8, #1
 8005f64:	d108      	bne.n	8005f78 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005f66:	782b      	ldrb	r3, [r5, #0]
 8005f68:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005f6a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005f6c:	3301      	adds	r3, #1
 8005f6e:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005f70:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005f72:	3b01      	subs	r3, #1
 8005f74:	b29b      	uxth	r3, r3
 8005f76:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8005f78:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005f7a:	b29b      	uxth	r3, r3
 8005f7c:	2b00      	cmp	r3, #0
 8005f7e:	d0b7      	beq.n	8005ef0 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005f80:	6823      	ldr	r3, [r4, #0]
 8005f82:	689a      	ldr	r2, [r3, #8]
 8005f84:	0792      	lsls	r2, r2, #30
 8005f86:	d503      	bpl.n	8005f90 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005f88:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8005f8a:	7812      	ldrb	r2, [r2, #0]
 8005f8c:	731a      	strb	r2, [r3, #12]
 8005f8e:	e7ec      	b.n	8005f6a <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f90:	f7fd fc6c 	bl	800386c <HAL_GetTick>
 8005f94:	eba0 0009 	sub.w	r0, r0, r9
 8005f98:	42b8      	cmp	r0, r7
 8005f9a:	d3ed      	bcc.n	8005f78 <HAL_SPI_Transmit+0x12c>
 8005f9c:	1c7b      	adds	r3, r7, #1
 8005f9e:	d0eb      	beq.n	8005f78 <HAL_SPI_Transmit+0x12c>
 8005fa0:	e7d3      	b.n	8005f4a <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005fa2:	2320      	movs	r3, #32
 8005fa4:	6563      	str	r3, [r4, #84]	@ 0x54
 8005fa6:	e7aa      	b.n	8005efe <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 8005fa8:	2002      	movs	r0, #2
 8005faa:	e7d5      	b.n	8005f58 <HAL_SPI_Transmit+0x10c>

08005fac <HAL_SPI_TransmitReceive>:
{
 8005fac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005fb0:	4604      	mov	r4, r0
 8005fb2:	460d      	mov	r5, r1
 8005fb4:	4691      	mov	r9, r2
 8005fb6:	461e      	mov	r6, r3
 8005fb8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8005fbc:	f7fd fc56 	bl	800386c <HAL_GetTick>
  tmp_state           = hspi->State;
 8005fc0:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8005fc4:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005fc6:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005fc8:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8005fca:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005fcc:	d00a      	beq.n	8005fe4 <HAL_SPI_TransmitReceive+0x38>
 8005fce:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005fd2:	f040 80e5 	bne.w	80061a0 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) &&
 8005fd6:	68a3      	ldr	r3, [r4, #8]
 8005fd8:	2b00      	cmp	r3, #0
 8005fda:	f040 80e1 	bne.w	80061a0 <HAL_SPI_TransmitReceive+0x1f4>
 8005fde:	2904      	cmp	r1, #4
 8005fe0:	f040 80de 	bne.w	80061a0 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005fe4:	2d00      	cmp	r5, #0
 8005fe6:	d04b      	beq.n	8006080 <HAL_SPI_TransmitReceive+0xd4>
 8005fe8:	f1b9 0f00 	cmp.w	r9, #0
 8005fec:	d048      	beq.n	8006080 <HAL_SPI_TransmitReceive+0xd4>
 8005fee:	2e00      	cmp	r6, #0
 8005ff0:	d046      	beq.n	8006080 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 8005ff2:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8005ff6:	2b01      	cmp	r3, #1
 8005ff8:	f000 80d2 	beq.w	80061a0 <HAL_SPI_TransmitReceive+0x1f4>
 8005ffc:	2301      	movs	r3, #1
 8005ffe:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006002:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006006:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800600a:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800600c:	bf1c      	itt	ne
 800600e:	2305      	movne	r3, #5
 8006010:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006014:	2300      	movs	r3, #0
 8006016:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006018:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800601c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800601e:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006020:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006022:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006024:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006026:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006028:	bf58      	it	pl
 800602a:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800602c:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800602e:	bf58      	it	pl
 8006030:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006034:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8006036:	bf58      	it	pl
 8006038:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800603a:	68e1      	ldr	r1, [r4, #12]
 800603c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8006040:	d155      	bne.n	80060ee <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006042:	b10a      	cbz	r2, 8006048 <HAL_SPI_TransmitReceive+0x9c>
 8006044:	2e01      	cmp	r6, #1
 8006046:	d107      	bne.n	8006058 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006048:	f835 2b02 	ldrh.w	r2, [r5], #2
 800604c:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800604e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006050:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006052:	3b01      	subs	r3, #1
 8006054:	b29b      	uxth	r3, r3
 8006056:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006058:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800605a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800605c:	b29b      	uxth	r3, r3
 800605e:	b98b      	cbnz	r3, 8006084 <HAL_SPI_TransmitReceive+0xd8>
 8006060:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006062:	b29b      	uxth	r3, r3
 8006064:	b973      	cbnz	r3, 8006084 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006066:	463a      	mov	r2, r7
 8006068:	4641      	mov	r1, r8
 800606a:	4620      	mov	r0, r4
 800606c:	f7ff fe28 	bl	8005cc0 <SPI_EndRxTxTransaction>
 8006070:	2800      	cmp	r0, #0
 8006072:	f000 8081 	beq.w	8006178 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006076:	2320      	movs	r3, #32
 8006078:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800607a:	2300      	movs	r3, #0
 800607c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 8006080:	2001      	movs	r0, #1
 8006082:	e031      	b.n	80060e8 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006084:	6821      	ldr	r1, [r4, #0]
 8006086:	688b      	ldr	r3, [r1, #8]
 8006088:	079a      	lsls	r2, r3, #30
 800608a:	d50d      	bpl.n	80060a8 <HAL_SPI_TransmitReceive+0xfc>
 800608c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800608e:	b29b      	uxth	r3, r3
 8006090:	b153      	cbz	r3, 80060a8 <HAL_SPI_TransmitReceive+0xfc>
 8006092:	b145      	cbz	r5, 80060a6 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006094:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006096:	f833 2b02 	ldrh.w	r2, [r3], #2
 800609a:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800609c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800609e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80060a0:	3b01      	subs	r3, #1
 80060a2:	b29b      	uxth	r3, r3
 80060a4:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 80060a6:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80060a8:	688a      	ldr	r2, [r1, #8]
 80060aa:	f012 0201 	ands.w	r2, r2, #1
 80060ae:	d00c      	beq.n	80060ca <HAL_SPI_TransmitReceive+0x11e>
 80060b0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80060b2:	b29b      	uxth	r3, r3
 80060b4:	b14b      	cbz	r3, 80060ca <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80060b6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80060b8:	68c9      	ldr	r1, [r1, #12]
 80060ba:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80060be:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80060c0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80060c2:	3b01      	subs	r3, #1
 80060c4:	b29b      	uxth	r3, r3
 80060c6:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 80060c8:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80060ca:	f7fd fbcf 	bl	800386c <HAL_GetTick>
 80060ce:	1bc0      	subs	r0, r0, r7
 80060d0:	4540      	cmp	r0, r8
 80060d2:	d3c2      	bcc.n	800605a <HAL_SPI_TransmitReceive+0xae>
 80060d4:	f1b8 3fff 	cmp.w	r8, #4294967295
 80060d8:	d0bf      	beq.n	800605a <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 80060da:	2301      	movs	r3, #1
 80060dc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80060e0:	2300      	movs	r3, #0
 80060e2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80060e6:	2003      	movs	r0, #3
}
 80060e8:	b003      	add	sp, #12
 80060ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80060ee:	b10a      	cbz	r2, 80060f4 <HAL_SPI_TransmitReceive+0x148>
 80060f0:	2e01      	cmp	r6, #1
 80060f2:	d108      	bne.n	8006106 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80060f4:	782a      	ldrb	r2, [r5, #0]
 80060f6:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80060f8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80060fa:	3301      	adds	r3, #1
 80060fc:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80060fe:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006100:	3b01      	subs	r3, #1
 8006102:	b29b      	uxth	r3, r3
 8006104:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006106:	2501      	movs	r5, #1
 8006108:	e02d      	b.n	8006166 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800610a:	6822      	ldr	r2, [r4, #0]
 800610c:	6893      	ldr	r3, [r2, #8]
 800610e:	079b      	lsls	r3, r3, #30
 8006110:	d50e      	bpl.n	8006130 <HAL_SPI_TransmitReceive+0x184>
 8006112:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006114:	b29b      	uxth	r3, r3
 8006116:	b15b      	cbz	r3, 8006130 <HAL_SPI_TransmitReceive+0x184>
 8006118:	b14d      	cbz	r5, 800612e <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800611a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800611c:	781b      	ldrb	r3, [r3, #0]
 800611e:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006120:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006122:	3301      	adds	r3, #1
 8006124:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006126:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006128:	3b01      	subs	r3, #1
 800612a:	b29b      	uxth	r3, r3
 800612c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800612e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006130:	6822      	ldr	r2, [r4, #0]
 8006132:	6891      	ldr	r1, [r2, #8]
 8006134:	f011 0101 	ands.w	r1, r1, #1
 8006138:	d00d      	beq.n	8006156 <HAL_SPI_TransmitReceive+0x1aa>
 800613a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800613c:	b29b      	uxth	r3, r3
 800613e:	b153      	cbz	r3, 8006156 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006140:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006142:	68d2      	ldr	r2, [r2, #12]
 8006144:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006146:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006148:	3301      	adds	r3, #1
 800614a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800614c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800614e:	3b01      	subs	r3, #1
 8006150:	b29b      	uxth	r3, r3
 8006152:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006154:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006156:	f7fd fb89 	bl	800386c <HAL_GetTick>
 800615a:	1bc0      	subs	r0, r0, r7
 800615c:	4540      	cmp	r0, r8
 800615e:	d302      	bcc.n	8006166 <HAL_SPI_TransmitReceive+0x1ba>
 8006160:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006164:	d1b9      	bne.n	80060da <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006166:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006168:	b29b      	uxth	r3, r3
 800616a:	2b00      	cmp	r3, #0
 800616c:	d1cd      	bne.n	800610a <HAL_SPI_TransmitReceive+0x15e>
 800616e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006170:	b29b      	uxth	r3, r3
 8006172:	2b00      	cmp	r3, #0
 8006174:	d1c9      	bne.n	800610a <HAL_SPI_TransmitReceive+0x15e>
 8006176:	e776      	b.n	8006066 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006178:	68a3      	ldr	r3, [r4, #8]
 800617a:	b933      	cbnz	r3, 800618a <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800617c:	9301      	str	r3, [sp, #4]
 800617e:	6823      	ldr	r3, [r4, #0]
 8006180:	68da      	ldr	r2, [r3, #12]
 8006182:	9201      	str	r2, [sp, #4]
 8006184:	689b      	ldr	r3, [r3, #8]
 8006186:	9301      	str	r3, [sp, #4]
 8006188:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800618a:	2301      	movs	r3, #1
 800618c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006190:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006192:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006194:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8006196:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800619a:	bf18      	it	ne
 800619c:	2001      	movne	r0, #1
 800619e:	e7a3      	b.n	80060e8 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 80061a0:	2002      	movs	r0, #2
 80061a2:	e7a1      	b.n	80060e8 <HAL_SPI_TransmitReceive+0x13c>

080061a4 <HAL_SPI_Receive>:
{
 80061a4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80061a8:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 80061aa:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 80061ae:	2b01      	cmp	r3, #1
{
 80061b0:	4604      	mov	r4, r0
 80061b2:	4689      	mov	r9, r1
 80061b4:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 80061b6:	b2dd      	uxtb	r5, r3
 80061b8:	d004      	beq.n	80061c4 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 80061ba:	2502      	movs	r5, #2
}
 80061bc:	4628      	mov	r0, r5
 80061be:	b003      	add	sp, #12
 80061c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((pData == NULL) || (Size == 0U))
 80061c4:	2900      	cmp	r1, #0
 80061c6:	d0f9      	beq.n	80061bc <HAL_SPI_Receive+0x18>
 80061c8:	2a00      	cmp	r2, #0
 80061ca:	d0f7      	beq.n	80061bc <HAL_SPI_Receive+0x18>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80061cc:	6843      	ldr	r3, [r0, #4]
 80061ce:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80061d2:	d10b      	bne.n	80061ec <HAL_SPI_Receive+0x48>
 80061d4:	6883      	ldr	r3, [r0, #8]
 80061d6:	b94b      	cbnz	r3, 80061ec <HAL_SPI_Receive+0x48>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80061d8:	2304      	movs	r3, #4
 80061da:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80061de:	4613      	mov	r3, r2
 80061e0:	9600      	str	r6, [sp, #0]
 80061e2:	460a      	mov	r2, r1
 80061e4:	f7ff fee2 	bl	8005fac <HAL_SPI_TransmitReceive>
 80061e8:	4605      	mov	r5, r0
 80061ea:	e7e7      	b.n	80061bc <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 80061ec:	f7fd fb3e 	bl	800386c <HAL_GetTick>
  __HAL_LOCK(hspi);
 80061f0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80061f4:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80061f6:	4680      	mov	r8, r0
  __HAL_LOCK(hspi);
 80061f8:	d0df      	beq.n	80061ba <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80061fa:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80061fc:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8006200:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006202:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8006204:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006208:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800620c:	f04f 0304 	mov.w	r3, #4
 8006210:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8006214:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006218:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 800621a:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800621c:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800621e:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006220:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006222:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006224:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006226:	d107      	bne.n	8006238 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 8006228:	681a      	ldr	r2, [r3, #0]
 800622a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800622e:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006230:	681a      	ldr	r2, [r3, #0]
 8006232:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006236:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006238:	681a      	ldr	r2, [r3, #0]
 800623a:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800623c:	bf5e      	ittt	pl
 800623e:	681a      	ldrpl	r2, [r3, #0]
 8006240:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006244:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006246:	68e3      	ldr	r3, [r4, #12]
 8006248:	b1f3      	cbz	r3, 8006288 <HAL_SPI_Receive+0xe4>
    while (hspi->RxXferCount > 0U)
 800624a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800624c:	b29b      	uxth	r3, r3
 800624e:	b1fb      	cbz	r3, 8006290 <HAL_SPI_Receive+0xec>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006250:	6823      	ldr	r3, [r4, #0]
 8006252:	689a      	ldr	r2, [r3, #8]
 8006254:	07d2      	lsls	r2, r2, #31
 8006256:	d53c      	bpl.n	80062d2 <HAL_SPI_Receive+0x12e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006258:	68da      	ldr	r2, [r3, #12]
 800625a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800625c:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006260:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006262:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006264:	3b01      	subs	r3, #1
 8006266:	b29b      	uxth	r3, r3
 8006268:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800626a:	e7ee      	b.n	800624a <HAL_SPI_Receive+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800626c:	6823      	ldr	r3, [r4, #0]
 800626e:	689a      	ldr	r2, [r3, #8]
 8006270:	07d0      	lsls	r0, r2, #31
 8006272:	d51e      	bpl.n	80062b2 <HAL_SPI_Receive+0x10e>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006274:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006276:	7b1b      	ldrb	r3, [r3, #12]
 8006278:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800627a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800627c:	3301      	adds	r3, #1
 800627e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006280:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006282:	3b01      	subs	r3, #1
 8006284:	b29b      	uxth	r3, r3
 8006286:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006288:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800628a:	b29b      	uxth	r3, r3
 800628c:	2b00      	cmp	r3, #0
 800628e:	d1ed      	bne.n	800626c <HAL_SPI_Receive+0xc8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006290:	4642      	mov	r2, r8
 8006292:	4631      	mov	r1, r6
 8006294:	4620      	mov	r0, r4
 8006296:	f7ff fd4f 	bl	8005d38 <SPI_EndRxTransaction>
 800629a:	bb18      	cbnz	r0, 80062e4 <HAL_SPI_Receive+0x140>
  hspi->State = HAL_SPI_STATE_READY;
 800629c:	2301      	movs	r3, #1
 800629e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80062a2:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80062a4:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80062a6:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 80062a8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80062ac:	bf18      	it	ne
 80062ae:	2501      	movne	r5, #1
 80062b0:	e784      	b.n	80061bc <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80062b2:	f7fd fadb 	bl	800386c <HAL_GetTick>
 80062b6:	eba0 0008 	sub.w	r0, r0, r8
 80062ba:	42b0      	cmp	r0, r6
 80062bc:	d3e4      	bcc.n	8006288 <HAL_SPI_Receive+0xe4>
 80062be:	1c71      	adds	r1, r6, #1
 80062c0:	d0e2      	beq.n	8006288 <HAL_SPI_Receive+0xe4>
          hspi->State = HAL_SPI_STATE_READY;
 80062c2:	2301      	movs	r3, #1
 80062c4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80062c8:	2300      	movs	r3, #0
 80062ca:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 80062ce:	2503      	movs	r5, #3
 80062d0:	e774      	b.n	80061bc <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80062d2:	f7fd facb 	bl	800386c <HAL_GetTick>
 80062d6:	eba0 0008 	sub.w	r0, r0, r8
 80062da:	42b0      	cmp	r0, r6
 80062dc:	d3b5      	bcc.n	800624a <HAL_SPI_Receive+0xa6>
 80062de:	1c73      	adds	r3, r6, #1
 80062e0:	d0b3      	beq.n	800624a <HAL_SPI_Receive+0xa6>
 80062e2:	e7ee      	b.n	80062c2 <HAL_SPI_Receive+0x11e>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80062e4:	2320      	movs	r3, #32
 80062e6:	6563      	str	r3, [r4, #84]	@ 0x54
 80062e8:	e7d8      	b.n	800629c <HAL_SPI_Receive+0xf8>

080062ea <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80062ea:	4770      	bx	lr

080062ec <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80062ec:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80062f0:	2b01      	cmp	r3, #1
 80062f2:	d130      	bne.n	8006356 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80062f4:	2302      	movs	r3, #2
 80062f6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80062fa:	6803      	ldr	r3, [r0, #0]
 80062fc:	68da      	ldr	r2, [r3, #12]
 80062fe:	f042 0201 	orr.w	r2, r2, #1
 8006302:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006304:	4a15      	ldr	r2, [pc, #84]	@ (800635c <HAL_TIM_Base_Start_IT+0x70>)
 8006306:	4293      	cmp	r3, r2
 8006308:	d01a      	beq.n	8006340 <HAL_TIM_Base_Start_IT+0x54>
 800630a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800630e:	d017      	beq.n	8006340 <HAL_TIM_Base_Start_IT+0x54>
 8006310:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006314:	4293      	cmp	r3, r2
 8006316:	d013      	beq.n	8006340 <HAL_TIM_Base_Start_IT+0x54>
 8006318:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800631c:	4293      	cmp	r3, r2
 800631e:	d00f      	beq.n	8006340 <HAL_TIM_Base_Start_IT+0x54>
 8006320:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006324:	4293      	cmp	r3, r2
 8006326:	d00b      	beq.n	8006340 <HAL_TIM_Base_Start_IT+0x54>
 8006328:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800632c:	4293      	cmp	r3, r2
 800632e:	d007      	beq.n	8006340 <HAL_TIM_Base_Start_IT+0x54>
 8006330:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006334:	4293      	cmp	r3, r2
 8006336:	d003      	beq.n	8006340 <HAL_TIM_Base_Start_IT+0x54>
 8006338:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800633c:	4293      	cmp	r3, r2
 800633e:	d104      	bne.n	800634a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006340:	689a      	ldr	r2, [r3, #8]
 8006342:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006346:	2a06      	cmp	r2, #6
 8006348:	d003      	beq.n	8006352 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800634a:	681a      	ldr	r2, [r3, #0]
 800634c:	f042 0201 	orr.w	r2, r2, #1
 8006350:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006352:	2000      	movs	r0, #0
 8006354:	4770      	bx	lr
    return HAL_ERROR;
 8006356:	2001      	movs	r0, #1
}
 8006358:	4770      	bx	lr
 800635a:	bf00      	nop
 800635c:	40010000 	.word	0x40010000

08006360 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006360:	4770      	bx	lr

08006362 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006362:	4770      	bx	lr

08006364 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006364:	4770      	bx	lr

08006366 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006366:	4770      	bx	lr

08006368 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8006368:	6803      	ldr	r3, [r0, #0]
{
 800636a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800636c:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800636e:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006370:	07b1      	lsls	r1, r6, #30
{
 8006372:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006374:	d50d      	bpl.n	8006392 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006376:	07aa      	lsls	r2, r5, #30
 8006378:	d50b      	bpl.n	8006392 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800637a:	f06f 0202 	mvn.w	r2, #2
 800637e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006380:	2201      	movs	r2, #1
 8006382:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006384:	699b      	ldr	r3, [r3, #24]
 8006386:	079b      	lsls	r3, r3, #30
 8006388:	d069      	beq.n	800645e <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800638a:	f7ff ffea 	bl	8006362 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800638e:	2300      	movs	r3, #0
 8006390:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006392:	0771      	lsls	r1, r6, #29
 8006394:	d510      	bpl.n	80063b8 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006396:	076a      	lsls	r2, r5, #29
 8006398:	d50e      	bpl.n	80063b8 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800639a:	6823      	ldr	r3, [r4, #0]
 800639c:	f06f 0204 	mvn.w	r2, #4
 80063a0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80063a2:	2202      	movs	r2, #2
 80063a4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80063a6:	699b      	ldr	r3, [r3, #24]
 80063a8:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80063ac:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80063ae:	d05c      	beq.n	800646a <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 80063b0:	f7ff ffd7 	bl	8006362 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80063b4:	2300      	movs	r3, #0
 80063b6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80063b8:	0733      	lsls	r3, r6, #28
 80063ba:	d50f      	bpl.n	80063dc <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80063bc:	0728      	lsls	r0, r5, #28
 80063be:	d50d      	bpl.n	80063dc <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80063c0:	6823      	ldr	r3, [r4, #0]
 80063c2:	f06f 0208 	mvn.w	r2, #8
 80063c6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80063c8:	2204      	movs	r2, #4
 80063ca:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80063cc:	69db      	ldr	r3, [r3, #28]
 80063ce:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 80063d0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80063d2:	d050      	beq.n	8006476 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 80063d4:	f7ff ffc5 	bl	8006362 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80063d8:	2300      	movs	r3, #0
 80063da:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80063dc:	06f2      	lsls	r2, r6, #27
 80063de:	d510      	bpl.n	8006402 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80063e0:	06eb      	lsls	r3, r5, #27
 80063e2:	d50e      	bpl.n	8006402 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80063e4:	6823      	ldr	r3, [r4, #0]
 80063e6:	f06f 0210 	mvn.w	r2, #16
 80063ea:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80063ec:	2208      	movs	r2, #8
 80063ee:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80063f0:	69db      	ldr	r3, [r3, #28]
 80063f2:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80063f6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80063f8:	d043      	beq.n	8006482 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 80063fa:	f7ff ffb2 	bl	8006362 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80063fe:	2300      	movs	r3, #0
 8006400:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006402:	07f0      	lsls	r0, r6, #31
 8006404:	d508      	bpl.n	8006418 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006406:	07e9      	lsls	r1, r5, #31
 8006408:	d506      	bpl.n	8006418 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800640a:	6823      	ldr	r3, [r4, #0]
 800640c:	f06f 0201 	mvn.w	r2, #1
 8006410:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006412:	4620      	mov	r0, r4
 8006414:	f7fb feb2 	bl	800217c <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006418:	0632      	lsls	r2, r6, #24
 800641a:	d508      	bpl.n	800642e <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800641c:	062b      	lsls	r3, r5, #24
 800641e:	d506      	bpl.n	800642e <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006420:	6823      	ldr	r3, [r4, #0]
 8006422:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8006426:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006428:	4620      	mov	r0, r4
 800642a:	f000 f8b2 	bl	8006592 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800642e:	0670      	lsls	r0, r6, #25
 8006430:	d508      	bpl.n	8006444 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006432:	0669      	lsls	r1, r5, #25
 8006434:	d506      	bpl.n	8006444 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006436:	6823      	ldr	r3, [r4, #0]
 8006438:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800643c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800643e:	4620      	mov	r0, r4
 8006440:	f7ff ff91 	bl	8006366 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006444:	06b2      	lsls	r2, r6, #26
 8006446:	d522      	bpl.n	800648e <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006448:	06ab      	lsls	r3, r5, #26
 800644a:	d520      	bpl.n	800648e <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800644c:	6823      	ldr	r3, [r4, #0]
 800644e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006452:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006454:	611a      	str	r2, [r3, #16]
}
 8006456:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800645a:	f000 b899 	b.w	8006590 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800645e:	f7ff ff7f 	bl	8006360 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006462:	4620      	mov	r0, r4
 8006464:	f7ff ff7e 	bl	8006364 <HAL_TIM_PWM_PulseFinishedCallback>
 8006468:	e791      	b.n	800638e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800646a:	f7ff ff79 	bl	8006360 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800646e:	4620      	mov	r0, r4
 8006470:	f7ff ff78 	bl	8006364 <HAL_TIM_PWM_PulseFinishedCallback>
 8006474:	e79e      	b.n	80063b4 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006476:	f7ff ff73 	bl	8006360 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800647a:	4620      	mov	r0, r4
 800647c:	f7ff ff72 	bl	8006364 <HAL_TIM_PWM_PulseFinishedCallback>
 8006480:	e7aa      	b.n	80063d8 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006482:	f7ff ff6d 	bl	8006360 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006486:	4620      	mov	r0, r4
 8006488:	f7ff ff6c 	bl	8006364 <HAL_TIM_PWM_PulseFinishedCallback>
 800648c:	e7b7      	b.n	80063fe <HAL_TIM_IRQHandler+0x96>
}
 800648e:	bd70      	pop	{r4, r5, r6, pc}

08006490 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006490:	4a27      	ldr	r2, [pc, #156]	@ (8006530 <TIM_Base_SetConfig+0xa0>)
  tmpcr1 = TIMx->CR1;
 8006492:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006494:	4290      	cmp	r0, r2
 8006496:	d012      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 8006498:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800649c:	d00f      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 800649e:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80064a2:	4290      	cmp	r0, r2
 80064a4:	d00b      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 80064a6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064aa:	4290      	cmp	r0, r2
 80064ac:	d007      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 80064ae:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064b2:	4290      	cmp	r0, r2
 80064b4:	d003      	beq.n	80064be <TIM_Base_SetConfig+0x2e>
 80064b6:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80064ba:	4290      	cmp	r0, r2
 80064bc:	d108      	bne.n	80064d0 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80064be:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80064c0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 80064c4:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80064c6:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80064c8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80064cc:	4313      	orrs	r3, r2
 80064ce:	e016      	b.n	80064fe <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80064d0:	4a18      	ldr	r2, [pc, #96]	@ (8006534 <TIM_Base_SetConfig+0xa4>)
 80064d2:	4290      	cmp	r0, r2
 80064d4:	d0f7      	beq.n	80064c6 <TIM_Base_SetConfig+0x36>
 80064d6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064da:	4290      	cmp	r0, r2
 80064dc:	d0f3      	beq.n	80064c6 <TIM_Base_SetConfig+0x36>
 80064de:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064e2:	4290      	cmp	r0, r2
 80064e4:	d0ef      	beq.n	80064c6 <TIM_Base_SetConfig+0x36>
 80064e6:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80064ea:	4290      	cmp	r0, r2
 80064ec:	d0eb      	beq.n	80064c6 <TIM_Base_SetConfig+0x36>
 80064ee:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064f2:	4290      	cmp	r0, r2
 80064f4:	d0e7      	beq.n	80064c6 <TIM_Base_SetConfig+0x36>
 80064f6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064fa:	4290      	cmp	r0, r2
 80064fc:	d0e3      	beq.n	80064c6 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80064fe:	694a      	ldr	r2, [r1, #20]
 8006500:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006504:	4313      	orrs	r3, r2

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006506:	688a      	ldr	r2, [r1, #8]
 8006508:	62c2      	str	r2, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800650a:	680a      	ldr	r2, [r1, #0]
 800650c:	6282      	str	r2, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800650e:	4a08      	ldr	r2, [pc, #32]	@ (8006530 <TIM_Base_SetConfig+0xa0>)
 8006510:	4290      	cmp	r0, r2
 8006512:	d003      	beq.n	800651c <TIM_Base_SetConfig+0x8c>
 8006514:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006518:	4290      	cmp	r0, r2
 800651a:	d101      	bne.n	8006520 <TIM_Base_SetConfig+0x90>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800651c:	690a      	ldr	r2, [r1, #16]
 800651e:	6302      	str	r2, [r0, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
 8006520:	6802      	ldr	r2, [r0, #0]
 8006522:	f042 0204 	orr.w	r2, r2, #4
 8006526:	6002      	str	r2, [r0, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006528:	2201      	movs	r2, #1
 800652a:	6142      	str	r2, [r0, #20]

  TIMx->CR1 = tmpcr1;
 800652c:	6003      	str	r3, [r0, #0]
}
 800652e:	4770      	bx	lr
 8006530:	40010000 	.word	0x40010000
 8006534:	40014000 	.word	0x40014000

08006538 <HAL_TIM_Base_Init>:
{
 8006538:	b510      	push	{r4, lr}
  if (htim == NULL)
 800653a:	4604      	mov	r4, r0
 800653c:	b330      	cbz	r0, 800658c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800653e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006542:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006546:	b91b      	cbnz	r3, 8006550 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006548:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800654c:	f7ff fecd 	bl	80062ea <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006550:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006552:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006554:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006558:	1d21      	adds	r1, r4, #4
 800655a:	f7ff ff99 	bl	8006490 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800655e:	2301      	movs	r3, #1
 8006560:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006564:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006566:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800656a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800656e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006572:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006576:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800657a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800657e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006582:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006586:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800658a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800658c:	2001      	movs	r0, #1
 800658e:	e7fc      	b.n	800658a <HAL_TIM_Base_Init+0x52>

08006590 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006590:	4770      	bx	lr

08006592 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006592:	4770      	bx	lr

08006594 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006594:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006596:	f102 030c 	add.w	r3, r2, #12
 800659a:	e853 3f00 	ldrex	r3, [r3]
 800659e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80065a2:	320c      	adds	r2, #12
 80065a4:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80065a8:	6802      	ldr	r2, [r0, #0]
 80065aa:	2900      	cmp	r1, #0
 80065ac:	d1f2      	bne.n	8006594 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80065ae:	f102 0314 	add.w	r3, r2, #20
 80065b2:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80065b6:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80065ba:	f102 0c14 	add.w	ip, r2, #20
 80065be:	e84c 3100 	strex	r1, r3, [ip]
 80065c2:	2900      	cmp	r1, #0
 80065c4:	d1f3      	bne.n	80065ae <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80065c6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80065c8:	2b01      	cmp	r3, #1
 80065ca:	d10b      	bne.n	80065e4 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80065cc:	f102 030c 	add.w	r3, r2, #12
 80065d0:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80065d4:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80065d8:	f102 0c0c 	add.w	ip, r2, #12
 80065dc:	e84c 3100 	strex	r1, r3, [ip]
 80065e0:	2900      	cmp	r1, #0
 80065e2:	d1f3      	bne.n	80065cc <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80065e4:	2320      	movs	r3, #32
 80065e6:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80065ea:	2300      	movs	r3, #0
 80065ec:	6303      	str	r3, [r0, #48]	@ 0x30
}
 80065ee:	4770      	bx	lr

080065f0 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80065f0:	6802      	ldr	r2, [r0, #0]
 80065f2:	68c1      	ldr	r1, [r0, #12]
{
 80065f4:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80065f6:	6913      	ldr	r3, [r2, #16]
 80065f8:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80065fc:	430b      	orrs	r3, r1
 80065fe:	6113      	str	r3, [r2, #16]
{
 8006600:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006602:	6883      	ldr	r3, [r0, #8]
 8006604:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8006606:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006608:	4303      	orrs	r3, r0
 800660a:	6968      	ldr	r0, [r5, #20]
 800660c:	4303      	orrs	r3, r0
 800660e:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8006610:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 8006614:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006618:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 800661a:	430b      	orrs	r3, r1
 800661c:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800661e:	6953      	ldr	r3, [r2, #20]
 8006620:	69a9      	ldr	r1, [r5, #24]
 8006622:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006626:	430b      	orrs	r3, r1
 8006628:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800662a:	4b1f      	ldr	r3, [pc, #124]	@ (80066a8 <UART_SetConfig+0xb8>)
 800662c:	429a      	cmp	r2, r3
 800662e:	d003      	beq.n	8006638 <UART_SetConfig+0x48>
 8006630:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006634:	429a      	cmp	r2, r3
 8006636:	d124      	bne.n	8006682 <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006638:	f7ff f936 	bl	80058a8 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800663c:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800663e:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006640:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006644:	e9d5 4300 	ldrd	r4, r3, [r5]
 8006648:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800664c:	d11c      	bne.n	8006688 <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800664e:	18da      	adds	r2, r3, r3
 8006650:	f04f 0500 	mov.w	r5, #0
 8006654:	eb45 0305 	adc.w	r3, r5, r5
 8006658:	f7f9 fe72 	bl	8000340 <__aeabi_uldivmod>
 800665c:	2264      	movs	r2, #100	@ 0x64
 800665e:	fbb0 f1f2 	udiv	r1, r0, r2
 8006662:	fb02 0311 	mls	r3, r2, r1, r0
 8006666:	00db      	lsls	r3, r3, #3
 8006668:	3332      	adds	r3, #50	@ 0x32
 800666a:	fbb3 f3f2 	udiv	r3, r3, r2
 800666e:	f003 0207 	and.w	r2, r3, #7
 8006672:	005b      	lsls	r3, r3, #1
 8006674:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8006678:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 800667c:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800667e:	60a3      	str	r3, [r4, #8]
  }
}
 8006680:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006682:	f7ff f901 	bl	8005888 <HAL_RCC_GetPCLK1Freq>
 8006686:	e7d9      	b.n	800663c <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006688:	009a      	lsls	r2, r3, #2
 800668a:	0f9b      	lsrs	r3, r3, #30
 800668c:	f7f9 fe58 	bl	8000340 <__aeabi_uldivmod>
 8006690:	2264      	movs	r2, #100	@ 0x64
 8006692:	fbb0 f1f2 	udiv	r1, r0, r2
 8006696:	fb02 0311 	mls	r3, r2, r1, r0
 800669a:	011b      	lsls	r3, r3, #4
 800669c:	3332      	adds	r3, #50	@ 0x32
 800669e:	fbb3 f3f2 	udiv	r3, r3, r2
 80066a2:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 80066a6:	e7ea      	b.n	800667e <UART_SetConfig+0x8e>
 80066a8:	40011000 	.word	0x40011000

080066ac <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 80066ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80066ae:	4605      	mov	r5, r0
 80066b0:	460c      	mov	r4, r1
 80066b2:	4617      	mov	r7, r2
 80066b4:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80066b6:	682a      	ldr	r2, [r5, #0]
 80066b8:	6813      	ldr	r3, [r2, #0]
 80066ba:	ea34 0303 	bics.w	r3, r4, r3
 80066be:	d101      	bne.n	80066c4 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 80066c0:	2000      	movs	r0, #0
 80066c2:	e021      	b.n	8006708 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 80066c4:	1c70      	adds	r0, r6, #1
 80066c6:	d0f7      	beq.n	80066b8 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066c8:	f7fd f8d0 	bl	800386c <HAL_GetTick>
 80066cc:	1bc0      	subs	r0, r0, r7
 80066ce:	4286      	cmp	r6, r0
 80066d0:	d31c      	bcc.n	800670c <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 80066d2:	b1de      	cbz	r6, 800670c <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 80066d4:	682b      	ldr	r3, [r5, #0]
 80066d6:	68da      	ldr	r2, [r3, #12]
 80066d8:	0751      	lsls	r1, r2, #29
 80066da:	d5ec      	bpl.n	80066b6 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80066dc:	2c80      	cmp	r4, #128	@ 0x80
 80066de:	d0ea      	beq.n	80066b6 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80066e0:	2c40      	cmp	r4, #64	@ 0x40
 80066e2:	d0e8      	beq.n	80066b6 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 80066e4:	681a      	ldr	r2, [r3, #0]
 80066e6:	0712      	lsls	r2, r2, #28
 80066e8:	d5e5      	bpl.n	80066b6 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 80066ea:	2400      	movs	r4, #0
 80066ec:	9401      	str	r4, [sp, #4]
 80066ee:	681a      	ldr	r2, [r3, #0]
 80066f0:	9201      	str	r2, [sp, #4]
 80066f2:	685b      	ldr	r3, [r3, #4]
 80066f4:	9301      	str	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 80066f6:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 80066f8:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 80066fa:	f7ff ff4b 	bl	8006594 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 80066fe:	2308      	movs	r3, #8
 8006700:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 8006702:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
          return HAL_ERROR;
 8006706:	2001      	movs	r0, #1
}
 8006708:	b003      	add	sp, #12
 800670a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 800670c:	2003      	movs	r0, #3
 800670e:	e7fb      	b.n	8006708 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

08006710 <HAL_UART_Init>:
{
 8006710:	b510      	push	{r4, lr}
  if (huart == NULL)
 8006712:	4604      	mov	r4, r0
 8006714:	b348      	cbz	r0, 800676a <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 8006716:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800671a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800671e:	b91b      	cbnz	r3, 8006728 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8006720:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8006724:	f7fb fefe 	bl	8002524 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8006728:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800672a:	2324      	movs	r3, #36	@ 0x24
 800672c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8006730:	68d3      	ldr	r3, [r2, #12]
 8006732:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006736:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8006738:	4620      	mov	r0, r4
 800673a:	f7ff ff59 	bl	80065f0 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800673e:	6823      	ldr	r3, [r4, #0]
 8006740:	691a      	ldr	r2, [r3, #16]
 8006742:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006746:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006748:	695a      	ldr	r2, [r3, #20]
 800674a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800674e:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006750:	68da      	ldr	r2, [r3, #12]
 8006752:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006756:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006758:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800675a:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800675c:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 800675e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8006762:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006766:	6360      	str	r0, [r4, #52]	@ 0x34
}
 8006768:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800676a:	2001      	movs	r0, #1
 800676c:	e7fc      	b.n	8006768 <HAL_UART_Init+0x58>

0800676e <HAL_UART_Transmit>:
{
 800676e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006772:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8006774:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006778:	2b20      	cmp	r3, #32
{
 800677a:	4604      	mov	r4, r0
 800677c:	460e      	mov	r6, r1
 800677e:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006780:	d13f      	bne.n	8006802 <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8006782:	2900      	cmp	r1, #0
 8006784:	d03f      	beq.n	8006806 <HAL_UART_Transmit+0x98>
 8006786:	2a00      	cmp	r2, #0
 8006788:	d03d      	beq.n	8006806 <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800678a:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800678c:	2500      	movs	r5, #0
 800678e:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006790:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 8006794:	f7fd f86a 	bl	800386c <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006798:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize = Size;
 800679a:	84a7      	strh	r7, [r4, #36]	@ 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800679c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 80067a0:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 80067a2:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80067a4:	d103      	bne.n	80067ae <HAL_UART_Transmit+0x40>
 80067a6:	6923      	ldr	r3, [r4, #16]
 80067a8:	b90b      	cbnz	r3, 80067ae <HAL_UART_Transmit+0x40>
      pdata16bits = (const uint16_t *) pData;
 80067aa:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 80067ac:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 80067ae:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 80067b0:	b29b      	uxth	r3, r3
 80067b2:	b953      	cbnz	r3, 80067ca <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80067b4:	4643      	mov	r3, r8
 80067b6:	464a      	mov	r2, r9
 80067b8:	2140      	movs	r1, #64	@ 0x40
 80067ba:	4620      	mov	r0, r4
 80067bc:	f7ff ff76 	bl	80066ac <UART_WaitOnFlagUntilTimeout.constprop.0>
 80067c0:	2320      	movs	r3, #32
 80067c2:	b950      	cbnz	r0, 80067da <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 80067c4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 80067c8:	e00a      	b.n	80067e0 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80067ca:	4643      	mov	r3, r8
 80067cc:	464a      	mov	r2, r9
 80067ce:	2180      	movs	r1, #128	@ 0x80
 80067d0:	4620      	mov	r0, r4
 80067d2:	f7ff ff6b 	bl	80066ac <UART_WaitOnFlagUntilTimeout.constprop.0>
 80067d6:	b128      	cbz	r0, 80067e4 <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 80067d8:	2320      	movs	r3, #32
 80067da:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_TIMEOUT;
 80067de:	2003      	movs	r0, #3
}
 80067e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80067e4:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80067e6:	b94e      	cbnz	r6, 80067fc <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80067e8:	f835 3b02 	ldrh.w	r3, [r5], #2
 80067ec:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80067f0:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 80067f2:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 80067f4:	3901      	subs	r1, #1
 80067f6:	b289      	uxth	r1, r1
 80067f8:	84e1      	strh	r1, [r4, #38]	@ 0x26
 80067fa:	e7d8      	b.n	80067ae <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80067fc:	f816 3b01 	ldrb.w	r3, [r6], #1
 8006800:	e7f6      	b.n	80067f0 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 8006802:	2002      	movs	r0, #2
 8006804:	e7ec      	b.n	80067e0 <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 8006806:	2001      	movs	r0, #1
 8006808:	e7ea      	b.n	80067e0 <HAL_UART_Transmit+0x72>

0800680a <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
 800680a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800680e:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8006812:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8006816:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800681a:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 800681e:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006822:	6809      	ldr	r1, [r1, #0]
 8006824:	ea43 0308 	orr.w	r3, r3, r8
 8006828:	b981      	cbnz	r1, 800684c <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800682a:	ea43 030e 	orr.w	r3, r3, lr
 800682e:	4313      	orrs	r3, r2
 8006830:	ea43 030c 	orr.w	r3, r3, ip
 8006834:	433b      	orrs	r3, r7
 8006836:	6801      	ldr	r1, [r0, #0]
 8006838:	4333      	orrs	r3, r6
 800683a:	432b      	orrs	r3, r5
 800683c:	4323      	orrs	r3, r4
 800683e:	f36f 010e 	bfc	r1, #0, #15
 8006842:	430b      	orrs	r3, r1
 8006844:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006846:	2000      	movs	r0, #0
 8006848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800684c:	6801      	ldr	r1, [r0, #0]
 800684e:	ea43 030e 	orr.w	r3, r3, lr
 8006852:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006856:	430b      	orrs	r3, r1
 8006858:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800685a:	ea42 030c 	orr.w	r3, r2, ip
 800685e:	6841      	ldr	r1, [r0, #4]
 8006860:	433b      	orrs	r3, r7
 8006862:	4333      	orrs	r3, r6
 8006864:	432b      	orrs	r3, r5
 8006866:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800686a:	4323      	orrs	r3, r4
 800686c:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006870:	4313      	orrs	r3, r2
 8006872:	6043      	str	r3, [r0, #4]
 8006874:	e7e7      	b.n	8006846 <FMC_SDRAM_Init+0x3c>

08006876 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006876:	68cb      	ldr	r3, [r1, #12]
 8006878:	f103 3cff 	add.w	ip, r3, #4294967295
 800687c:	694b      	ldr	r3, [r1, #20]
{
 800687e:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006880:	684c      	ldr	r4, [r1, #4]
 8006882:	688f      	ldr	r7, [r1, #8]
 8006884:	690e      	ldr	r6, [r1, #16]
 8006886:	698d      	ldr	r5, [r1, #24]
 8006888:	6809      	ldr	r1, [r1, #0]
 800688a:	3b01      	subs	r3, #1
 800688c:	051b      	lsls	r3, r3, #20
 800688e:	3c01      	subs	r4, #1
 8006890:	3f01      	subs	r7, #1
 8006892:	3e01      	subs	r6, #1
 8006894:	3d01      	subs	r5, #1
 8006896:	0124      	lsls	r4, r4, #4
 8006898:	023f      	lsls	r7, r7, #8
 800689a:	0436      	lsls	r6, r6, #16
 800689c:	062d      	lsls	r5, r5, #24
 800689e:	3901      	subs	r1, #1
 80068a0:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 80068a4:	b95a      	cbnz	r2, 80068be <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80068a6:	430b      	orrs	r3, r1
 80068a8:	4323      	orrs	r3, r4
 80068aa:	6882      	ldr	r2, [r0, #8]
 80068ac:	433b      	orrs	r3, r7
 80068ae:	4333      	orrs	r3, r6
 80068b0:	432b      	orrs	r3, r5
 80068b2:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80068b6:	4313      	orrs	r3, r2
 80068b8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 80068ba:	2000      	movs	r0, #0
 80068bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80068be:	6882      	ldr	r2, [r0, #8]
 80068c0:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80068c4:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 80068c8:	4313      	orrs	r3, r2
 80068ca:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80068cc:	ea44 0307 	orr.w	r3, r4, r7
 80068d0:	68c2      	ldr	r2, [r0, #12]
 80068d2:	430b      	orrs	r3, r1
 80068d4:	4333      	orrs	r3, r6
 80068d6:	432b      	orrs	r3, r5
 80068d8:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80068dc:	4313      	orrs	r3, r2
 80068de:	60c3      	str	r3, [r0, #12]
 80068e0:	e7eb      	b.n	80068ba <FMC_SDRAM_Timing_Init+0x44>

080068e2 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80068e2:	b570      	push	{r4, r5, r6, lr}
 80068e4:	4604      	mov	r4, r0
 80068e6:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80068e8:	6902      	ldr	r2, [r0, #16]
 80068ea:	e9d1 3000 	ldrd	r3, r0, [r1]
 80068ee:	4303      	orrs	r3, r0
 80068f0:	68c8      	ldr	r0, [r1, #12]
 80068f2:	f36f 0215 	bfc	r2, #0, #22
 80068f6:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 80068fa:	4313      	orrs	r3, r2
 80068fc:	688a      	ldr	r2, [r1, #8]
 80068fe:	3a01      	subs	r2, #1
 8006900:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006904:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8006906:	f7fc ffb1 	bl	800386c <HAL_GetTick>
 800690a:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800690c:	69a0      	ldr	r0, [r4, #24]
 800690e:	f010 0020 	ands.w	r0, r0, #32
 8006912:	d003      	beq.n	800691c <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006914:	1c6b      	adds	r3, r5, #1
 8006916:	d0f9      	beq.n	800690c <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006918:	b90d      	cbnz	r5, 800691e <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800691a:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 800691c:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800691e:	f7fc ffa5 	bl	800386c <HAL_GetTick>
 8006922:	1b80      	subs	r0, r0, r6
 8006924:	42a8      	cmp	r0, r5
 8006926:	d9f1      	bls.n	800690c <FMC_SDRAM_SendCommand+0x2a>
 8006928:	e7f7      	b.n	800691a <FMC_SDRAM_SendCommand+0x38>

0800692a <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800692a:	6943      	ldr	r3, [r0, #20]
 800692c:	f36f 034d 	bfc	r3, #1, #13
 8006930:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8006934:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8006936:	2000      	movs	r0, #0
 8006938:	4770      	bx	lr

0800693a <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 800693a:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800693c:	2300      	movs	r3, #0
{
 800693e:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006940:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 8006942:	9b01      	ldr	r3, [sp, #4]
 8006944:	3301      	adds	r3, #1
 8006946:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8006948:	9b01      	ldr	r3, [sp, #4]
 800694a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800694e:	d81a      	bhi.n	8006986 <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006950:	6913      	ldr	r3, [r2, #16]
 8006952:	2b00      	cmp	r3, #0
 8006954:	daf5      	bge.n	8006942 <USB_CoreReset+0x8>

  count = 10U;
 8006956:	230a      	movs	r3, #10

  /* few cycles before setting core reset */
  while (count > 0U)
  {
    count--;
 8006958:	9301      	str	r3, [sp, #4]
  while (count > 0U)
 800695a:	9b01      	ldr	r3, [sp, #4]
 800695c:	b983      	cbnz	r3, 8006980 <USB_CoreReset+0x46>
  }

  /* Core Soft Reset */
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 800695e:	6913      	ldr	r3, [r2, #16]
 8006960:	f043 0301 	orr.w	r3, r3, #1
 8006964:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 8006966:	9b01      	ldr	r3, [sp, #4]
 8006968:	3301      	adds	r3, #1
 800696a:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 800696c:	9b01      	ldr	r3, [sp, #4]
 800696e:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006972:	d808      	bhi.n	8006986 <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8006974:	6910      	ldr	r0, [r2, #16]
 8006976:	f010 0001 	ands.w	r0, r0, #1
 800697a:	d1f4      	bne.n	8006966 <USB_CoreReset+0x2c>

  return HAL_OK;
}
 800697c:	b002      	add	sp, #8
 800697e:	4770      	bx	lr
    count--;
 8006980:	9b01      	ldr	r3, [sp, #4]
 8006982:	3b01      	subs	r3, #1
 8006984:	e7e8      	b.n	8006958 <USB_CoreReset+0x1e>
      return HAL_TIMEOUT;
 8006986:	2003      	movs	r0, #3
 8006988:	e7f8      	b.n	800697c <USB_CoreReset+0x42>

0800698a <USB_CoreInit>:
{
 800698a:	b084      	sub	sp, #16
 800698c:	b538      	push	{r3, r4, r5, lr}
 800698e:	ad05      	add	r5, sp, #20
 8006990:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006994:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8006998:	2b01      	cmp	r3, #1
{
 800699a:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800699c:	d127      	bne.n	80069ee <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800699e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80069a0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80069a4:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 80069a6:	68c3      	ldr	r3, [r0, #12]
 80069a8:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 80069ac:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80069b0:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 80069b2:	68c3      	ldr	r3, [r0, #12]
 80069b4:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 80069b8:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 80069ba:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80069be:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 80069c0:	bf02      	ittt	eq
 80069c2:	68c3      	ldreq	r3, [r0, #12]
 80069c4:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 80069c8:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 80069ca:	f7ff ffb6 	bl	800693a <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 80069ce:	f89d 3016 	ldrb.w	r3, [sp, #22]
 80069d2:	2b01      	cmp	r3, #1
 80069d4:	d107      	bne.n	80069e6 <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 80069d6:	68a3      	ldr	r3, [r4, #8]
 80069d8:	f043 0306 	orr.w	r3, r3, #6
 80069dc:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 80069de:	68a3      	ldr	r3, [r4, #8]
 80069e0:	f043 0320 	orr.w	r3, r3, #32
 80069e4:	60a3      	str	r3, [r4, #8]
}
 80069e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80069ea:	b004      	add	sp, #16
 80069ec:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 80069ee:	68c3      	ldr	r3, [r0, #12]
 80069f0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80069f4:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 80069f6:	f7ff ffa0 	bl	800693a <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 80069fa:	f89d 301d 	ldrb.w	r3, [sp, #29]
 80069fe:	b923      	cbnz	r3, 8006a0a <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8006a00:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006a02:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8006a06:	63a3      	str	r3, [r4, #56]	@ 0x38
 8006a08:	e7e1      	b.n	80069ce <USB_CoreInit+0x44>
 8006a0a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006a0c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006a10:	e7f9      	b.n	8006a06 <USB_CoreInit+0x7c>
	...

08006a14 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 8006a14:	2a02      	cmp	r2, #2
 8006a16:	d14a      	bne.n	8006aae <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8006a18:	4b27      	ldr	r3, [pc, #156]	@ (8006ab8 <USB_SetTurnaroundTime+0xa4>)
 8006a1a:	4a28      	ldr	r2, [pc, #160]	@ (8006abc <USB_SetTurnaroundTime+0xa8>)
 8006a1c:	440b      	add	r3, r1
 8006a1e:	4293      	cmp	r3, r2
 8006a20:	d939      	bls.n	8006a96 <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 8006a22:	4b27      	ldr	r3, [pc, #156]	@ (8006ac0 <USB_SetTurnaroundTime+0xac>)
 8006a24:	4a27      	ldr	r2, [pc, #156]	@ (8006ac4 <USB_SetTurnaroundTime+0xb0>)
 8006a26:	440b      	add	r3, r1
 8006a28:	4293      	cmp	r3, r2
 8006a2a:	d936      	bls.n	8006a9a <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8006a2c:	4a26      	ldr	r2, [pc, #152]	@ (8006ac8 <USB_SetTurnaroundTime+0xb4>)
 8006a2e:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 8006a32:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 8006a36:	4293      	cmp	r3, r2
 8006a38:	d931      	bls.n	8006a9e <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8006a3a:	4a24      	ldr	r2, [pc, #144]	@ (8006acc <USB_SetTurnaroundTime+0xb8>)
 8006a3c:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 8006a40:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 8006a44:	4293      	cmp	r3, r2
 8006a46:	d32c      	bcc.n	8006aa2 <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8006a48:	4b21      	ldr	r3, [pc, #132]	@ (8006ad0 <USB_SetTurnaroundTime+0xbc>)
 8006a4a:	4a22      	ldr	r2, [pc, #136]	@ (8006ad4 <USB_SetTurnaroundTime+0xc0>)
 8006a4c:	440b      	add	r3, r1
 8006a4e:	4293      	cmp	r3, r2
 8006a50:	d929      	bls.n	8006aa6 <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 8006a52:	4b21      	ldr	r3, [pc, #132]	@ (8006ad8 <USB_SetTurnaroundTime+0xc4>)
 8006a54:	4a21      	ldr	r2, [pc, #132]	@ (8006adc <USB_SetTurnaroundTime+0xc8>)
 8006a56:	440b      	add	r3, r1
 8006a58:	4293      	cmp	r3, r2
 8006a5a:	d326      	bcc.n	8006aaa <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 8006a5c:	4b20      	ldr	r3, [pc, #128]	@ (8006ae0 <USB_SetTurnaroundTime+0xcc>)
 8006a5e:	4a21      	ldr	r2, [pc, #132]	@ (8006ae4 <USB_SetTurnaroundTime+0xd0>)
 8006a60:	440b      	add	r3, r1
 8006a62:	4293      	cmp	r3, r2
 8006a64:	d323      	bcc.n	8006aae <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8006a66:	4a20      	ldr	r2, [pc, #128]	@ (8006ae8 <USB_SetTurnaroundTime+0xd4>)
 8006a68:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 8006a6c:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 8006a70:	4293      	cmp	r3, r2
 8006a72:	d31e      	bcc.n	8006ab2 <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006a74:	4b1d      	ldr	r3, [pc, #116]	@ (8006aec <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 8006a76:	4a1e      	ldr	r2, [pc, #120]	@ (8006af0 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006a78:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 8006a7a:	4293      	cmp	r3, r2
 8006a7c:	bf2c      	ite	cs
 8006a7e:	2306      	movcs	r3, #6
 8006a80:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8006a82:	68c2      	ldr	r2, [r0, #12]
 8006a84:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 8006a88:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 8006a8a:	68c2      	ldr	r2, [r0, #12]
 8006a8c:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 8006a90:	60c3      	str	r3, [r0, #12]
}
 8006a92:	2000      	movs	r0, #0
 8006a94:	4770      	bx	lr
      UsbTrd = 0xFU;
 8006a96:	230f      	movs	r3, #15
 8006a98:	e7f3      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 8006a9a:	230e      	movs	r3, #14
 8006a9c:	e7f1      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 8006a9e:	230d      	movs	r3, #13
 8006aa0:	e7ef      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 8006aa2:	230c      	movs	r3, #12
 8006aa4:	e7ed      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 8006aa6:	230b      	movs	r3, #11
 8006aa8:	e7eb      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 8006aaa:	230a      	movs	r3, #10
 8006aac:	e7e9      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 8006aae:	2309      	movs	r3, #9
 8006ab0:	e7e7      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 8006ab2:	2308      	movs	r3, #8
 8006ab4:	e7e5      	b.n	8006a82 <USB_SetTurnaroundTime+0x6e>
 8006ab6:	bf00      	nop
 8006ab8:	ff275340 	.word	0xff275340
 8006abc:	000c34ff 	.word	0x000c34ff
 8006ac0:	ff1b1e40 	.word	0xff1b1e40
 8006ac4:	000f423f 	.word	0x000f423f
 8006ac8:	00124f7f 	.word	0x00124f7f
 8006acc:	0013d620 	.word	0x0013d620
 8006ad0:	fee5b660 	.word	0xfee5b660
 8006ad4:	0016e35f 	.word	0x0016e35f
 8006ad8:	feced300 	.word	0xfeced300
 8006adc:	001b7740 	.word	0x001b7740
 8006ae0:	feb35bc0 	.word	0xfeb35bc0
 8006ae4:	002191c0 	.word	0x002191c0
 8006ae8:	00387520 	.word	0x00387520
 8006aec:	fe5954e0 	.word	0xfe5954e0
 8006af0:	00419ce0 	.word	0x00419ce0

08006af4 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8006af4:	6883      	ldr	r3, [r0, #8]
 8006af6:	f043 0301 	orr.w	r3, r3, #1
 8006afa:	6083      	str	r3, [r0, #8]
}
 8006afc:	2000      	movs	r0, #0
 8006afe:	4770      	bx	lr

08006b00 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8006b00:	6883      	ldr	r3, [r0, #8]
 8006b02:	f023 0301 	bic.w	r3, r3, #1
 8006b06:	6083      	str	r3, [r0, #8]
}
 8006b08:	2000      	movs	r0, #0
 8006b0a:	4770      	bx	lr

08006b0c <USB_SetCurrentMode>:
{
 8006b0c:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006b0e:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006b10:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006b12:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 8006b16:	4605      	mov	r5, r0
 8006b18:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006b1a:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006b1c:	d114      	bne.n	8006b48 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8006b1e:	68c3      	ldr	r3, [r0, #12]
 8006b20:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006b24:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8006b26:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8006b28:	200a      	movs	r0, #10
 8006b2a:	f7fc fea5 	bl	8003878 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006b2e:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b30:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 8006b32:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b36:	d402      	bmi.n	8006b3e <USB_SetCurrentMode+0x32>
 8006b38:	2cc8      	cmp	r4, #200	@ 0xc8
 8006b3a:	d1f5      	bne.n	8006b28 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 8006b3c:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 8006b3e:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 8006b42:	4258      	negs	r0, r3
 8006b44:	4158      	adcs	r0, r3
}
 8006b46:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 8006b48:	b971      	cbnz	r1, 8006b68 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8006b4a:	68c3      	ldr	r3, [r0, #12]
 8006b4c:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8006b50:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 8006b52:	200a      	movs	r0, #10
 8006b54:	f7fc fe90 	bl	8003878 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006b58:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b5a:	07da      	lsls	r2, r3, #31
      ms += 10U;
 8006b5c:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b60:	d5ed      	bpl.n	8006b3e <USB_SetCurrentMode+0x32>
 8006b62:	2cc8      	cmp	r4, #200	@ 0xc8
 8006b64:	d1f5      	bne.n	8006b52 <USB_SetCurrentMode+0x46>
 8006b66:	e7e9      	b.n	8006b3c <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8006b68:	2001      	movs	r0, #1
 8006b6a:	e7ec      	b.n	8006b46 <USB_SetCurrentMode+0x3a>

08006b6c <USB_FlushTxFifo>:
{
 8006b6c:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006b6e:	2300      	movs	r3, #0
{
 8006b70:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006b72:	9301      	str	r3, [sp, #4]
    count++;
 8006b74:	9b01      	ldr	r3, [sp, #4]
 8006b76:	3301      	adds	r3, #1
 8006b78:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006b7a:	9b01      	ldr	r3, [sp, #4]
 8006b7c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b80:	d815      	bhi.n	8006bae <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006b82:	6913      	ldr	r3, [r2, #16]
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	daf5      	bge.n	8006b74 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b88:	0189      	lsls	r1, r1, #6
  count = 0U;
 8006b8a:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b8c:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 8006b90:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b92:	6111      	str	r1, [r2, #16]
    count++;
 8006b94:	9b01      	ldr	r3, [sp, #4]
 8006b96:	3301      	adds	r3, #1
 8006b98:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006b9a:	9b01      	ldr	r3, [sp, #4]
 8006b9c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006ba0:	d805      	bhi.n	8006bae <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8006ba2:	6910      	ldr	r0, [r2, #16]
 8006ba4:	f010 0020 	ands.w	r0, r0, #32
 8006ba8:	d1f4      	bne.n	8006b94 <USB_FlushTxFifo+0x28>
}
 8006baa:	b002      	add	sp, #8
 8006bac:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006bae:	2003      	movs	r0, #3
 8006bb0:	e7fb      	b.n	8006baa <USB_FlushTxFifo+0x3e>

08006bb2 <USB_FlushRxFifo>:
{
 8006bb2:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006bb4:	2300      	movs	r3, #0
{
 8006bb6:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006bb8:	9301      	str	r3, [sp, #4]
    count++;
 8006bba:	9b01      	ldr	r3, [sp, #4]
 8006bbc:	3301      	adds	r3, #1
 8006bbe:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006bc0:	9b01      	ldr	r3, [sp, #4]
 8006bc2:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006bc6:	d813      	bhi.n	8006bf0 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006bc8:	6913      	ldr	r3, [r2, #16]
 8006bca:	2b00      	cmp	r3, #0
 8006bcc:	daf5      	bge.n	8006bba <USB_FlushRxFifo+0x8>
  count = 0U;
 8006bce:	2300      	movs	r3, #0
 8006bd0:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8006bd2:	2310      	movs	r3, #16
 8006bd4:	6113      	str	r3, [r2, #16]
    count++;
 8006bd6:	9b01      	ldr	r3, [sp, #4]
 8006bd8:	3301      	adds	r3, #1
 8006bda:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006bdc:	9b01      	ldr	r3, [sp, #4]
 8006bde:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006be2:	d805      	bhi.n	8006bf0 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8006be4:	6910      	ldr	r0, [r2, #16]
 8006be6:	f010 0010 	ands.w	r0, r0, #16
 8006bea:	d1f4      	bne.n	8006bd6 <USB_FlushRxFifo+0x24>
}
 8006bec:	b002      	add	sp, #8
 8006bee:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006bf0:	2003      	movs	r0, #3
 8006bf2:	e7fb      	b.n	8006bec <USB_FlushRxFifo+0x3a>

08006bf4 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8006bf4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8006bf8:	4319      	orrs	r1, r3
 8006bfa:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8006bfe:	2000      	movs	r0, #0
 8006c00:	4770      	bx	lr
	...

08006c04 <USB_DevInit>:
{
 8006c04:	b084      	sub	sp, #16
 8006c06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006c0a:	4604      	mov	r4, r0
 8006c0c:	a809      	add	r0, sp, #36	@ 0x24
 8006c0e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 8006c12:	2300      	movs	r3, #0
 8006c14:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8006c18:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8006c1c:	4619      	mov	r1, r3
 8006c1e:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 8006c22:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 8006c26:	3301      	adds	r3, #1
 8006c28:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8006c2a:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8006c2c:	d1f7      	bne.n	8006c1e <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006c2e:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 8006c32:	2d00      	cmp	r5, #0
 8006c34:	d16c      	bne.n	8006d10 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	f043 0302 	orr.w	r3, r3, #2
 8006c3c:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 8006c3e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c40:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8006c44:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 8006c46:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c48:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8006c4c:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 8006c4e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c50:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006c54:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 8006c56:	2300      	movs	r3, #0
 8006c58:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006c5c:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8006c60:	2b01      	cmp	r3, #1
 8006c62:	d15f      	bne.n	8006d24 <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 8006c64:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 8006c68:	2900      	cmp	r1, #0
 8006c6a:	d159      	bne.n	8006d20 <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006c6c:	4620      	mov	r0, r4
 8006c6e:	f7ff ffc1 	bl	8006bf4 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8006c72:	2110      	movs	r1, #16
 8006c74:	4620      	mov	r0, r4
 8006c76:	f7ff ff79 	bl	8006b6c <USB_FlushTxFifo>
 8006c7a:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c7c:	4620      	mov	r0, r4
 8006c7e:	f7ff ff98 	bl	8006bb2 <USB_FlushRxFifo>
 8006c82:	4308      	orrs	r0, r1
 8006c84:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 8006c86:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c88:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 8006c8a:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c8c:	bf18      	it	ne
 8006c8e:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 8006c90:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8006c92:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 8006c96:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 8006c98:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006c9a:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006c9e:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006ca2:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006ca6:	429e      	cmp	r6, r3
 8006ca8:	d83e      	bhi.n	8006d28 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006caa:	2200      	movs	r2, #0
 8006cac:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006cb0:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006cb2:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006cb6:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006cba:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006cbe:	4296      	cmp	r6, r2
 8006cc0:	d845      	bhi.n	8006d4e <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8006cc2:	693b      	ldr	r3, [r7, #16]
 8006cc4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006cc8:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 8006cca:	2300      	movs	r3, #0
 8006ccc:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8006cce:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 8006cd2:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 8006cd4:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8006cd8:	b91b      	cbnz	r3, 8006ce2 <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8006cda:	69a3      	ldr	r3, [r4, #24]
 8006cdc:	f043 0310 	orr.w	r3, r3, #16
 8006ce0:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8006ce2:	69a2      	ldr	r2, [r4, #24]
 8006ce4:	4b23      	ldr	r3, [pc, #140]	@ (8006d74 <USB_DevInit+0x170>)
 8006ce6:	4313      	orrs	r3, r2
 8006ce8:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8006cea:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8006cee:	b11b      	cbz	r3, 8006cf8 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8006cf0:	69a3      	ldr	r3, [r4, #24]
 8006cf2:	f043 0308 	orr.w	r3, r3, #8
 8006cf6:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8006cf8:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8006cfa:	bf01      	itttt	eq
 8006cfc:	69a3      	ldreq	r3, [r4, #24]
 8006cfe:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 8006d02:	f043 0304 	orreq.w	r3, r3, #4
 8006d06:	61a3      	streq	r3, [r4, #24]
}
 8006d08:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006d0c:	b004      	add	sp, #16
 8006d0e:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 8006d10:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006d12:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006d16:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006d18:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006d1a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8006d1e:	e799      	b.n	8006c54 <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8006d20:	4619      	mov	r1, r3
 8006d22:	e7a3      	b.n	8006c6c <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006d24:	2103      	movs	r1, #3
 8006d26:	e7a1      	b.n	8006c6c <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006d28:	f8d2 9000 	ldr.w	r9, [r2]
 8006d2c:	f1b9 0f00 	cmp.w	r9, #0
 8006d30:	da0b      	bge.n	8006d4a <USB_DevInit+0x146>
      if (i == 0U)
 8006d32:	b93b      	cbnz	r3, 8006d44 <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006d34:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8006d38:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d3a:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006d3c:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d40:	3220      	adds	r2, #32
 8006d42:	e7b0      	b.n	8006ca6 <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006d44:	f8c2 c000 	str.w	ip, [r2]
 8006d48:	e7f6      	b.n	8006d38 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 8006d4a:	6011      	str	r1, [r2, #0]
 8006d4c:	e7f4      	b.n	8006d38 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006d4e:	f8d3 9000 	ldr.w	r9, [r3]
 8006d52:	f1b9 0f00 	cmp.w	r9, #0
 8006d56:	da0b      	bge.n	8006d70 <USB_DevInit+0x16c>
      if (i == 0U)
 8006d58:	b93a      	cbnz	r2, 8006d6a <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006d5a:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 8006d5e:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d60:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006d62:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d66:	3320      	adds	r3, #32
 8006d68:	e7a9      	b.n	8006cbe <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006d6a:	f8c3 c000 	str.w	ip, [r3]
 8006d6e:	e7f6      	b.n	8006d5e <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006d70:	6019      	str	r1, [r3, #0]
 8006d72:	e7f4      	b.n	8006d5e <USB_DevInit+0x15a>
 8006d74:	803c3800 	.word	0x803c3800

08006d78 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 8006d78:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 8006d7c:	f013 0006 	ands.w	r0, r3, #6
 8006d80:	d004      	beq.n	8006d8c <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 8006d82:	f013 0f02 	tst.w	r3, #2
 8006d86:	bf14      	ite	ne
 8006d88:	2002      	movne	r0, #2
 8006d8a:	200f      	moveq	r0, #15
}
 8006d8c:	4770      	bx	lr

08006d8e <USB_ActivateEndpoint>:
{
 8006d8e:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006d90:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d92:	2201      	movs	r2, #1
 8006d94:	f004 050f 	and.w	r5, r4, #15
 8006d98:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 8006d9a:	784d      	ldrb	r5, [r1, #1]
 8006d9c:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d9e:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006da2:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 8006da6:	d119      	bne.n	8006ddc <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006da8:	69dd      	ldr	r5, [r3, #28]
 8006daa:	432a      	orrs	r2, r5
 8006dac:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006dae:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006db2:	041a      	lsls	r2, r3, #16
 8006db4:	d410      	bmi.n	8006dd8 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006db6:	688a      	ldr	r2, [r1, #8]
 8006db8:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8006dbc:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8006dc0:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006dc2:	432b      	orrs	r3, r5
 8006dc4:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006dc8:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 8006dcc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006dd0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006dd4:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8006dd8:	2000      	movs	r0, #0
 8006dda:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8006ddc:	69dc      	ldr	r4, [r3, #28]
 8006dde:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8006de2:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8006de4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8006de8:	041b      	lsls	r3, r3, #16
 8006dea:	d4f5      	bmi.n	8006dd8 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006dec:	688b      	ldr	r3, [r1, #8]
 8006dee:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8006df2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006df6:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8006df8:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006dfa:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006dfe:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006e02:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006e06:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8006e0a:	e7e5      	b.n	8006dd8 <USB_ActivateEndpoint+0x4a>

08006e0c <USB_DeactivateEndpoint>:
{
 8006e0c:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006e0e:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8006e10:	7849      	ldrb	r1, [r1, #1]
 8006e12:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006e14:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 8006e18:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 8006e1c:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 8006e20:	d122      	bne.n	8006e68 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006e22:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e26:	2900      	cmp	r1, #0
 8006e28:	da0b      	bge.n	8006e42 <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8006e2a:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e2e:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006e32:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 8006e36:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e3a:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8006e3e:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8006e42:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006e44:	2101      	movs	r1, #1
 8006e46:	fa01 f202 	lsl.w	r2, r1, r2
 8006e4a:	ea24 0402 	bic.w	r4, r4, r2
 8006e4e:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8006e50:	69c1      	ldr	r1, [r0, #28]
 8006e52:	ea21 0202 	bic.w	r2, r1, r2
 8006e56:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8006e58:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e5c:	4a14      	ldr	r2, [pc, #80]	@ (8006eb0 <USB_DeactivateEndpoint+0xa4>)
 8006e5e:	400a      	ands	r2, r1
 8006e60:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 8006e64:	2000      	movs	r0, #0
 8006e66:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006e68:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e6c:	2900      	cmp	r1, #0
 8006e6e:	da0b      	bge.n	8006e88 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8006e70:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e74:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006e78:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8006e7c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e80:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8006e84:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006e88:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006e8a:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8006e8e:	fa01 f202 	lsl.w	r2, r1, r2
 8006e92:	ea24 0402 	bic.w	r4, r4, r2
 8006e96:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006e98:	69c1      	ldr	r1, [r0, #28]
 8006e9a:	ea21 0202 	bic.w	r2, r1, r2
 8006e9e:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8006ea0:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006ea4:	4a03      	ldr	r2, [pc, #12]	@ (8006eb4 <USB_DeactivateEndpoint+0xa8>)
 8006ea6:	400a      	ands	r2, r1
 8006ea8:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 8006eac:	e7da      	b.n	8006e64 <USB_DeactivateEndpoint+0x58>
 8006eae:	bf00      	nop
 8006eb0:	ec337800 	.word	0xec337800
 8006eb4:	eff37800 	.word	0xeff37800

08006eb8 <USB_EPStopXfer>:
{
 8006eb8:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006eba:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8006ebc:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 8006ebe:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006ec0:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8006ec2:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006ec4:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8006ec8:	d11e      	bne.n	8006f08 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006eca:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 8006ece:	18c1      	adds	r1, r0, r3
 8006ed0:	58c2      	ldr	r2, [r0, r3]
 8006ed2:	2a00      	cmp	r2, #0
 8006ed4:	db02      	blt.n	8006edc <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 8006ed6:	2000      	movs	r0, #0
}
 8006ed8:	b002      	add	sp, #8
 8006eda:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 8006edc:	58c2      	ldr	r2, [r0, r3]
 8006ede:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8006ee2:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 8006ee4:	58c2      	ldr	r2, [r0, r3]
 8006ee6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8006eea:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8006eec:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8006ef0:	9b01      	ldr	r3, [sp, #4]
 8006ef2:	3301      	adds	r3, #1
 8006ef4:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8006ef6:	9b01      	ldr	r3, [sp, #4]
 8006ef8:	4293      	cmp	r3, r2
 8006efa:	d901      	bls.n	8006f00 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 8006efc:	2001      	movs	r0, #1
 8006efe:	e7eb      	b.n	8006ed8 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 8006f00:	680b      	ldr	r3, [r1, #0]
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	dbf4      	blt.n	8006ef0 <USB_EPStopXfer+0x38>
 8006f06:	e7e6      	b.n	8006ed6 <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006f08:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8006f0c:	18c1      	adds	r1, r0, r3
 8006f0e:	58c2      	ldr	r2, [r0, r3]
 8006f10:	2a00      	cmp	r2, #0
 8006f12:	dae0      	bge.n	8006ed6 <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 8006f14:	58c2      	ldr	r2, [r0, r3]
 8006f16:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8006f1a:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 8006f1c:	58c2      	ldr	r2, [r0, r3]
 8006f1e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8006f22:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8006f24:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8006f28:	9b01      	ldr	r3, [sp, #4]
 8006f2a:	3301      	adds	r3, #1
 8006f2c:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8006f2e:	9b01      	ldr	r3, [sp, #4]
 8006f30:	4293      	cmp	r3, r2
 8006f32:	d8e3      	bhi.n	8006efc <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8006f34:	680b      	ldr	r3, [r1, #0]
 8006f36:	2b00      	cmp	r3, #0
 8006f38:	dbf6      	blt.n	8006f28 <USB_EPStopXfer+0x70>
 8006f3a:	e7cc      	b.n	8006ed6 <USB_EPStopXfer+0x1e>

08006f3c <USB_WritePacket>:
{
 8006f3c:	b510      	push	{r4, lr}
 8006f3e:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 8006f42:	b944      	cbnz	r4, 8006f56 <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 8006f44:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f46:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 8006f48:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f4a:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 8006f4e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 8006f52:	4299      	cmp	r1, r3
 8006f54:	d101      	bne.n	8006f5a <USB_WritePacket+0x1e>
}
 8006f56:	2000      	movs	r0, #0
 8006f58:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f5a:	f851 2b04 	ldr.w	r2, [r1], #4
 8006f5e:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 8006f60:	e7f7      	b.n	8006f52 <USB_WritePacket+0x16>
	...

08006f64 <USB_EPStartXfer>:
{
 8006f64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 8006f68:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 8006f6a:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 8006f6c:	790f      	ldrb	r7, [r1, #4]
 8006f6e:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8007160 <USB_EPStartXfer+0x1fc>
 8006f72:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 8007164 <USB_EPStartXfer+0x200>
{
 8006f76:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 8006f78:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8006f7a:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f7c:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 8006f80:	f040 8097 	bne.w	80070b2 <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f84:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 8006f88:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 8006f8c:	bb74      	cbnz	r4, 8006fec <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f8e:	ea03 030e 	and.w	r3, r3, lr
 8006f92:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8006f96:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006f9a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8006f9e:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8006fa2:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006fa6:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 8006faa:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8006fac:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8006fb0:	d157      	bne.n	8007062 <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 8006fb2:	69cb      	ldr	r3, [r1, #28]
 8006fb4:	b10b      	cbz	r3, 8006fba <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8006fb6:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 8006fba:	2f01      	cmp	r7, #1
 8006fbc:	d10c      	bne.n	8006fd8 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8006fbe:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8006fc2:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8006fc6:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8006fca:	bf0c      	ite	eq
 8006fcc:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8006fd0:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8006fd4:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8006fd8:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8006fdc:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8006fe0:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 8006fe4:	2000      	movs	r0, #0
 8006fe6:	b002      	add	sp, #8
 8006fe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8006fec:	ea03 0308 	and.w	r3, r3, r8
 8006ff0:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006ff4:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006ff8:	ea03 030e 	and.w	r3, r3, lr
 8006ffc:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 8007000:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 8007002:	b97a      	cbnz	r2, 8007024 <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 8007004:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 8007006:	bf38      	it	cc
 8007008:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800700a:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800700e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 8007012:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8007016:	690b      	ldr	r3, [r1, #16]
 8007018:	f8dc 4010 	ldr.w	r4, [ip, #16]
 800701c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007020:	4323      	orrs	r3, r4
 8007022:	e7c2      	b.n	8006faa <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007024:	441c      	add	r4, r3
 8007026:	3c01      	subs	r4, #1
 8007028:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 800702c:	4b4b      	ldr	r3, [pc, #300]	@ (800715c <USB_EPStartXfer+0x1f8>)
 800702e:	f8dc e010 	ldr.w	lr, [ip, #16]
 8007032:	fa1f f884 	uxth.w	r8, r4
 8007036:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 800703a:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 800703e:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 8007040:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007044:	d1e7      	bne.n	8007016 <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 8007046:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800704a:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 800704e:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 8007052:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007056:	ea4f 7348 	mov.w	r3, r8, lsl #29
 800705a:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 800705e:	4323      	orrs	r3, r4
 8007060:	e7d7      	b.n	8007012 <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007062:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 8007066:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007068:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800706c:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 8007070:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 8007072:	d00b      	beq.n	800708c <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 8007074:	2b00      	cmp	r3, #0
 8007076:	d0b5      	beq.n	8006fe4 <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8007078:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 800707c:	f002 020f 	and.w	r2, r2, #15
 8007080:	2301      	movs	r3, #1
 8007082:	4093      	lsls	r3, r2
 8007084:	430b      	orrs	r3, r1
 8007086:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 800708a:	e7ab      	b.n	8006fe4 <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800708c:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 8007090:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007094:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 8007098:	bf0c      	ite	eq
 800709a:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800709e:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 80070a2:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 80070a6:	9600      	str	r6, [sp, #0]
 80070a8:	68c9      	ldr	r1, [r1, #12]
 80070aa:	b29b      	uxth	r3, r3
 80070ac:	f7ff ff46 	bl	8006f3c <USB_WritePacket>
 80070b0:	e798      	b.n	8006fe4 <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 80070b2:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 80070b6:	ea03 0308 	and.w	r3, r3, r8
 80070ba:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 80070be:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 80070c2:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 80070c6:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 80070ca:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 80070ce:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 80070d0:	bb5a      	cbnz	r2, 800712a <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 80070d2:	b104      	cbz	r4, 80070d6 <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 80070d4:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 80070d6:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 80070d8:	f8dc 2010 	ldr.w	r2, [ip, #16]
 80070dc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80070e0:	4313      	orrs	r3, r2
 80070e2:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80070e6:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80070ea:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 80070ee:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 80070f0:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 80070f4:	d103      	bne.n	80070fe <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 80070f6:	68cb      	ldr	r3, [r1, #12]
 80070f8:	b10b      	cbz	r3, 80070fe <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 80070fa:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 80070fe:	2f01      	cmp	r7, #1
 8007100:	d10c      	bne.n	800711c <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007102:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8007106:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 800710a:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 800710e:	bf0c      	ite	eq
 8007110:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8007114:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8007118:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 800711c:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8007120:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007124:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 8007128:	e75c      	b.n	8006fe4 <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 800712a:	2c00      	cmp	r4, #0
 800712c:	d0d4      	beq.n	80070d8 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800712e:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007130:	4a0a      	ldr	r2, [pc, #40]	@ (800715c <USB_EPStartXfer+0x1f8>)
 8007132:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007136:	3c01      	subs	r4, #1
 8007138:	fbb4 f4f3 	udiv	r4, r4, r3
 800713c:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800713e:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007142:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007144:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007148:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800714a:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800714e:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8007152:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007156:	4313      	orrs	r3, r2
 8007158:	e7c9      	b.n	80070ee <USB_EPStartXfer+0x18a>
 800715a:	bf00      	nop
 800715c:	1ff80000 	.word	0x1ff80000
 8007160:	e007ffff 	.word	0xe007ffff
 8007164:	fff80000 	.word	0xfff80000

08007168 <USB_ReadPacket>:
{
 8007168:	4603      	mov	r3, r0
 800716a:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 800716c:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 800716e:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8007170:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 8007174:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 8007178:	42a0      	cmp	r0, r4
 800717a:	d310      	bcc.n	800719e <USB_ReadPacket+0x36>
 800717c:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 8007180:	b162      	cbz	r2, 800719c <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8007182:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8007186:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 8007188:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 800718a:	00d9      	lsls	r1, r3, #3
 800718c:	fa24 f101 	lsr.w	r1, r4, r1
 8007190:	54c1      	strb	r1, [r0, r3]
      i++;
 8007192:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 8007194:	b299      	uxth	r1, r3
 8007196:	428a      	cmp	r2, r1
 8007198:	d1f7      	bne.n	800718a <USB_ReadPacket+0x22>
 800719a:	4410      	add	r0, r2
}
 800719c:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 800719e:	682e      	ldr	r6, [r5, #0]
 80071a0:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 80071a4:	3001      	adds	r0, #1
 80071a6:	e7e7      	b.n	8007178 <USB_ReadPacket+0x10>

080071a8 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 80071a8:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 80071aa:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80071ac:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 80071ae:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 80071b2:	d112      	bne.n	80071da <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 80071b4:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 80071b8:	2a00      	cmp	r2, #0
 80071ba:	db06      	blt.n	80071ca <USB_EPSetStall+0x22>
 80071bc:	b12b      	cbz	r3, 80071ca <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 80071be:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80071c2:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80071c6:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 80071ca:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80071ce:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80071d2:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80071d6:	2000      	movs	r0, #0
 80071d8:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 80071da:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 80071de:	2a00      	cmp	r2, #0
 80071e0:	db06      	blt.n	80071f0 <USB_EPSetStall+0x48>
 80071e2:	b12b      	cbz	r3, 80071f0 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 80071e4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80071e8:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80071ec:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 80071f0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80071f4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80071f8:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 80071fc:	e7eb      	b.n	80071d6 <USB_EPSetStall+0x2e>

080071fe <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80071fe:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8007200:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007202:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007206:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 8007208:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800720a:	f1a3 0302 	sub.w	r3, r3, #2
 800720e:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 8007210:	d10f      	bne.n	8007232 <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007212:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007216:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007218:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 800721c:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007220:	d805      	bhi.n	800722e <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007222:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007226:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800722a:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 800722e:	2000      	movs	r0, #0
 8007230:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007232:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007236:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800723a:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800723c:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007240:	bf9e      	ittt	ls
 8007242:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8007246:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 800724a:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 800724e:	e7ee      	b.n	800722e <USB_EPClearStall+0x30>

08007250 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8007250:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007254:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8007258:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 800725c:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007260:	0109      	lsls	r1, r1, #4
 8007262:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8007266:	4319      	orrs	r1, r3
 8007268:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 800726c:	2000      	movs	r0, #0
 800726e:	4770      	bx	lr

08007270 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007270:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007274:	f023 0303 	bic.w	r3, r3, #3
 8007278:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 800727c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007280:	f023 0302 	bic.w	r3, r3, #2
 8007284:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007288:	2000      	movs	r0, #0
 800728a:	4770      	bx	lr

0800728c <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 800728c:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007290:	f023 0303 	bic.w	r3, r3, #3
 8007294:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007298:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 800729c:	f043 0302 	orr.w	r3, r3, #2
 80072a0:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 80072a4:	2000      	movs	r0, #0
 80072a6:	4770      	bx	lr

080072a8 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 80072a8:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 80072aa:	6980      	ldr	r0, [r0, #24]
}
 80072ac:	4010      	ands	r0, r2
 80072ae:	4770      	bx	lr

080072b0 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 80072b0:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 80072b4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 80072b8:	69c0      	ldr	r0, [r0, #28]
 80072ba:	4018      	ands	r0, r3
}
 80072bc:	0c00      	lsrs	r0, r0, #16
 80072be:	4770      	bx	lr

080072c0 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 80072c0:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 80072c4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 80072c8:	69c0      	ldr	r0, [r0, #28]
 80072ca:	4018      	ands	r0, r3
}
 80072cc:	b280      	uxth	r0, r0
 80072ce:	4770      	bx	lr

080072d0 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80072d0:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80072d4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80072d8:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80072dc:	6940      	ldr	r0, [r0, #20]
}
 80072de:	4010      	ands	r0, r2
 80072e0:	4770      	bx	lr

080072e2 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 80072e2:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 80072e6:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072ea:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072ee:	f001 010f 	and.w	r1, r1, #15
 80072f2:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072f4:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072f8:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072fa:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072fc:	b2db      	uxtb	r3, r3
 80072fe:	4313      	orrs	r3, r2
}
 8007300:	4018      	ands	r0, r3
 8007302:	4770      	bx	lr

08007304 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 8007304:	6940      	ldr	r0, [r0, #20]
}
 8007306:	f000 0001 	and.w	r0, r0, #1
 800730a:	4770      	bx	lr

0800730c <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 800730c:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007310:	f36f 030a 	bfc	r3, #0, #11
 8007314:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8007318:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 800731c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007320:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007324:	2000      	movs	r0, #0
 8007326:	4770      	bx	lr

08007328 <USB_EP0_OutStart>:
{
 8007328:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 800732a:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 800732c:	4c10      	ldr	r4, [pc, #64]	@ (8007370 <USB_EP0_OutStart+0x48>)
 800732e:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007330:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007334:	d903      	bls.n	800733e <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007336:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 800733a:	2c00      	cmp	r4, #0
 800733c:	db16      	blt.n	800736c <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 800733e:	2400      	movs	r4, #0
 8007340:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007342:	691c      	ldr	r4, [r3, #16]
 8007344:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8007348:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 800734a:	691c      	ldr	r4, [r3, #16]
 800734c:	f044 0418 	orr.w	r4, r4, #24
 8007350:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007352:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8007354:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007356:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 800735a:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 800735c:	bf01      	itttt	eq
 800735e:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8007360:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8007364:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8007368:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 800736c:	2000      	movs	r0, #0
 800736e:	bd30      	pop	{r4, r5, pc}
 8007370:	4f54300a 	.word	0x4f54300a

08007374 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007374:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007376:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800737a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800737c:	f001 fe10 	bl	8008fa0 <xTaskGetSchedulerState>
 8007380:	2801      	cmp	r0, #1
 8007382:	d003      	beq.n	800738c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007384:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007388:	f000 bbdc 	b.w	8007b44 <xPortSysTickHandler>
}
 800738c:	bd08      	pop	{r3, pc}
	...

08007390 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007390:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007394:	b92b      	cbnz	r3, 80073a2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007396:	4b06      	ldr	r3, [pc, #24]	@ (80073b0 <osKernelInitialize+0x20>)
 8007398:	6818      	ldr	r0, [r3, #0]
 800739a:	b928      	cbnz	r0, 80073a8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800739c:	2201      	movs	r2, #1
 800739e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80073a0:	4770      	bx	lr
    stat = osErrorISR;
 80073a2:	f06f 0005 	mvn.w	r0, #5
 80073a6:	4770      	bx	lr
    } else {
      stat = osError;
 80073a8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80073ac:	4770      	bx	lr
 80073ae:	bf00      	nop
 80073b0:	20003954 	.word	0x20003954

080073b4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80073b4:	b510      	push	{r4, lr}
 80073b6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80073ba:	b95c      	cbnz	r4, 80073d4 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80073bc:	4b08      	ldr	r3, [pc, #32]	@ (80073e0 <osKernelStart+0x2c>)
 80073be:	681a      	ldr	r2, [r3, #0]
 80073c0:	2a01      	cmp	r2, #1
 80073c2:	d10a      	bne.n	80073da <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80073c4:	4a07      	ldr	r2, [pc, #28]	@ (80073e4 <osKernelStart+0x30>)
 80073c6:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80073c8:	2202      	movs	r2, #2
 80073ca:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80073cc:	f001 fb56 	bl	8008a7c <vTaskStartScheduler>
      stat = osOK;
 80073d0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80073d2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80073d4:	f06f 0005 	mvn.w	r0, #5
 80073d8:	e7fb      	b.n	80073d2 <osKernelStart+0x1e>
      stat = osError;
 80073da:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80073de:	e7f8      	b.n	80073d2 <osKernelStart+0x1e>
 80073e0:	20003954 	.word	0x20003954
 80073e4:	e000ed00 	.word	0xe000ed00

080073e8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80073e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80073ea:	b087      	sub	sp, #28
 80073ec:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80073ee:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80073f0:	460b      	mov	r3, r1
  hTask = NULL;
 80073f2:	9205      	str	r2, [sp, #20]
 80073f4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80073f8:	b9fa      	cbnz	r2, 800743a <osThreadNew+0x52>
 80073fa:	b1f0      	cbz	r0, 800743a <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80073fc:	b354      	cbz	r4, 8007454 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80073fe:	69a5      	ldr	r5, [r4, #24]
 8007400:	b125      	cbz	r5, 800740c <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007402:	1e69      	subs	r1, r5, #1
 8007404:	2937      	cmp	r1, #55	@ 0x37
 8007406:	d902      	bls.n	800740e <osThreadNew+0x26>
        return (NULL);
 8007408:	2000      	movs	r0, #0
 800740a:	e017      	b.n	800743c <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 800740c:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800740e:	6862      	ldr	r2, [r4, #4]
 8007410:	07d2      	lsls	r2, r2, #31
 8007412:	d4f9      	bmi.n	8007408 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8007414:	6966      	ldr	r6, [r4, #20]
 8007416:	b19e      	cbz	r6, 8007440 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007418:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800741a:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800741e:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007420:	b187      	cbz	r7, 8007444 <osThreadNew+0x5c>
 8007422:	f1bc 0fab 	cmp.w	ip, #171	@ 0xab
 8007426:	d908      	bls.n	800743a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007428:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800742a:	b134      	cbz	r4, 800743a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800742c:	b12e      	cbz	r6, 800743a <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800742e:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007432:	9500      	str	r5, [sp, #0]
 8007434:	f001 fabc 	bl	80089b0 <xTaskCreateStatic>
 8007438:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800743a:	9805      	ldr	r0, [sp, #20]
}
 800743c:	b007      	add	sp, #28
 800743e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007440:	2280      	movs	r2, #128	@ 0x80
 8007442:	e7ea      	b.n	800741a <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007444:	f1bc 0f00 	cmp.w	ip, #0
 8007448:	d1f7      	bne.n	800743a <osThreadNew+0x52>
 800744a:	6924      	ldr	r4, [r4, #16]
 800744c:	2c00      	cmp	r4, #0
 800744e:	d1f4      	bne.n	800743a <osThreadNew+0x52>
 8007450:	460c      	mov	r4, r1
 8007452:	e001      	b.n	8007458 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8007454:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8007456:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007458:	a905      	add	r1, sp, #20
 800745a:	e9cd 5100 	strd	r5, r1, [sp]
 800745e:	b292      	uxth	r2, r2
 8007460:	4621      	mov	r1, r4
 8007462:	f001 fadd 	bl	8008a20 <xTaskCreate>
 8007466:	2801      	cmp	r0, #1
            hTask = NULL;
 8007468:	bf1c      	itt	ne
 800746a:	2300      	movne	r3, #0
 800746c:	9305      	strne	r3, [sp, #20]
 800746e:	e7e4      	b.n	800743a <osThreadNew+0x52>

08007470 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007470:	b508      	push	{r3, lr}
 8007472:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007476:	b922      	cbnz	r2, 8007482 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007478:	b108      	cbz	r0, 800747e <osDelay+0xe>
      vTaskDelay(ticks);
 800747a:	f001 fc67 	bl	8008d4c <vTaskDelay>
    stat = osOK;
 800747e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007480:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8007482:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8007486:	e7fb      	b.n	8007480 <osDelay+0x10>

08007488 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007488:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800748a:	4604      	mov	r4, r0
 800748c:	460e      	mov	r6, r1
 800748e:	4615      	mov	r5, r2
 8007490:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007494:	b942      	cbnz	r2, 80074a8 <osSemaphoreNew+0x20>
 8007496:	b138      	cbz	r0, 80074a8 <osSemaphoreNew+0x20>
 8007498:	4288      	cmp	r0, r1
 800749a:	d305      	bcc.n	80074a8 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800749c:	b155      	cbz	r5, 80074b4 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800749e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80074a2:	b12b      	cbz	r3, 80074b0 <osSemaphoreNew+0x28>
 80074a4:	2f4f      	cmp	r7, #79	@ 0x4f
 80074a6:	d822      	bhi.n	80074ee <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 80074a8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80074aa:	4620      	mov	r0, r4
 80074ac:	b003      	add	sp, #12
 80074ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80074b0:	2f00      	cmp	r7, #0
 80074b2:	d1f9      	bne.n	80074a8 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 80074b4:	2c01      	cmp	r4, #1
 80074b6:	d00c      	beq.n	80074d2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80074b8:	4620      	mov	r0, r4
 80074ba:	4631      	mov	r1, r6
 80074bc:	f000 fd7a 	bl	8007fb4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80074c0:	4604      	mov	r4, r0
 80074c2:	2800      	cmp	r0, #0
 80074c4:	d0f0      	beq.n	80074a8 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 80074c6:	b985      	cbnz	r5, 80074ea <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 80074c8:	4629      	mov	r1, r5
 80074ca:	4620      	mov	r0, r4
 80074cc:	f001 f898 	bl	8008600 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80074d0:	e7eb      	b.n	80074aa <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 80074d2:	2203      	movs	r2, #3
 80074d4:	2100      	movs	r1, #0
 80074d6:	2001      	movs	r0, #1
 80074d8:	f000 fd23 	bl	8007f22 <xQueueGenericCreate>
 80074dc:	e00e      	b.n	80074fc <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80074de:	461a      	mov	r2, r3
 80074e0:	f000 fd46 	bl	8007f70 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80074e4:	4604      	mov	r4, r0
 80074e6:	2800      	cmp	r0, #0
 80074e8:	d0de      	beq.n	80074a8 <osSemaphoreNew+0x20>
          name = attr->name;
 80074ea:	682d      	ldr	r5, [r5, #0]
 80074ec:	e7ec      	b.n	80074c8 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 80074ee:	2801      	cmp	r0, #1
 80074f0:	d1f5      	bne.n	80074de <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80074f2:	2103      	movs	r1, #3
 80074f4:	9100      	str	r1, [sp, #0]
 80074f6:	4611      	mov	r1, r2
 80074f8:	f000 fcc5 	bl	8007e86 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80074fc:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80074fe:	2800      	cmp	r0, #0
 8007500:	d0d2      	beq.n	80074a8 <osSemaphoreNew+0x20>
 8007502:	2e00      	cmp	r6, #0
 8007504:	d0df      	beq.n	80074c6 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007506:	2300      	movs	r3, #0
 8007508:	461a      	mov	r2, r3
 800750a:	4619      	mov	r1, r3
 800750c:	f000 fd70 	bl	8007ff0 <xQueueGenericSend>
 8007510:	2801      	cmp	r0, #1
 8007512:	d0d8      	beq.n	80074c6 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8007514:	4620      	mov	r0, r4
 8007516:	f001 f89d 	bl	8008654 <vQueueDelete>
      if (hSemaphore != NULL) {
 800751a:	e7c5      	b.n	80074a8 <osSemaphoreNew+0x20>

0800751c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800751c:	b513      	push	{r0, r1, r4, lr}
 800751e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007520:	b328      	cbz	r0, 800756e <osSemaphoreAcquire+0x52>
 8007522:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007526:	b1cb      	cbz	r3, 800755c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8007528:	bb09      	cbnz	r1, 800756e <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800752a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800752c:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800752e:	f001 f81a 	bl	8008566 <xQueueReceiveFromISR>
 8007532:	2801      	cmp	r0, #1
 8007534:	d003      	beq.n	800753e <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8007536:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800753a:	b002      	add	sp, #8
 800753c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800753e:	9b01      	ldr	r3, [sp, #4]
 8007540:	b90b      	cbnz	r3, 8007546 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8007542:	2000      	movs	r0, #0
 8007544:	e7f9      	b.n	800753a <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8007546:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800754a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800754e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007552:	f3bf 8f4f 	dsb	sy
 8007556:	f3bf 8f6f 	isb	sy
 800755a:	e7f2      	b.n	8007542 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800755c:	f000 ff46 	bl	80083ec <xQueueSemaphoreTake>
 8007560:	2801      	cmp	r0, #1
 8007562:	d0ee      	beq.n	8007542 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8007564:	2c00      	cmp	r4, #0
 8007566:	d0e6      	beq.n	8007536 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8007568:	f06f 0001 	mvn.w	r0, #1
 800756c:	e7e5      	b.n	800753a <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800756e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007572:	e7e2      	b.n	800753a <osSemaphoreAcquire+0x1e>

08007574 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007574:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007576:	b318      	cbz	r0, 80075c0 <osSemaphoreRelease+0x4c>
 8007578:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800757c:	b1cb      	cbz	r3, 80075b2 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800757e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007580:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007582:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007584:	f000 fe43 	bl	800820e <xQueueGiveFromISR>
 8007588:	2801      	cmp	r0, #1
 800758a:	d004      	beq.n	8007596 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800758c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007590:	b003      	add	sp, #12
 8007592:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8007596:	9b01      	ldr	r3, [sp, #4]
 8007598:	b14b      	cbz	r3, 80075ae <osSemaphoreRelease+0x3a>
 800759a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800759e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80075a2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80075a6:	f3bf 8f4f 	dsb	sy
 80075aa:	f3bf 8f6f 	isb	sy
  stat = osOK;
 80075ae:	2000      	movs	r0, #0
 80075b0:	e7ee      	b.n	8007590 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80075b2:	461a      	mov	r2, r3
 80075b4:	4619      	mov	r1, r3
 80075b6:	f000 fd1b 	bl	8007ff0 <xQueueGenericSend>
 80075ba:	2801      	cmp	r0, #1
 80075bc:	d0f7      	beq.n	80075ae <osSemaphoreRelease+0x3a>
 80075be:	e7e5      	b.n	800758c <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 80075c0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80075c4:	e7e4      	b.n	8007590 <osSemaphoreRelease+0x1c>

080075c6 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80075c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80075c8:	4605      	mov	r5, r0
 80075ca:	460e      	mov	r6, r1
 80075cc:	4614      	mov	r4, r2
 80075ce:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80075d2:	b11f      	cbz	r7, 80075dc <osMessageQueueNew+0x16>
  hQueue = NULL;
 80075d4:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80075d6:	4628      	mov	r0, r5
 80075d8:	b003      	add	sp, #12
 80075da:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80075dc:	2800      	cmp	r0, #0
 80075de:	d0f9      	beq.n	80075d4 <osMessageQueueNew+0xe>
 80075e0:	2900      	cmp	r1, #0
 80075e2:	d0f7      	beq.n	80075d4 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80075e4:	b1da      	cbz	r2, 800761e <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80075e6:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80075ea:	b183      	cbz	r3, 800760e <osMessageQueueNew+0x48>
 80075ec:	2a4f      	cmp	r2, #79	@ 0x4f
 80075ee:	d9f1      	bls.n	80075d4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80075f0:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80075f2:	2a00      	cmp	r2, #0
 80075f4:	d0ee      	beq.n	80075d4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80075f6:	6966      	ldr	r6, [r4, #20]
 80075f8:	434d      	muls	r5, r1
 80075fa:	42ae      	cmp	r6, r5
 80075fc:	d3ea      	bcc.n	80075d4 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80075fe:	9700      	str	r7, [sp, #0]
 8007600:	f000 fc41 	bl	8007e86 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007604:	4605      	mov	r5, r0
 8007606:	2800      	cmp	r0, #0
 8007608:	d0e4      	beq.n	80075d4 <osMessageQueueNew+0xe>
        name = attr->name;
 800760a:	6824      	ldr	r4, [r4, #0]
 800760c:	e011      	b.n	8007632 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800760e:	2a00      	cmp	r2, #0
 8007610:	d1e0      	bne.n	80075d4 <osMessageQueueNew+0xe>
 8007612:	6923      	ldr	r3, [r4, #16]
 8007614:	2b00      	cmp	r3, #0
 8007616:	d1dd      	bne.n	80075d4 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007618:	6963      	ldr	r3, [r4, #20]
 800761a:	2b00      	cmp	r3, #0
 800761c:	d1da      	bne.n	80075d4 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800761e:	4628      	mov	r0, r5
 8007620:	2200      	movs	r2, #0
 8007622:	4631      	mov	r1, r6
 8007624:	f000 fc7d 	bl	8007f22 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007628:	4605      	mov	r5, r0
 800762a:	2800      	cmp	r0, #0
 800762c:	d0d2      	beq.n	80075d4 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800762e:	2c00      	cmp	r4, #0
 8007630:	d1eb      	bne.n	800760a <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007632:	4621      	mov	r1, r4
 8007634:	4628      	mov	r0, r5
 8007636:	f000 ffe3 	bl	8008600 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800763a:	e7cc      	b.n	80075d6 <osMessageQueueNew+0x10>

0800763c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800763c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800763e:	461c      	mov	r4, r3
 8007640:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007644:	b1de      	cbz	r6, 800767e <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007646:	b338      	cbz	r0, 8007698 <osMessageQueuePut+0x5c>
 8007648:	b331      	cbz	r1, 8007698 <osMessageQueuePut+0x5c>
 800764a:	bb2b      	cbnz	r3, 8007698 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800764c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800764e:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007650:	f000 fd80 	bl	8008154 <xQueueGenericSendFromISR>
 8007654:	2801      	cmp	r0, #1
 8007656:	d003      	beq.n	8007660 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8007658:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800765c:	b002      	add	sp, #8
 800765e:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007660:	9b01      	ldr	r3, [sp, #4]
 8007662:	b90b      	cbnz	r3, 8007668 <osMessageQueuePut+0x2c>
  stat = osOK;
 8007664:	2000      	movs	r0, #0
 8007666:	e7f9      	b.n	800765c <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007668:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800766c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007670:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007674:	f3bf 8f4f 	dsb	sy
 8007678:	f3bf 8f6f 	isb	sy
 800767c:	e7f2      	b.n	8007664 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800767e:	b158      	cbz	r0, 8007698 <osMessageQueuePut+0x5c>
 8007680:	b151      	cbz	r1, 8007698 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007682:	4633      	mov	r3, r6
 8007684:	4622      	mov	r2, r4
 8007686:	f000 fcb3 	bl	8007ff0 <xQueueGenericSend>
 800768a:	2801      	cmp	r0, #1
 800768c:	d0ea      	beq.n	8007664 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800768e:	2c00      	cmp	r4, #0
 8007690:	d0e2      	beq.n	8007658 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8007692:	f06f 0001 	mvn.w	r0, #1
 8007696:	e7e1      	b.n	800765c <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007698:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800769c:	e7de      	b.n	800765c <osMessageQueuePut+0x20>

0800769e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800769e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80076a0:	461c      	mov	r4, r3
 80076a2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80076a6:	b1db      	cbz	r3, 80076e0 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80076a8:	b330      	cbz	r0, 80076f8 <osMessageQueueGet+0x5a>
 80076aa:	b329      	cbz	r1, 80076f8 <osMessageQueueGet+0x5a>
 80076ac:	bb24      	cbnz	r4, 80076f8 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80076ae:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80076b0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80076b2:	f000 ff58 	bl	8008566 <xQueueReceiveFromISR>
 80076b6:	2801      	cmp	r0, #1
 80076b8:	d003      	beq.n	80076c2 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 80076ba:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80076be:	b003      	add	sp, #12
 80076c0:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 80076c2:	9b01      	ldr	r3, [sp, #4]
 80076c4:	b90b      	cbnz	r3, 80076ca <osMessageQueueGet+0x2c>
  stat = osOK;
 80076c6:	2000      	movs	r0, #0
 80076c8:	e7f9      	b.n	80076be <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 80076ca:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80076ce:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80076d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80076d6:	f3bf 8f4f 	dsb	sy
 80076da:	f3bf 8f6f 	isb	sy
 80076de:	e7f2      	b.n	80076c6 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80076e0:	b150      	cbz	r0, 80076f8 <osMessageQueueGet+0x5a>
 80076e2:	b149      	cbz	r1, 80076f8 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80076e4:	4622      	mov	r2, r4
 80076e6:	f000 fde3 	bl	80082b0 <xQueueReceive>
 80076ea:	2801      	cmp	r0, #1
 80076ec:	d0eb      	beq.n	80076c6 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 80076ee:	2c00      	cmp	r4, #0
 80076f0:	d0e3      	beq.n	80076ba <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 80076f2:	f06f 0001 	mvn.w	r0, #1
 80076f6:	e7e2      	b.n	80076be <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 80076f8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80076fc:	e7df      	b.n	80076be <osMessageQueueGet+0x20>
	...

08007700 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007700:	4b03      	ldr	r3, [pc, #12]	@ (8007710 <vApplicationGetIdleTaskMemory+0x10>)
 8007702:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007704:	4b03      	ldr	r3, [pc, #12]	@ (8007714 <vApplicationGetIdleTaskMemory+0x14>)
 8007706:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007708:	2380      	movs	r3, #128	@ 0x80
 800770a:	6013      	str	r3, [r2, #0]
}
 800770c:	4770      	bx	lr
 800770e:	bf00      	nop
 8007710:	200038a8 	.word	0x200038a8
 8007714:	200036a8 	.word	0x200036a8

08007718 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007718:	4b03      	ldr	r3, [pc, #12]	@ (8007728 <vApplicationGetTimerTaskMemory+0x10>)
 800771a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800771c:	4b03      	ldr	r3, [pc, #12]	@ (800772c <vApplicationGetTimerTaskMemory+0x14>)
 800771e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007720:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8007724:	6013      	str	r3, [r2, #0]
}
 8007726:	4770      	bx	lr
 8007728:	200035fc 	.word	0x200035fc
 800772c:	200031fc 	.word	0x200031fc

08007730 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007730:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007732:	4b10      	ldr	r3, [pc, #64]	@ (8007774 <prvInsertBlockIntoFreeList+0x44>)
 8007734:	461a      	mov	r2, r3
 8007736:	681b      	ldr	r3, [r3, #0]
 8007738:	4283      	cmp	r3, r0
 800773a:	d3fb      	bcc.n	8007734 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800773c:	6854      	ldr	r4, [r2, #4]
 800773e:	1911      	adds	r1, r2, r4
 8007740:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007742:	bf01      	itttt	eq
 8007744:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8007746:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007748:	1909      	addeq	r1, r1, r4
 800774a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800774c:	6844      	ldr	r4, [r0, #4]
 800774e:	1901      	adds	r1, r0, r4
 8007750:	428b      	cmp	r3, r1
 8007752:	d10c      	bne.n	800776e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007754:	4908      	ldr	r1, [pc, #32]	@ (8007778 <prvInsertBlockIntoFreeList+0x48>)
 8007756:	6809      	ldr	r1, [r1, #0]
 8007758:	428b      	cmp	r3, r1
 800775a:	d003      	beq.n	8007764 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800775c:	6859      	ldr	r1, [r3, #4]
 800775e:	4421      	add	r1, r4
 8007760:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007762:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007764:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007766:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007768:	bf18      	it	ne
 800776a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800776c:	bd10      	pop	{r4, pc}
 800776e:	4619      	mov	r1, r3
 8007770:	e7f8      	b.n	8007764 <prvInsertBlockIntoFreeList+0x34>
 8007772:	bf00      	nop
 8007774:	20003970 	.word	0x20003970
 8007778:	2000396c 	.word	0x2000396c

0800777c <pvPortMalloc>:
{
 800777c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007780:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007782:	f001 f9cb 	bl	8008b1c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007786:	4942      	ldr	r1, [pc, #264]	@ (8007890 <pvPortMalloc+0x114>)
 8007788:	4d42      	ldr	r5, [pc, #264]	@ (8007894 <pvPortMalloc+0x118>)
 800778a:	680b      	ldr	r3, [r1, #0]
 800778c:	bb0b      	cbnz	r3, 80077d2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800778e:	4a42      	ldr	r2, [pc, #264]	@ (8007898 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007790:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007792:	bf1f      	itttt	ne
 8007794:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007796:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800779a:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800779e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80077a0:	bf0c      	ite	eq
 80077a2:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80077a6:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80077a8:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80077aa:	4e3c      	ldr	r6, [pc, #240]	@ (800789c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 80077ac:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80077ae:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 80077b2:	2000      	movs	r0, #0
 80077b4:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80077b6:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80077b8:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80077bc:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80077be:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 80077c2:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80077c4:	4b36      	ldr	r3, [pc, #216]	@ (80078a0 <pvPortMalloc+0x124>)
 80077c6:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80077c8:	4b36      	ldr	r3, [pc, #216]	@ (80078a4 <pvPortMalloc+0x128>)
 80077ca:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80077cc:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 80077d0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80077d2:	682e      	ldr	r6, [r5, #0]
 80077d4:	4226      	tst	r6, r4
 80077d6:	d155      	bne.n	8007884 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80077d8:	2c00      	cmp	r4, #0
 80077da:	d046      	beq.n	800786a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80077dc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80077e0:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80077e2:	bf1c      	itt	ne
 80077e4:	f023 0307 	bicne.w	r3, r3, #7
 80077e8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80077ea:	2b00      	cmp	r3, #0
 80077ec:	d04a      	beq.n	8007884 <pvPortMalloc+0x108>
 80077ee:	4f2d      	ldr	r7, [pc, #180]	@ (80078a4 <pvPortMalloc+0x128>)
 80077f0:	683c      	ldr	r4, [r7, #0]
 80077f2:	429c      	cmp	r4, r3
 80077f4:	d346      	bcc.n	8007884 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80077f6:	4a29      	ldr	r2, [pc, #164]	@ (800789c <pvPortMalloc+0x120>)
 80077f8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80077fa:	6868      	ldr	r0, [r5, #4]
 80077fc:	4298      	cmp	r0, r3
 80077fe:	d204      	bcs.n	800780a <pvPortMalloc+0x8e>
 8007800:	f8d5 c000 	ldr.w	ip, [r5]
 8007804:	f1bc 0f00 	cmp.w	ip, #0
 8007808:	d115      	bne.n	8007836 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800780a:	6809      	ldr	r1, [r1, #0]
 800780c:	42a9      	cmp	r1, r5
 800780e:	d039      	beq.n	8007884 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007810:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007812:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007816:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007818:	1ac2      	subs	r2, r0, r3
 800781a:	2a10      	cmp	r2, #16
 800781c:	d912      	bls.n	8007844 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800781e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007820:	0741      	lsls	r1, r0, #29
 8007822:	d00b      	beq.n	800783c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007824:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007828:	f383 8811 	msr	BASEPRI, r3
 800782c:	f3bf 8f6f 	isb	sy
 8007830:	f3bf 8f4f 	dsb	sy
 8007834:	e7fe      	b.n	8007834 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 8007836:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 8007838:	4665      	mov	r5, ip
 800783a:	e7de      	b.n	80077fa <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800783c:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800783e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007840:	f7ff ff76 	bl	8007730 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007844:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007846:	4916      	ldr	r1, [pc, #88]	@ (80078a0 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007848:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800784a:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800784c:	4a16      	ldr	r2, [pc, #88]	@ (80078a8 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800784e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007850:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8007852:	2300      	movs	r3, #0
 8007854:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007856:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007858:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800785a:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800785c:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007860:	bf38      	it	cc
 8007862:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8007864:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007866:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800786a:	f001 f9fb 	bl	8008c64 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800786e:	0763      	lsls	r3, r4, #29
 8007870:	d00a      	beq.n	8007888 <pvPortMalloc+0x10c>
 8007872:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007876:	f383 8811 	msr	BASEPRI, r3
 800787a:	f3bf 8f6f 	isb	sy
 800787e:	f3bf 8f4f 	dsb	sy
 8007882:	e7fe      	b.n	8007882 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007884:	2400      	movs	r4, #0
 8007886:	e7f0      	b.n	800786a <pvPortMalloc+0xee>
}
 8007888:	4620      	mov	r0, r4
 800788a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800788e:	bf00      	nop
 8007890:	2000396c 	.word	0x2000396c
 8007894:	20003958 	.word	0x20003958
 8007898:	20003978 	.word	0x20003978
 800789c:	20003970 	.word	0x20003970
 80078a0:	20003964 	.word	0x20003964
 80078a4:	20003968 	.word	0x20003968
 80078a8:	20003960 	.word	0x20003960

080078ac <vPortFree>:
{
 80078ac:	b510      	push	{r4, lr}
	if( pv != NULL )
 80078ae:	4604      	mov	r4, r0
 80078b0:	b390      	cbz	r0, 8007918 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80078b2:	4a1a      	ldr	r2, [pc, #104]	@ (800791c <vPortFree+0x70>)
 80078b4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80078b8:	6812      	ldr	r2, [r2, #0]
 80078ba:	4213      	tst	r3, r2
 80078bc:	d108      	bne.n	80078d0 <vPortFree+0x24>
 80078be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078c2:	f383 8811 	msr	BASEPRI, r3
 80078c6:	f3bf 8f6f 	isb	sy
 80078ca:	f3bf 8f4f 	dsb	sy
 80078ce:	e7fe      	b.n	80078ce <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80078d0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80078d4:	b141      	cbz	r1, 80078e8 <vPortFree+0x3c>
 80078d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078da:	f383 8811 	msr	BASEPRI, r3
 80078de:	f3bf 8f6f 	isb	sy
 80078e2:	f3bf 8f4f 	dsb	sy
 80078e6:	e7fe      	b.n	80078e6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80078e8:	ea23 0302 	bic.w	r3, r3, r2
 80078ec:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80078f0:	f001 f914 	bl	8008b1c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80078f4:	4a0a      	ldr	r2, [pc, #40]	@ (8007920 <vPortFree+0x74>)
 80078f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80078fa:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80078fc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007900:	440b      	add	r3, r1
 8007902:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007904:	f7ff ff14 	bl	8007730 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8007908:	4a06      	ldr	r2, [pc, #24]	@ (8007924 <vPortFree+0x78>)
 800790a:	6813      	ldr	r3, [r2, #0]
}
 800790c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8007910:	3301      	adds	r3, #1
 8007912:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007914:	f001 b9a6 	b.w	8008c64 <xTaskResumeAll>
}
 8007918:	bd10      	pop	{r4, pc}
 800791a:	bf00      	nop
 800791c:	20003958 	.word	0x20003958
 8007920:	20003968 	.word	0x20003968
 8007924:	2000395c 	.word	0x2000395c

08007928 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007928:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800792c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007930:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007934:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007936:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007938:	2300      	movs	r3, #0
 800793a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800793c:	4770      	bx	lr

0800793e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800793e:	2300      	movs	r3, #0
 8007940:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007942:	4770      	bx	lr

08007944 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007944:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007946:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007948:	689a      	ldr	r2, [r3, #8]
 800794a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800794c:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800794e:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007950:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007952:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007954:	3301      	adds	r3, #1
 8007956:	6003      	str	r3, [r0, #0]
}
 8007958:	4770      	bx	lr

0800795a <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800795a:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800795c:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800795e:	1c63      	adds	r3, r4, #1
 8007960:	d10a      	bne.n	8007978 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007962:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007964:	685a      	ldr	r2, [r3, #4]
 8007966:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007968:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800796a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800796c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800796e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007970:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007972:	3301      	adds	r3, #1
 8007974:	6003      	str	r3, [r0, #0]
}
 8007976:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007978:	f100 0208 	add.w	r2, r0, #8
 800797c:	4613      	mov	r3, r2
 800797e:	6852      	ldr	r2, [r2, #4]
 8007980:	6815      	ldr	r5, [r2, #0]
 8007982:	42a5      	cmp	r5, r4
 8007984:	d9fa      	bls.n	800797c <vListInsert+0x22>
 8007986:	e7ed      	b.n	8007964 <vListInsert+0xa>

08007988 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007988:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800798c:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800798e:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007990:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007992:	6859      	ldr	r1, [r3, #4]
 8007994:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007996:	bf08      	it	eq
 8007998:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800799a:	2200      	movs	r2, #0
 800799c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800799e:	681a      	ldr	r2, [r3, #0]
 80079a0:	3a01      	subs	r2, #1
 80079a2:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80079a4:	6818      	ldr	r0, [r3, #0]
}
 80079a6:	4770      	bx	lr

080079a8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80079a8:	4808      	ldr	r0, [pc, #32]	@ (80079cc <prvPortStartFirstTask+0x24>)
 80079aa:	6800      	ldr	r0, [r0, #0]
 80079ac:	6800      	ldr	r0, [r0, #0]
 80079ae:	f380 8808 	msr	MSP, r0
 80079b2:	f04f 0000 	mov.w	r0, #0
 80079b6:	f380 8814 	msr	CONTROL, r0
 80079ba:	b662      	cpsie	i
 80079bc:	b661      	cpsie	f
 80079be:	f3bf 8f4f 	dsb	sy
 80079c2:	f3bf 8f6f 	isb	sy
 80079c6:	df00      	svc	0
 80079c8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80079ca:	0000      	.short	0x0000
 80079cc:	e000ed08 	.word	0xe000ed08

080079d0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80079d0:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80079e0 <vPortEnableVFP+0x10>
 80079d4:	6801      	ldr	r1, [r0, #0]
 80079d6:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80079da:	6001      	str	r1, [r0, #0]
 80079dc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80079de:	0000      	.short	0x0000
 80079e0:	e000ed88 	.word	0xe000ed88

080079e4 <prvTaskExitError>:
{
 80079e4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80079e6:	2300      	movs	r3, #0
 80079e8:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80079ea:	4b0d      	ldr	r3, [pc, #52]	@ (8007a20 <prvTaskExitError+0x3c>)
 80079ec:	681b      	ldr	r3, [r3, #0]
 80079ee:	3301      	adds	r3, #1
 80079f0:	d008      	beq.n	8007a04 <prvTaskExitError+0x20>
 80079f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079f6:	f383 8811 	msr	BASEPRI, r3
 80079fa:	f3bf 8f6f 	isb	sy
 80079fe:	f3bf 8f4f 	dsb	sy
 8007a02:	e7fe      	b.n	8007a02 <prvTaskExitError+0x1e>
 8007a04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a08:	f383 8811 	msr	BASEPRI, r3
 8007a0c:	f3bf 8f6f 	isb	sy
 8007a10:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007a14:	9b01      	ldr	r3, [sp, #4]
 8007a16:	2b00      	cmp	r3, #0
 8007a18:	d0fc      	beq.n	8007a14 <prvTaskExitError+0x30>
}
 8007a1a:	b002      	add	sp, #8
 8007a1c:	4770      	bx	lr
 8007a1e:	bf00      	nop
 8007a20:	200000d8 	.word	0x200000d8

08007a24 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007a24:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8007a28:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007a2c:	4b07      	ldr	r3, [pc, #28]	@ (8007a4c <pxPortInitialiseStack+0x28>)
 8007a2e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007a32:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007a36:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007a3a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007a3e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007a42:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007a46:	3844      	subs	r0, #68	@ 0x44
 8007a48:	4770      	bx	lr
 8007a4a:	bf00      	nop
 8007a4c:	080079e5 	.word	0x080079e5

08007a50 <SVC_Handler>:
	__asm volatile (
 8007a50:	4b07      	ldr	r3, [pc, #28]	@ (8007a70 <pxCurrentTCBConst2>)
 8007a52:	6819      	ldr	r1, [r3, #0]
 8007a54:	6808      	ldr	r0, [r1, #0]
 8007a56:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a5a:	f380 8809 	msr	PSP, r0
 8007a5e:	f3bf 8f6f 	isb	sy
 8007a62:	f04f 0000 	mov.w	r0, #0
 8007a66:	f380 8811 	msr	BASEPRI, r0
 8007a6a:	4770      	bx	lr
 8007a6c:	f3af 8000 	nop.w

08007a70 <pxCurrentTCBConst2>:
 8007a70:	20013eb8 	.word	0x20013eb8

08007a74 <vPortEnterCritical>:
 8007a74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a78:	f383 8811 	msr	BASEPRI, r3
 8007a7c:	f3bf 8f6f 	isb	sy
 8007a80:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007a84:	4a0a      	ldr	r2, [pc, #40]	@ (8007ab0 <vPortEnterCritical+0x3c>)
 8007a86:	6813      	ldr	r3, [r2, #0]
 8007a88:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007a8a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007a8c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007a8e:	d10e      	bne.n	8007aae <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007a90:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007a94:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007a98:	b2db      	uxtb	r3, r3
 8007a9a:	b143      	cbz	r3, 8007aae <vPortEnterCritical+0x3a>
 8007a9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007aa0:	f383 8811 	msr	BASEPRI, r3
 8007aa4:	f3bf 8f6f 	isb	sy
 8007aa8:	f3bf 8f4f 	dsb	sy
 8007aac:	e7fe      	b.n	8007aac <vPortEnterCritical+0x38>
}
 8007aae:	4770      	bx	lr
 8007ab0:	200000d8 	.word	0x200000d8

08007ab4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007ab4:	4a08      	ldr	r2, [pc, #32]	@ (8007ad8 <vPortExitCritical+0x24>)
 8007ab6:	6813      	ldr	r3, [r2, #0]
 8007ab8:	b943      	cbnz	r3, 8007acc <vPortExitCritical+0x18>
 8007aba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007abe:	f383 8811 	msr	BASEPRI, r3
 8007ac2:	f3bf 8f6f 	isb	sy
 8007ac6:	f3bf 8f4f 	dsb	sy
 8007aca:	e7fe      	b.n	8007aca <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007acc:	3b01      	subs	r3, #1
 8007ace:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007ad0:	b90b      	cbnz	r3, 8007ad6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007ad2:	f383 8811 	msr	BASEPRI, r3
}
 8007ad6:	4770      	bx	lr
 8007ad8:	200000d8 	.word	0x200000d8
 8007adc:	00000000 	.word	0x00000000

08007ae0 <PendSV_Handler>:
	__asm volatile
 8007ae0:	f3ef 8009 	mrs	r0, PSP
 8007ae4:	f3bf 8f6f 	isb	sy
 8007ae8:	4b15      	ldr	r3, [pc, #84]	@ (8007b40 <pxCurrentTCBConst>)
 8007aea:	681a      	ldr	r2, [r3, #0]
 8007aec:	f01e 0f10 	tst.w	lr, #16
 8007af0:	bf08      	it	eq
 8007af2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007af6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007afa:	6010      	str	r0, [r2, #0]
 8007afc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007b00:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007b04:	f380 8811 	msr	BASEPRI, r0
 8007b08:	f3bf 8f4f 	dsb	sy
 8007b0c:	f3bf 8f6f 	isb	sy
 8007b10:	f001 f940 	bl	8008d94 <vTaskSwitchContext>
 8007b14:	f04f 0000 	mov.w	r0, #0
 8007b18:	f380 8811 	msr	BASEPRI, r0
 8007b1c:	bc09      	pop	{r0, r3}
 8007b1e:	6819      	ldr	r1, [r3, #0]
 8007b20:	6808      	ldr	r0, [r1, #0]
 8007b22:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b26:	f01e 0f10 	tst.w	lr, #16
 8007b2a:	bf08      	it	eq
 8007b2c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007b30:	f380 8809 	msr	PSP, r0
 8007b34:	f3bf 8f6f 	isb	sy
 8007b38:	4770      	bx	lr
 8007b3a:	bf00      	nop
 8007b3c:	f3af 8000 	nop.w

08007b40 <pxCurrentTCBConst>:
 8007b40:	20013eb8 	.word	0x20013eb8

08007b44 <xPortSysTickHandler>:
{
 8007b44:	b508      	push	{r3, lr}
	__asm volatile
 8007b46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b4a:	f383 8811 	msr	BASEPRI, r3
 8007b4e:	f3bf 8f6f 	isb	sy
 8007b52:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007b56:	f000 ffef 	bl	8008b38 <xTaskIncrementTick>
 8007b5a:	b128      	cbz	r0, 8007b68 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007b5c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007b60:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007b64:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007b68:	2300      	movs	r3, #0
 8007b6a:	f383 8811 	msr	BASEPRI, r3
}
 8007b6e:	bd08      	pop	{r3, pc}

08007b70 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007b70:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007b74:	2300      	movs	r3, #0
 8007b76:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007b78:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007b7a:	4b05      	ldr	r3, [pc, #20]	@ (8007b90 <vPortSetupTimerInterrupt+0x20>)
 8007b7c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007b80:	681b      	ldr	r3, [r3, #0]
 8007b82:	fbb3 f3f1 	udiv	r3, r3, r1
 8007b86:	3b01      	subs	r3, #1
 8007b88:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007b8a:	2307      	movs	r3, #7
 8007b8c:	6113      	str	r3, [r2, #16]
}
 8007b8e:	4770      	bx	lr
 8007b90:	200000cc 	.word	0x200000cc

08007b94 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007b94:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007b98:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007b9a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8007b9e:	4a38      	ldr	r2, [pc, #224]	@ (8007c80 <xPortStartScheduler+0xec>)
 8007ba0:	4291      	cmp	r1, r2
 8007ba2:	d108      	bne.n	8007bb6 <xPortStartScheduler+0x22>
	__asm volatile
 8007ba4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ba8:	f383 8811 	msr	BASEPRI, r3
 8007bac:	f3bf 8f6f 	isb	sy
 8007bb0:	f3bf 8f4f 	dsb	sy
 8007bb4:	e7fe      	b.n	8007bb4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007bb6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8007bba:	4b32      	ldr	r3, [pc, #200]	@ (8007c84 <xPortStartScheduler+0xf0>)
 8007bbc:	429a      	cmp	r2, r3
 8007bbe:	d108      	bne.n	8007bd2 <xPortStartScheduler+0x3e>
 8007bc0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bc4:	f383 8811 	msr	BASEPRI, r3
 8007bc8:	f3bf 8f6f 	isb	sy
 8007bcc:	f3bf 8f4f 	dsb	sy
 8007bd0:	e7fe      	b.n	8007bd0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007bd2:	4b2d      	ldr	r3, [pc, #180]	@ (8007c88 <xPortStartScheduler+0xf4>)
 8007bd4:	781a      	ldrb	r2, [r3, #0]
 8007bd6:	b2d2      	uxtb	r2, r2
 8007bd8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007bda:	22ff      	movs	r2, #255	@ 0xff
 8007bdc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007bde:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007be0:	4a2a      	ldr	r2, [pc, #168]	@ (8007c8c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007be2:	b2db      	uxtb	r3, r3
 8007be4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007be8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007bec:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007bf0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007bf2:	4a27      	ldr	r2, [pc, #156]	@ (8007c90 <xPortStartScheduler+0xfc>)
 8007bf4:	2307      	movs	r3, #7
 8007bf6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007bf8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8007bfc:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007bfe:	0609      	lsls	r1, r1, #24
 8007c00:	d40a      	bmi.n	8007c18 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007c02:	2b03      	cmp	r3, #3
 8007c04:	d011      	beq.n	8007c2a <xPortStartScheduler+0x96>
 8007c06:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c0a:	f383 8811 	msr	BASEPRI, r3
 8007c0e:	f3bf 8f6f 	isb	sy
 8007c12:	f3bf 8f4f 	dsb	sy
 8007c16:	e7fe      	b.n	8007c16 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8007c18:	3b01      	subs	r3, #1
 8007c1a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007c1c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007c20:	005b      	lsls	r3, r3, #1
 8007c22:	b2db      	uxtb	r3, r3
 8007c24:	f88d 3003 	strb.w	r3, [sp, #3]
 8007c28:	e7e6      	b.n	8007bf8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007c2a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8007c2e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007c30:	9b01      	ldr	r3, [sp, #4]
 8007c32:	4a15      	ldr	r2, [pc, #84]	@ (8007c88 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007c34:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007c38:	b2db      	uxtb	r3, r3
 8007c3a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007c3c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007c40:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007c44:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007c48:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007c4c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007c50:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007c54:	f7ff ff8c 	bl	8007b70 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007c58:	4b0e      	ldr	r3, [pc, #56]	@ (8007c94 <xPortStartScheduler+0x100>)
 8007c5a:	2500      	movs	r5, #0
 8007c5c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007c5e:	f7ff feb7 	bl	80079d0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007c62:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007c66:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007c6a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8007c6e:	f7ff fe9b 	bl	80079a8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007c72:	f001 f88f 	bl	8008d94 <vTaskSwitchContext>
	prvTaskExitError();
 8007c76:	f7ff feb5 	bl	80079e4 <prvTaskExitError>
}
 8007c7a:	4628      	mov	r0, r5
 8007c7c:	b003      	add	sp, #12
 8007c7e:	bd30      	pop	{r4, r5, pc}
 8007c80:	410fc271 	.word	0x410fc271
 8007c84:	410fc270 	.word	0x410fc270
 8007c88:	e000e400 	.word	0xe000e400
 8007c8c:	2001397c 	.word	0x2001397c
 8007c90:	20013978 	.word	0x20013978
 8007c94:	200000d8 	.word	0x200000d8

08007c98 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007c98:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007c9c:	2b0f      	cmp	r3, #15
 8007c9e:	d90e      	bls.n	8007cbe <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007ca0:	4a11      	ldr	r2, [pc, #68]	@ (8007ce8 <vPortValidateInterruptPriority+0x50>)
 8007ca2:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007ca4:	4a11      	ldr	r2, [pc, #68]	@ (8007cec <vPortValidateInterruptPriority+0x54>)
 8007ca6:	7812      	ldrb	r2, [r2, #0]
 8007ca8:	429a      	cmp	r2, r3
 8007caa:	d908      	bls.n	8007cbe <vPortValidateInterruptPriority+0x26>
 8007cac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cb0:	f383 8811 	msr	BASEPRI, r3
 8007cb4:	f3bf 8f6f 	isb	sy
 8007cb8:	f3bf 8f4f 	dsb	sy
 8007cbc:	e7fe      	b.n	8007cbc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007cbe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007cc2:	4a0b      	ldr	r2, [pc, #44]	@ (8007cf0 <vPortValidateInterruptPriority+0x58>)
 8007cc4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007cc8:	6812      	ldr	r2, [r2, #0]
 8007cca:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007cce:	4293      	cmp	r3, r2
 8007cd0:	d908      	bls.n	8007ce4 <vPortValidateInterruptPriority+0x4c>
 8007cd2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cd6:	f383 8811 	msr	BASEPRI, r3
 8007cda:	f3bf 8f6f 	isb	sy
 8007cde:	f3bf 8f4f 	dsb	sy
 8007ce2:	e7fe      	b.n	8007ce2 <vPortValidateInterruptPriority+0x4a>
	}
 8007ce4:	4770      	bx	lr
 8007ce6:	bf00      	nop
 8007ce8:	e000e3f0 	.word	0xe000e3f0
 8007cec:	2001397c 	.word	0x2001397c
 8007cf0:	20013978 	.word	0x20013978

08007cf4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007cf4:	b510      	push	{r4, lr}
 8007cf6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007cf8:	f7ff febc 	bl	8007a74 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007cfc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007cfe:	f7ff fed9 	bl	8007ab4 <vPortExitCritical>

	return xReturn;
}
 8007d02:	fab4 f084 	clz	r0, r4
 8007d06:	0940      	lsrs	r0, r0, #5
 8007d08:	bd10      	pop	{r4, pc}

08007d0a <prvCopyDataToQueue>:
{
 8007d0a:	b570      	push	{r4, r5, r6, lr}
 8007d0c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007d0e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007d10:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007d12:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007d14:	b942      	cbnz	r2, 8007d28 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007d16:	6806      	ldr	r6, [r0, #0]
 8007d18:	b99e      	cbnz	r6, 8007d42 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007d1a:	6880      	ldr	r0, [r0, #8]
 8007d1c:	f001 f98e 	bl	800903c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007d20:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007d22:	3501      	adds	r5, #1
 8007d24:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007d26:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007d28:	b96e      	cbnz	r6, 8007d46 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d2a:	6840      	ldr	r0, [r0, #4]
 8007d2c:	f01b f961 	bl	8022ff2 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d30:	6863      	ldr	r3, [r4, #4]
 8007d32:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007d34:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d36:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d38:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d3a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007d3c:	bf24      	itt	cs
 8007d3e:	6823      	ldrcs	r3, [r4, #0]
 8007d40:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007d42:	2000      	movs	r0, #0
 8007d44:	e7ed      	b.n	8007d22 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007d46:	68c0      	ldr	r0, [r0, #12]
 8007d48:	f01b f953 	bl	8022ff2 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007d4c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007d4e:	68e3      	ldr	r3, [r4, #12]
 8007d50:	4251      	negs	r1, r2
 8007d52:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d54:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007d56:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d58:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007d5a:	bf3e      	ittt	cc
 8007d5c:	68a3      	ldrcc	r3, [r4, #8]
 8007d5e:	185b      	addcc	r3, r3, r1
 8007d60:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007d62:	2e02      	cmp	r6, #2
 8007d64:	d1ed      	bne.n	8007d42 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007d66:	b10d      	cbz	r5, 8007d6c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007d68:	3d01      	subs	r5, #1
 8007d6a:	e7ea      	b.n	8007d42 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007d6c:	4628      	mov	r0, r5
 8007d6e:	e7d8      	b.n	8007d22 <prvCopyDataToQueue+0x18>

08007d70 <prvCopyDataFromQueue>:
{
 8007d70:	4603      	mov	r3, r0
 8007d72:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007d74:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007d76:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007d78:	b16a      	cbz	r2, 8007d96 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d7a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007d7c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d7e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007d80:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007d82:	bf28      	it	cs
 8007d84:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d86:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007d88:	bf28      	it	cs
 8007d8a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d8c:	68d9      	ldr	r1, [r3, #12]
}
 8007d8e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d92:	f01b b92e 	b.w	8022ff2 <memcpy>
}
 8007d96:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007d9a:	4770      	bx	lr

08007d9c <prvUnlockQueue>:
{
 8007d9c:	b570      	push	{r4, r5, r6, lr}
 8007d9e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007da0:	f7ff fe68 	bl	8007a74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007da4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007da8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007dac:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007dae:	2d00      	cmp	r5, #0
 8007db0:	dd01      	ble.n	8007db6 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007db2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007db4:	b9b3      	cbnz	r3, 8007de4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8007db6:	23ff      	movs	r3, #255	@ 0xff
 8007db8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8007dbc:	f7ff fe7a 	bl	8007ab4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007dc0:	f7ff fe58 	bl	8007a74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007dc4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007dc8:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007dcc:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007dce:	2d00      	cmp	r5, #0
 8007dd0:	dd01      	ble.n	8007dd6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007dd2:	6923      	ldr	r3, [r4, #16]
 8007dd4:	b97b      	cbnz	r3, 8007df6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8007dd6:	23ff      	movs	r3, #255	@ 0xff
 8007dd8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8007ddc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007de0:	f7ff be68 	b.w	8007ab4 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007de4:	4630      	mov	r0, r6
 8007de6:	f001 f84d 	bl	8008e84 <xTaskRemoveFromEventList>
 8007dea:	b108      	cbz	r0, 8007df0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 8007dec:	f001 f8d2 	bl	8008f94 <vTaskMissedYield>
			--cTxLock;
 8007df0:	3d01      	subs	r5, #1
 8007df2:	b26d      	sxtb	r5, r5
 8007df4:	e7db      	b.n	8007dae <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007df6:	4630      	mov	r0, r6
 8007df8:	f001 f844 	bl	8008e84 <xTaskRemoveFromEventList>
 8007dfc:	b108      	cbz	r0, 8007e02 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 8007dfe:	f001 f8c9 	bl	8008f94 <vTaskMissedYield>
				--cRxLock;
 8007e02:	3d01      	subs	r5, #1
 8007e04:	b26d      	sxtb	r5, r5
 8007e06:	e7e2      	b.n	8007dce <prvUnlockQueue+0x32>

08007e08 <xQueueGenericReset>:
{
 8007e08:	b538      	push	{r3, r4, r5, lr}
 8007e0a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007e0c:	4604      	mov	r4, r0
 8007e0e:	b940      	cbnz	r0, 8007e22 <xQueueGenericReset+0x1a>
 8007e10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e14:	f383 8811 	msr	BASEPRI, r3
 8007e18:	f3bf 8f6f 	isb	sy
 8007e1c:	f3bf 8f4f 	dsb	sy
 8007e20:	e7fe      	b.n	8007e20 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007e22:	f7ff fe27 	bl	8007a74 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e26:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8007e2a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007e2c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e2e:	434b      	muls	r3, r1
 8007e30:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e32:	1a5b      	subs	r3, r3, r1
 8007e34:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e36:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8007e38:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007e3a:	2000      	movs	r0, #0
 8007e3c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e3e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8007e40:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007e44:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8007e48:	b9a5      	cbnz	r5, 8007e74 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007e4a:	6923      	ldr	r3, [r4, #16]
 8007e4c:	b173      	cbz	r3, 8007e6c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007e4e:	f104 0010 	add.w	r0, r4, #16
 8007e52:	f001 f817 	bl	8008e84 <xTaskRemoveFromEventList>
 8007e56:	b148      	cbz	r0, 8007e6c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007e58:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e5c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e60:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e64:	f3bf 8f4f 	dsb	sy
 8007e68:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007e6c:	f7ff fe22 	bl	8007ab4 <vPortExitCritical>
}
 8007e70:	2001      	movs	r0, #1
 8007e72:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007e74:	f104 0010 	add.w	r0, r4, #16
 8007e78:	f7ff fd56 	bl	8007928 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007e7c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007e80:	f7ff fd52 	bl	8007928 <vListInitialise>
 8007e84:	e7f2      	b.n	8007e6c <xQueueGenericReset+0x64>

08007e86 <xQueueGenericCreateStatic>:
	{
 8007e86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007e88:	460d      	mov	r5, r1
 8007e8a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007e8c:	b940      	cbnz	r0, 8007ea0 <xQueueGenericCreateStatic+0x1a>
 8007e8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e92:	f383 8811 	msr	BASEPRI, r3
 8007e96:	f3bf 8f6f 	isb	sy
 8007e9a:	f3bf 8f4f 	dsb	sy
 8007e9e:	e7fe      	b.n	8007e9e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8007ea0:	b943      	cbnz	r3, 8007eb4 <xQueueGenericCreateStatic+0x2e>
 8007ea2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ea6:	f383 8811 	msr	BASEPRI, r3
 8007eaa:	f3bf 8f6f 	isb	sy
 8007eae:	f3bf 8f4f 	dsb	sy
 8007eb2:	e7fe      	b.n	8007eb2 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007eb4:	b14a      	cbz	r2, 8007eca <xQueueGenericCreateStatic+0x44>
 8007eb6:	b991      	cbnz	r1, 8007ede <xQueueGenericCreateStatic+0x58>
 8007eb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ebc:	f383 8811 	msr	BASEPRI, r3
 8007ec0:	f3bf 8f6f 	isb	sy
 8007ec4:	f3bf 8f4f 	dsb	sy
 8007ec8:	e7fe      	b.n	8007ec8 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007eca:	b141      	cbz	r1, 8007ede <xQueueGenericCreateStatic+0x58>
 8007ecc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ed0:	f383 8811 	msr	BASEPRI, r3
 8007ed4:	f3bf 8f6f 	isb	sy
 8007ed8:	f3bf 8f4f 	dsb	sy
 8007edc:	e7fe      	b.n	8007edc <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007ede:	2350      	movs	r3, #80	@ 0x50
 8007ee0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007ee2:	9b01      	ldr	r3, [sp, #4]
 8007ee4:	2b50      	cmp	r3, #80	@ 0x50
 8007ee6:	d008      	beq.n	8007efa <xQueueGenericCreateStatic+0x74>
 8007ee8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007eec:	f383 8811 	msr	BASEPRI, r3
 8007ef0:	f3bf 8f6f 	isb	sy
 8007ef4:	f3bf 8f4f 	dsb	sy
 8007ef8:	e7fe      	b.n	8007ef8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007efa:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007efc:	2d00      	cmp	r5, #0
 8007efe:	bf08      	it	eq
 8007f00:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8007f02:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007f06:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 8007f0a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007f0c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007f0e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007f10:	f7ff ff7a 	bl	8007e08 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007f14:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8007f18:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8007f1c:	4620      	mov	r0, r4
 8007f1e:	b003      	add	sp, #12
 8007f20:	bd30      	pop	{r4, r5, pc}

08007f22 <xQueueGenericCreate>:
	{
 8007f22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f24:	460d      	mov	r5, r1
 8007f26:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007f28:	4606      	mov	r6, r0
 8007f2a:	b940      	cbnz	r0, 8007f3e <xQueueGenericCreate+0x1c>
 8007f2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f30:	f383 8811 	msr	BASEPRI, r3
 8007f34:	f3bf 8f6f 	isb	sy
 8007f38:	f3bf 8f4f 	dsb	sy
 8007f3c:	e7fe      	b.n	8007f3c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007f3e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007f40:	3050      	adds	r0, #80	@ 0x50
 8007f42:	f7ff fc1b 	bl	800777c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007f46:	4604      	mov	r4, r0
 8007f48:	b170      	cbz	r0, 8007f68 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007f4a:	2300      	movs	r3, #0
 8007f4c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007f50:	b165      	cbz	r5, 8007f6c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007f52:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007f56:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 8007f5a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007f5c:	2101      	movs	r1, #1
 8007f5e:	4620      	mov	r0, r4
 8007f60:	f7ff ff52 	bl	8007e08 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007f64:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8007f68:	4620      	mov	r0, r4
 8007f6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007f6c:	4603      	mov	r3, r0
 8007f6e:	e7f2      	b.n	8007f56 <xQueueGenericCreate+0x34>

08007f70 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007f70:	b513      	push	{r0, r1, r4, lr}
 8007f72:	4613      	mov	r3, r2
 8007f74:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007f76:	b940      	cbnz	r0, 8007f8a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007f78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f7c:	f383 8811 	msr	BASEPRI, r3
 8007f80:	f3bf 8f6f 	isb	sy
 8007f84:	f3bf 8f4f 	dsb	sy
 8007f88:	e7fe      	b.n	8007f88 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007f8a:	4288      	cmp	r0, r1
 8007f8c:	d208      	bcs.n	8007fa0 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007f8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f92:	f383 8811 	msr	BASEPRI, r3
 8007f96:	f3bf 8f6f 	isb	sy
 8007f9a:	f3bf 8f4f 	dsb	sy
 8007f9e:	e7fe      	b.n	8007f9e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007fa0:	2202      	movs	r2, #2
 8007fa2:	9200      	str	r2, [sp, #0]
 8007fa4:	2200      	movs	r2, #0
 8007fa6:	4611      	mov	r1, r2
 8007fa8:	f7ff ff6d 	bl	8007e86 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007fac:	b100      	cbz	r0, 8007fb0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007fae:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007fb0:	b002      	add	sp, #8
 8007fb2:	bd10      	pop	{r4, pc}

08007fb4 <xQueueCreateCountingSemaphore>:
	{
 8007fb4:	b510      	push	{r4, lr}
 8007fb6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007fb8:	b940      	cbnz	r0, 8007fcc <xQueueCreateCountingSemaphore+0x18>
 8007fba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fbe:	f383 8811 	msr	BASEPRI, r3
 8007fc2:	f3bf 8f6f 	isb	sy
 8007fc6:	f3bf 8f4f 	dsb	sy
 8007fca:	e7fe      	b.n	8007fca <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007fcc:	4288      	cmp	r0, r1
 8007fce:	d208      	bcs.n	8007fe2 <xQueueCreateCountingSemaphore+0x2e>
 8007fd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fd4:	f383 8811 	msr	BASEPRI, r3
 8007fd8:	f3bf 8f6f 	isb	sy
 8007fdc:	f3bf 8f4f 	dsb	sy
 8007fe0:	e7fe      	b.n	8007fe0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007fe2:	2202      	movs	r2, #2
 8007fe4:	2100      	movs	r1, #0
 8007fe6:	f7ff ff9c 	bl	8007f22 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007fea:	b100      	cbz	r0, 8007fee <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007fec:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007fee:	bd10      	pop	{r4, pc}

08007ff0 <xQueueGenericSend>:
{
 8007ff0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007ff4:	460f      	mov	r7, r1
 8007ff6:	9201      	str	r2, [sp, #4]
 8007ff8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007ffa:	4604      	mov	r4, r0
 8007ffc:	b940      	cbnz	r0, 8008010 <xQueueGenericSend+0x20>
 8007ffe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008002:	f383 8811 	msr	BASEPRI, r3
 8008006:	f3bf 8f6f 	isb	sy
 800800a:	f3bf 8f4f 	dsb	sy
 800800e:	e7fe      	b.n	800800e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008010:	b951      	cbnz	r1, 8008028 <xQueueGenericSend+0x38>
 8008012:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008014:	b143      	cbz	r3, 8008028 <xQueueGenericSend+0x38>
 8008016:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800801a:	f383 8811 	msr	BASEPRI, r3
 800801e:	f3bf 8f6f 	isb	sy
 8008022:	f3bf 8f4f 	dsb	sy
 8008026:	e7fe      	b.n	8008026 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008028:	2e02      	cmp	r6, #2
 800802a:	d10b      	bne.n	8008044 <xQueueGenericSend+0x54>
 800802c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800802e:	2b01      	cmp	r3, #1
 8008030:	d008      	beq.n	8008044 <xQueueGenericSend+0x54>
 8008032:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008036:	f383 8811 	msr	BASEPRI, r3
 800803a:	f3bf 8f6f 	isb	sy
 800803e:	f3bf 8f4f 	dsb	sy
 8008042:	e7fe      	b.n	8008042 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008044:	f000 ffac 	bl	8008fa0 <xTaskGetSchedulerState>
 8008048:	4605      	mov	r5, r0
 800804a:	b320      	cbz	r0, 8008096 <xQueueGenericSend+0xa6>
 800804c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800804e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008052:	f7ff fd0f 	bl	8007a74 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008056:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008058:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800805a:	429a      	cmp	r2, r3
 800805c:	d227      	bcs.n	80080ae <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800805e:	4632      	mov	r2, r6
 8008060:	4639      	mov	r1, r7
 8008062:	4620      	mov	r0, r4
 8008064:	f7ff fe51 	bl	8007d0a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008068:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800806a:	b11b      	cbz	r3, 8008074 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800806c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008070:	f000 ff08 	bl	8008e84 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008074:	b148      	cbz	r0, 800808a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8008076:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800807a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800807e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008082:	f3bf 8f4f 	dsb	sy
 8008086:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800808a:	f7ff fd13 	bl	8007ab4 <vPortExitCritical>
				return pdPASS;
 800808e:	2001      	movs	r0, #1
}
 8008090:	b004      	add	sp, #16
 8008092:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008096:	9b01      	ldr	r3, [sp, #4]
 8008098:	2b00      	cmp	r3, #0
 800809a:	d0d8      	beq.n	800804e <xQueueGenericSend+0x5e>
 800809c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080a0:	f383 8811 	msr	BASEPRI, r3
 80080a4:	f3bf 8f6f 	isb	sy
 80080a8:	f3bf 8f4f 	dsb	sy
 80080ac:	e7fe      	b.n	80080ac <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80080ae:	2e02      	cmp	r6, #2
 80080b0:	d0d5      	beq.n	800805e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 80080b2:	9b01      	ldr	r3, [sp, #4]
 80080b4:	b91b      	cbnz	r3, 80080be <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 80080b6:	f7ff fcfd 	bl	8007ab4 <vPortExitCritical>
					return errQUEUE_FULL;
 80080ba:	2000      	movs	r0, #0
 80080bc:	e7e8      	b.n	8008090 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 80080be:	b915      	cbnz	r5, 80080c6 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80080c0:	a802      	add	r0, sp, #8
 80080c2:	f000 ff1f 	bl	8008f04 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80080c6:	f7ff fcf5 	bl	8007ab4 <vPortExitCritical>
		vTaskSuspendAll();
 80080ca:	f000 fd27 	bl	8008b1c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80080ce:	f7ff fcd1 	bl	8007a74 <vPortEnterCritical>
 80080d2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80080d6:	2bff      	cmp	r3, #255	@ 0xff
 80080d8:	bf08      	it	eq
 80080da:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80080de:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80080e2:	2bff      	cmp	r3, #255	@ 0xff
 80080e4:	bf08      	it	eq
 80080e6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80080ea:	f7ff fce3 	bl	8007ab4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80080ee:	a901      	add	r1, sp, #4
 80080f0:	a802      	add	r0, sp, #8
 80080f2:	f000 ff13 	bl	8008f1c <xTaskCheckForTimeOut>
 80080f6:	bb38      	cbnz	r0, 8008148 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80080f8:	f7ff fcbc 	bl	8007a74 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80080fc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80080fe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008100:	429a      	cmp	r2, r3
 8008102:	d10e      	bne.n	8008122 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008104:	f7ff fcd6 	bl	8007ab4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008108:	9901      	ldr	r1, [sp, #4]
 800810a:	f104 0010 	add.w	r0, r4, #16
 800810e:	f000 fe81 	bl	8008e14 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008112:	4620      	mov	r0, r4
 8008114:	f7ff fe42 	bl	8007d9c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008118:	f000 fda4 	bl	8008c64 <xTaskResumeAll>
 800811c:	b148      	cbz	r0, 8008132 <xQueueGenericSend+0x142>
 800811e:	2501      	movs	r5, #1
 8008120:	e797      	b.n	8008052 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8008122:	f7ff fcc7 	bl	8007ab4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008126:	4620      	mov	r0, r4
 8008128:	f7ff fe38 	bl	8007d9c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800812c:	f000 fd9a 	bl	8008c64 <xTaskResumeAll>
 8008130:	e7f5      	b.n	800811e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8008132:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008136:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800813a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800813e:	f3bf 8f4f 	dsb	sy
 8008142:	f3bf 8f6f 	isb	sy
 8008146:	e7ea      	b.n	800811e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8008148:	4620      	mov	r0, r4
 800814a:	f7ff fe27 	bl	8007d9c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800814e:	f000 fd89 	bl	8008c64 <xTaskResumeAll>
			return errQUEUE_FULL;
 8008152:	e7b2      	b.n	80080ba <xQueueGenericSend+0xca>

08008154 <xQueueGenericSendFromISR>:
{
 8008154:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008158:	4689      	mov	r9, r1
 800815a:	4617      	mov	r7, r2
 800815c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800815e:	4604      	mov	r4, r0
 8008160:	b940      	cbnz	r0, 8008174 <xQueueGenericSendFromISR+0x20>
 8008162:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008166:	f383 8811 	msr	BASEPRI, r3
 800816a:	f3bf 8f6f 	isb	sy
 800816e:	f3bf 8f4f 	dsb	sy
 8008172:	e7fe      	b.n	8008172 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008174:	b951      	cbnz	r1, 800818c <xQueueGenericSendFromISR+0x38>
 8008176:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008178:	b143      	cbz	r3, 800818c <xQueueGenericSendFromISR+0x38>
 800817a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800817e:	f383 8811 	msr	BASEPRI, r3
 8008182:	f3bf 8f6f 	isb	sy
 8008186:	f3bf 8f4f 	dsb	sy
 800818a:	e7fe      	b.n	800818a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800818c:	2e02      	cmp	r6, #2
 800818e:	d10b      	bne.n	80081a8 <xQueueGenericSendFromISR+0x54>
 8008190:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008192:	2b01      	cmp	r3, #1
 8008194:	d008      	beq.n	80081a8 <xQueueGenericSendFromISR+0x54>
 8008196:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800819a:	f383 8811 	msr	BASEPRI, r3
 800819e:	f3bf 8f6f 	isb	sy
 80081a2:	f3bf 8f4f 	dsb	sy
 80081a6:	e7fe      	b.n	80081a6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80081a8:	f7ff fd76 	bl	8007c98 <vPortValidateInterruptPriority>
	__asm volatile
 80081ac:	f3ef 8811 	mrs	r8, BASEPRI
 80081b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081b4:	f383 8811 	msr	BASEPRI, r3
 80081b8:	f3bf 8f6f 	isb	sy
 80081bc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80081c0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80081c2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80081c4:	429a      	cmp	r2, r3
 80081c6:	d301      	bcc.n	80081cc <xQueueGenericSendFromISR+0x78>
 80081c8:	2e02      	cmp	r6, #2
 80081ca:	d11e      	bne.n	800820a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 80081cc:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80081d0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80081d2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80081d4:	4632      	mov	r2, r6
 80081d6:	4649      	mov	r1, r9
 80081d8:	4620      	mov	r0, r4
 80081da:	f7ff fd96 	bl	8007d0a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80081de:	1c6b      	adds	r3, r5, #1
 80081e0:	d10e      	bne.n	8008200 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80081e2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80081e4:	b13b      	cbz	r3, 80081f6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80081e6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80081ea:	f000 fe4b 	bl	8008e84 <xTaskRemoveFromEventList>
 80081ee:	b110      	cbz	r0, 80081f6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 80081f0:	b10f      	cbz	r7, 80081f6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80081f2:	2301      	movs	r3, #1
 80081f4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 80081f6:	2001      	movs	r0, #1
	__asm volatile
 80081f8:	f388 8811 	msr	BASEPRI, r8
}
 80081fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008200:	3501      	adds	r5, #1
 8008202:	b26d      	sxtb	r5, r5
 8008204:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8008208:	e7f5      	b.n	80081f6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800820a:	2000      	movs	r0, #0
 800820c:	e7f4      	b.n	80081f8 <xQueueGenericSendFromISR+0xa4>

0800820e <xQueueGiveFromISR>:
{
 800820e:	b570      	push	{r4, r5, r6, lr}
 8008210:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008212:	4604      	mov	r4, r0
 8008214:	b940      	cbnz	r0, 8008228 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008216:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800821a:	f383 8811 	msr	BASEPRI, r3
 800821e:	f3bf 8f6f 	isb	sy
 8008222:	f3bf 8f4f 	dsb	sy
 8008226:	e7fe      	b.n	8008226 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008228:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800822a:	b143      	cbz	r3, 800823e <xQueueGiveFromISR+0x30>
 800822c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008230:	f383 8811 	msr	BASEPRI, r3
 8008234:	f3bf 8f6f 	isb	sy
 8008238:	f3bf 8f4f 	dsb	sy
 800823c:	e7fe      	b.n	800823c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800823e:	6803      	ldr	r3, [r0, #0]
 8008240:	b953      	cbnz	r3, 8008258 <xQueueGiveFromISR+0x4a>
 8008242:	6883      	ldr	r3, [r0, #8]
 8008244:	b143      	cbz	r3, 8008258 <xQueueGiveFromISR+0x4a>
 8008246:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800824a:	f383 8811 	msr	BASEPRI, r3
 800824e:	f3bf 8f6f 	isb	sy
 8008252:	f3bf 8f4f 	dsb	sy
 8008256:	e7fe      	b.n	8008256 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008258:	f7ff fd1e 	bl	8007c98 <vPortValidateInterruptPriority>
	__asm volatile
 800825c:	f3ef 8611 	mrs	r6, BASEPRI
 8008260:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008264:	f383 8811 	msr	BASEPRI, r3
 8008268:	f3bf 8f6f 	isb	sy
 800826c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008270:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008272:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008274:	4293      	cmp	r3, r2
 8008276:	d919      	bls.n	80082ac <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008278:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800827c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800827e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008280:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008282:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008284:	d10d      	bne.n	80082a2 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008286:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008288:	b13b      	cbz	r3, 800829a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800828a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800828e:	f000 fdf9 	bl	8008e84 <xTaskRemoveFromEventList>
 8008292:	b110      	cbz	r0, 800829a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008294:	b10d      	cbz	r5, 800829a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008296:	2301      	movs	r3, #1
 8008298:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800829a:	2001      	movs	r0, #1
	__asm volatile
 800829c:	f386 8811 	msr	BASEPRI, r6
}
 80082a0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80082a2:	3301      	adds	r3, #1
 80082a4:	b25b      	sxtb	r3, r3
 80082a6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80082aa:	e7f6      	b.n	800829a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 80082ac:	2000      	movs	r0, #0
 80082ae:	e7f5      	b.n	800829c <xQueueGiveFromISR+0x8e>

080082b0 <xQueueReceive>:
{
 80082b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80082b4:	460e      	mov	r6, r1
 80082b6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80082b8:	4604      	mov	r4, r0
 80082ba:	b940      	cbnz	r0, 80082ce <xQueueReceive+0x1e>
	__asm volatile
 80082bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082c0:	f383 8811 	msr	BASEPRI, r3
 80082c4:	f3bf 8f6f 	isb	sy
 80082c8:	f3bf 8f4f 	dsb	sy
 80082cc:	e7fe      	b.n	80082cc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80082ce:	b951      	cbnz	r1, 80082e6 <xQueueReceive+0x36>
 80082d0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80082d2:	b143      	cbz	r3, 80082e6 <xQueueReceive+0x36>
 80082d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082d8:	f383 8811 	msr	BASEPRI, r3
 80082dc:	f3bf 8f6f 	isb	sy
 80082e0:	f3bf 8f4f 	dsb	sy
 80082e4:	e7fe      	b.n	80082e4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80082e6:	f000 fe5b 	bl	8008fa0 <xTaskGetSchedulerState>
 80082ea:	4605      	mov	r5, r0
 80082ec:	b318      	cbz	r0, 8008336 <xQueueReceive+0x86>
 80082ee:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80082f0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80082f4:	f7ff fbbe 	bl	8007a74 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80082f8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80082fa:	b347      	cbz	r7, 800834e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082fc:	4631      	mov	r1, r6
 80082fe:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008300:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008302:	f7ff fd35 	bl	8007d70 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008306:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008308:	6923      	ldr	r3, [r4, #16]
 800830a:	b173      	cbz	r3, 800832a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800830c:	f104 0010 	add.w	r0, r4, #16
 8008310:	f000 fdb8 	bl	8008e84 <xTaskRemoveFromEventList>
 8008314:	b148      	cbz	r0, 800832a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8008316:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800831a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800831e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008322:	f3bf 8f4f 	dsb	sy
 8008326:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800832a:	f7ff fbc3 	bl	8007ab4 <vPortExitCritical>
				return pdPASS;
 800832e:	2001      	movs	r0, #1
}
 8008330:	b004      	add	sp, #16
 8008332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008336:	9b01      	ldr	r3, [sp, #4]
 8008338:	2b00      	cmp	r3, #0
 800833a:	d0d9      	beq.n	80082f0 <xQueueReceive+0x40>
 800833c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008340:	f383 8811 	msr	BASEPRI, r3
 8008344:	f3bf 8f6f 	isb	sy
 8008348:	f3bf 8f4f 	dsb	sy
 800834c:	e7fe      	b.n	800834c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800834e:	9b01      	ldr	r3, [sp, #4]
 8008350:	b91b      	cbnz	r3, 800835a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008352:	f7ff fbaf 	bl	8007ab4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008356:	2000      	movs	r0, #0
 8008358:	e7ea      	b.n	8008330 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800835a:	b915      	cbnz	r5, 8008362 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800835c:	a802      	add	r0, sp, #8
 800835e:	f000 fdd1 	bl	8008f04 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008362:	f7ff fba7 	bl	8007ab4 <vPortExitCritical>
		vTaskSuspendAll();
 8008366:	f000 fbd9 	bl	8008b1c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800836a:	f7ff fb83 	bl	8007a74 <vPortEnterCritical>
 800836e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008372:	2bff      	cmp	r3, #255	@ 0xff
 8008374:	bf08      	it	eq
 8008376:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800837a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800837e:	2bff      	cmp	r3, #255	@ 0xff
 8008380:	bf08      	it	eq
 8008382:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008386:	f7ff fb95 	bl	8007ab4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800838a:	a901      	add	r1, sp, #4
 800838c:	a802      	add	r0, sp, #8
 800838e:	f000 fdc5 	bl	8008f1c <xTaskCheckForTimeOut>
 8008392:	bb00      	cbnz	r0, 80083d6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008394:	4620      	mov	r0, r4
 8008396:	f7ff fcad 	bl	8007cf4 <prvIsQueueEmpty>
 800839a:	b1b0      	cbz	r0, 80083ca <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800839c:	9901      	ldr	r1, [sp, #4]
 800839e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80083a2:	f000 fd37 	bl	8008e14 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80083a6:	4620      	mov	r0, r4
 80083a8:	f7ff fcf8 	bl	8007d9c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80083ac:	f000 fc5a 	bl	8008c64 <xTaskResumeAll>
 80083b0:	b948      	cbnz	r0, 80083c6 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 80083b2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80083b6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80083ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80083be:	f3bf 8f4f 	dsb	sy
 80083c2:	f3bf 8f6f 	isb	sy
 80083c6:	2501      	movs	r5, #1
 80083c8:	e794      	b.n	80082f4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 80083ca:	4620      	mov	r0, r4
 80083cc:	f7ff fce6 	bl	8007d9c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80083d0:	f000 fc48 	bl	8008c64 <xTaskResumeAll>
 80083d4:	e7f7      	b.n	80083c6 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 80083d6:	4620      	mov	r0, r4
 80083d8:	f7ff fce0 	bl	8007d9c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80083dc:	f000 fc42 	bl	8008c64 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80083e0:	4620      	mov	r0, r4
 80083e2:	f7ff fc87 	bl	8007cf4 <prvIsQueueEmpty>
 80083e6:	2800      	cmp	r0, #0
 80083e8:	d0ed      	beq.n	80083c6 <xQueueReceive+0x116>
 80083ea:	e7b4      	b.n	8008356 <xQueueReceive+0xa6>

080083ec <xQueueSemaphoreTake>:
{
 80083ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083ee:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80083f0:	4604      	mov	r4, r0
{
 80083f2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80083f4:	b940      	cbnz	r0, 8008408 <xQueueSemaphoreTake+0x1c>
 80083f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083fa:	f383 8811 	msr	BASEPRI, r3
 80083fe:	f3bf 8f6f 	isb	sy
 8008402:	f3bf 8f4f 	dsb	sy
 8008406:	e7fe      	b.n	8008406 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008408:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800840a:	b145      	cbz	r5, 800841e <xQueueSemaphoreTake+0x32>
 800840c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008410:	f383 8811 	msr	BASEPRI, r3
 8008414:	f3bf 8f6f 	isb	sy
 8008418:	f3bf 8f4f 	dsb	sy
 800841c:	e7fe      	b.n	800841c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800841e:	f000 fdbf 	bl	8008fa0 <xTaskGetSchedulerState>
 8008422:	4606      	mov	r6, r0
 8008424:	b320      	cbz	r0, 8008470 <xQueueSemaphoreTake+0x84>
 8008426:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008428:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800842a:	f7ff fb23 	bl	8007a74 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800842e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008430:	b353      	cbz	r3, 8008488 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008432:	3b01      	subs	r3, #1
 8008434:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008436:	6823      	ldr	r3, [r4, #0]
 8008438:	b913      	cbnz	r3, 8008440 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800843a:	f000 fe8f 	bl	800915c <pvTaskIncrementMutexHeldCount>
 800843e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008440:	6923      	ldr	r3, [r4, #16]
 8008442:	b173      	cbz	r3, 8008462 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008444:	f104 0010 	add.w	r0, r4, #16
 8008448:	f000 fd1c 	bl	8008e84 <xTaskRemoveFromEventList>
 800844c:	b148      	cbz	r0, 8008462 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800844e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008452:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008456:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800845a:	f3bf 8f4f 	dsb	sy
 800845e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008462:	f7ff fb27 	bl	8007ab4 <vPortExitCritical>
				return pdPASS;
 8008466:	2001      	movs	r0, #1
}
 8008468:	b005      	add	sp, #20
 800846a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800846c:	4635      	mov	r5, r6
 800846e:	e7db      	b.n	8008428 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008470:	9b01      	ldr	r3, [sp, #4]
 8008472:	2b00      	cmp	r3, #0
 8008474:	d0fa      	beq.n	800846c <xQueueSemaphoreTake+0x80>
 8008476:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800847a:	f383 8811 	msr	BASEPRI, r3
 800847e:	f3bf 8f6f 	isb	sy
 8008482:	f3bf 8f4f 	dsb	sy
 8008486:	e7fe      	b.n	8008486 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008488:	9b01      	ldr	r3, [sp, #4]
 800848a:	b953      	cbnz	r3, 80084a2 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800848c:	2d00      	cmp	r5, #0
 800848e:	d066      	beq.n	800855e <xQueueSemaphoreTake+0x172>
 8008490:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008494:	f383 8811 	msr	BASEPRI, r3
 8008498:	f3bf 8f6f 	isb	sy
 800849c:	f3bf 8f4f 	dsb	sy
 80084a0:	e7fe      	b.n	80084a0 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 80084a2:	b916      	cbnz	r6, 80084aa <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80084a4:	a802      	add	r0, sp, #8
 80084a6:	f000 fd2d 	bl	8008f04 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80084aa:	f7ff fb03 	bl	8007ab4 <vPortExitCritical>
		vTaskSuspendAll();
 80084ae:	f000 fb35 	bl	8008b1c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80084b2:	f7ff fadf 	bl	8007a74 <vPortEnterCritical>
 80084b6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80084ba:	2bff      	cmp	r3, #255	@ 0xff
 80084bc:	bf08      	it	eq
 80084be:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80084c2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80084c6:	2bff      	cmp	r3, #255	@ 0xff
 80084c8:	bf08      	it	eq
 80084ca:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 80084ce:	f7ff faf1 	bl	8007ab4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80084d2:	a901      	add	r1, sp, #4
 80084d4:	a802      	add	r0, sp, #8
 80084d6:	f000 fd21 	bl	8008f1c <xTaskCheckForTimeOut>
 80084da:	bb50      	cbnz	r0, 8008532 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80084dc:	4620      	mov	r0, r4
 80084de:	f7ff fc09 	bl	8007cf4 <prvIsQueueEmpty>
 80084e2:	b300      	cbz	r0, 8008526 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80084e4:	6823      	ldr	r3, [r4, #0]
 80084e6:	b93b      	cbnz	r3, 80084f8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 80084e8:	f7ff fac4 	bl	8007a74 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80084ec:	68a0      	ldr	r0, [r4, #8]
 80084ee:	f000 fd67 	bl	8008fc0 <xTaskPriorityInherit>
 80084f2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80084f4:	f7ff fade 	bl	8007ab4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80084f8:	9901      	ldr	r1, [sp, #4]
 80084fa:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80084fe:	f000 fc89 	bl	8008e14 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008502:	4620      	mov	r0, r4
 8008504:	f7ff fc4a 	bl	8007d9c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008508:	f000 fbac 	bl	8008c64 <xTaskResumeAll>
 800850c:	b948      	cbnz	r0, 8008522 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800850e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008512:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008516:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800851a:	f3bf 8f4f 	dsb	sy
 800851e:	f3bf 8f6f 	isb	sy
 8008522:	2601      	movs	r6, #1
 8008524:	e781      	b.n	800842a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8008526:	4620      	mov	r0, r4
 8008528:	f7ff fc38 	bl	8007d9c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800852c:	f000 fb9a 	bl	8008c64 <xTaskResumeAll>
 8008530:	e7f7      	b.n	8008522 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8008532:	4620      	mov	r0, r4
 8008534:	f7ff fc32 	bl	8007d9c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008538:	f000 fb94 	bl	8008c64 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800853c:	4620      	mov	r0, r4
 800853e:	f7ff fbd9 	bl	8007cf4 <prvIsQueueEmpty>
 8008542:	2800      	cmp	r0, #0
 8008544:	d0ed      	beq.n	8008522 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8008546:	b165      	cbz	r5, 8008562 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8008548:	f7ff fa94 	bl	8007a74 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800854c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800854e:	b119      	cbz	r1, 8008558 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008550:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008552:	6819      	ldr	r1, [r3, #0]
 8008554:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008558:	68a0      	ldr	r0, [r4, #8]
 800855a:	f000 fdb1 	bl	80090c0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800855e:	f7ff faa9 	bl	8007ab4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008562:	2000      	movs	r0, #0
 8008564:	e780      	b.n	8008468 <xQueueSemaphoreTake+0x7c>

08008566 <xQueueReceiveFromISR>:
{
 8008566:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800856a:	4689      	mov	r9, r1
 800856c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800856e:	4604      	mov	r4, r0
 8008570:	b940      	cbnz	r0, 8008584 <xQueueReceiveFromISR+0x1e>
 8008572:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008576:	f383 8811 	msr	BASEPRI, r3
 800857a:	f3bf 8f6f 	isb	sy
 800857e:	f3bf 8f4f 	dsb	sy
 8008582:	e7fe      	b.n	8008582 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008584:	b951      	cbnz	r1, 800859c <xQueueReceiveFromISR+0x36>
 8008586:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008588:	b143      	cbz	r3, 800859c <xQueueReceiveFromISR+0x36>
 800858a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800858e:	f383 8811 	msr	BASEPRI, r3
 8008592:	f3bf 8f6f 	isb	sy
 8008596:	f3bf 8f4f 	dsb	sy
 800859a:	e7fe      	b.n	800859a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800859c:	f7ff fb7c 	bl	8007c98 <vPortValidateInterruptPriority>
	__asm volatile
 80085a0:	f3ef 8711 	mrs	r7, BASEPRI
 80085a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085a8:	f383 8811 	msr	BASEPRI, r3
 80085ac:	f3bf 8f6f 	isb	sy
 80085b0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80085b4:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80085b6:	b30d      	cbz	r5, 80085fc <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 80085b8:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80085bc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80085be:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80085c0:	4620      	mov	r0, r4
 80085c2:	f7ff fbd5 	bl	8007d70 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80085c6:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80085c8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80085ca:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 80085cc:	d111      	bne.n	80085f2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80085ce:	6923      	ldr	r3, [r4, #16]
 80085d0:	b153      	cbz	r3, 80085e8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80085d2:	f104 0010 	add.w	r0, r4, #16
 80085d6:	f000 fc55 	bl	8008e84 <xTaskRemoveFromEventList>
 80085da:	b128      	cbz	r0, 80085e8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 80085dc:	f1b8 0f00 	cmp.w	r8, #0
 80085e0:	d002      	beq.n	80085e8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80085e2:	2301      	movs	r3, #1
 80085e4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80085e8:	2001      	movs	r0, #1
	__asm volatile
 80085ea:	f387 8811 	msr	BASEPRI, r7
}
 80085ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80085f2:	3601      	adds	r6, #1
 80085f4:	b276      	sxtb	r6, r6
 80085f6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80085fa:	e7f5      	b.n	80085e8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 80085fc:	4628      	mov	r0, r5
 80085fe:	e7f4      	b.n	80085ea <xQueueReceiveFromISR+0x84>

08008600 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008600:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008602:	4a07      	ldr	r2, [pc, #28]	@ (8008620 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008604:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008606:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800860a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800860e:	b91d      	cbnz	r5, 8008618 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008610:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008614:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008616:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008618:	3301      	adds	r3, #1
 800861a:	2b08      	cmp	r3, #8
 800861c:	d1f3      	bne.n	8008606 <vQueueAddToRegistry+0x6>
 800861e:	e7fa      	b.n	8008616 <vQueueAddToRegistry+0x16>
 8008620:	20013980 	.word	0x20013980

08008624 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008624:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008626:	4a09      	ldr	r2, [pc, #36]	@ (800864c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008628:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800862a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800862e:	4281      	cmp	r1, r0
 8008630:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8008634:	d106      	bne.n	8008644 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008636:	4a06      	ldr	r2, [pc, #24]	@ (8008650 <vQueueUnregisterQueue+0x2c>)
 8008638:	2100      	movs	r1, #0
 800863a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800863e:	4422      	add	r2, r4
 8008640:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008642:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008644:	3301      	adds	r3, #1
 8008646:	2b08      	cmp	r3, #8
 8008648:	d1ef      	bne.n	800862a <vQueueUnregisterQueue+0x6>
 800864a:	e7fa      	b.n	8008642 <vQueueUnregisterQueue+0x1e>
 800864c:	20013984 	.word	0x20013984
 8008650:	20013980 	.word	0x20013980

08008654 <vQueueDelete>:
{
 8008654:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008656:	b940      	cbnz	r0, 800866a <vQueueDelete+0x16>
	__asm volatile
 8008658:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800865c:	f383 8811 	msr	BASEPRI, r3
 8008660:	f3bf 8f6f 	isb	sy
 8008664:	f3bf 8f4f 	dsb	sy
 8008668:	e7fe      	b.n	8008668 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800866a:	f7ff ffdb 	bl	8008624 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800866e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008672:	b91b      	cbnz	r3, 800867c <vQueueDelete+0x28>
}
 8008674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008678:	f7ff b918 	b.w	80078ac <vPortFree>
}
 800867c:	bd10      	pop	{r4, pc}

0800867e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800867e:	b570      	push	{r4, r5, r6, lr}
 8008680:	4604      	mov	r4, r0
 8008682:	460d      	mov	r5, r1
 8008684:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008686:	f7ff f9f5 	bl	8007a74 <vPortEnterCritical>
 800868a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800868e:	2bff      	cmp	r3, #255	@ 0xff
 8008690:	bf04      	itt	eq
 8008692:	2300      	moveq	r3, #0
 8008694:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008698:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800869c:	2bff      	cmp	r3, #255	@ 0xff
 800869e:	bf04      	itt	eq
 80086a0:	2300      	moveq	r3, #0
 80086a2:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 80086a6:	f7ff fa05 	bl	8007ab4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80086aa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80086ac:	b92b      	cbnz	r3, 80086ba <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80086ae:	4632      	mov	r2, r6
 80086b0:	4629      	mov	r1, r5
 80086b2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80086b6:	f000 fbc7 	bl	8008e48 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80086ba:	4620      	mov	r0, r4
	}
 80086bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80086c0:	f7ff bb6c 	b.w	8007d9c <prvUnlockQueue>

080086c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80086c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80086c8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80086ca:	f7ff f9d3 	bl	8007a74 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80086ce:	4b30      	ldr	r3, [pc, #192]	@ (8008790 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80086d0:	4e30      	ldr	r6, [pc, #192]	@ (8008794 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80086d2:	681a      	ldr	r2, [r3, #0]
 80086d4:	4f30      	ldr	r7, [pc, #192]	@ (8008798 <prvAddNewTaskToReadyList+0xd4>)
 80086d6:	3201      	adds	r2, #1
 80086d8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80086da:	6835      	ldr	r5, [r6, #0]
 80086dc:	2d00      	cmp	r5, #0
 80086de:	d14b      	bne.n	8008778 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80086e0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	2b01      	cmp	r3, #1
 80086e6:	d11f      	bne.n	8008728 <prvAddNewTaskToReadyList+0x64>
 80086e8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80086ea:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80086ec:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80086ee:	f7ff f91b 	bl	8007928 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80086f2:	2d38      	cmp	r5, #56	@ 0x38
 80086f4:	f108 0814 	add.w	r8, r8, #20
 80086f8:	d1f7      	bne.n	80086ea <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80086fa:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 80087c0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80086fe:	4d27      	ldr	r5, [pc, #156]	@ (800879c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008700:	4640      	mov	r0, r8
 8008702:	f7ff f911 	bl	8007928 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008706:	4628      	mov	r0, r5
 8008708:	f7ff f90e 	bl	8007928 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800870c:	4824      	ldr	r0, [pc, #144]	@ (80087a0 <prvAddNewTaskToReadyList+0xdc>)
 800870e:	f7ff f90b 	bl	8007928 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008712:	4824      	ldr	r0, [pc, #144]	@ (80087a4 <prvAddNewTaskToReadyList+0xe0>)
 8008714:	f7ff f908 	bl	8007928 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008718:	4823      	ldr	r0, [pc, #140]	@ (80087a8 <prvAddNewTaskToReadyList+0xe4>)
 800871a:	f7ff f905 	bl	8007928 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800871e:	4b23      	ldr	r3, [pc, #140]	@ (80087ac <prvAddNewTaskToReadyList+0xe8>)
 8008720:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008724:	4b22      	ldr	r3, [pc, #136]	@ (80087b0 <prvAddNewTaskToReadyList+0xec>)
 8008726:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008728:	4a22      	ldr	r2, [pc, #136]	@ (80087b4 <prvAddNewTaskToReadyList+0xf0>)
 800872a:	6813      	ldr	r3, [r2, #0]
 800872c:	3301      	adds	r3, #1
 800872e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008730:	4a21      	ldr	r2, [pc, #132]	@ (80087b8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008732:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008734:	6811      	ldr	r1, [r2, #0]
 8008736:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008738:	2014      	movs	r0, #20
 800873a:	428b      	cmp	r3, r1
 800873c:	fb00 7003 	mla	r0, r0, r3, r7
 8008740:	f104 0104 	add.w	r1, r4, #4
 8008744:	bf88      	it	hi
 8008746:	6013      	strhi	r3, [r2, #0]
 8008748:	f7ff f8fc 	bl	8007944 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800874c:	f7ff f9b2 	bl	8007ab4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008750:	4b1a      	ldr	r3, [pc, #104]	@ (80087bc <prvAddNewTaskToReadyList+0xf8>)
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	b173      	cbz	r3, 8008774 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008756:	6833      	ldr	r3, [r6, #0]
 8008758:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800875a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800875c:	429a      	cmp	r2, r3
 800875e:	d209      	bcs.n	8008774 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008760:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008764:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008768:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800876c:	f3bf 8f4f 	dsb	sy
 8008770:	f3bf 8f6f 	isb	sy
}
 8008774:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008778:	4b10      	ldr	r3, [pc, #64]	@ (80087bc <prvAddNewTaskToReadyList+0xf8>)
 800877a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800877c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800877e:	2a00      	cmp	r2, #0
 8008780:	d1d2      	bne.n	8008728 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008782:	6832      	ldr	r2, [r6, #0]
 8008784:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008786:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008788:	bf98      	it	ls
 800878a:	6034      	strls	r4, [r6, #0]
 800878c:	e7cc      	b.n	8008728 <prvAddNewTaskToReadyList+0x64>
 800878e:	bf00      	nop
 8008790:	200139e4 	.word	0x200139e4
 8008794:	20013eb8 	.word	0x20013eb8
 8008798:	20013a58 	.word	0x20013a58
 800879c:	20013a30 	.word	0x20013a30
 80087a0:	20013a14 	.word	0x20013a14
 80087a4:	20013a00 	.word	0x20013a00
 80087a8:	200139e8 	.word	0x200139e8
 80087ac:	20013a2c 	.word	0x20013a2c
 80087b0:	20013a28 	.word	0x20013a28
 80087b4:	200139c8 	.word	0x200139c8
 80087b8:	200139dc 	.word	0x200139dc
 80087bc:	200139d8 	.word	0x200139d8
 80087c0:	20013a44 	.word	0x20013a44

080087c4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80087c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80087c6:	4b15      	ldr	r3, [pc, #84]	@ (800881c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087c8:	4d15      	ldr	r5, [pc, #84]	@ (8008820 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80087ca:	681c      	ldr	r4, [r3, #0]
{
 80087cc:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087ce:	6828      	ldr	r0, [r5, #0]
 80087d0:	3004      	adds	r0, #4
{
 80087d2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087d4:	f7ff f8d8 	bl	8007988 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80087d8:	1c73      	adds	r3, r6, #1
 80087da:	d107      	bne.n	80087ec <prvAddCurrentTaskToDelayedList+0x28>
 80087dc:	b137      	cbz	r7, 80087ec <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087de:	6829      	ldr	r1, [r5, #0]
 80087e0:	4810      	ldr	r0, [pc, #64]	@ (8008824 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80087e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087e6:	3104      	adds	r1, #4
 80087e8:	f7ff b8ac 	b.w	8007944 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80087ec:	682b      	ldr	r3, [r5, #0]
 80087ee:	19a4      	adds	r4, r4, r6
 80087f0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80087f2:	d307      	bcc.n	8008804 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087f4:	4b0c      	ldr	r3, [pc, #48]	@ (8008828 <prvAddCurrentTaskToDelayedList+0x64>)
 80087f6:	6818      	ldr	r0, [r3, #0]
 80087f8:	6829      	ldr	r1, [r5, #0]
}
 80087fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087fe:	3104      	adds	r1, #4
 8008800:	f7ff b8ab 	b.w	800795a <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008804:	4b09      	ldr	r3, [pc, #36]	@ (800882c <prvAddCurrentTaskToDelayedList+0x68>)
 8008806:	6818      	ldr	r0, [r3, #0]
 8008808:	6829      	ldr	r1, [r5, #0]
 800880a:	3104      	adds	r1, #4
 800880c:	f7ff f8a5 	bl	800795a <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008810:	4b07      	ldr	r3, [pc, #28]	@ (8008830 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008812:	681a      	ldr	r2, [r3, #0]
 8008814:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008816:	bf88      	it	hi
 8008818:	601c      	strhi	r4, [r3, #0]
}
 800881a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800881c:	200139e0 	.word	0x200139e0
 8008820:	20013eb8 	.word	0x20013eb8
 8008824:	200139e8 	.word	0x200139e8
 8008828:	20013a28 	.word	0x20013a28
 800882c:	20013a2c 	.word	0x20013a2c
 8008830:	200139c4 	.word	0x200139c4

08008834 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008834:	4a06      	ldr	r2, [pc, #24]	@ (8008850 <prvResetNextTaskUnblockTime+0x1c>)
 8008836:	6813      	ldr	r3, [r2, #0]
 8008838:	6819      	ldr	r1, [r3, #0]
 800883a:	4b06      	ldr	r3, [pc, #24]	@ (8008854 <prvResetNextTaskUnblockTime+0x20>)
 800883c:	b919      	cbnz	r1, 8008846 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800883e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008842:	601a      	str	r2, [r3, #0]
}
 8008844:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008846:	6812      	ldr	r2, [r2, #0]
 8008848:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800884a:	68d2      	ldr	r2, [r2, #12]
 800884c:	6852      	ldr	r2, [r2, #4]
 800884e:	e7f8      	b.n	8008842 <prvResetNextTaskUnblockTime+0xe>
 8008850:	20013a2c 	.word	0x20013a2c
 8008854:	200139c4 	.word	0x200139c4

08008858 <prvDeleteTCB>:
	{
 8008858:	b510      	push	{r4, lr}
 800885a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800885c:	3058      	adds	r0, #88	@ 0x58
 800885e:	f01a fae3 	bl	8022e28 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008862:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
 8008866:	b93b      	cbnz	r3, 8008878 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8008868:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800886a:	f7ff f81f 	bl	80078ac <vPortFree>
				vPortFree( pxTCB );
 800886e:	4620      	mov	r0, r4
	}
 8008870:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008874:	f7ff b81a 	b.w	80078ac <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008878:	2b01      	cmp	r3, #1
 800887a:	d0f8      	beq.n	800886e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800887c:	2b02      	cmp	r3, #2
 800887e:	d008      	beq.n	8008892 <prvDeleteTCB+0x3a>
 8008880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
 8008890:	e7fe      	b.n	8008890 <prvDeleteTCB+0x38>
	}
 8008892:	bd10      	pop	{r4, pc}

08008894 <prvIdleTask>:
{
 8008894:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008896:	4c13      	ldr	r4, [pc, #76]	@ (80088e4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008898:	4f13      	ldr	r7, [pc, #76]	@ (80088e8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800889a:	4d14      	ldr	r5, [pc, #80]	@ (80088ec <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800889c:	6823      	ldr	r3, [r4, #0]
 800889e:	b973      	cbnz	r3, 80088be <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80088a0:	4b13      	ldr	r3, [pc, #76]	@ (80088f0 <prvIdleTask+0x5c>)
 80088a2:	681b      	ldr	r3, [r3, #0]
 80088a4:	2b01      	cmp	r3, #1
 80088a6:	d9f8      	bls.n	800889a <prvIdleTask+0x6>
				taskYIELD();
 80088a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80088ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80088b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80088b4:	f3bf 8f4f 	dsb	sy
 80088b8:	f3bf 8f6f 	isb	sy
 80088bc:	e7ed      	b.n	800889a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80088be:	f7ff f8d9 	bl	8007a74 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80088c2:	68fb      	ldr	r3, [r7, #12]
 80088c4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80088c6:	1d30      	adds	r0, r6, #4
 80088c8:	f7ff f85e 	bl	8007988 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80088cc:	682b      	ldr	r3, [r5, #0]
 80088ce:	3b01      	subs	r3, #1
 80088d0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80088d2:	6823      	ldr	r3, [r4, #0]
 80088d4:	3b01      	subs	r3, #1
 80088d6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80088d8:	f7ff f8ec 	bl	8007ab4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80088dc:	4630      	mov	r0, r6
 80088de:	f7ff ffbb 	bl	8008858 <prvDeleteTCB>
 80088e2:	e7db      	b.n	800889c <prvIdleTask+0x8>
 80088e4:	200139fc 	.word	0x200139fc
 80088e8:	20013a00 	.word	0x20013a00
 80088ec:	200139e4 	.word	0x200139e4
 80088f0:	20013a58 	.word	0x20013a58

080088f4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80088f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80088f8:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80088fc:	0096      	lsls	r6, r2, #2
 80088fe:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008900:	4607      	mov	r7, r0
 8008902:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008904:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008906:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008908:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800890a:	f01a fa44 	bl	8022d96 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800890e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008910:	3e04      	subs	r6, #4
 8008912:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008914:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8008918:	2d00      	cmp	r5, #0
 800891a:	d043      	beq.n	80089a4 <prvInitialiseNewTask.constprop.0+0xb0>
 800891c:	1e6b      	subs	r3, r5, #1
 800891e:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8008922:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008924:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008928:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800892c:	b109      	cbz	r1, 8008932 <prvInitialiseNewTask.constprop.0+0x3e>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800892e:	42ab      	cmp	r3, r5
 8008930:	d1f8      	bne.n	8008924 <prvInitialiseNewTask.constprop.0+0x30>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008932:	2300      	movs	r3, #0
 8008934:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008938:	9d08      	ldr	r5, [sp, #32]
 800893a:	2d37      	cmp	r5, #55	@ 0x37
 800893c:	bf28      	it	cs
 800893e:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008940:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008944:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008946:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008948:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800894a:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800894e:	f7fe fff6 	bl	800793e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008952:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008956:	f104 0018 	add.w	r0, r4, #24
 800895a:	f7fe fff0 	bl	800793e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800895e:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008962:	224c      	movs	r2, #76	@ 0x4c
 8008964:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008966:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008968:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800896a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800896c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008970:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008974:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8008978:	f01a fa0d 	bl	8022d96 <memset>
 800897c:	4b0b      	ldr	r3, [pc, #44]	@ (80089ac <prvInitialiseNewTask.constprop.0+0xb8>)
 800897e:	65e3      	str	r3, [r4, #92]	@ 0x5c
 8008980:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8008984:	33d0      	adds	r3, #208	@ 0xd0
 8008986:	6622      	str	r2, [r4, #96]	@ 0x60
 8008988:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800898a:	4642      	mov	r2, r8
 800898c:	4639      	mov	r1, r7
 800898e:	4630      	mov	r0, r6
 8008990:	f7ff f848 	bl	8007a24 <pxPortInitialiseStack>
 8008994:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008996:	f1b9 0f00 	cmp.w	r9, #0
 800899a:	d001      	beq.n	80089a0 <prvInitialiseNewTask.constprop.0+0xac>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800899c:	f8c9 4000 	str.w	r4, [r9]
}
 80089a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80089a4:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 80089a8:	e7c6      	b.n	8008938 <prvInitialiseNewTask.constprop.0+0x44>
 80089aa:	bf00      	nop
 80089ac:	20014a5c 	.word	0x20014a5c

080089b0 <xTaskCreateStatic>:
	{
 80089b0:	b570      	push	{r4, r5, r6, lr}
 80089b2:	b086      	sub	sp, #24
 80089b4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 80089b8:	b945      	cbnz	r5, 80089cc <xTaskCreateStatic+0x1c>
 80089ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089be:	f383 8811 	msr	BASEPRI, r3
 80089c2:	f3bf 8f6f 	isb	sy
 80089c6:	f3bf 8f4f 	dsb	sy
 80089ca:	e7fe      	b.n	80089ca <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80089cc:	b944      	cbnz	r4, 80089e0 <xTaskCreateStatic+0x30>
 80089ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089d2:	f383 8811 	msr	BASEPRI, r3
 80089d6:	f3bf 8f6f 	isb	sy
 80089da:	f3bf 8f4f 	dsb	sy
 80089de:	e7fe      	b.n	80089de <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80089e0:	26ac      	movs	r6, #172	@ 0xac
 80089e2:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80089e4:	9e05      	ldr	r6, [sp, #20]
 80089e6:	2eac      	cmp	r6, #172	@ 0xac
 80089e8:	d008      	beq.n	80089fc <xTaskCreateStatic+0x4c>
 80089ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089ee:	f383 8811 	msr	BASEPRI, r3
 80089f2:	f3bf 8f6f 	isb	sy
 80089f6:	f3bf 8f4f 	dsb	sy
 80089fa:	e7fe      	b.n	80089fa <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80089fc:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80089fe:	2502      	movs	r5, #2
 8008a00:	f884 50a9 	strb.w	r5, [r4, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008a04:	ad04      	add	r5, sp, #16
 8008a06:	9501      	str	r5, [sp, #4]
 8008a08:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8008a0a:	9402      	str	r4, [sp, #8]
 8008a0c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008a0e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008a10:	f7ff ff70 	bl	80088f4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008a14:	4620      	mov	r0, r4
 8008a16:	f7ff fe55 	bl	80086c4 <prvAddNewTaskToReadyList>
	}
 8008a1a:	9804      	ldr	r0, [sp, #16]
 8008a1c:	b006      	add	sp, #24
 8008a1e:	bd70      	pop	{r4, r5, r6, pc}

08008a20 <xTaskCreate>:
	{
 8008a20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008a24:	4607      	mov	r7, r0
 8008a26:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008a28:	0090      	lsls	r0, r2, #2
	{
 8008a2a:	4688      	mov	r8, r1
 8008a2c:	4616      	mov	r6, r2
 8008a2e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008a30:	f7fe fea4 	bl	800777c <pvPortMalloc>
			if( pxStack != NULL )
 8008a34:	4605      	mov	r5, r0
 8008a36:	b920      	cbnz	r0, 8008a42 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008a38:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008a3c:	b005      	add	sp, #20
 8008a3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008a42:	20ac      	movs	r0, #172	@ 0xac
 8008a44:	f7fe fe9a 	bl	800777c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008a48:	4604      	mov	r4, r0
 8008a4a:	b198      	cbz	r0, 8008a74 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008a4c:	2300      	movs	r3, #0
 8008a4e:	f880 30a9 	strb.w	r3, [r0, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008a52:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8008a54:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008a56:	9301      	str	r3, [sp, #4]
 8008a58:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008a5a:	9002      	str	r0, [sp, #8]
 8008a5c:	9300      	str	r3, [sp, #0]
 8008a5e:	4632      	mov	r2, r6
 8008a60:	464b      	mov	r3, r9
 8008a62:	4641      	mov	r1, r8
 8008a64:	4638      	mov	r0, r7
 8008a66:	f7ff ff45 	bl	80088f4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008a6a:	4620      	mov	r0, r4
 8008a6c:	f7ff fe2a 	bl	80086c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008a70:	2001      	movs	r0, #1
 8008a72:	e7e3      	b.n	8008a3c <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8008a74:	4628      	mov	r0, r5
 8008a76:	f7fe ff19 	bl	80078ac <vPortFree>
		if( pxNewTCB != NULL )
 8008a7a:	e7dd      	b.n	8008a38 <xTaskCreate+0x18>

08008a7c <vTaskStartScheduler>:
{
 8008a7c:	b510      	push	{r4, lr}
 8008a7e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008a80:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a82:	aa07      	add	r2, sp, #28
 8008a84:	a906      	add	r1, sp, #24
 8008a86:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008a88:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a8c:	f7fe fe38 	bl	8007700 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008a90:	9b05      	ldr	r3, [sp, #20]
 8008a92:	9302      	str	r3, [sp, #8]
 8008a94:	9b06      	ldr	r3, [sp, #24]
 8008a96:	9a07      	ldr	r2, [sp, #28]
 8008a98:	4919      	ldr	r1, [pc, #100]	@ (8008b00 <vTaskStartScheduler+0x84>)
 8008a9a:	481a      	ldr	r0, [pc, #104]	@ (8008b04 <vTaskStartScheduler+0x88>)
 8008a9c:	e9cd 4300 	strd	r4, r3, [sp]
 8008aa0:	4623      	mov	r3, r4
 8008aa2:	f7ff ff85 	bl	80089b0 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008aa6:	b340      	cbz	r0, 8008afa <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008aa8:	f000 fbb6 	bl	8009218 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008aac:	2801      	cmp	r0, #1
 8008aae:	d119      	bne.n	8008ae4 <vTaskStartScheduler+0x68>
 8008ab0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ab4:	f383 8811 	msr	BASEPRI, r3
 8008ab8:	f3bf 8f6f 	isb	sy
 8008abc:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008ac0:	4b11      	ldr	r3, [pc, #68]	@ (8008b08 <vTaskStartScheduler+0x8c>)
 8008ac2:	4a12      	ldr	r2, [pc, #72]	@ (8008b0c <vTaskStartScheduler+0x90>)
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	3358      	adds	r3, #88	@ 0x58
 8008ac8:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8008aca:	4b11      	ldr	r3, [pc, #68]	@ (8008b10 <vTaskStartScheduler+0x94>)
 8008acc:	f04f 32ff 	mov.w	r2, #4294967295
 8008ad0:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008ad2:	4b10      	ldr	r3, [pc, #64]	@ (8008b14 <vTaskStartScheduler+0x98>)
 8008ad4:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008ad6:	4b10      	ldr	r3, [pc, #64]	@ (8008b18 <vTaskStartScheduler+0x9c>)
 8008ad8:	601c      	str	r4, [r3, #0]
}
 8008ada:	b008      	add	sp, #32
 8008adc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008ae0:	f7ff b858 	b.w	8007b94 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008ae4:	3001      	adds	r0, #1
 8008ae6:	d108      	bne.n	8008afa <vTaskStartScheduler+0x7e>
 8008ae8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aec:	f383 8811 	msr	BASEPRI, r3
 8008af0:	f3bf 8f6f 	isb	sy
 8008af4:	f3bf 8f4f 	dsb	sy
 8008af8:	e7fe      	b.n	8008af8 <vTaskStartScheduler+0x7c>
}
 8008afa:	b008      	add	sp, #32
 8008afc:	bd10      	pop	{r4, pc}
 8008afe:	bf00      	nop
 8008b00:	08024863 	.word	0x08024863
 8008b04:	08008895 	.word	0x08008895
 8008b08:	20013eb8 	.word	0x20013eb8
 8008b0c:	2000022c 	.word	0x2000022c
 8008b10:	200139c4 	.word	0x200139c4
 8008b14:	200139d8 	.word	0x200139d8
 8008b18:	200139e0 	.word	0x200139e0

08008b1c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008b1c:	4a02      	ldr	r2, [pc, #8]	@ (8008b28 <vTaskSuspendAll+0xc>)
 8008b1e:	6813      	ldr	r3, [r2, #0]
 8008b20:	3301      	adds	r3, #1
 8008b22:	6013      	str	r3, [r2, #0]
}
 8008b24:	4770      	bx	lr
 8008b26:	bf00      	nop
 8008b28:	200139c0 	.word	0x200139c0

08008b2c <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008b2c:	4b01      	ldr	r3, [pc, #4]	@ (8008b34 <xTaskGetTickCount+0x8>)
 8008b2e:	6818      	ldr	r0, [r3, #0]
}
 8008b30:	4770      	bx	lr
 8008b32:	bf00      	nop
 8008b34:	200139e0 	.word	0x200139e0

08008b38 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b38:	4b3f      	ldr	r3, [pc, #252]	@ (8008c38 <xTaskIncrementTick+0x100>)
 8008b3a:	681b      	ldr	r3, [r3, #0]
{
 8008b3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b40:	2b00      	cmp	r3, #0
 8008b42:	d172      	bne.n	8008c2a <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008b44:	4b3d      	ldr	r3, [pc, #244]	@ (8008c3c <xTaskIncrementTick+0x104>)
 8008b46:	681c      	ldr	r4, [r3, #0]
 8008b48:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008b4a:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008b4c:	b9bc      	cbnz	r4, 8008b7e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008b4e:	4b3c      	ldr	r3, [pc, #240]	@ (8008c40 <xTaskIncrementTick+0x108>)
 8008b50:	681a      	ldr	r2, [r3, #0]
 8008b52:	6812      	ldr	r2, [r2, #0]
 8008b54:	b142      	cbz	r2, 8008b68 <xTaskIncrementTick+0x30>
 8008b56:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b5a:	f383 8811 	msr	BASEPRI, r3
 8008b5e:	f3bf 8f6f 	isb	sy
 8008b62:	f3bf 8f4f 	dsb	sy
 8008b66:	e7fe      	b.n	8008b66 <xTaskIncrementTick+0x2e>
 8008b68:	4a36      	ldr	r2, [pc, #216]	@ (8008c44 <xTaskIncrementTick+0x10c>)
 8008b6a:	6819      	ldr	r1, [r3, #0]
 8008b6c:	6810      	ldr	r0, [r2, #0]
 8008b6e:	6018      	str	r0, [r3, #0]
 8008b70:	6011      	str	r1, [r2, #0]
 8008b72:	4a35      	ldr	r2, [pc, #212]	@ (8008c48 <xTaskIncrementTick+0x110>)
 8008b74:	6813      	ldr	r3, [r2, #0]
 8008b76:	3301      	adds	r3, #1
 8008b78:	6013      	str	r3, [r2, #0]
 8008b7a:	f7ff fe5b 	bl	8008834 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008b7e:	4d33      	ldr	r5, [pc, #204]	@ (8008c4c <xTaskIncrementTick+0x114>)
 8008b80:	4e33      	ldr	r6, [pc, #204]	@ (8008c50 <xTaskIncrementTick+0x118>)
 8008b82:	682b      	ldr	r3, [r5, #0]
 8008b84:	4f33      	ldr	r7, [pc, #204]	@ (8008c54 <xTaskIncrementTick+0x11c>)
 8008b86:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008b88:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008b8c:	d212      	bcs.n	8008bb4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008b8e:	683a      	ldr	r2, [r7, #0]
 8008b90:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008b92:	2114      	movs	r1, #20
 8008b94:	434a      	muls	r2, r1
 8008b96:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008b98:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008b9a:	4a2f      	ldr	r2, [pc, #188]	@ (8008c58 <xTaskIncrementTick+0x120>)
 8008b9c:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008b9e:	bf28      	it	cs
 8008ba0:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8008ba4:	2a00      	cmp	r2, #0
 8008ba6:	bf18      	it	ne
 8008ba8:	f04f 0b01 	movne.w	fp, #1
}
 8008bac:	4658      	mov	r0, fp
 8008bae:	b003      	add	sp, #12
 8008bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008bb4:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008c40 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008bb8:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008c60 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008bbc:	f8d9 2000 	ldr.w	r2, [r9]
 8008bc0:	6812      	ldr	r2, [r2, #0]
 8008bc2:	b91a      	cbnz	r2, 8008bcc <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008bc4:	f04f 32ff 	mov.w	r2, #4294967295
 8008bc8:	602a      	str	r2, [r5, #0]
					break;
 8008bca:	e7e0      	b.n	8008b8e <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008bcc:	f8d9 2000 	ldr.w	r2, [r9]
 8008bd0:	68d2      	ldr	r2, [r2, #12]
 8008bd2:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008bd6:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008bda:	428c      	cmp	r4, r1
 8008bdc:	d201      	bcs.n	8008be2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008bde:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008be0:	e7d5      	b.n	8008b8e <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008be2:	f108 0304 	add.w	r3, r8, #4
 8008be6:	4618      	mov	r0, r3
 8008be8:	9301      	str	r3, [sp, #4]
 8008bea:	f7fe fecd 	bl	8007988 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008bee:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008bf2:	b119      	cbz	r1, 8008bfc <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008bf4:	f108 0018 	add.w	r0, r8, #24
 8008bf8:	f7fe fec6 	bl	8007988 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008bfc:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008c00:	f8da 1000 	ldr.w	r1, [sl]
 8008c04:	2314      	movs	r3, #20
 8008c06:	4288      	cmp	r0, r1
 8008c08:	bf88      	it	hi
 8008c0a:	f8ca 0000 	strhi.w	r0, [sl]
 8008c0e:	9901      	ldr	r1, [sp, #4]
 8008c10:	fb03 6000 	mla	r0, r3, r0, r6
 8008c14:	f7fe fe96 	bl	8007944 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008c18:	6838      	ldr	r0, [r7, #0]
 8008c1a:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008c1e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008c20:	4291      	cmp	r1, r2
 8008c22:	bf28      	it	cs
 8008c24:	f04f 0b01 	movcs.w	fp, #1
 8008c28:	e7c8      	b.n	8008bbc <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008c2a:	4a0c      	ldr	r2, [pc, #48]	@ (8008c5c <xTaskIncrementTick+0x124>)
 8008c2c:	6813      	ldr	r3, [r2, #0]
 8008c2e:	3301      	adds	r3, #1
 8008c30:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008c32:	f04f 0b00 	mov.w	fp, #0
 8008c36:	e7b9      	b.n	8008bac <xTaskIncrementTick+0x74>
 8008c38:	200139c0 	.word	0x200139c0
 8008c3c:	200139e0 	.word	0x200139e0
 8008c40:	20013a2c 	.word	0x20013a2c
 8008c44:	20013a28 	.word	0x20013a28
 8008c48:	200139cc 	.word	0x200139cc
 8008c4c:	200139c4 	.word	0x200139c4
 8008c50:	20013a58 	.word	0x20013a58
 8008c54:	20013eb8 	.word	0x20013eb8
 8008c58:	200139d0 	.word	0x200139d0
 8008c5c:	200139d4 	.word	0x200139d4
 8008c60:	200139dc 	.word	0x200139dc

08008c64 <xTaskResumeAll>:
{
 8008c64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008c68:	4c30      	ldr	r4, [pc, #192]	@ (8008d2c <xTaskResumeAll+0xc8>)
 8008c6a:	6823      	ldr	r3, [r4, #0]
 8008c6c:	b943      	cbnz	r3, 8008c80 <xTaskResumeAll+0x1c>
 8008c6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c72:	f383 8811 	msr	BASEPRI, r3
 8008c76:	f3bf 8f6f 	isb	sy
 8008c7a:	f3bf 8f4f 	dsb	sy
 8008c7e:	e7fe      	b.n	8008c7e <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008c80:	f7fe fef8 	bl	8007a74 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008c84:	6823      	ldr	r3, [r4, #0]
 8008c86:	3b01      	subs	r3, #1
 8008c88:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008c8a:	6824      	ldr	r4, [r4, #0]
 8008c8c:	b12c      	cbz	r4, 8008c9a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8008c8e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008c90:	f7fe ff10 	bl	8007ab4 <vPortExitCritical>
}
 8008c94:	4620      	mov	r0, r4
 8008c96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008c9a:	4b25      	ldr	r3, [pc, #148]	@ (8008d30 <xTaskResumeAll+0xcc>)
 8008c9c:	681b      	ldr	r3, [r3, #0]
 8008c9e:	2b00      	cmp	r3, #0
 8008ca0:	d0f5      	beq.n	8008c8e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008ca2:	4d24      	ldr	r5, [pc, #144]	@ (8008d34 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008ca4:	4e24      	ldr	r6, [pc, #144]	@ (8008d38 <xTaskResumeAll+0xd4>)
 8008ca6:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008d48 <xTaskResumeAll+0xe4>
 8008caa:	e01d      	b.n	8008ce8 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008cac:	68eb      	ldr	r3, [r5, #12]
 8008cae:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008cb0:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008cb2:	f104 0018 	add.w	r0, r4, #24
 8008cb6:	f7fe fe67 	bl	8007988 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008cba:	4638      	mov	r0, r7
 8008cbc:	f7fe fe64 	bl	8007988 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008cc0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008cc2:	6832      	ldr	r2, [r6, #0]
 8008cc4:	2014      	movs	r0, #20
 8008cc6:	4293      	cmp	r3, r2
 8008cc8:	fb00 8003 	mla	r0, r0, r3, r8
 8008ccc:	4639      	mov	r1, r7
 8008cce:	bf88      	it	hi
 8008cd0:	6033      	strhi	r3, [r6, #0]
 8008cd2:	f7fe fe37 	bl	8007944 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008cd6:	4b19      	ldr	r3, [pc, #100]	@ (8008d3c <xTaskResumeAll+0xd8>)
 8008cd8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008cda:	681b      	ldr	r3, [r3, #0]
 8008cdc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008cde:	429a      	cmp	r2, r3
 8008ce0:	d302      	bcc.n	8008ce8 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008ce2:	4b17      	ldr	r3, [pc, #92]	@ (8008d40 <xTaskResumeAll+0xdc>)
 8008ce4:	2201      	movs	r2, #1
 8008ce6:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008ce8:	682b      	ldr	r3, [r5, #0]
 8008cea:	2b00      	cmp	r3, #0
 8008cec:	d1de      	bne.n	8008cac <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008cee:	b10c      	cbz	r4, 8008cf4 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008cf0:	f7ff fda0 	bl	8008834 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008cf4:	4d13      	ldr	r5, [pc, #76]	@ (8008d44 <xTaskResumeAll+0xe0>)
 8008cf6:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008cf8:	b144      	cbz	r4, 8008d0c <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008cfa:	4e11      	ldr	r6, [pc, #68]	@ (8008d40 <xTaskResumeAll+0xdc>)
 8008cfc:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008cfe:	f7ff ff1b 	bl	8008b38 <xTaskIncrementTick>
 8008d02:	b100      	cbz	r0, 8008d06 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008d04:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008d06:	3c01      	subs	r4, #1
 8008d08:	d1f9      	bne.n	8008cfe <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008d0a:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008d0c:	4b0c      	ldr	r3, [pc, #48]	@ (8008d40 <xTaskResumeAll+0xdc>)
 8008d0e:	681b      	ldr	r3, [r3, #0]
 8008d10:	2b00      	cmp	r3, #0
 8008d12:	d0bc      	beq.n	8008c8e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008d14:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d18:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d20:	f3bf 8f4f 	dsb	sy
 8008d24:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008d28:	2401      	movs	r4, #1
 8008d2a:	e7b1      	b.n	8008c90 <xTaskResumeAll+0x2c>
 8008d2c:	200139c0 	.word	0x200139c0
 8008d30:	200139e4 	.word	0x200139e4
 8008d34:	20013a14 	.word	0x20013a14
 8008d38:	200139dc 	.word	0x200139dc
 8008d3c:	20013eb8 	.word	0x20013eb8
 8008d40:	200139d0 	.word	0x200139d0
 8008d44:	200139d4 	.word	0x200139d4
 8008d48:	20013a58 	.word	0x20013a58

08008d4c <vTaskDelay>:
	{
 8008d4c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008d4e:	b950      	cbnz	r0, 8008d66 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008d50:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d54:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d58:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d5c:	f3bf 8f4f 	dsb	sy
 8008d60:	f3bf 8f6f 	isb	sy
	}
 8008d64:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008d66:	4b0a      	ldr	r3, [pc, #40]	@ (8008d90 <vTaskDelay+0x44>)
 8008d68:	6819      	ldr	r1, [r3, #0]
 8008d6a:	b141      	cbz	r1, 8008d7e <vTaskDelay+0x32>
 8008d6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d70:	f383 8811 	msr	BASEPRI, r3
 8008d74:	f3bf 8f6f 	isb	sy
 8008d78:	f3bf 8f4f 	dsb	sy
 8008d7c:	e7fe      	b.n	8008d7c <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008d7e:	f7ff fecd 	bl	8008b1c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008d82:	f7ff fd1f 	bl	80087c4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008d86:	f7ff ff6d 	bl	8008c64 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008d8a:	2800      	cmp	r0, #0
 8008d8c:	d0e0      	beq.n	8008d50 <vTaskDelay+0x4>
 8008d8e:	e7e9      	b.n	8008d64 <vTaskDelay+0x18>
 8008d90:	200139c0 	.word	0x200139c0

08008d94 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008d94:	4b19      	ldr	r3, [pc, #100]	@ (8008dfc <vTaskSwitchContext+0x68>)
 8008d96:	681a      	ldr	r2, [r3, #0]
 8008d98:	4b19      	ldr	r3, [pc, #100]	@ (8008e00 <vTaskSwitchContext+0x6c>)
{
 8008d9a:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008d9c:	b112      	cbz	r2, 8008da4 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008d9e:	2201      	movs	r2, #1
 8008da0:	601a      	str	r2, [r3, #0]
}
 8008da2:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008da4:	4d17      	ldr	r5, [pc, #92]	@ (8008e04 <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8008da6:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008da8:	682a      	ldr	r2, [r5, #0]
 8008daa:	4917      	ldr	r1, [pc, #92]	@ (8008e08 <vTaskSwitchContext+0x74>)
 8008dac:	2614      	movs	r6, #20
 8008dae:	fb06 f302 	mul.w	r3, r6, r2
 8008db2:	18c8      	adds	r0, r1, r3
 8008db4:	58cc      	ldr	r4, [r1, r3]
 8008db6:	b1ac      	cbz	r4, 8008de4 <vTaskSwitchContext+0x50>
 8008db8:	6844      	ldr	r4, [r0, #4]
 8008dba:	3308      	adds	r3, #8
 8008dbc:	6864      	ldr	r4, [r4, #4]
 8008dbe:	6044      	str	r4, [r0, #4]
 8008dc0:	440b      	add	r3, r1
 8008dc2:	429c      	cmp	r4, r3
 8008dc4:	bf04      	itt	eq
 8008dc6:	6863      	ldreq	r3, [r4, #4]
 8008dc8:	6043      	streq	r3, [r0, #4]
 8008dca:	2314      	movs	r3, #20
 8008dcc:	fb03 1102 	mla	r1, r3, r2, r1
 8008dd0:	684b      	ldr	r3, [r1, #4]
 8008dd2:	68d9      	ldr	r1, [r3, #12]
 8008dd4:	4b0d      	ldr	r3, [pc, #52]	@ (8008e0c <vTaskSwitchContext+0x78>)
 8008dd6:	6019      	str	r1, [r3, #0]
 8008dd8:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008dda:	681b      	ldr	r3, [r3, #0]
 8008ddc:	4a0c      	ldr	r2, [pc, #48]	@ (8008e10 <vTaskSwitchContext+0x7c>)
 8008dde:	3358      	adds	r3, #88	@ 0x58
 8008de0:	6013      	str	r3, [r2, #0]
}
 8008de2:	e7de      	b.n	8008da2 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008de4:	b942      	cbnz	r2, 8008df8 <vTaskSwitchContext+0x64>
 8008de6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dea:	f383 8811 	msr	BASEPRI, r3
 8008dee:	f3bf 8f6f 	isb	sy
 8008df2:	f3bf 8f4f 	dsb	sy
 8008df6:	e7fe      	b.n	8008df6 <vTaskSwitchContext+0x62>
 8008df8:	3a01      	subs	r2, #1
 8008dfa:	e7d8      	b.n	8008dae <vTaskSwitchContext+0x1a>
 8008dfc:	200139c0 	.word	0x200139c0
 8008e00:	200139d0 	.word	0x200139d0
 8008e04:	200139dc 	.word	0x200139dc
 8008e08:	20013a58 	.word	0x20013a58
 8008e0c:	20013eb8 	.word	0x20013eb8
 8008e10:	2000022c 	.word	0x2000022c

08008e14 <vTaskPlaceOnEventList>:
{
 8008e14:	b510      	push	{r4, lr}
 8008e16:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008e18:	b940      	cbnz	r0, 8008e2c <vTaskPlaceOnEventList+0x18>
 8008e1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e1e:	f383 8811 	msr	BASEPRI, r3
 8008e22:	f3bf 8f6f 	isb	sy
 8008e26:	f3bf 8f4f 	dsb	sy
 8008e2a:	e7fe      	b.n	8008e2a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008e2c:	4b05      	ldr	r3, [pc, #20]	@ (8008e44 <vTaskPlaceOnEventList+0x30>)
 8008e2e:	6819      	ldr	r1, [r3, #0]
 8008e30:	3118      	adds	r1, #24
 8008e32:	f7fe fd92 	bl	800795a <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008e36:	4620      	mov	r0, r4
 8008e38:	2101      	movs	r1, #1
}
 8008e3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008e3e:	f7ff bcc1 	b.w	80087c4 <prvAddCurrentTaskToDelayedList>
 8008e42:	bf00      	nop
 8008e44:	20013eb8 	.word	0x20013eb8

08008e48 <vTaskPlaceOnEventListRestricted>:
	{
 8008e48:	b538      	push	{r3, r4, r5, lr}
 8008e4a:	460d      	mov	r5, r1
 8008e4c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008e4e:	b940      	cbnz	r0, 8008e62 <vTaskPlaceOnEventListRestricted+0x1a>
 8008e50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e54:	f383 8811 	msr	BASEPRI, r3
 8008e58:	f3bf 8f6f 	isb	sy
 8008e5c:	f3bf 8f4f 	dsb	sy
 8008e60:	e7fe      	b.n	8008e60 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008e62:	4b07      	ldr	r3, [pc, #28]	@ (8008e80 <vTaskPlaceOnEventListRestricted+0x38>)
 8008e64:	6819      	ldr	r1, [r3, #0]
 8008e66:	3118      	adds	r1, #24
 8008e68:	f7fe fd6c 	bl	8007944 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008e6c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008e6e:	4621      	mov	r1, r4
 8008e70:	bf0c      	ite	eq
 8008e72:	4628      	moveq	r0, r5
 8008e74:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008e78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008e7c:	f7ff bca2 	b.w	80087c4 <prvAddCurrentTaskToDelayedList>
 8008e80:	20013eb8 	.word	0x20013eb8

08008e84 <xTaskRemoveFromEventList>:
{
 8008e84:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e86:	68c3      	ldr	r3, [r0, #12]
 8008e88:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008e8a:	b944      	cbnz	r4, 8008e9e <xTaskRemoveFromEventList+0x1a>
 8008e8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e90:	f383 8811 	msr	BASEPRI, r3
 8008e94:	f3bf 8f6f 	isb	sy
 8008e98:	f3bf 8f4f 	dsb	sy
 8008e9c:	e7fe      	b.n	8008e9c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008e9e:	f104 0518 	add.w	r5, r4, #24
 8008ea2:	4628      	mov	r0, r5
 8008ea4:	f7fe fd70 	bl	8007988 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008ea8:	4b10      	ldr	r3, [pc, #64]	@ (8008eec <xTaskRemoveFromEventList+0x68>)
 8008eaa:	681b      	ldr	r3, [r3, #0]
 8008eac:	b9db      	cbnz	r3, 8008ee6 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008eae:	1d25      	adds	r5, r4, #4
 8008eb0:	4628      	mov	r0, r5
 8008eb2:	f7fe fd69 	bl	8007988 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008eb6:	4a0e      	ldr	r2, [pc, #56]	@ (8008ef0 <xTaskRemoveFromEventList+0x6c>)
 8008eb8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008eba:	6811      	ldr	r1, [r2, #0]
 8008ebc:	428b      	cmp	r3, r1
 8008ebe:	bf88      	it	hi
 8008ec0:	6013      	strhi	r3, [r2, #0]
 8008ec2:	4a0c      	ldr	r2, [pc, #48]	@ (8008ef4 <xTaskRemoveFromEventList+0x70>)
 8008ec4:	2014      	movs	r0, #20
 8008ec6:	4629      	mov	r1, r5
 8008ec8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008ecc:	f7fe fd3a 	bl	8007944 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008ed0:	4b09      	ldr	r3, [pc, #36]	@ (8008ef8 <xTaskRemoveFromEventList+0x74>)
 8008ed2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008ed4:	681b      	ldr	r3, [r3, #0]
 8008ed6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008ed8:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008eda:	bf83      	ittte	hi
 8008edc:	4b07      	ldrhi	r3, [pc, #28]	@ (8008efc <xTaskRemoveFromEventList+0x78>)
 8008ede:	2001      	movhi	r0, #1
 8008ee0:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008ee2:	2000      	movls	r0, #0
}
 8008ee4:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008ee6:	4806      	ldr	r0, [pc, #24]	@ (8008f00 <xTaskRemoveFromEventList+0x7c>)
 8008ee8:	4629      	mov	r1, r5
 8008eea:	e7ef      	b.n	8008ecc <xTaskRemoveFromEventList+0x48>
 8008eec:	200139c0 	.word	0x200139c0
 8008ef0:	200139dc 	.word	0x200139dc
 8008ef4:	20013a58 	.word	0x20013a58
 8008ef8:	20013eb8 	.word	0x20013eb8
 8008efc:	200139d0 	.word	0x200139d0
 8008f00:	20013a14 	.word	0x20013a14

08008f04 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008f04:	4b03      	ldr	r3, [pc, #12]	@ (8008f14 <vTaskInternalSetTimeOutState+0x10>)
 8008f06:	681b      	ldr	r3, [r3, #0]
 8008f08:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008f0a:	4b03      	ldr	r3, [pc, #12]	@ (8008f18 <vTaskInternalSetTimeOutState+0x14>)
 8008f0c:	681b      	ldr	r3, [r3, #0]
 8008f0e:	6043      	str	r3, [r0, #4]
}
 8008f10:	4770      	bx	lr
 8008f12:	bf00      	nop
 8008f14:	200139cc 	.word	0x200139cc
 8008f18:	200139e0 	.word	0x200139e0

08008f1c <xTaskCheckForTimeOut>:
{
 8008f1c:	b570      	push	{r4, r5, r6, lr}
 8008f1e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008f20:	4605      	mov	r5, r0
 8008f22:	b940      	cbnz	r0, 8008f36 <xTaskCheckForTimeOut+0x1a>
 8008f24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f28:	f383 8811 	msr	BASEPRI, r3
 8008f2c:	f3bf 8f6f 	isb	sy
 8008f30:	f3bf 8f4f 	dsb	sy
 8008f34:	e7fe      	b.n	8008f34 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008f36:	b941      	cbnz	r1, 8008f4a <xTaskCheckForTimeOut+0x2e>
 8008f38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f3c:	f383 8811 	msr	BASEPRI, r3
 8008f40:	f3bf 8f6f 	isb	sy
 8008f44:	f3bf 8f4f 	dsb	sy
 8008f48:	e7fe      	b.n	8008f48 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008f4a:	f7fe fd93 	bl	8007a74 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008f4e:	4b0f      	ldr	r3, [pc, #60]	@ (8008f8c <xTaskCheckForTimeOut+0x70>)
 8008f50:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008f52:	6823      	ldr	r3, [r4, #0]
 8008f54:	1c5a      	adds	r2, r3, #1
 8008f56:	d010      	beq.n	8008f7a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008f58:	480d      	ldr	r0, [pc, #52]	@ (8008f90 <xTaskCheckForTimeOut+0x74>)
 8008f5a:	682e      	ldr	r6, [r5, #0]
 8008f5c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008f5e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008f60:	4286      	cmp	r6, r0
 8008f62:	d001      	beq.n	8008f68 <xTaskCheckForTimeOut+0x4c>
 8008f64:	428a      	cmp	r2, r1
 8008f66:	d90f      	bls.n	8008f88 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008f68:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008f6a:	4283      	cmp	r3, r0
 8008f6c:	d90a      	bls.n	8008f84 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008f6e:	1a5b      	subs	r3, r3, r1
 8008f70:	4413      	add	r3, r2
 8008f72:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008f74:	4628      	mov	r0, r5
 8008f76:	f7ff ffc5 	bl	8008f04 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008f7a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008f7c:	f7fe fd9a 	bl	8007ab4 <vPortExitCritical>
}
 8008f80:	4620      	mov	r0, r4
 8008f82:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008f84:	2300      	movs	r3, #0
 8008f86:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008f88:	2401      	movs	r4, #1
 8008f8a:	e7f7      	b.n	8008f7c <xTaskCheckForTimeOut+0x60>
 8008f8c:	200139e0 	.word	0x200139e0
 8008f90:	200139cc 	.word	0x200139cc

08008f94 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008f94:	4b01      	ldr	r3, [pc, #4]	@ (8008f9c <vTaskMissedYield+0x8>)
 8008f96:	2201      	movs	r2, #1
 8008f98:	601a      	str	r2, [r3, #0]
}
 8008f9a:	4770      	bx	lr
 8008f9c:	200139d0 	.word	0x200139d0

08008fa0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008fa0:	4b05      	ldr	r3, [pc, #20]	@ (8008fb8 <xTaskGetSchedulerState+0x18>)
 8008fa2:	681b      	ldr	r3, [r3, #0]
 8008fa4:	b133      	cbz	r3, 8008fb4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008fa6:	4b05      	ldr	r3, [pc, #20]	@ (8008fbc <xTaskGetSchedulerState+0x1c>)
 8008fa8:	6818      	ldr	r0, [r3, #0]
 8008faa:	fab0 f080 	clz	r0, r0
 8008fae:	0940      	lsrs	r0, r0, #5
 8008fb0:	0040      	lsls	r0, r0, #1
 8008fb2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008fb4:	2001      	movs	r0, #1
	}
 8008fb6:	4770      	bx	lr
 8008fb8:	200139d8 	.word	0x200139d8
 8008fbc:	200139c0 	.word	0x200139c0

08008fc0 <xTaskPriorityInherit>:
	{
 8008fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8008fc2:	4604      	mov	r4, r0
 8008fc4:	b338      	cbz	r0, 8009016 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008fc6:	4d1a      	ldr	r5, [pc, #104]	@ (8009030 <xTaskPriorityInherit+0x70>)
 8008fc8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008fca:	682a      	ldr	r2, [r5, #0]
 8008fcc:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008fce:	4293      	cmp	r3, r2
 8008fd0:	d226      	bcs.n	8009020 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008fd2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008fd4:	4e17      	ldr	r6, [pc, #92]	@ (8009034 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008fd6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008fd8:	bfa1      	itttt	ge
 8008fda:	682a      	ldrge	r2, [r5, #0]
 8008fdc:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8008fde:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8008fe2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008fe4:	2214      	movs	r2, #20
 8008fe6:	fb02 6303 	mla	r3, r2, r3, r6
 8008fea:	6942      	ldr	r2, [r0, #20]
 8008fec:	429a      	cmp	r2, r3
 8008fee:	d113      	bne.n	8009018 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008ff0:	1d07      	adds	r7, r0, #4
 8008ff2:	4638      	mov	r0, r7
 8008ff4:	f7fe fcc8 	bl	8007988 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008ff8:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008ffa:	4a0f      	ldr	r2, [pc, #60]	@ (8009038 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008ffc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008ffe:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009000:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009002:	2014      	movs	r0, #20
 8009004:	428b      	cmp	r3, r1
 8009006:	fb00 6003 	mla	r0, r0, r3, r6
 800900a:	4639      	mov	r1, r7
 800900c:	bf88      	it	hi
 800900e:	6013      	strhi	r3, [r2, #0]
 8009010:	f7fe fc98 	bl	8007944 <vListInsertEnd>
				xReturn = pdTRUE;
 8009014:	2001      	movs	r0, #1
	}
 8009016:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009018:	682b      	ldr	r3, [r5, #0]
 800901a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800901c:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800901e:	e7f9      	b.n	8009014 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009020:	682b      	ldr	r3, [r5, #0]
 8009022:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8009024:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009026:	4298      	cmp	r0, r3
 8009028:	bf2c      	ite	cs
 800902a:	2000      	movcs	r0, #0
 800902c:	2001      	movcc	r0, #1
 800902e:	e7f2      	b.n	8009016 <xTaskPriorityInherit+0x56>
 8009030:	20013eb8 	.word	0x20013eb8
 8009034:	20013a58 	.word	0x20013a58
 8009038:	200139dc 	.word	0x200139dc

0800903c <xTaskPriorityDisinherit>:
	{
 800903c:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800903e:	b908      	cbnz	r0, 8009044 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009040:	2000      	movs	r0, #0
	}
 8009042:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009044:	4b1b      	ldr	r3, [pc, #108]	@ (80090b4 <xTaskPriorityDisinherit+0x78>)
 8009046:	681c      	ldr	r4, [r3, #0]
 8009048:	4284      	cmp	r4, r0
 800904a:	d008      	beq.n	800905e <xTaskPriorityDisinherit+0x22>
 800904c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009050:	f383 8811 	msr	BASEPRI, r3
 8009054:	f3bf 8f6f 	isb	sy
 8009058:	f3bf 8f4f 	dsb	sy
 800905c:	e7fe      	b.n	800905c <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800905e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009060:	b943      	cbnz	r3, 8009074 <xTaskPriorityDisinherit+0x38>
 8009062:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009066:	f383 8811 	msr	BASEPRI, r3
 800906a:	f3bf 8f6f 	isb	sy
 800906e:	f3bf 8f4f 	dsb	sy
 8009072:	e7fe      	b.n	8009072 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009074:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009076:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009078:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800907a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800907c:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800907e:	d0df      	beq.n	8009040 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009080:	2b00      	cmp	r3, #0
 8009082:	d1dd      	bne.n	8009040 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009084:	1d25      	adds	r5, r4, #4
 8009086:	4628      	mov	r0, r5
 8009088:	f7fe fc7e 	bl	8007988 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800908c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800908e:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009090:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009094:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009096:	4a08      	ldr	r2, [pc, #32]	@ (80090b8 <xTaskPriorityDisinherit+0x7c>)
 8009098:	6811      	ldr	r1, [r2, #0]
 800909a:	428b      	cmp	r3, r1
 800909c:	bf88      	it	hi
 800909e:	6013      	strhi	r3, [r2, #0]
 80090a0:	4a06      	ldr	r2, [pc, #24]	@ (80090bc <xTaskPriorityDisinherit+0x80>)
 80090a2:	2014      	movs	r0, #20
 80090a4:	fb00 2003 	mla	r0, r0, r3, r2
 80090a8:	4629      	mov	r1, r5
 80090aa:	f7fe fc4b 	bl	8007944 <vListInsertEnd>
					xReturn = pdTRUE;
 80090ae:	2001      	movs	r0, #1
		return xReturn;
 80090b0:	e7c7      	b.n	8009042 <xTaskPriorityDisinherit+0x6>
 80090b2:	bf00      	nop
 80090b4:	20013eb8 	.word	0x20013eb8
 80090b8:	200139dc 	.word	0x200139dc
 80090bc:	20013a58 	.word	0x20013a58

080090c0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 80090c0:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80090c2:	4604      	mov	r4, r0
 80090c4:	2800      	cmp	r0, #0
 80090c6:	d041      	beq.n	800914c <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 80090c8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 80090ca:	b942      	cbnz	r2, 80090de <vTaskPriorityDisinheritAfterTimeout+0x1e>
 80090cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090d0:	f383 8811 	msr	BASEPRI, r3
 80090d4:	f3bf 8f6f 	isb	sy
 80090d8:	f3bf 8f4f 	dsb	sy
 80090dc:	e7fe      	b.n	80090dc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80090de:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80090e0:	4299      	cmp	r1, r3
 80090e2:	bf38      	it	cc
 80090e4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80090e6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80090e8:	428b      	cmp	r3, r1
 80090ea:	d02f      	beq.n	800914c <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80090ec:	2a01      	cmp	r2, #1
 80090ee:	d12d      	bne.n	800914c <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 80090f0:	4a17      	ldr	r2, [pc, #92]	@ (8009150 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 80090f2:	6812      	ldr	r2, [r2, #0]
 80090f4:	4282      	cmp	r2, r0
 80090f6:	d108      	bne.n	800910a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80090f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090fc:	f383 8811 	msr	BASEPRI, r3
 8009100:	f3bf 8f6f 	isb	sy
 8009104:	f3bf 8f4f 	dsb	sy
 8009108:	e7fe      	b.n	8009108 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800910a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800910c:	4d11      	ldr	r5, [pc, #68]	@ (8009154 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800910e:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009110:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009112:	f04f 0214 	mov.w	r2, #20
 8009116:	fb02 5303 	mla	r3, r2, r3, r5
 800911a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800911c:	bfa4      	itt	ge
 800911e:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8009122:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009124:	429a      	cmp	r2, r3
 8009126:	d111      	bne.n	800914c <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009128:	1d06      	adds	r6, r0, #4
 800912a:	4630      	mov	r0, r6
 800912c:	f7fe fc2c 	bl	8007988 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009130:	4a09      	ldr	r2, [pc, #36]	@ (8009158 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009132:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009134:	6811      	ldr	r1, [r2, #0]
 8009136:	2014      	movs	r0, #20
 8009138:	428b      	cmp	r3, r1
 800913a:	fb00 5003 	mla	r0, r0, r3, r5
 800913e:	4631      	mov	r1, r6
	}
 8009140:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009144:	bf88      	it	hi
 8009146:	6013      	strhi	r3, [r2, #0]
 8009148:	f7fe bbfc 	b.w	8007944 <vListInsertEnd>
	}
 800914c:	bd70      	pop	{r4, r5, r6, pc}
 800914e:	bf00      	nop
 8009150:	20013eb8 	.word	0x20013eb8
 8009154:	20013a58 	.word	0x20013a58
 8009158:	200139dc 	.word	0x200139dc

0800915c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800915c:	4b04      	ldr	r3, [pc, #16]	@ (8009170 <pvTaskIncrementMutexHeldCount+0x14>)
 800915e:	681a      	ldr	r2, [r3, #0]
 8009160:	b11a      	cbz	r2, 800916a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009162:	6819      	ldr	r1, [r3, #0]
 8009164:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009166:	3201      	adds	r2, #1
 8009168:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800916a:	6818      	ldr	r0, [r3, #0]
	}
 800916c:	4770      	bx	lr
 800916e:	bf00      	nop
 8009170:	20013eb8 	.word	0x20013eb8

08009174 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009174:	4291      	cmp	r1, r2
{
 8009176:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009178:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800917a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800917c:	d80a      	bhi.n	8009194 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800917e:	1ad2      	subs	r2, r2, r3
 8009180:	6983      	ldr	r3, [r0, #24]
 8009182:	429a      	cmp	r2, r3
 8009184:	d20d      	bcs.n	80091a2 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009186:	4b08      	ldr	r3, [pc, #32]	@ (80091a8 <prvInsertTimerInActiveList+0x34>)
 8009188:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800918a:	6818      	ldr	r0, [r3, #0]
 800918c:	f7fe fbe5 	bl	800795a <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009190:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009192:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009194:	429a      	cmp	r2, r3
 8009196:	d201      	bcs.n	800919c <prvInsertTimerInActiveList+0x28>
 8009198:	4299      	cmp	r1, r3
 800919a:	d202      	bcs.n	80091a2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800919c:	4b03      	ldr	r3, [pc, #12]	@ (80091ac <prvInsertTimerInActiveList+0x38>)
 800919e:	1d01      	adds	r1, r0, #4
 80091a0:	e7f3      	b.n	800918a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80091a2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80091a4:	e7f5      	b.n	8009192 <prvInsertTimerInActiveList+0x1e>
 80091a6:	bf00      	nop
 80091a8:	20013fb8 	.word	0x20013fb8
 80091ac:	20013fbc 	.word	0x20013fbc

080091b0 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80091b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80091b2:	4c11      	ldr	r4, [pc, #68]	@ (80091f8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80091b4:	f7fe fc5e 	bl	8007a74 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80091b8:	6825      	ldr	r5, [r4, #0]
 80091ba:	b9bd      	cbnz	r5, 80091ec <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80091bc:	4f0f      	ldr	r7, [pc, #60]	@ (80091fc <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80091be:	4e10      	ldr	r6, [pc, #64]	@ (8009200 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80091c0:	4638      	mov	r0, r7
 80091c2:	f7fe fbb1 	bl	8007928 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80091c6:	4630      	mov	r0, r6
 80091c8:	f7fe fbae 	bl	8007928 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80091cc:	4b0d      	ldr	r3, [pc, #52]	@ (8009204 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80091ce:	4a0e      	ldr	r2, [pc, #56]	@ (8009208 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80091d0:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80091d2:	4b0e      	ldr	r3, [pc, #56]	@ (800920c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80091d4:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80091d6:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80091d8:	200a      	movs	r0, #10
 80091da:	4b0d      	ldr	r3, [pc, #52]	@ (8009210 <prvCheckForValidListAndQueue+0x60>)
 80091dc:	9500      	str	r5, [sp, #0]
 80091de:	f7fe fe52 	bl	8007e86 <xQueueGenericCreateStatic>
 80091e2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80091e4:	b110      	cbz	r0, 80091ec <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80091e6:	490b      	ldr	r1, [pc, #44]	@ (8009214 <prvCheckForValidListAndQueue+0x64>)
 80091e8:	f7ff fa0a 	bl	8008600 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80091ec:	b003      	add	sp, #12
 80091ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80091f2:	f7fe bc5f 	b.w	8007ab4 <vPortExitCritical>
 80091f6:	bf00      	nop
 80091f8:	20013fb4 	.word	0x20013fb4
 80091fc:	20013fd4 	.word	0x20013fd4
 8009200:	20013fc0 	.word	0x20013fc0
 8009204:	20013fbc 	.word	0x20013fbc
 8009208:	20013f0c 	.word	0x20013f0c
 800920c:	20013fb8 	.word	0x20013fb8
 8009210:	20013ebc 	.word	0x20013ebc
 8009214:	08024868 	.word	0x08024868

08009218 <xTimerCreateTimerTask>:
{
 8009218:	b510      	push	{r4, lr}
 800921a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800921c:	f7ff ffc8 	bl	80091b0 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009220:	4b12      	ldr	r3, [pc, #72]	@ (800926c <xTimerCreateTimerTask+0x54>)
 8009222:	681b      	ldr	r3, [r3, #0]
 8009224:	b1b3      	cbz	r3, 8009254 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009226:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009228:	aa07      	add	r2, sp, #28
 800922a:	a906      	add	r1, sp, #24
 800922c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800922e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009232:	f7fe fa71 	bl	8007718 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009236:	9b05      	ldr	r3, [sp, #20]
 8009238:	9302      	str	r3, [sp, #8]
 800923a:	9b06      	ldr	r3, [sp, #24]
 800923c:	9301      	str	r3, [sp, #4]
 800923e:	2302      	movs	r3, #2
 8009240:	9300      	str	r3, [sp, #0]
 8009242:	9a07      	ldr	r2, [sp, #28]
 8009244:	490a      	ldr	r1, [pc, #40]	@ (8009270 <xTimerCreateTimerTask+0x58>)
 8009246:	480b      	ldr	r0, [pc, #44]	@ (8009274 <xTimerCreateTimerTask+0x5c>)
 8009248:	4623      	mov	r3, r4
 800924a:	f7ff fbb1 	bl	80089b0 <xTaskCreateStatic>
 800924e:	4b0a      	ldr	r3, [pc, #40]	@ (8009278 <xTimerCreateTimerTask+0x60>)
 8009250:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009252:	b940      	cbnz	r0, 8009266 <xTimerCreateTimerTask+0x4e>
 8009254:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009258:	f383 8811 	msr	BASEPRI, r3
 800925c:	f3bf 8f6f 	isb	sy
 8009260:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009264:	e7fe      	b.n	8009264 <xTimerCreateTimerTask+0x4c>
}
 8009266:	2001      	movs	r0, #1
 8009268:	b008      	add	sp, #32
 800926a:	bd10      	pop	{r4, pc}
 800926c:	20013fb4 	.word	0x20013fb4
 8009270:	0802486d 	.word	0x0802486d
 8009274:	08009379 	.word	0x08009379
 8009278:	20013fb0 	.word	0x20013fb0

0800927c <xTimerGenericCommand>:
{
 800927c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800927e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009280:	4604      	mov	r4, r0
{
 8009282:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009284:	b940      	cbnz	r0, 8009298 <xTimerGenericCommand+0x1c>
 8009286:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800928a:	f383 8811 	msr	BASEPRI, r3
 800928e:	f3bf 8f6f 	isb	sy
 8009292:	f3bf 8f4f 	dsb	sy
 8009296:	e7fe      	b.n	8009296 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009298:	4d0d      	ldr	r5, [pc, #52]	@ (80092d0 <xTimerGenericCommand+0x54>)
 800929a:	6828      	ldr	r0, [r5, #0]
 800929c:	b180      	cbz	r0, 80092c0 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800929e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80092a0:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80092a4:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80092a6:	dc0d      	bgt.n	80092c4 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80092a8:	f7ff fe7a 	bl	8008fa0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80092ac:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80092ae:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80092b0:	bf08      	it	eq
 80092b2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80092b4:	6828      	ldr	r0, [r5, #0]
 80092b6:	bf18      	it	ne
 80092b8:	461a      	movne	r2, r3
 80092ba:	4669      	mov	r1, sp
 80092bc:	f7fe fe98 	bl	8007ff0 <xQueueGenericSend>
}
 80092c0:	b004      	add	sp, #16
 80092c2:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80092c4:	2300      	movs	r3, #0
 80092c6:	4669      	mov	r1, sp
 80092c8:	f7fe ff44 	bl	8008154 <xQueueGenericSendFromISR>
 80092cc:	e7f8      	b.n	80092c0 <xTimerGenericCommand+0x44>
 80092ce:	bf00      	nop
 80092d0:	20013fb4 	.word	0x20013fb4

080092d4 <prvSampleTimeNow>:
{
 80092d4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 80092d8:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009374 <prvSampleTimeNow+0xa0>
{
 80092dc:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 80092de:	f7ff fc25 	bl	8008b2c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80092e2:	f8d8 3000 	ldr.w	r3, [r8]
 80092e6:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 80092e8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80092ea:	d909      	bls.n	8009300 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80092ec:	4f1f      	ldr	r7, [pc, #124]	@ (800936c <prvSampleTimeNow+0x98>)
 80092ee:	683b      	ldr	r3, [r7, #0]
 80092f0:	681a      	ldr	r2, [r3, #0]
 80092f2:	b96a      	cbnz	r2, 8009310 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80092f4:	4a1e      	ldr	r2, [pc, #120]	@ (8009370 <prvSampleTimeNow+0x9c>)
 80092f6:	6811      	ldr	r1, [r2, #0]
 80092f8:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80092fa:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80092fc:	2301      	movs	r3, #1
 80092fe:	e000      	b.n	8009302 <prvSampleTimeNow+0x2e>
 8009300:	2300      	movs	r3, #0
}
 8009302:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009304:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009306:	f8c8 5000 	str.w	r5, [r8]
}
 800930a:	b002      	add	sp, #8
 800930c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009310:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009312:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009314:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009318:	f104 0a04 	add.w	sl, r4, #4
 800931c:	4650      	mov	r0, sl
 800931e:	f7fe fb33 	bl	8007988 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009322:	6a23      	ldr	r3, [r4, #32]
 8009324:	4620      	mov	r0, r4
 8009326:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009328:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800932c:	075b      	lsls	r3, r3, #29
 800932e:	d5de      	bpl.n	80092ee <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009330:	69a3      	ldr	r3, [r4, #24]
 8009332:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8009334:	4599      	cmp	r9, r3
 8009336:	d206      	bcs.n	8009346 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009338:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800933a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800933c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800933e:	4651      	mov	r1, sl
 8009340:	f7fe fb0b 	bl	800795a <vListInsert>
 8009344:	e7d3      	b.n	80092ee <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009346:	2300      	movs	r3, #0
 8009348:	9300      	str	r3, [sp, #0]
 800934a:	464a      	mov	r2, r9
 800934c:	4619      	mov	r1, r3
 800934e:	4620      	mov	r0, r4
 8009350:	f7ff ff94 	bl	800927c <xTimerGenericCommand>
				configASSERT( xResult );
 8009354:	2800      	cmp	r0, #0
 8009356:	d1ca      	bne.n	80092ee <prvSampleTimeNow+0x1a>
 8009358:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800935c:	f383 8811 	msr	BASEPRI, r3
 8009360:	f3bf 8f6f 	isb	sy
 8009364:	f3bf 8f4f 	dsb	sy
 8009368:	e7fe      	b.n	8009368 <prvSampleTimeNow+0x94>
 800936a:	bf00      	nop
 800936c:	20013fbc 	.word	0x20013fbc
 8009370:	20013fb8 	.word	0x20013fb8
 8009374:	20013fac 	.word	0x20013fac

08009378 <prvTimerTask>:
{
 8009378:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800937c:	4d6e      	ldr	r5, [pc, #440]	@ (8009538 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800937e:	4e6f      	ldr	r6, [pc, #444]	@ (800953c <prvTimerTask+0x1c4>)
{
 8009380:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009382:	682b      	ldr	r3, [r5, #0]
 8009384:	f8d3 8000 	ldr.w	r8, [r3]
 8009388:	f1b8 0f00 	cmp.w	r8, #0
 800938c:	d035      	beq.n	80093fa <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800938e:	68db      	ldr	r3, [r3, #12]
 8009390:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009394:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009396:	f7ff fbc1 	bl	8008b1c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800939a:	a804      	add	r0, sp, #16
 800939c:	f7ff ff9a 	bl	80092d4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 80093a0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80093a2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 80093a4:	2b00      	cmp	r3, #0
 80093a6:	d169      	bne.n	800947c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80093a8:	2c00      	cmp	r4, #0
 80093aa:	d14c      	bne.n	8009446 <prvTimerTask+0xce>
 80093ac:	4540      	cmp	r0, r8
 80093ae:	d350      	bcc.n	8009452 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 80093b0:	f7ff fc58 	bl	8008c64 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80093b4:	682b      	ldr	r3, [r5, #0]
 80093b6:	68db      	ldr	r3, [r3, #12]
 80093b8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80093ba:	1d38      	adds	r0, r7, #4
 80093bc:	f7fe fae4 	bl	8007988 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80093c0:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80093c4:	0758      	lsls	r0, r3, #29
 80093c6:	d51a      	bpl.n	80093fe <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80093c8:	69b9      	ldr	r1, [r7, #24]
 80093ca:	4643      	mov	r3, r8
 80093cc:	464a      	mov	r2, r9
 80093ce:	4441      	add	r1, r8
 80093d0:	4638      	mov	r0, r7
 80093d2:	f7ff fecf 	bl	8009174 <prvInsertTimerInActiveList>
 80093d6:	b1b0      	cbz	r0, 8009406 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80093d8:	9400      	str	r4, [sp, #0]
 80093da:	4623      	mov	r3, r4
 80093dc:	4642      	mov	r2, r8
 80093de:	4621      	mov	r1, r4
 80093e0:	4638      	mov	r0, r7
 80093e2:	f7ff ff4b 	bl	800927c <xTimerGenericCommand>
			configASSERT( xResult );
 80093e6:	b970      	cbnz	r0, 8009406 <prvTimerTask+0x8e>
 80093e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093ec:	f383 8811 	msr	BASEPRI, r3
 80093f0:	f3bf 8f6f 	isb	sy
 80093f4:	f3bf 8f4f 	dsb	sy
 80093f8:	e7fe      	b.n	80093f8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80093fa:	2401      	movs	r4, #1
 80093fc:	e7cb      	b.n	8009396 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80093fe:	f023 0301 	bic.w	r3, r3, #1
 8009402:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009406:	6a3b      	ldr	r3, [r7, #32]
 8009408:	4638      	mov	r0, r7
 800940a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800940c:	6830      	ldr	r0, [r6, #0]
 800940e:	2200      	movs	r2, #0
 8009410:	a904      	add	r1, sp, #16
 8009412:	f7fe ff4d 	bl	80082b0 <xQueueReceive>
 8009416:	2800      	cmp	r0, #0
 8009418:	d0b3      	beq.n	8009382 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800941a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800941c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800941e:	2b00      	cmp	r3, #0
 8009420:	db2f      	blt.n	8009482 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009422:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009424:	6963      	ldr	r3, [r4, #20]
 8009426:	2b00      	cmp	r3, #0
 8009428:	d132      	bne.n	8009490 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800942a:	a803      	add	r0, sp, #12
 800942c:	f7ff ff52 	bl	80092d4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009430:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009432:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009434:	2b09      	cmp	r3, #9
 8009436:	d8e9      	bhi.n	800940c <prvTimerTask+0x94>
 8009438:	e8df f003 	tbb	[pc, r3]
 800943c:	572e2e2e 	.word	0x572e2e2e
 8009440:	2e2e765e 	.word	0x2e2e765e
 8009444:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009446:	4b3e      	ldr	r3, [pc, #248]	@ (8009540 <prvTimerTask+0x1c8>)
 8009448:	681b      	ldr	r3, [r3, #0]
 800944a:	681c      	ldr	r4, [r3, #0]
 800944c:	fab4 f484 	clz	r4, r4
 8009450:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009452:	6830      	ldr	r0, [r6, #0]
 8009454:	4622      	mov	r2, r4
 8009456:	eba8 0109 	sub.w	r1, r8, r9
 800945a:	f7ff f910 	bl	800867e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800945e:	f7ff fc01 	bl	8008c64 <xTaskResumeAll>
 8009462:	2800      	cmp	r0, #0
 8009464:	d1d2      	bne.n	800940c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009466:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800946a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800946e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009472:	f3bf 8f4f 	dsb	sy
 8009476:	f3bf 8f6f 	isb	sy
 800947a:	e7c7      	b.n	800940c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800947c:	f7ff fbf2 	bl	8008c64 <xTaskResumeAll>
}
 8009480:	e7c4      	b.n	800940c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009482:	9b05      	ldr	r3, [sp, #20]
 8009484:	9907      	ldr	r1, [sp, #28]
 8009486:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009488:	9b04      	ldr	r3, [sp, #16]
 800948a:	2b00      	cmp	r3, #0
 800948c:	dbbe      	blt.n	800940c <prvTimerTask+0x94>
 800948e:	e7c8      	b.n	8009422 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009490:	1d20      	adds	r0, r4, #4
 8009492:	f7fe fa79 	bl	8007988 <uxListRemove>
 8009496:	e7c8      	b.n	800942a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009498:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800949c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800949e:	f043 0301 	orr.w	r3, r3, #1
 80094a2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80094a6:	9b05      	ldr	r3, [sp, #20]
 80094a8:	4620      	mov	r0, r4
 80094aa:	4419      	add	r1, r3
 80094ac:	f7ff fe62 	bl	8009174 <prvInsertTimerInActiveList>
 80094b0:	2800      	cmp	r0, #0
 80094b2:	d0ab      	beq.n	800940c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80094b4:	6a23      	ldr	r3, [r4, #32]
 80094b6:	4620      	mov	r0, r4
 80094b8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80094ba:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094be:	0759      	lsls	r1, r3, #29
 80094c0:	d5a4      	bpl.n	800940c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80094c2:	69a2      	ldr	r2, [r4, #24]
 80094c4:	9905      	ldr	r1, [sp, #20]
 80094c6:	2300      	movs	r3, #0
 80094c8:	440a      	add	r2, r1
 80094ca:	9300      	str	r3, [sp, #0]
 80094cc:	4619      	mov	r1, r3
 80094ce:	4620      	mov	r0, r4
 80094d0:	f7ff fed4 	bl	800927c <xTimerGenericCommand>
							configASSERT( xResult );
 80094d4:	2800      	cmp	r0, #0
 80094d6:	d199      	bne.n	800940c <prvTimerTask+0x94>
 80094d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094dc:	f383 8811 	msr	BASEPRI, r3
 80094e0:	f3bf 8f6f 	isb	sy
 80094e4:	f3bf 8f4f 	dsb	sy
 80094e8:	e7fe      	b.n	80094e8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80094ea:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80094ee:	f023 0301 	bic.w	r3, r3, #1
 80094f2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 80094f6:	e789      	b.n	800940c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80094f8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094fc:	f043 0301 	orr.w	r3, r3, #1
 8009500:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009504:	9905      	ldr	r1, [sp, #20]
 8009506:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009508:	b941      	cbnz	r1, 800951c <prvTimerTask+0x1a4>
 800950a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800950e:	f383 8811 	msr	BASEPRI, r3
 8009512:	f3bf 8f6f 	isb	sy
 8009516:	f3bf 8f4f 	dsb	sy
 800951a:	e7fe      	b.n	800951a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800951c:	4603      	mov	r3, r0
 800951e:	4401      	add	r1, r0
 8009520:	4620      	mov	r0, r4
 8009522:	f7ff fe27 	bl	8009174 <prvInsertTimerInActiveList>
					break;
 8009526:	e771      	b.n	800940c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009528:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800952c:	079a      	lsls	r2, r3, #30
 800952e:	d4de      	bmi.n	80094ee <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009530:	4620      	mov	r0, r4
 8009532:	f7fe f9bb 	bl	80078ac <vPortFree>
 8009536:	e769      	b.n	800940c <prvTimerTask+0x94>
 8009538:	20013fbc 	.word	0x20013fbc
 800953c:	20013fb4 	.word	0x20013fb4
 8009540:	20013fb8 	.word	0x20013fb8

08009544 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8009544:	b178      	cbz	r0, 8009566 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 8009546:	2300      	movs	r3, #0
 8009548:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 800954c:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 8009550:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8009554:	b109      	cbz	r1, 800955a <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 8009556:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800955a:	2301      	movs	r3, #1
 800955c:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 8009560:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8009562:	f7f8 b9d5 	b.w	8001910 <USBD_LL_Init>

  return ret;
}
 8009566:	2003      	movs	r0, #3
 8009568:	4770      	bx	lr

0800956a <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 800956a:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 800956c:	2300      	movs	r3, #0
{
 800956e:	4604      	mov	r4, r0
  uint16_t len = 0U;
 8009570:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8009574:	b181      	cbz	r1, 8009598 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009576:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 8009578:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800957c:	b123      	cbz	r3, 8009588 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 800957e:	f10d 0006 	add.w	r0, sp, #6
 8009582:	4798      	blx	r3
 8009584:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 8009588:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 800958c:	3301      	adds	r3, #1
 800958e:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 8009592:	2000      	movs	r0, #0
}
 8009594:	b002      	add	sp, #8
 8009596:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8009598:	2003      	movs	r0, #3
 800959a:	e7fb      	b.n	8009594 <USBD_RegisterClass+0x2a>

0800959c <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 800959c:	f7f8 ba09 	b.w	80019b2 <USBD_LL_Start>

080095a0 <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 80095a0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80095a4:	b10b      	cbz	r3, 80095aa <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 80095a6:	681b      	ldr	r3, [r3, #0]
 80095a8:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 80095aa:	4618      	mov	r0, r3
 80095ac:	4770      	bx	lr

080095ae <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 80095ae:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 80095b0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80095b4:	685b      	ldr	r3, [r3, #4]
 80095b6:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 80095b8:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 80095ba:	bf18      	it	ne
 80095bc:	2003      	movne	r0, #3
 80095be:	bd08      	pop	{r3, pc}

080095c0 <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 80095c0:	b538      	push	{r3, r4, r5, lr}
 80095c2:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 80095c4:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 80095c8:	4628      	mov	r0, r5
 80095ca:	f000 fba0 	bl	8009d0e <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 80095ce:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 80095d0:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 80095d4:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 80095d8:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 80095dc:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 80095e0:	f001 031f 	and.w	r3, r1, #31
 80095e4:	2b01      	cmp	r3, #1
 80095e6:	d008      	beq.n	80095fa <USBD_LL_SetupStage+0x3a>
 80095e8:	2b02      	cmp	r3, #2
 80095ea:	d00c      	beq.n	8009606 <USBD_LL_SetupStage+0x46>
 80095ec:	b98b      	cbnz	r3, 8009612 <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 80095ee:	4629      	mov	r1, r5
 80095f0:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 80095f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 80095f6:	f000 b953 	b.w	80098a0 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 80095fa:	4629      	mov	r1, r5
 80095fc:	4620      	mov	r0, r4
}
 80095fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8009602:	f000 bab1 	b.w	8009b68 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8009606:	4629      	mov	r1, r5
 8009608:	4620      	mov	r0, r4
}
 800960a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800960e:	f000 bada 	b.w	8009bc6 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8009612:	4620      	mov	r0, r4
 8009614:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 8009618:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800961c:	f7f8 b9e7 	b.w	80019ee <USBD_LL_StallEP>

08009620 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8009620:	b570      	push	{r4, r5, r6, lr}
 8009622:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 8009624:	bb39      	cbnz	r1, 8009676 <USBD_LL_DataOutStage+0x56>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8009626:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800962a:	2b03      	cmp	r3, #3
 800962c:	d112      	bne.n	8009654 <USBD_LL_DataOutStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 800962e:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 8009632:	f8b0 2160 	ldrh.w	r2, [r0, #352]	@ 0x160
 8009636:	4293      	cmp	r3, r2
 8009638:	d90e      	bls.n	8009658 <USBD_LL_DataOutStage+0x38>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 800963a:	f8d0 1164 	ldr.w	r1, [r0, #356]	@ 0x164
        pep->rem_length -= pep->maxpacket;
 800963e:	1a9b      	subs	r3, r3, r2
        pep->pbuffer += pep->maxpacket;
 8009640:	4411      	add	r1, r2

        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 8009642:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 8009644:	f8c0 3158 	str.w	r3, [r0, #344]	@ 0x158
        pep->pbuffer += pep->maxpacket;
 8009648:	f8c0 1164 	str.w	r1, [r0, #356]	@ 0x164
        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 800964c:	bf38      	it	cc
 800964e:	461a      	movcc	r2, r3
 8009650:	f000 fcad 	bl	8009fae <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 8009654:	2000      	movs	r0, #0
 8009656:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009658:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800965c:	2b03      	cmp	r3, #3
 800965e:	d106      	bne.n	800966e <USBD_LL_DataOutStage+0x4e>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 8009660:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009664:	691b      	ldr	r3, [r3, #16]
 8009666:	b113      	cbz	r3, 800966e <USBD_LL_DataOutStage+0x4e>
              pdev->classId = idx;
 8009668:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800966c:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 800966e:	4620      	mov	r0, r4
 8009670:	f000 fca5 	bl	8009fbe <USBD_CtlSendStatus>
 8009674:	e7ee      	b.n	8009654 <USBD_LL_DataOutStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009676:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800967a:	2b03      	cmp	r3, #3
 800967c:	d1ea      	bne.n	8009654 <USBD_LL_DataOutStage+0x34>
        if (pdev->pClass[idx]->DataOut != NULL)
 800967e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009682:	699b      	ldr	r3, [r3, #24]
 8009684:	2b00      	cmp	r3, #0
 8009686:	d0e5      	beq.n	8009654 <USBD_LL_DataOutStage+0x34>
          pdev->classId = idx;
 8009688:	2200      	movs	r2, #0
}
 800968a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800968e:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 8009692:	4718      	bx	r3

08009694 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8009694:	b570      	push	{r4, r5, r6, lr}
 8009696:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 8009698:	460d      	mov	r5, r1
 800969a:	2900      	cmp	r1, #0
 800969c:	d13f      	bne.n	800971e <USBD_LL_DataInStage+0x8a>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800969e:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 80096a2:	2b02      	cmp	r3, #2
 80096a4:	d110      	bne.n	80096c8 <USBD_LL_DataInStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 80096a6:	6982      	ldr	r2, [r0, #24]
 80096a8:	8c03      	ldrh	r3, [r0, #32]
 80096aa:	429a      	cmp	r2, r3
 80096ac:	d914      	bls.n	80096d8 <USBD_LL_DataInStage+0x44>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 80096ae:	6a41      	ldr	r1, [r0, #36]	@ 0x24
        pep->rem_length -= pep->maxpacket;
 80096b0:	1ad2      	subs	r2, r2, r3
        pep->pbuffer += pep->maxpacket;
 80096b2:	4419      	add	r1, r3
        pep->rem_length -= pep->maxpacket;
 80096b4:	6182      	str	r2, [r0, #24]
        pep->pbuffer += pep->maxpacket;
 80096b6:	6241      	str	r1, [r0, #36]	@ 0x24

        (void)USBD_CtlContinueSendData(pdev, pep->pbuffer, pep->rem_length);
 80096b8:	f000 fc71 	bl	8009f9e <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 80096bc:	462b      	mov	r3, r5
 80096be:	462a      	mov	r2, r5
 80096c0:	4629      	mov	r1, r5
 80096c2:	4620      	mov	r0, r4
 80096c4:	f7f8 f9b7 	bl	8001a36 <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 80096c8:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 80096cc:	b113      	cbz	r3, 80096d4 <USBD_LL_DataInStage+0x40>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 80096ce:	2300      	movs	r3, #0
 80096d0:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 80096d4:	2000      	movs	r0, #0
 80096d6:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 80096d8:	d10c      	bne.n	80096f4 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 80096da:	6943      	ldr	r3, [r0, #20]
        if ((pep->maxpacket == pep->rem_length) &&
 80096dc:	429a      	cmp	r2, r3
 80096de:	d809      	bhi.n	80096f4 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 80096e0:	f8d0 2298 	ldr.w	r2, [r0, #664]	@ 0x298
 80096e4:	4293      	cmp	r3, r2
 80096e6:	d205      	bcs.n	80096f4 <USBD_LL_DataInStage+0x60>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 80096e8:	460a      	mov	r2, r1
 80096ea:	f000 fc58 	bl	8009f9e <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 80096ee:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 80096f2:	e7e3      	b.n	80096bc <USBD_LL_DataInStage+0x28>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80096f4:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 80096f8:	2b03      	cmp	r3, #3
 80096fa:	d108      	bne.n	800970e <USBD_LL_DataInStage+0x7a>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 80096fc:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 8009700:	68db      	ldr	r3, [r3, #12]
 8009702:	b123      	cbz	r3, 800970e <USBD_LL_DataInStage+0x7a>
              pdev->classId = 0U;
 8009704:	2200      	movs	r2, #0
 8009706:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800970a:	4620      	mov	r0, r4
 800970c:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800970e:	2180      	movs	r1, #128	@ 0x80
 8009710:	4620      	mov	r0, r4
 8009712:	f7f8 f96c 	bl	80019ee <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 8009716:	4620      	mov	r0, r4
 8009718:	f000 fc5c 	bl	8009fd4 <USBD_CtlReceiveStatus>
 800971c:	e7d4      	b.n	80096c8 <USBD_LL_DataInStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800971e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009722:	2b03      	cmp	r3, #3
 8009724:	d1d6      	bne.n	80096d4 <USBD_LL_DataInStage+0x40>
        if (pdev->pClass[idx]->DataIn != NULL)
 8009726:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800972a:	695b      	ldr	r3, [r3, #20]
 800972c:	2b00      	cmp	r3, #0
 800972e:	d0d1      	beq.n	80096d4 <USBD_LL_DataInStage+0x40>
          pdev->classId = idx;
 8009730:	2200      	movs	r2, #0
}
 8009732:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 8009736:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800973a:	4718      	bx	r3

0800973c <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800973c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800973e:	2301      	movs	r3, #1
 8009740:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 8009744:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 8009748:	2100      	movs	r1, #0
{
 800974a:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800974c:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 8009750:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 8009752:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 8009756:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 800975a:	b9bb      	cbnz	r3, 800978c <USBD_LL_Reset+0x50>
  USBD_StatusTypeDef ret = USBD_OK;
 800975c:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800975e:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8009760:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009762:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 8009764:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009766:	2340      	movs	r3, #64	@ 0x40
 8009768:	4620      	mov	r0, r4
 800976a:	f7f8 f92b 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800976e:	f884 7163 	strb.w	r7, [r4, #355]	@ 0x163
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8009772:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009776:	462b      	mov	r3, r5
 8009778:	2200      	movs	r2, #0
 800977a:	2180      	movs	r1, #128	@ 0x80
 800977c:	4620      	mov	r0, r4
 800977e:	f7f8 f921 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 8009782:	f884 7023 	strb.w	r7, [r4, #35]	@ 0x23

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 8009786:	8425      	strh	r5, [r4, #32]

  return ret;
}
 8009788:	4630      	mov	r0, r6
 800978a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800978c:	685b      	ldr	r3, [r3, #4]
 800978e:	2b00      	cmp	r3, #0
 8009790:	d0e4      	beq.n	800975c <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 8009792:	4798      	blx	r3
 8009794:	2800      	cmp	r0, #0
 8009796:	d0e1      	beq.n	800975c <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 8009798:	2603      	movs	r6, #3
 800979a:	e7e0      	b.n	800975e <USBD_LL_Reset+0x22>

0800979c <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800979c:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800979e:	2000      	movs	r0, #0
 80097a0:	4770      	bx	lr

080097a2 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 80097a2:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097a6:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 80097a8:	bf1e      	ittt	ne
 80097aa:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 80097ae:	b2db      	uxtbne	r3, r3
 80097b0:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 80097b4:	2304      	movs	r3, #4
 80097b6:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 80097ba:	2000      	movs	r0, #0
 80097bc:	4770      	bx	lr

080097be <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 80097be:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097c2:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 80097c4:	bf02      	ittt	eq
 80097c6:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 80097ca:	b2db      	uxtbeq	r3, r3
 80097cc:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 80097d0:	2000      	movs	r0, #0
 80097d2:	4770      	bx	lr

080097d4 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 80097d4:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097d6:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 80097da:	2a03      	cmp	r2, #3
 80097dc:	d105      	bne.n	80097ea <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 80097de:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80097e2:	b113      	cbz	r3, 80097ea <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 80097e4:	69db      	ldr	r3, [r3, #28]
 80097e6:	b103      	cbz	r3, 80097ea <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 80097e8:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 80097ea:	2000      	movs	r0, #0
 80097ec:	bd08      	pop	{r3, pc}

080097ee <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 80097ee:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 80097f2:	32ae      	adds	r2, #174	@ 0xae
{
 80097f4:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 80097f6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80097fa:	b14a      	cbz	r2, 8009810 <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097fc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009800:	2b03      	cmp	r3, #3
 8009802:	d101      	bne.n	8009808 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 8009804:	6a13      	ldr	r3, [r2, #32]
 8009806:	b90b      	cbnz	r3, 800980c <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 8009808:	2000      	movs	r0, #0
}
 800980a:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800980c:	4798      	blx	r3
 800980e:	e7fb      	b.n	8009808 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 8009810:	2003      	movs	r0, #3
 8009812:	e7fa      	b.n	800980a <USBD_LL_IsoINIncomplete+0x1c>

08009814 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 8009814:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009818:	32ae      	adds	r2, #174	@ 0xae
{
 800981a:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800981c:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8009820:	b14a      	cbz	r2, 8009836 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009822:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009826:	2b03      	cmp	r3, #3
 8009828:	d101      	bne.n	800982e <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800982a:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800982c:	b90b      	cbnz	r3, 8009832 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800982e:	2000      	movs	r0, #0
}
 8009830:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 8009832:	4798      	blx	r3
 8009834:	e7fb      	b.n	800982e <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 8009836:	2003      	movs	r0, #3
 8009838:	e7fa      	b.n	8009830 <USBD_LL_IsoOUTIncomplete+0x1c>

0800983a <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 800983a:	2000      	movs	r0, #0
 800983c:	4770      	bx	lr

0800983e <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800983e:	2201      	movs	r2, #1
{
 8009840:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009842:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8009846:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800984a:	b90a      	cbnz	r2, 8009850 <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 800984c:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800984e:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 8009850:	6852      	ldr	r2, [r2, #4]
 8009852:	7901      	ldrb	r1, [r0, #4]
 8009854:	4790      	blx	r2
 8009856:	2800      	cmp	r0, #0
 8009858:	d0f8      	beq.n	800984c <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 800985a:	2003      	movs	r0, #3
 800985c:	e7f7      	b.n	800984e <USBD_LL_DevDisconnected+0x10>

0800985e <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 800985e:	2000      	movs	r0, #0
 8009860:	4770      	bx	lr

08009862 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 8009862:	2000      	movs	r0, #0
 8009864:	4770      	bx	lr

08009866 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 8009866:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 8009868:	8842      	ldrh	r2, [r0, #2]
 800986a:	7803      	ldrb	r3, [r0, #0]
 800986c:	429a      	cmp	r2, r3
 800986e:	d801      	bhi.n	8009874 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 8009870:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 8009872:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 8009874:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 8009876:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 8009878:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800987a:	7844      	ldrb	r4, [r0, #1]
 800987c:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 800987e:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 8009880:	d1f4      	bne.n	800986c <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 8009882:	7884      	ldrb	r4, [r0, #2]
 8009884:	428c      	cmp	r4, r1
 8009886:	d1f1      	bne.n	800986c <USBD_GetEpDesc+0x6>
 8009888:	e7f3      	b.n	8009872 <USBD_GetEpDesc+0xc>

0800988a <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800988a:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800988c:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800988e:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009890:	f7f8 f8ad 	bl	80019ee <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009894:	4620      	mov	r0, r4
 8009896:	2100      	movs	r1, #0
}
 8009898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800989c:	f7f8 b8a7 	b.w	80019ee <USBD_LL_StallEP>

080098a0 <USBD_StdDevReq>:
{
 80098a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80098a2:	780b      	ldrb	r3, [r1, #0]
 80098a4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80098a8:	2b20      	cmp	r3, #32
{
 80098aa:	4604      	mov	r4, r0
 80098ac:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80098ae:	d009      	beq.n	80098c4 <USBD_StdDevReq+0x24>
 80098b0:	2b40      	cmp	r3, #64	@ 0x40
 80098b2:	d007      	beq.n	80098c4 <USBD_StdDevReq+0x24>
 80098b4:	b193      	cbz	r3, 80098dc <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 80098b6:	4620      	mov	r0, r4
 80098b8:	f7ff ffe7 	bl	800988a <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 80098bc:	2500      	movs	r5, #0
}
 80098be:	4628      	mov	r0, r5
 80098c0:	b002      	add	sp, #8
 80098c2:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 80098c4:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 80098c8:	33ae      	adds	r3, #174	@ 0xae
 80098ca:	4629      	mov	r1, r5
 80098cc:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80098d0:	689b      	ldr	r3, [r3, #8]
 80098d2:	4620      	mov	r0, r4
}
 80098d4:	b002      	add	sp, #8
 80098d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 80098da:	4718      	bx	r3
      switch (req->bRequest)
 80098dc:	784b      	ldrb	r3, [r1, #1]
 80098de:	2b09      	cmp	r3, #9
 80098e0:	d8e9      	bhi.n	80098b6 <USBD_StdDevReq+0x16>
 80098e2:	a201      	add	r2, pc, #4	@ (adr r2, 80098e8 <USBD_StdDevReq+0x48>)
 80098e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80098e8:	08009b09 	.word	0x08009b09
 80098ec:	08009b4d 	.word	0x08009b4d
 80098f0:	080098b7 	.word	0x080098b7
 80098f4:	08009b31 	.word	0x08009b31
 80098f8:	080098b7 	.word	0x080098b7
 80098fc:	08009a03 	.word	0x08009a03
 8009900:	08009911 	.word	0x08009911
 8009904:	080098b7 	.word	0x080098b7
 8009908:	08009add 	.word	0x08009add
 800990c:	08009a45 	.word	0x08009a45
  uint16_t len = 0U;
 8009910:	2300      	movs	r3, #0
 8009912:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 8009916:	884b      	ldrh	r3, [r1, #2]
 8009918:	0a1a      	lsrs	r2, r3, #8
 800991a:	3a01      	subs	r2, #1
 800991c:	2a06      	cmp	r2, #6
 800991e:	d8ca      	bhi.n	80098b6 <USBD_StdDevReq+0x16>
 8009920:	a101      	add	r1, pc, #4	@ (adr r1, 8009928 <USBD_StdDevReq+0x88>)
 8009922:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009926:	bf00      	nop
 8009928:	08009945 	.word	0x08009945
 800992c:	08009977 	.word	0x08009977
 8009930:	08009991 	.word	0x08009991
 8009934:	080098b7 	.word	0x080098b7
 8009938:	080098b7 	.word	0x080098b7
 800993c:	080099d5 	.word	0x080099d5
 8009940:	080099eb 	.word	0x080099eb
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8009944:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009948:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800994a:	7c20      	ldrb	r0, [r4, #16]
 800994c:	f10d 0106 	add.w	r1, sp, #6
 8009950:	4798      	blx	r3
  if (req->wLength != 0U)
 8009952:	88ea      	ldrh	r2, [r5, #6]
 8009954:	2a00      	cmp	r2, #0
 8009956:	f000 80a4 	beq.w	8009aa2 <USBD_StdDevReq+0x202>
    if (len != 0U)
 800995a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800995e:	2b00      	cmp	r3, #0
 8009960:	d0a9      	beq.n	80098b6 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 8009962:	429a      	cmp	r2, r3
 8009964:	bf28      	it	cs
 8009966:	461a      	movcs	r2, r3
 8009968:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800996c:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800996e:	4620      	mov	r0, r4
 8009970:	f000 fb07 	bl	8009f82 <USBD_CtlSendData>
      break;
 8009974:	e7a2      	b.n	80098bc <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009976:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 8009978:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800997c:	b932      	cbnz	r2, 800998c <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800997e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 8009980:	f10d 0006 	add.w	r0, sp, #6
 8009984:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8009986:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8009988:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800998a:	e7e2      	b.n	8009952 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800998c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800998e:	e7f7      	b.n	8009980 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 8009990:	b2db      	uxtb	r3, r3
 8009992:	2b05      	cmp	r3, #5
 8009994:	d88f      	bhi.n	80098b6 <USBD_StdDevReq+0x16>
 8009996:	e8df f003 	tbb	[pc, r3]
 800999a:	0903      	.short	0x0903
 800999c:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 80099a0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80099a4:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 80099a6:	2b00      	cmp	r3, #0
 80099a8:	d1cf      	bne.n	800994a <USBD_StdDevReq+0xaa>
 80099aa:	e784      	b.n	80098b6 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 80099ac:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80099b0:	689b      	ldr	r3, [r3, #8]
 80099b2:	e7f8      	b.n	80099a6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 80099b4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80099b8:	68db      	ldr	r3, [r3, #12]
 80099ba:	e7f4      	b.n	80099a6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 80099bc:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80099c0:	691b      	ldr	r3, [r3, #16]
 80099c2:	e7f0      	b.n	80099a6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 80099c4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80099c8:	695b      	ldr	r3, [r3, #20]
 80099ca:	e7ec      	b.n	80099a6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 80099cc:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80099d0:	699b      	ldr	r3, [r3, #24]
 80099d2:	e7e8      	b.n	80099a6 <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 80099d4:	7c03      	ldrb	r3, [r0, #16]
 80099d6:	2b00      	cmp	r3, #0
 80099d8:	f47f af6d 	bne.w	80098b6 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 80099dc:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80099e0:	f10d 0006 	add.w	r0, sp, #6
 80099e4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80099e6:	4798      	blx	r3
  if (err != 0U)
 80099e8:	e7b3      	b.n	8009952 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 80099ea:	7c03      	ldrb	r3, [r0, #16]
 80099ec:	2b00      	cmp	r3, #0
 80099ee:	f47f af62 	bne.w	80098b6 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 80099f2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80099f6:	f10d 0006 	add.w	r0, sp, #6
 80099fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80099fc:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 80099fe:	2307      	movs	r3, #7
 8009a00:	e7c2      	b.n	8009988 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 8009a02:	888b      	ldrh	r3, [r1, #4]
 8009a04:	2b00      	cmp	r3, #0
 8009a06:	f47f af56 	bne.w	80098b6 <USBD_StdDevReq+0x16>
 8009a0a:	88cb      	ldrh	r3, [r1, #6]
 8009a0c:	2b00      	cmp	r3, #0
 8009a0e:	f47f af52 	bne.w	80098b6 <USBD_StdDevReq+0x16>
 8009a12:	884d      	ldrh	r5, [r1, #2]
 8009a14:	2d7f      	cmp	r5, #127	@ 0x7f
 8009a16:	f63f af4e 	bhi.w	80098b6 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009a1a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009a1e:	2b03      	cmp	r3, #3
 8009a20:	f43f af49 	beq.w	80098b6 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 8009a24:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 8009a26:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 8009a2a:	4629      	mov	r1, r5
 8009a2c:	f7f7 fff1 	bl	8001a12 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 8009a30:	4620      	mov	r0, r4
 8009a32:	f000 fac4 	bl	8009fbe <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 8009a36:	b11d      	cbz	r5, 8009a40 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a38:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8009a3a:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 8009a3e:	e73d      	b.n	80098bc <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 8009a40:	2301      	movs	r3, #1
 8009a42:	e7fa      	b.n	8009a3a <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 8009a44:	7889      	ldrb	r1, [r1, #2]
 8009a46:	4d47      	ldr	r5, [pc, #284]	@ (8009b64 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8009a48:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 8009a4a:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8009a4c:	d903      	bls.n	8009a56 <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 8009a4e:	f7ff ff1c 	bl	800988a <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 8009a52:	2503      	movs	r5, #3
 8009a54:	e733      	b.n	80098be <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 8009a56:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009a5a:	2b02      	cmp	r3, #2
 8009a5c:	b2de      	uxtb	r6, r3
 8009a5e:	d008      	beq.n	8009a72 <USBD_StdDevReq+0x1d2>
 8009a60:	2e03      	cmp	r6, #3
 8009a62:	d017      	beq.n	8009a94 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 8009a64:	f7ff ff11 	bl	800988a <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009a68:	7829      	ldrb	r1, [r5, #0]
 8009a6a:	4620      	mov	r0, r4
 8009a6c:	f7ff fd9f 	bl	80095ae <USBD_ClrClassConfig>
      break;
 8009a70:	e7ef      	b.n	8009a52 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 8009a72:	b1b1      	cbz	r1, 8009aa2 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 8009a74:	2101      	movs	r1, #1
 8009a76:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009a78:	f7ff fd92 	bl	80095a0 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009a7c:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 8009a7e:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 8009a80:	b125      	cbz	r5, 8009a8c <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 8009a82:	f7ff ff02 	bl	800988a <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a86:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 8009a8a:	e718      	b.n	80098be <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 8009a8c:	f000 fa97 	bl	8009fbe <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8009a90:	2303      	movs	r3, #3
 8009a92:	e7d2      	b.n	8009a3a <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 8009a94:	b949      	cbnz	r1, 8009aaa <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a96:	2302      	movs	r3, #2
 8009a98:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 8009a9c:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009a9e:	f7ff fd86 	bl	80095ae <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 8009aa2:	4620      	mov	r0, r4
 8009aa4:	f000 fa8b 	bl	8009fbe <USBD_CtlSendStatus>
 8009aa8:	e708      	b.n	80098bc <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 8009aaa:	6841      	ldr	r1, [r0, #4]
 8009aac:	2901      	cmp	r1, #1
 8009aae:	d0f8      	beq.n	8009aa2 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009ab0:	b2c9      	uxtb	r1, r1
 8009ab2:	f7ff fd7c 	bl	80095ae <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 8009ab6:	7829      	ldrb	r1, [r5, #0]
 8009ab8:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009aba:	4620      	mov	r0, r4
 8009abc:	f7ff fd70 	bl	80095a0 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009ac0:	4605      	mov	r5, r0
 8009ac2:	2800      	cmp	r0, #0
 8009ac4:	d0ed      	beq.n	8009aa2 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 8009ac6:	4620      	mov	r0, r4
 8009ac8:	f7ff fedf 	bl	800988a <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009acc:	7921      	ldrb	r1, [r4, #4]
 8009ace:	4620      	mov	r0, r4
 8009ad0:	f7ff fd6d 	bl	80095ae <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009ad4:	2302      	movs	r3, #2
 8009ad6:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 8009ada:	e6f0      	b.n	80098be <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 8009adc:	88ca      	ldrh	r2, [r1, #6]
 8009ade:	2a01      	cmp	r2, #1
 8009ae0:	f47f aee9 	bne.w	80098b6 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 8009ae4:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 8009ae8:	2902      	cmp	r1, #2
 8009aea:	b2cb      	uxtb	r3, r1
 8009aec:	d807      	bhi.n	8009afe <USBD_StdDevReq+0x25e>
 8009aee:	2b00      	cmp	r3, #0
 8009af0:	f43f aee1 	beq.w	80098b6 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 8009af4:	4601      	mov	r1, r0
 8009af6:	2300      	movs	r3, #0
 8009af8:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 8009afc:	e737      	b.n	800996e <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 8009afe:	2b03      	cmp	r3, #3
 8009b00:	f47f aed9 	bne.w	80098b6 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 8009b04:	1d01      	adds	r1, r0, #4
 8009b06:	e732      	b.n	800996e <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 8009b08:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009b0c:	3b01      	subs	r3, #1
 8009b0e:	2b02      	cmp	r3, #2
 8009b10:	f63f aed1 	bhi.w	80098b6 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 8009b14:	88ca      	ldrh	r2, [r1, #6]
 8009b16:	2a02      	cmp	r2, #2
 8009b18:	f47f aecd 	bne.w	80098b6 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 8009b1c:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 8009b20:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 8009b22:	2b00      	cmp	r3, #0
 8009b24:	bf0c      	ite	eq
 8009b26:	2301      	moveq	r3, #1
 8009b28:	2303      	movne	r3, #3
 8009b2a:	f841 3f0c 	str.w	r3, [r1, #12]!
 8009b2e:	e71e      	b.n	800996e <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009b30:	884b      	ldrh	r3, [r1, #2]
 8009b32:	2b01      	cmp	r3, #1
 8009b34:	d102      	bne.n	8009b3c <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 8009b36:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 8009b3a:	e7b2      	b.n	8009aa2 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 8009b3c:	2b02      	cmp	r3, #2
 8009b3e:	f47f aeba 	bne.w	80098b6 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 8009b42:	888b      	ldrh	r3, [r1, #4]
 8009b44:	0a1b      	lsrs	r3, r3, #8
 8009b46:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 8009b4a:	e7aa      	b.n	8009aa2 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 8009b4c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009b50:	3b01      	subs	r3, #1
 8009b52:	2b02      	cmp	r3, #2
 8009b54:	f63f aeaf 	bhi.w	80098b6 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009b58:	884b      	ldrh	r3, [r1, #2]
 8009b5a:	2b01      	cmp	r3, #1
 8009b5c:	f47f aeae 	bne.w	80098bc <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 8009b60:	2300      	movs	r3, #0
 8009b62:	e7e8      	b.n	8009b36 <USBD_StdDevReq+0x296>
 8009b64:	20013fe8 	.word	0x20013fe8

08009b68 <USBD_StdItfReq>:
{
 8009b68:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b6a:	780b      	ldrb	r3, [r1, #0]
 8009b6c:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 8009b70:	065b      	lsls	r3, r3, #25
{
 8009b72:	4604      	mov	r4, r0
 8009b74:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b76:	d501      	bpl.n	8009b7c <USBD_StdItfReq+0x14>
 8009b78:	2a40      	cmp	r2, #64	@ 0x40
 8009b7a:	d11f      	bne.n	8009bbc <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 8009b7c:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8009b80:	3b01      	subs	r3, #1
 8009b82:	2b02      	cmp	r3, #2
 8009b84:	d81a      	bhi.n	8009bbc <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009b86:	7931      	ldrb	r1, [r6, #4]
 8009b88:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009b8a:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009b8c:	d817      	bhi.n	8009bbe <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009b8e:	f7ff fe66 	bl	800985e <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009b92:	b988      	cbnz	r0, 8009bb8 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 8009b94:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 8009b98:	689b      	ldr	r3, [r3, #8]
 8009b9a:	b16b      	cbz	r3, 8009bb8 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 8009b9c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009ba0:	4631      	mov	r1, r6
 8009ba2:	4620      	mov	r0, r4
 8009ba4:	4798      	blx	r3
 8009ba6:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 8009ba8:	88f3      	ldrh	r3, [r6, #6]
 8009baa:	b91b      	cbnz	r3, 8009bb4 <USBD_StdItfReq+0x4c>
 8009bac:	b915      	cbnz	r5, 8009bb4 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 8009bae:	4620      	mov	r0, r4
 8009bb0:	f000 fa05 	bl	8009fbe <USBD_CtlSendStatus>
}
 8009bb4:	4628      	mov	r0, r5
 8009bb6:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 8009bb8:	2503      	movs	r5, #3
 8009bba:	e7f5      	b.n	8009ba8 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 8009bbc:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 8009bbe:	f7ff fe64 	bl	800988a <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 8009bc2:	2500      	movs	r5, #0
 8009bc4:	e7f6      	b.n	8009bb4 <USBD_StdItfReq+0x4c>

08009bc6 <USBD_StdEPReq>:
{
 8009bc6:	b570      	push	{r4, r5, r6, lr}
 8009bc8:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 8009bca:	888a      	ldrh	r2, [r1, #4]
 8009bcc:	790d      	ldrb	r5, [r1, #4]
 8009bce:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009bd2:	2b20      	cmp	r3, #32
{
 8009bd4:	4604      	mov	r4, r0
 8009bd6:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009bd8:	d059      	beq.n	8009c8e <USBD_StdEPReq+0xc8>
 8009bda:	2b40      	cmp	r3, #64	@ 0x40
 8009bdc:	d057      	beq.n	8009c8e <USBD_StdEPReq+0xc8>
 8009bde:	b11b      	cbz	r3, 8009be8 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 8009be0:	4620      	mov	r0, r4
 8009be2:	f7ff fe52 	bl	800988a <USBD_CtlError.constprop.0>
              break;
 8009be6:	e03e      	b.n	8009c66 <USBD_StdEPReq+0xa0>
      switch (req->bRequest)
 8009be8:	784b      	ldrb	r3, [r1, #1]
 8009bea:	2b01      	cmp	r3, #1
 8009bec:	d03d      	beq.n	8009c6a <USBD_StdEPReq+0xa4>
 8009bee:	2b03      	cmp	r3, #3
 8009bf0:	d026      	beq.n	8009c40 <USBD_StdEPReq+0x7a>
 8009bf2:	2b00      	cmp	r3, #0
 8009bf4:	d1f4      	bne.n	8009be0 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 8009bf6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009bfa:	2b02      	cmp	r3, #2
 8009bfc:	b2d9      	uxtb	r1, r3
 8009bfe:	d062      	beq.n	8009cc6 <USBD_StdEPReq+0x100>
 8009c00:	2903      	cmp	r1, #3
 8009c02:	d1ed      	bne.n	8009be0 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009c04:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 8009c08:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8009c0c:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009c10:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 8009c14:	d067      	beq.n	8009ce6 <USBD_StdEPReq+0x120>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009c16:	f893 3023 	ldrb.w	r3, [r3, #35]	@ 0x23
 8009c1a:	2b00      	cmp	r3, #0
 8009c1c:	d0e0      	beq.n	8009be0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009c1e:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 8009c22:	3601      	adds	r6, #1
 8009c24:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009c28:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009c2a:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009c2e:	d066      	beq.n	8009cfe <USBD_StdEPReq+0x138>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 8009c30:	4629      	mov	r1, r5
 8009c32:	4620      	mov	r0, r4
 8009c34:	f7f7 fea0 	bl	8001978 <USBD_LL_IsStallEP>
 8009c38:	2800      	cmp	r0, #0
 8009c3a:	d066      	beq.n	8009d0a <USBD_StdEPReq+0x144>
                pep->status = 0x0001U;
 8009c3c:	2301      	movs	r3, #1
 8009c3e:	e05f      	b.n	8009d00 <USBD_StdEPReq+0x13a>
          switch (pdev->dev_state)
 8009c40:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009c44:	2b02      	cmp	r3, #2
 8009c46:	b2da      	uxtb	r2, r3
 8009c48:	d033      	beq.n	8009cb2 <USBD_StdEPReq+0xec>
 8009c4a:	2a03      	cmp	r2, #3
 8009c4c:	d1c8      	bne.n	8009be0 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009c4e:	884b      	ldrh	r3, [r1, #2]
 8009c50:	b933      	cbnz	r3, 8009c60 <USBD_StdEPReq+0x9a>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8009c52:	0669      	lsls	r1, r5, #25
 8009c54:	d004      	beq.n	8009c60 <USBD_StdEPReq+0x9a>
 8009c56:	88f3      	ldrh	r3, [r6, #6]
 8009c58:	b913      	cbnz	r3, 8009c60 <USBD_StdEPReq+0x9a>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 8009c5a:	4629      	mov	r1, r5
 8009c5c:	f7f7 fec7 	bl	80019ee <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 8009c60:	4620      	mov	r0, r4
 8009c62:	f000 f9ac 	bl	8009fbe <USBD_CtlSendStatus>
}
 8009c66:	2000      	movs	r0, #0
 8009c68:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 8009c6a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009c6e:	2b02      	cmp	r3, #2
 8009c70:	b2da      	uxtb	r2, r3
 8009c72:	d01e      	beq.n	8009cb2 <USBD_StdEPReq+0xec>
 8009c74:	2a03      	cmp	r2, #3
 8009c76:	d1b3      	bne.n	8009be0 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009c78:	884b      	ldrh	r3, [r1, #2]
 8009c7a:	2b00      	cmp	r3, #0
 8009c7c:	d1f3      	bne.n	8009c66 <USBD_StdEPReq+0xa0>
                if ((ep_addr & 0x7FU) != 0x00U)
 8009c7e:	066b      	lsls	r3, r5, #25
 8009c80:	d002      	beq.n	8009c88 <USBD_StdEPReq+0xc2>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 8009c82:	4629      	mov	r1, r5
 8009c84:	f7f7 febc 	bl	8001a00 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 8009c88:	4620      	mov	r0, r4
 8009c8a:	f000 f998 	bl	8009fbe <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 8009c8e:	4629      	mov	r1, r5
 8009c90:	4620      	mov	r0, r4
 8009c92:	f7ff fde6 	bl	8009862 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009c96:	2800      	cmp	r0, #0
 8009c98:	d1e5      	bne.n	8009c66 <USBD_StdEPReq+0xa0>
                  if (pdev->pClass[idx]->Setup != NULL)
 8009c9a:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 8009c9e:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 8009ca2:	689b      	ldr	r3, [r3, #8]
 8009ca4:	2b00      	cmp	r3, #0
 8009ca6:	d0de      	beq.n	8009c66 <USBD_StdEPReq+0xa0>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009ca8:	4631      	mov	r1, r6
 8009caa:	4620      	mov	r0, r4
}
 8009cac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009cb0:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009cb2:	066a      	lsls	r2, r5, #25
 8009cb4:	d094      	beq.n	8009be0 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 8009cb6:	4629      	mov	r1, r5
 8009cb8:	f7f7 fe99 	bl	80019ee <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 8009cbc:	2180      	movs	r1, #128	@ 0x80
 8009cbe:	4620      	mov	r0, r4
 8009cc0:	f7f7 fe95 	bl	80019ee <USBD_LL_StallEP>
 8009cc4:	e7cf      	b.n	8009c66 <USBD_StdEPReq+0xa0>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009cc6:	0669      	lsls	r1, r5, #25
 8009cc8:	d18a      	bne.n	8009be0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009cca:	0613      	lsls	r3, r2, #24
 8009ccc:	bf4c      	ite	mi
 8009cce:	f100 0114 	addmi.w	r1, r0, #20
 8009cd2:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 8009cd6:	2300      	movs	r3, #0
 8009cd8:	f801 3f0e 	strb.w	r3, [r1, #14]!
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009cdc:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009cde:	4620      	mov	r0, r4
 8009ce0:	f000 f94f 	bl	8009f82 <USBD_CtlSendData>
              break;
 8009ce4:	e7bf      	b.n	8009c66 <USBD_StdEPReq+0xa0>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 8009ce6:	f893 3163 	ldrb.w	r3, [r3, #355]	@ 0x163
 8009cea:	2b00      	cmp	r3, #0
 8009cec:	f43f af78 	beq.w	8009be0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009cf0:	2614      	movs	r6, #20
 8009cf2:	fb06 0605 	mla	r6, r6, r5, r0
 8009cf6:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009cfa:	2d00      	cmp	r5, #0
 8009cfc:	d198      	bne.n	8009c30 <USBD_StdEPReq+0x6a>
                pep->status = 0x0000U;
 8009cfe:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 8009d00:	73b3      	strb	r3, [r6, #14]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009d02:	2202      	movs	r2, #2
 8009d04:	f106 010e 	add.w	r1, r6, #14
 8009d08:	e7e9      	b.n	8009cde <USBD_StdEPReq+0x118>
                pep->status = 0x0000U;
 8009d0a:	73b0      	strb	r0, [r6, #14]
 8009d0c:	e7f9      	b.n	8009d02 <USBD_StdEPReq+0x13c>

08009d0e <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 8009d0e:	780b      	ldrb	r3, [r1, #0]
 8009d10:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 8009d12:	784b      	ldrb	r3, [r1, #1]
 8009d14:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 8009d16:	884b      	ldrh	r3, [r1, #2]
 8009d18:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 8009d1a:	888b      	ldrh	r3, [r1, #4]
 8009d1c:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 8009d1e:	88cb      	ldrh	r3, [r1, #6]
 8009d20:	80c3      	strh	r3, [r0, #6]
}
 8009d22:	4770      	bx	lr

08009d24 <USBD_CtlError>:
{
 8009d24:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009d26:	2180      	movs	r1, #128	@ 0x80
{
 8009d28:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009d2a:	f7f7 fe60 	bl	80019ee <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009d2e:	4620      	mov	r0, r4
 8009d30:	2100      	movs	r1, #0
}
 8009d32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 8009d36:	f7f7 be5a 	b.w	80019ee <USBD_LL_StallEP>

08009d3a <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 8009d3a:	b570      	push	{r4, r5, r6, lr}
 8009d3c:	460d      	mov	r5, r1
 8009d3e:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 8009d40:	4604      	mov	r4, r0
 8009d42:	b170      	cbz	r0, 8009d62 <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 8009d44:	f7f6 fa54 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 8009d48:	b2c3      	uxtb	r3, r0
 8009d4a:	3301      	adds	r3, #1
 8009d4c:	005b      	lsls	r3, r3, #1
 8009d4e:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 8009d50:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 8009d52:	2303      	movs	r3, #3
 8009d54:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 8009d56:	3c01      	subs	r4, #1
  idx++;
 8009d58:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 8009d5a:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 8009d5c:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8009d60:	b902      	cbnz	r2, 8009d64 <USBD_GetString+0x2a>
}
 8009d62:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 8009d64:	54ea      	strb	r2, [r5, r3]
    idx++;
 8009d66:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 8009d68:	b2d2      	uxtb	r2, r2
    idx++;
 8009d6a:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 8009d6c:	54a9      	strb	r1, [r5, r2]
    idx++;
 8009d6e:	b2db      	uxtb	r3, r3
 8009d70:	e7f4      	b.n	8009d5c <USBD_GetString+0x22>
	...

08009d74 <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 8009d74:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 8009d78:	33b0      	adds	r3, #176	@ 0xb0
  hidReady = true;
 8009d7a:	2201      	movs	r2, #1
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 8009d7c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8009d80:	2000      	movs	r0, #0
 8009d82:	7318      	strb	r0, [r3, #12]
  hidReady = true;
 8009d84:	4b01      	ldr	r3, [pc, #4]	@ (8009d8c <USBD_HID_DataIn+0x18>)
 8009d86:	701a      	strb	r2, [r3, #0]
  return (uint8_t)USBD_OK;
}
 8009d88:	4770      	bx	lr
 8009d8a:	bf00      	nop
 8009d8c:	200000dc 	.word	0x200000dc

08009d90 <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 8009d90:	230a      	movs	r3, #10
 8009d92:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 8009d94:	4800      	ldr	r0, [pc, #0]	@ (8009d98 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 8009d96:	4770      	bx	lr
 8009d98:	2000012c 	.word	0x2000012c

08009d9c <USBD_HID_GetFSCfgDesc>:
{
 8009d9c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d9e:	2181      	movs	r1, #129	@ 0x81
{
 8009da0:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009da2:	4805      	ldr	r0, [pc, #20]	@ (8009db8 <USBD_HID_GetFSCfgDesc+0x1c>)
 8009da4:	f7ff fd5f 	bl	8009866 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009da8:	b108      	cbz	r0, 8009dae <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 8009daa:	230a      	movs	r3, #10
 8009dac:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009dae:	2322      	movs	r3, #34	@ 0x22
}
 8009db0:	4801      	ldr	r0, [pc, #4]	@ (8009db8 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009db2:	8023      	strh	r3, [r4, #0]
}
 8009db4:	bd10      	pop	{r4, pc}
 8009db6:	bf00      	nop
 8009db8:	20000144 	.word	0x20000144

08009dbc <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 8009dbc:	f7ff bfee 	b.w	8009d9c <USBD_HID_GetFSCfgDesc>

08009dc0 <USBD_HID_GetHSCfgDesc>:
{
 8009dc0:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009dc2:	2181      	movs	r1, #129	@ 0x81
{
 8009dc4:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009dc6:	4805      	ldr	r0, [pc, #20]	@ (8009ddc <USBD_HID_GetHSCfgDesc+0x1c>)
 8009dc8:	f7ff fd4d 	bl	8009866 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009dcc:	b108      	cbz	r0, 8009dd2 <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 8009dce:	2307      	movs	r3, #7
 8009dd0:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009dd2:	2322      	movs	r3, #34	@ 0x22
}
 8009dd4:	4801      	ldr	r0, [pc, #4]	@ (8009ddc <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009dd6:	8023      	strh	r3, [r4, #0]
}
 8009dd8:	bd10      	pop	{r4, pc}
 8009dda:	bf00      	nop
 8009ddc:	20000144 	.word	0x20000144

08009de0 <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009de0:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 8009de4:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009de6:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 8009de8:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009dea:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 8009dee:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 8009df2:	2b00      	cmp	r3, #0
 8009df4:	d04a      	beq.n	8009e8c <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009df6:	780a      	ldrb	r2, [r1, #0]
 8009df8:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 8009dfc:	d01d      	beq.n	8009e3a <USBD_HID_Setup+0x5a>
 8009dfe:	2a20      	cmp	r2, #32
 8009e00:	d142      	bne.n	8009e88 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 8009e02:	784a      	ldrb	r2, [r1, #1]
 8009e04:	3a02      	subs	r2, #2
 8009e06:	2a09      	cmp	r2, #9
 8009e08:	d83e      	bhi.n	8009e88 <USBD_HID_Setup+0xa8>
 8009e0a:	e8df f002 	tbb	[pc, r2]
 8009e0e:	0a13      	.short	0x0a13
 8009e10:	3d3d3d3d 	.word	0x3d3d3d3d
 8009e14:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 8009e18:	788a      	ldrb	r2, [r1, #2]
 8009e1a:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 8009e1c:	2000      	movs	r0, #0
}
 8009e1e:	b002      	add	sp, #8
 8009e20:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 8009e22:	2201      	movs	r2, #1
 8009e24:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 8009e26:	f000 f8ac 	bl	8009f82 <USBD_CtlSendData>
          break;
 8009e2a:	e7f7      	b.n	8009e1c <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 8009e2c:	884a      	ldrh	r2, [r1, #2]
 8009e2e:	0a12      	lsrs	r2, r2, #8
 8009e30:	605a      	str	r2, [r3, #4]
          break;
 8009e32:	e7f3      	b.n	8009e1c <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 8009e34:	2201      	movs	r2, #1
 8009e36:	1d19      	adds	r1, r3, #4
 8009e38:	e7f5      	b.n	8009e26 <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 8009e3a:	784a      	ldrb	r2, [r1, #1]
 8009e3c:	2a0b      	cmp	r2, #11
 8009e3e:	d823      	bhi.n	8009e88 <USBD_HID_Setup+0xa8>
 8009e40:	a401      	add	r4, pc, #4	@ (adr r4, 8009e48 <USBD_HID_Setup+0x68>)
 8009e42:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 8009e46:	bf00      	nop
 8009e48:	08009e79 	.word	0x08009e79
 8009e4c:	08009e1d 	.word	0x08009e1d
 8009e50:	08009e89 	.word	0x08009e89
 8009e54:	08009e89 	.word	0x08009e89
 8009e58:	08009e89 	.word	0x08009e89
 8009e5c:	08009e89 	.word	0x08009e89
 8009e60:	08009e91 	.word	0x08009e91
 8009e64:	08009e89 	.word	0x08009e89
 8009e68:	08009e89 	.word	0x08009e89
 8009e6c:	08009e89 	.word	0x08009e89
 8009e70:	08009eb5 	.word	0x08009eb5
 8009e74:	08009ec5 	.word	0x08009ec5
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009e78:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009e7c:	2b03      	cmp	r3, #3
 8009e7e:	d103      	bne.n	8009e88 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 8009e80:	2202      	movs	r2, #2
 8009e82:	f10d 0106 	add.w	r1, sp, #6
 8009e86:	e7ce      	b.n	8009e26 <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 8009e88:	f7ff ff4c 	bl	8009d24 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 8009e8c:	2003      	movs	r0, #3
 8009e8e:	e7c6      	b.n	8009e1e <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 8009e90:	884b      	ldrh	r3, [r1, #2]
 8009e92:	0a1b      	lsrs	r3, r3, #8
 8009e94:	2b22      	cmp	r3, #34	@ 0x22
 8009e96:	d105      	bne.n	8009ea4 <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 8009e98:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 8009e9a:	490e      	ldr	r1, [pc, #56]	@ (8009ed4 <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 8009e9c:	2a4a      	cmp	r2, #74	@ 0x4a
 8009e9e:	bf28      	it	cs
 8009ea0:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 8009ea2:	e7c0      	b.n	8009e26 <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 8009ea4:	2b21      	cmp	r3, #33	@ 0x21
 8009ea6:	d1ef      	bne.n	8009e88 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 8009ea8:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 8009eaa:	490b      	ldr	r1, [pc, #44]	@ (8009ed8 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 8009eac:	2a09      	cmp	r2, #9
 8009eae:	bf28      	it	cs
 8009eb0:	2209      	movcs	r2, #9
 8009eb2:	e7b8      	b.n	8009e26 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009eb4:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009eb8:	2a03      	cmp	r2, #3
 8009eba:	d1e5      	bne.n	8009e88 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 8009ebc:	2201      	movs	r2, #1
 8009ebe:	f103 0108 	add.w	r1, r3, #8
 8009ec2:	e7b0      	b.n	8009e26 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009ec4:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009ec8:	2a03      	cmp	r2, #3
 8009eca:	d1dd      	bne.n	8009e88 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 8009ecc:	788a      	ldrb	r2, [r1, #2]
 8009ece:	609a      	str	r2, [r3, #8]
 8009ed0:	e7a4      	b.n	8009e1c <USBD_HID_Setup+0x3c>
 8009ed2:	bf00      	nop
 8009ed4:	200000e0 	.word	0x200000e0
 8009ed8:	20000138 	.word	0x20000138

08009edc <USBD_HID_DeInit>:
{
 8009edc:	b538      	push	{r3, r4, r5, lr}
 8009ede:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 8009ee0:	2181      	movs	r1, #129	@ 0x81
 8009ee2:	f7f7 fd7b 	bl	80019dc <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009ee6:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 8009eea:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009eec:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 8009eee:	f884 5037 	strb.w	r5, [r4, #55]	@ 0x37
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009ef2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = 0U;
 8009ef6:	6325      	str	r5, [r4, #48]	@ 0x30
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009ef8:	b130      	cbz	r0, 8009f08 <USBD_HID_DeInit+0x2c>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 8009efa:	f7f7 fd53 	bl	80019a4 <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009efe:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009f02:	33b0      	adds	r3, #176	@ 0xb0
 8009f04:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 8009f08:	2000      	movs	r0, #0
 8009f0a:	bd38      	pop	{r3, r4, r5, pc}

08009f0c <USBD_HID_Init>:
{
 8009f0c:	b538      	push	{r3, r4, r5, lr}
 8009f0e:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 8009f10:	2010      	movs	r0, #16
 8009f12:	f7f7 fd43 	bl	800199c <USBD_static_malloc>
  if (hhid == NULL)
 8009f16:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009f1a:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 8009f1c:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009f1e:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 8009f22:	b908      	cbnz	r0, 8009f28 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 8009f24:	2002      	movs	r0, #2
}
 8009f26:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009f28:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 8009f2a:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 8009f2e:	2b00      	cmp	r3, #0
 8009f30:	bf14      	ite	ne
 8009f32:	230a      	movne	r3, #10
 8009f34:	2307      	moveq	r3, #7
 8009f36:	6323      	str	r3, [r4, #48]	@ 0x30
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 8009f38:	2203      	movs	r2, #3
 8009f3a:	2304      	movs	r3, #4
 8009f3c:	2181      	movs	r1, #129	@ 0x81
 8009f3e:	4620      	mov	r0, r4
 8009f40:	f7f7 fd40 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 8009f44:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 8009f46:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 8009f48:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
  hhid->state = USBD_HID_IDLE;
 8009f4c:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 8009f4e:	e7ea      	b.n	8009f26 <USBD_HID_Init+0x1a>

08009f50 <USBD_HID_SendReport>:
{
 8009f50:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009f52:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009f56:	32b0      	adds	r2, #176	@ 0xb0
{
 8009f58:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009f5a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 8009f5e:	b172      	cbz	r2, 8009f7e <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009f60:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 8009f64:	2c03      	cmp	r4, #3
 8009f66:	d101      	bne.n	8009f6c <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 8009f68:	7b14      	ldrb	r4, [r2, #12]
 8009f6a:	b10c      	cbz	r4, 8009f70 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 8009f6c:	2000      	movs	r0, #0
}
 8009f6e:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 8009f70:	2401      	movs	r4, #1
 8009f72:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 8009f74:	460a      	mov	r2, r1
 8009f76:	2181      	movs	r1, #129	@ 0x81
 8009f78:	f7f7 fd54 	bl	8001a24 <USBD_LL_Transmit>
 8009f7c:	e7f6      	b.n	8009f6c <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 8009f7e:	2003      	movs	r0, #3
 8009f80:	e7f5      	b.n	8009f6e <USBD_HID_SendReport+0x1e>

08009f82 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 8009f82:	b510      	push	{r4, lr}
 8009f84:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8009f86:	2202      	movs	r2, #2
 8009f88:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
 8009f8c:	6143      	str	r3, [r0, #20]
#else
  pdev->ep_in[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009f8e:	460a      	mov	r2, r1
  pdev->ep_in[0].pbuffer = pbuf;
 8009f90:	6241      	str	r1, [r0, #36]	@ 0x24
  pdev->ep_in[0].rem_length = len;
 8009f92:	6183      	str	r3, [r0, #24]
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009f94:	2100      	movs	r1, #0
 8009f96:	f7f7 fd45 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009f9a:	2000      	movs	r0, #0
 8009f9c:	bd10      	pop	{r4, pc}

08009f9e <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 8009f9e:	b508      	push	{r3, lr}
 8009fa0:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009fa2:	460a      	mov	r2, r1
 8009fa4:	2100      	movs	r1, #0
 8009fa6:	f7f7 fd3d 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009faa:	2000      	movs	r0, #0
 8009fac:	bd08      	pop	{r3, pc}

08009fae <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 8009fae:	b508      	push	{r3, lr}
 8009fb0:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 8009fb2:	460a      	mov	r2, r1
 8009fb4:	2100      	movs	r1, #0
 8009fb6:	f7f7 fd3e 	bl	8001a36 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8009fba:	2000      	movs	r0, #0
 8009fbc:	bd08      	pop	{r3, pc}

08009fbe <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 8009fbe:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8009fc0:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8009fc2:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8009fc4:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8009fc8:	4619      	mov	r1, r3
 8009fca:	461a      	mov	r2, r3
 8009fcc:	f7f7 fd2a 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009fd0:	2000      	movs	r0, #0
 8009fd2:	bd08      	pop	{r3, pc}

08009fd4 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 8009fd4:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8009fd6:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8009fd8:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8009fda:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8009fde:	4619      	mov	r1, r3
 8009fe0:	461a      	mov	r2, r3
 8009fe2:	f7f7 fd28 	bl	8001a36 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8009fe6:	2000      	movs	r0, #0
 8009fe8:	bd08      	pop	{r3, pc}

08009fea <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009fea:	8880      	ldrh	r0, [r0, #4]
 8009fec:	4770      	bx	lr

08009fee <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009fee:	b570      	push	{r4, r5, r6, lr}
 8009ff0:	6803      	ldr	r3, [r0, #0]
 8009ff2:	4605      	mov	r5, r0
 8009ff4:	460c      	mov	r4, r1
 8009ff6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009ff8:	2100      	movs	r1, #0
 8009ffa:	4798      	blx	r3
 8009ffc:	682b      	ldr	r3, [r5, #0]
 8009ffe:	4606      	mov	r6, r0
 800a000:	6a1b      	ldr	r3, [r3, #32]
 800a002:	4628      	mov	r0, r5
 800a004:	4798      	blx	r3
 800a006:	1ba4      	subs	r4, r4, r6
 800a008:	b2a4      	uxth	r4, r4
 800a00a:	fbb4 f0f0 	udiv	r0, r4, r0
 800a00e:	bd70      	pop	{r4, r5, r6, pc}

0800a010 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a010:	2300      	movs	r3, #0
 800a012:	8083      	strh	r3, [r0, #4]
 800a014:	4770      	bx	lr

0800a016 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a016:	b510      	push	{r4, lr}
 800a018:	6803      	ldr	r3, [r0, #0]
 800a01a:	8881      	ldrh	r1, [r0, #4]
 800a01c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a01e:	4604      	mov	r4, r0
 800a020:	4798      	blx	r3
 800a022:	88a3      	ldrh	r3, [r4, #4]
 800a024:	3301      	adds	r3, #1
 800a026:	80a3      	strh	r3, [r4, #4]
 800a028:	bd10      	pop	{r4, pc}

0800a02a <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a02a:	6803      	ldr	r3, [r0, #0]
 800a02c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a02e:	4718      	bx	r3

0800a030 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a030:	4770      	bx	lr
	...

0800a034 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a034:	4a02      	ldr	r2, [pc, #8]	@ (800a040 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a036:	6002      	str	r2, [r0, #0]
 800a038:	2200      	movs	r2, #0
 800a03a:	8082      	strh	r2, [r0, #4]
 800a03c:	4770      	bx	lr
 800a03e:	bf00      	nop
 800a040:	08024e40 	.word	0x08024e40

0800a044 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a044:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a046:	4770      	bx	lr

0800a048 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a048:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a04a:	2000      	movs	r0, #0
 800a04c:	b12b      	cbz	r3, 800a05a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a04e:	b920      	cbnz	r0, 800a05a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a050:	1a5a      	subs	r2, r3, r1
 800a052:	4250      	negs	r0, r2
 800a054:	4150      	adcs	r0, r2
 800a056:	699b      	ldr	r3, [r3, #24]
 800a058:	e7f8      	b.n	800a04c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a05a:	4770      	bx	lr

0800a05c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a05c:	2300      	movs	r3, #0
 800a05e:	6148      	str	r0, [r1, #20]
 800a060:	618b      	str	r3, [r1, #24]
 800a062:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a064:	b913      	cbnz	r3, 800a06c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a066:	6281      	str	r1, [r0, #40]	@ 0x28
 800a068:	4770      	bx	lr
 800a06a:	4613      	mov	r3, r2
 800a06c:	699a      	ldr	r2, [r3, #24]
 800a06e:	2a00      	cmp	r2, #0
 800a070:	d1fb      	bne.n	800a06a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a072:	6199      	str	r1, [r3, #24]
 800a074:	4770      	bx	lr

0800a076 <_ZN8touchgfx9Container9removeAllEv>:
 800a076:	2200      	movs	r2, #0
 800a078:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a07a:	b123      	cbz	r3, 800a086 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a07c:	6999      	ldr	r1, [r3, #24]
 800a07e:	6281      	str	r1, [r0, #40]	@ 0x28
 800a080:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a084:	e7f8      	b.n	800a078 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a086:	4770      	bx	lr

0800a088 <_ZN8touchgfx9Container6unlinkEv>:
 800a088:	2300      	movs	r3, #0
 800a08a:	6283      	str	r3, [r0, #40]	@ 0x28
 800a08c:	4770      	bx	lr

0800a08e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a08e:	2200      	movs	r2, #0
 800a090:	8002      	strh	r2, [r0, #0]
 800a092:	8042      	strh	r2, [r0, #2]
 800a094:	8082      	strh	r2, [r0, #4]
 800a096:	80c2      	strh	r2, [r0, #6]
 800a098:	4770      	bx	lr

0800a09a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a09a:	b570      	push	{r4, r5, r6, lr}
 800a09c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a09e:	460d      	mov	r5, r1
 800a0a0:	4616      	mov	r6, r2
 800a0a2:	b13c      	cbz	r4, 800a0b4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a0a4:	6823      	ldr	r3, [r4, #0]
 800a0a6:	4620      	mov	r0, r4
 800a0a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a0aa:	4632      	mov	r2, r6
 800a0ac:	4629      	mov	r1, r5
 800a0ae:	4798      	blx	r3
 800a0b0:	69a4      	ldr	r4, [r4, #24]
 800a0b2:	e7f6      	b.n	800a0a2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a0b4:	bd70      	pop	{r4, r5, r6, pc}

0800a0b6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a0b6:	b538      	push	{r3, r4, r5, lr}
 800a0b8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a0ba:	460d      	mov	r5, r1
 800a0bc:	b134      	cbz	r4, 800a0cc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a0be:	682b      	ldr	r3, [r5, #0]
 800a0c0:	4621      	mov	r1, r4
 800a0c2:	689b      	ldr	r3, [r3, #8]
 800a0c4:	4628      	mov	r0, r5
 800a0c6:	4798      	blx	r3
 800a0c8:	69a4      	ldr	r4, [r4, #24]
 800a0ca:	e7f7      	b.n	800a0bc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a0cc:	bd38      	pop	{r3, r4, r5, pc}

0800a0ce <_ZN8touchgfx9ContainerD1Ev>:
 800a0ce:	4770      	bx	lr

0800a0d0 <_ZN8touchgfx9ContainerD0Ev>:
 800a0d0:	b510      	push	{r4, lr}
 800a0d2:	212c      	movs	r1, #44	@ 0x2c
 800a0d4:	4604      	mov	r4, r0
 800a0d6:	f017 fce4 	bl	8021aa2 <_ZdlPvj>
 800a0da:	4620      	mov	r0, r4
 800a0dc:	bd10      	pop	{r4, pc}

0800a0de <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a0de:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a0e0:	b19b      	cbz	r3, 800a10a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a0e2:	428b      	cmp	r3, r1
 800a0e4:	d109      	bne.n	800a0fa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a0e6:	699a      	ldr	r2, [r3, #24]
 800a0e8:	2100      	movs	r1, #0
 800a0ea:	6159      	str	r1, [r3, #20]
 800a0ec:	6282      	str	r2, [r0, #40]	@ 0x28
 800a0ee:	b902      	cbnz	r2, 800a0f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a0f0:	4770      	bx	lr
 800a0f2:	6199      	str	r1, [r3, #24]
 800a0f4:	4770      	bx	lr
 800a0f6:	4613      	mov	r3, r2
 800a0f8:	b13a      	cbz	r2, 800a10a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a0fa:	699a      	ldr	r2, [r3, #24]
 800a0fc:	428a      	cmp	r2, r1
 800a0fe:	d1fa      	bne.n	800a0f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a100:	698a      	ldr	r2, [r1, #24]
 800a102:	619a      	str	r2, [r3, #24]
 800a104:	2300      	movs	r3, #0
 800a106:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a10a:	4770      	bx	lr

0800a10c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a10c:	b410      	push	{r4}
 800a10e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a110:	4604      	mov	r4, r0
 800a112:	b92b      	cbnz	r3, 800a120 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a114:	6803      	ldr	r3, [r0, #0]
 800a116:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a11a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a11c:	4611      	mov	r1, r2
 800a11e:	4718      	bx	r3
 800a120:	b941      	cbnz	r1, 800a134 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a122:	6193      	str	r3, [r2, #24]
 800a124:	6282      	str	r2, [r0, #40]	@ 0x28
 800a126:	6154      	str	r4, [r2, #20]
 800a128:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a12c:	4770      	bx	lr
 800a12e:	4603      	mov	r3, r0
 800a130:	2800      	cmp	r0, #0
 800a132:	d0f9      	beq.n	800a128 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a134:	4299      	cmp	r1, r3
 800a136:	6998      	ldr	r0, [r3, #24]
 800a138:	d1f9      	bne.n	800a12e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a13a:	6190      	str	r0, [r2, #24]
 800a13c:	618a      	str	r2, [r1, #24]
 800a13e:	e7f2      	b.n	800a126 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a140 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a144:	461f      	mov	r7, r3
 800a146:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a14a:	460d      	mov	r5, r1
 800a14c:	4616      	mov	r6, r2
 800a14e:	b103      	cbz	r3, 800a152 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a150:	6038      	str	r0, [r7, #0]
 800a152:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a154:	b314      	cbz	r4, 800a19c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a156:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a15a:	b1eb      	cbz	r3, 800a198 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a15c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a160:	428d      	cmp	r5, r1
 800a162:	db19      	blt.n	800a198 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a164:	8923      	ldrh	r3, [r4, #8]
 800a166:	b289      	uxth	r1, r1
 800a168:	440b      	add	r3, r1
 800a16a:	b21b      	sxth	r3, r3
 800a16c:	429d      	cmp	r5, r3
 800a16e:	da13      	bge.n	800a198 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a170:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a174:	4296      	cmp	r6, r2
 800a176:	db0f      	blt.n	800a198 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a178:	8963      	ldrh	r3, [r4, #10]
 800a17a:	b292      	uxth	r2, r2
 800a17c:	4413      	add	r3, r2
 800a17e:	b21b      	sxth	r3, r3
 800a180:	429e      	cmp	r6, r3
 800a182:	da09      	bge.n	800a198 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a184:	6823      	ldr	r3, [r4, #0]
 800a186:	1ab2      	subs	r2, r6, r2
 800a188:	1a69      	subs	r1, r5, r1
 800a18a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a18e:	b212      	sxth	r2, r2
 800a190:	463b      	mov	r3, r7
 800a192:	b209      	sxth	r1, r1
 800a194:	4620      	mov	r0, r4
 800a196:	47c0      	blx	r8
 800a198:	69a4      	ldr	r4, [r4, #24]
 800a19a:	e7db      	b.n	800a154 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a19c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a1a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a1a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1a4:	4c6e      	ldr	r4, [pc, #440]	@ (800a360 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a1a6:	b0a1      	sub	sp, #132	@ 0x84
 800a1a8:	6824      	ldr	r4, [r4, #0]
 800a1aa:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a1ac:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a1b0:	9303      	str	r3, [sp, #12]
 800a1b2:	2400      	movs	r4, #0
 800a1b4:	802c      	strh	r4, [r5, #0]
 800a1b6:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a1b8:	802c      	strh	r4, [r5, #0]
 800a1ba:	601c      	str	r4, [r3, #0]
 800a1bc:	4606      	mov	r6, r0
 800a1be:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a1c2:	f7ff ffbd 	bl	800a140 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a1c6:	f1b9 0f03 	cmp.w	r9, #3
 800a1ca:	f340 80c2 	ble.w	800a352 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a1ce:	4631      	mov	r1, r6
 800a1d0:	a80c      	add	r0, sp, #48	@ 0x30
 800a1d2:	f006 fc1f 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a1d6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a1da:	9306      	str	r3, [sp, #24]
 800a1dc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a1e0:	9307      	str	r3, [sp, #28]
 800a1e2:	9b03      	ldr	r3, [sp, #12]
 800a1e4:	f8d3 a000 	ldr.w	sl, [r3]
 800a1e8:	f1ba 0f00 	cmp.w	sl, #0
 800a1ec:	f000 80b4 	beq.w	800a358 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a1f0:	4651      	mov	r1, sl
 800a1f2:	a810      	add	r0, sp, #64	@ 0x40
 800a1f4:	f006 fc0e 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a1f8:	9b01      	ldr	r3, [sp, #4]
 800a1fa:	9a06      	ldr	r2, [sp, #24]
 800a1fc:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a200:	189d      	adds	r5, r3, r2
 800a202:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a206:	9a07      	ldr	r2, [sp, #28]
 800a208:	2002      	movs	r0, #2
 800a20a:	fb91 f1f0 	sdiv	r1, r1, r0
 800a20e:	4419      	add	r1, r3
 800a210:	1a6d      	subs	r5, r5, r1
 800a212:	9b02      	ldr	r3, [sp, #8]
 800a214:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a218:	4413      	add	r3, r2
 800a21a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a21e:	fb92 f2f0 	sdiv	r2, r2, r0
 800a222:	440a      	add	r2, r1
 800a224:	1a9b      	subs	r3, r3, r2
 800a226:	435b      	muls	r3, r3
 800a228:	fb05 3505 	mla	r5, r5, r5, r3
 800a22c:	4f4d      	ldr	r7, [pc, #308]	@ (800a364 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a22e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a230:	ac10      	add	r4, sp, #64	@ 0x40
 800a232:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a234:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a236:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a238:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a23a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a23c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a240:	f1b9 0f0c 	cmp.w	r9, #12
 800a244:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a248:	f04f 0303 	mov.w	r3, #3
 800a24c:	bfc8      	it	gt
 800a24e:	4698      	movgt	r8, r3
 800a250:	f8cd 9000 	str.w	r9, [sp]
 800a254:	f04f 0400 	mov.w	r4, #0
 800a258:	bfdc      	itt	le
 800a25a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a25e:	fb92 f8f3 	sdivle	r8, r2, r3
 800a262:	1c63      	adds	r3, r4, #1
 800a264:	aa10      	add	r2, sp, #64	@ 0x40
 800a266:	f004 0401 	and.w	r4, r4, #1
 800a26a:	9308      	str	r3, [sp, #32]
 800a26c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a270:	9b00      	ldr	r3, [sp, #0]
 800a272:	fb93 f3f8 	sdiv	r3, r3, r8
 800a276:	b29b      	uxth	r3, r3
 800a278:	3404      	adds	r4, #4
 800a27a:	f04f 0b00 	mov.w	fp, #0
 800a27e:	9304      	str	r3, [sp, #16]
 800a280:	9a04      	ldr	r2, [sp, #16]
 800a282:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a286:	fb13 f302 	smulbb	r3, r3, r2
 800a28a:	9a01      	ldr	r2, [sp, #4]
 800a28c:	b29b      	uxth	r3, r3
 800a28e:	1899      	adds	r1, r3, r2
 800a290:	9305      	str	r3, [sp, #20]
 800a292:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a296:	b209      	sxth	r1, r1
 800a298:	4299      	cmp	r1, r3
 800a29a:	db4d      	blt.n	800a338 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a29c:	8932      	ldrh	r2, [r6, #8]
 800a29e:	4413      	add	r3, r2
 800a2a0:	b21b      	sxth	r3, r3
 800a2a2:	4299      	cmp	r1, r3
 800a2a4:	da48      	bge.n	800a338 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2a6:	9b04      	ldr	r3, [sp, #16]
 800a2a8:	6827      	ldr	r7, [r4, #0]
 800a2aa:	fb17 f703 	smulbb	r7, r7, r3
 800a2ae:	9b02      	ldr	r3, [sp, #8]
 800a2b0:	b2bf      	uxth	r7, r7
 800a2b2:	18fa      	adds	r2, r7, r3
 800a2b4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a2b8:	b212      	sxth	r2, r2
 800a2ba:	429a      	cmp	r2, r3
 800a2bc:	db3c      	blt.n	800a338 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2be:	8970      	ldrh	r0, [r6, #10]
 800a2c0:	4403      	add	r3, r0
 800a2c2:	b21b      	sxth	r3, r3
 800a2c4:	429a      	cmp	r2, r3
 800a2c6:	da37      	bge.n	800a338 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2c8:	2300      	movs	r3, #0
 800a2ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a2cc:	4630      	mov	r0, r6
 800a2ce:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a2d0:	f7ff ff36 	bl	800a140 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a2d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a2d6:	b37a      	cbz	r2, 800a338 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2d8:	4552      	cmp	r2, sl
 800a2da:	d02d      	beq.n	800a338 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2dc:	4611      	mov	r1, r2
 800a2de:	a80e      	add	r0, sp, #56	@ 0x38
 800a2e0:	9209      	str	r2, [sp, #36]	@ 0x24
 800a2e2:	f006 fb97 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a2e6:	9a06      	ldr	r2, [sp, #24]
 800a2e8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a2ec:	9b01      	ldr	r3, [sp, #4]
 800a2ee:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a2f2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a2f6:	4413      	add	r3, r2
 800a2f8:	f04f 0e02 	mov.w	lr, #2
 800a2fc:	fb91 f1fe 	sdiv	r1, r1, lr
 800a300:	4401      	add	r1, r0
 800a302:	1a58      	subs	r0, r3, r1
 800a304:	9a07      	ldr	r2, [sp, #28]
 800a306:	9b02      	ldr	r3, [sp, #8]
 800a308:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a30c:	fb9c fcfe 	sdiv	ip, ip, lr
 800a310:	4413      	add	r3, r2
 800a312:	448c      	add	ip, r1
 800a314:	eba3 030c 	sub.w	r3, r3, ip
 800a318:	435b      	muls	r3, r3
 800a31a:	fb00 3300 	mla	r3, r0, r0, r3
 800a31e:	42ab      	cmp	r3, r5
 800a320:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a322:	d208      	bcs.n	800a336 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a324:	9803      	ldr	r0, [sp, #12]
 800a326:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a328:	6001      	str	r1, [r0, #0]
 800a32a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a32c:	9805      	ldr	r0, [sp, #20]
 800a32e:	8008      	strh	r0, [r1, #0]
 800a330:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a332:	461d      	mov	r5, r3
 800a334:	800f      	strh	r7, [r1, #0]
 800a336:	4692      	mov	sl, r2
 800a338:	f10b 0b01 	add.w	fp, fp, #1
 800a33c:	f1bb 0f04 	cmp.w	fp, #4
 800a340:	f104 0408 	add.w	r4, r4, #8
 800a344:	d19c      	bne.n	800a280 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a346:	9b00      	ldr	r3, [sp, #0]
 800a348:	9c08      	ldr	r4, [sp, #32]
 800a34a:	444b      	add	r3, r9
 800a34c:	4544      	cmp	r4, r8
 800a34e:	9300      	str	r3, [sp, #0]
 800a350:	d187      	bne.n	800a262 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a352:	b021      	add	sp, #132	@ 0x84
 800a354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a358:	f04f 35ff 	mov.w	r5, #4294967295
 800a35c:	e766      	b.n	800a22c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a35e:	bf00      	nop
 800a360:	20013ff8 	.word	0x20013ff8
 800a364:	08023de8 	.word	0x08023de8

0800a368 <_ZN8touchgfx4RectaNERKS0_>:
 800a368:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a36c:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a370:	888c      	ldrh	r4, [r1, #4]
 800a372:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a376:	443c      	add	r4, r7
 800a378:	b2a4      	uxth	r4, r4
 800a37a:	fa0f f884 	sxth.w	r8, r4
 800a37e:	45c1      	cmp	r9, r8
 800a380:	da2f      	bge.n	800a3e2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a382:	8882      	ldrh	r2, [r0, #4]
 800a384:	444a      	add	r2, r9
 800a386:	b292      	uxth	r2, r2
 800a388:	fa0f fe82 	sxth.w	lr, r2
 800a38c:	4577      	cmp	r7, lr
 800a38e:	da28      	bge.n	800a3e2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a390:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a394:	88cb      	ldrh	r3, [r1, #6]
 800a396:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a39a:	442b      	add	r3, r5
 800a39c:	b21b      	sxth	r3, r3
 800a39e:	429e      	cmp	r6, r3
 800a3a0:	da1f      	bge.n	800a3e2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a3a2:	88c3      	ldrh	r3, [r0, #6]
 800a3a4:	4433      	add	r3, r6
 800a3a6:	b29b      	uxth	r3, r3
 800a3a8:	fa0f fc83 	sxth.w	ip, r3
 800a3ac:	4565      	cmp	r5, ip
 800a3ae:	da18      	bge.n	800a3e2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a3b0:	454f      	cmp	r7, r9
 800a3b2:	bfb8      	it	lt
 800a3b4:	464f      	movlt	r7, r9
 800a3b6:	42b5      	cmp	r5, r6
 800a3b8:	bfb8      	it	lt
 800a3ba:	4635      	movlt	r5, r6
 800a3bc:	45f0      	cmp	r8, lr
 800a3be:	bfd8      	it	le
 800a3c0:	4622      	movle	r2, r4
 800a3c2:	1bd2      	subs	r2, r2, r7
 800a3c4:	8082      	strh	r2, [r0, #4]
 800a3c6:	884a      	ldrh	r2, [r1, #2]
 800a3c8:	88c9      	ldrh	r1, [r1, #6]
 800a3ca:	8007      	strh	r7, [r0, #0]
 800a3cc:	440a      	add	r2, r1
 800a3ce:	b292      	uxth	r2, r2
 800a3d0:	b211      	sxth	r1, r2
 800a3d2:	458c      	cmp	ip, r1
 800a3d4:	bfa8      	it	ge
 800a3d6:	4613      	movge	r3, r2
 800a3d8:	1b5b      	subs	r3, r3, r5
 800a3da:	80c3      	strh	r3, [r0, #6]
 800a3dc:	8045      	strh	r5, [r0, #2]
 800a3de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3e2:	2300      	movs	r3, #0
 800a3e4:	8003      	strh	r3, [r0, #0]
 800a3e6:	8043      	strh	r3, [r0, #2]
 800a3e8:	8083      	strh	r3, [r0, #4]
 800a3ea:	80c3      	strh	r3, [r0, #6]
 800a3ec:	e7f7      	b.n	800a3de <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a3ee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a3f2:	2b00      	cmp	r3, #0
 800a3f4:	dd06      	ble.n	800a404 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a3f6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a3fa:	2800      	cmp	r0, #0
 800a3fc:	bfcc      	ite	gt
 800a3fe:	2000      	movgt	r0, #0
 800a400:	2001      	movle	r0, #1
 800a402:	4770      	bx	lr
 800a404:	2001      	movs	r0, #1
 800a406:	4770      	bx	lr

0800a408 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a408:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a40c:	2300      	movs	r3, #0
 800a40e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a410:	8003      	strh	r3, [r0, #0]
 800a412:	4604      	mov	r4, r0
 800a414:	8043      	strh	r3, [r0, #2]
 800a416:	8083      	strh	r3, [r0, #4]
 800a418:	80c3      	strh	r3, [r0, #6]
 800a41a:	2d00      	cmp	r5, #0
 800a41c:	d040      	beq.n	800a4a0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a41e:	1d28      	adds	r0, r5, #4
 800a420:	f7ff ffe5 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800a424:	b988      	cbnz	r0, 800a44a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a426:	4620      	mov	r0, r4
 800a428:	f7ff ffe1 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800a42c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a430:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a434:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a438:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a43c:	b138      	cbz	r0, 800a44e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a43e:	8022      	strh	r2, [r4, #0]
 800a440:	8063      	strh	r3, [r4, #2]
 800a442:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a446:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a44a:	69ad      	ldr	r5, [r5, #24]
 800a44c:	e7e5      	b.n	800a41a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a44e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a452:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a456:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a45a:	4290      	cmp	r0, r2
 800a45c:	4607      	mov	r7, r0
 800a45e:	bfa8      	it	ge
 800a460:	4617      	movge	r7, r2
 800a462:	4472      	add	r2, lr
 800a464:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a468:	8027      	strh	r7, [r4, #0]
 800a46a:	4299      	cmp	r1, r3
 800a46c:	460e      	mov	r6, r1
 800a46e:	4440      	add	r0, r8
 800a470:	bfa8      	it	ge
 800a472:	461e      	movge	r6, r3
 800a474:	4471      	add	r1, lr
 800a476:	4463      	add	r3, ip
 800a478:	b200      	sxth	r0, r0
 800a47a:	b212      	sxth	r2, r2
 800a47c:	b209      	sxth	r1, r1
 800a47e:	b21b      	sxth	r3, r3
 800a480:	4290      	cmp	r0, r2
 800a482:	bfac      	ite	ge
 800a484:	ebc7 0200 	rsbge	r2, r7, r0
 800a488:	ebc7 0202 	rsblt	r2, r7, r2
 800a48c:	4299      	cmp	r1, r3
 800a48e:	bfac      	ite	ge
 800a490:	ebc6 0301 	rsbge	r3, r6, r1
 800a494:	ebc6 0303 	rsblt	r3, r6, r3
 800a498:	8066      	strh	r6, [r4, #2]
 800a49a:	80a2      	strh	r2, [r4, #4]
 800a49c:	80e3      	strh	r3, [r4, #6]
 800a49e:	e7d4      	b.n	800a44a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a4a0:	4620      	mov	r0, r4
 800a4a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a4a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a4a6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a4aa:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a4ae:	b383      	cbz	r3, 800a512 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a4b0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a4b2:	b374      	cbz	r4, 800a512 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a4b4:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a4b8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a4bc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a4c0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a4c4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a4c8:	b303      	cbz	r3, 800a50c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a4ca:	4668      	mov	r0, sp
 800a4cc:	1d21      	adds	r1, r4, #4
 800a4ce:	f8ad 5000 	strh.w	r5, [sp]
 800a4d2:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a4d6:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a4da:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a4de:	f7ff ff43 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 800a4e2:	4668      	mov	r0, sp
 800a4e4:	f7ff ff83 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4e8:	b980      	cbnz	r0, 800a50c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a4ea:	f8bd 3000 	ldrh.w	r3, [sp]
 800a4ee:	88a2      	ldrh	r2, [r4, #4]
 800a4f0:	1a9b      	subs	r3, r3, r2
 800a4f2:	f8ad 3000 	strh.w	r3, [sp]
 800a4f6:	88e2      	ldrh	r2, [r4, #6]
 800a4f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a4fc:	1a9b      	subs	r3, r3, r2
 800a4fe:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a502:	6823      	ldr	r3, [r4, #0]
 800a504:	4669      	mov	r1, sp
 800a506:	689b      	ldr	r3, [r3, #8]
 800a508:	4620      	mov	r0, r4
 800a50a:	4798      	blx	r3
 800a50c:	69a4      	ldr	r4, [r4, #24]
 800a50e:	2c00      	cmp	r4, #0
 800a510:	d1d8      	bne.n	800a4c4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a512:	b002      	add	sp, #8
 800a514:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a518 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a518:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a51a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a51e:	460d      	mov	r5, r1
 800a520:	4616      	mov	r6, r2
 800a522:	b323      	cbz	r3, 800a56e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a524:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a526:	b314      	cbz	r4, 800a56e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a528:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a52c:	b1eb      	cbz	r3, 800a56a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a52e:	6828      	ldr	r0, [r5, #0]
 800a530:	6869      	ldr	r1, [r5, #4]
 800a532:	466b      	mov	r3, sp
 800a534:	c303      	stmia	r3!, {r0, r1}
 800a536:	4668      	mov	r0, sp
 800a538:	1d21      	adds	r1, r4, #4
 800a53a:	f7ff ff15 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 800a53e:	4668      	mov	r0, sp
 800a540:	f7ff ff55 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800a544:	b988      	cbnz	r0, 800a56a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a546:	f8bd 3000 	ldrh.w	r3, [sp]
 800a54a:	88a2      	ldrh	r2, [r4, #4]
 800a54c:	1a9b      	subs	r3, r3, r2
 800a54e:	f8ad 3000 	strh.w	r3, [sp]
 800a552:	88e2      	ldrh	r2, [r4, #6]
 800a554:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a558:	1a9b      	subs	r3, r3, r2
 800a55a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a55e:	6823      	ldr	r3, [r4, #0]
 800a560:	4632      	mov	r2, r6
 800a562:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a564:	4669      	mov	r1, sp
 800a566:	4620      	mov	r0, r4
 800a568:	4798      	blx	r3
 800a56a:	69a4      	ldr	r4, [r4, #24]
 800a56c:	e7db      	b.n	800a526 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a56e:	b002      	add	sp, #8
 800a570:	bd70      	pop	{r4, r5, r6, pc}

0800a572 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a572:	b513      	push	{r0, r1, r4, lr}
 800a574:	6803      	ldr	r3, [r0, #0]
 800a576:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800a57a:	2300      	movs	r3, #0
 800a57c:	e9cd 3300 	strd	r3, r3, [sp]
 800a580:	466b      	mov	r3, sp
 800a582:	47a0      	blx	r4
 800a584:	b002      	add	sp, #8
 800a586:	bd10      	pop	{r4, pc}

0800a588 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a588:	2301      	movs	r3, #1
 800a58a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a58e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a592:	4770      	bx	lr

0800a594 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a594:	2301      	movs	r3, #1
 800a596:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a59a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a59e:	4770      	bx	lr

0800a5a0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a5a0:	6843      	ldr	r3, [r0, #4]
 800a5a2:	2201      	movs	r2, #1
 800a5a4:	725a      	strb	r2, [r3, #9]
 800a5a6:	6840      	ldr	r0, [r0, #4]
 800a5a8:	6803      	ldr	r3, [r0, #0]
 800a5aa:	691b      	ldr	r3, [r3, #16]
 800a5ac:	4718      	bx	r3

0800a5ae <_ZN8touchgfx3HAL8flushDMAEv>:
 800a5ae:	6840      	ldr	r0, [r0, #4]
 800a5b0:	6803      	ldr	r3, [r0, #0]
 800a5b2:	689b      	ldr	r3, [r3, #8]
 800a5b4:	4718      	bx	r3

0800a5b6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a5b6:	b530      	push	{r4, r5, lr}
 800a5b8:	b08b      	sub	sp, #44	@ 0x2c
 800a5ba:	6804      	ldr	r4, [r0, #0]
 800a5bc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800a5c0:	9509      	str	r5, [sp, #36]	@ 0x24
 800a5c2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800a5c6:	9508      	str	r5, [sp, #32]
 800a5c8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800a5cc:	9507      	str	r5, [sp, #28]
 800a5ce:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800a5d2:	9506      	str	r5, [sp, #24]
 800a5d4:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800a5d8:	9505      	str	r5, [sp, #20]
 800a5da:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800a5de:	9504      	str	r5, [sp, #16]
 800a5e0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800a5e4:	9503      	str	r5, [sp, #12]
 800a5e6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800a5ea:	9502      	str	r5, [sp, #8]
 800a5ec:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800a5f0:	e9cd 3500 	strd	r3, r5, [sp]
 800a5f4:	4613      	mov	r3, r2
 800a5f6:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800a5f8:	2200      	movs	r2, #0
 800a5fa:	47a0      	blx	r4
 800a5fc:	b00b      	add	sp, #44	@ 0x2c
 800a5fe:	bd30      	pop	{r4, r5, pc}

0800a600 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a600:	4b04      	ldr	r3, [pc, #16]	@ (800a614 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a602:	781b      	ldrb	r3, [r3, #0]
 800a604:	b123      	cbz	r3, 800a610 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a606:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800a60a:	f080 0001 	eor.w	r0, r0, #1
 800a60e:	4770      	bx	lr
 800a610:	2001      	movs	r0, #1
 800a612:	4770      	bx	lr
 800a614:	20013ff4 	.word	0x20013ff4

0800a618 <_ZN8touchgfx3HAL8endFrameEv>:
 800a618:	b510      	push	{r4, lr}
 800a61a:	4604      	mov	r4, r0
 800a61c:	6840      	ldr	r0, [r0, #4]
 800a61e:	6803      	ldr	r3, [r0, #0]
 800a620:	689b      	ldr	r3, [r3, #8]
 800a622:	4798      	blx	r3
 800a624:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800a628:	b113      	cbz	r3, 800a630 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a62a:	2301      	movs	r3, #1
 800a62c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a630:	bd10      	pop	{r4, pc}

0800a632 <_ZN8touchgfx3HAL10initializeEv>:
 800a632:	b510      	push	{r4, lr}
 800a634:	4604      	mov	r4, r0
 800a636:	f7f6 fa87 	bl	8000b48 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a63a:	f7f6 f98f 	bl	800095c <_ZN8touchgfx4GPIO4initEv>
 800a63e:	6860      	ldr	r0, [r4, #4]
 800a640:	6803      	ldr	r3, [r0, #0]
 800a642:	68db      	ldr	r3, [r3, #12]
 800a644:	4798      	blx	r3
 800a646:	68e0      	ldr	r0, [r4, #12]
 800a648:	6803      	ldr	r3, [r0, #0]
 800a64a:	689b      	ldr	r3, [r3, #8]
 800a64c:	4798      	blx	r3
 800a64e:	6823      	ldr	r3, [r4, #0]
 800a650:	4620      	mov	r0, r4
 800a652:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a654:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a658:	4718      	bx	r3
	...

0800a65c <_ZN8touchgfx3HAL4tickEv>:
 800a65c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a65e:	6803      	ldr	r3, [r0, #0]
 800a660:	4d62      	ldr	r5, [pc, #392]	@ (800a7ec <_ZN8touchgfx3HAL4tickEv+0x190>)
 800a662:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a666:	4604      	mov	r4, r0
 800a668:	4798      	blx	r3
 800a66a:	2800      	cmp	r0, #0
 800a66c:	f000 809e 	beq.w	800a7ac <_ZN8touchgfx3HAL4tickEv+0x150>
 800a670:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a674:	2b02      	cmp	r3, #2
 800a676:	d002      	beq.n	800a67e <_ZN8touchgfx3HAL4tickEv+0x22>
 800a678:	2001      	movs	r0, #1
 800a67a:	f7f6 f8ed 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a67e:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800a682:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a686:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800a68a:	2600      	movs	r6, #0
 800a68c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800a690:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800a694:	b133      	cbz	r3, 800a6a4 <_ZN8touchgfx3HAL4tickEv+0x48>
 800a696:	6823      	ldr	r3, [r4, #0]
 800a698:	4620      	mov	r0, r4
 800a69a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800a69e:	4798      	blx	r3
 800a6a0:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800a6a4:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800a6a8:	6862      	ldr	r2, [r4, #4]
 800a6aa:	f083 0301 	eor.w	r3, r3, #1
 800a6ae:	7253      	strb	r3, [r2, #9]
 800a6b0:	2601      	movs	r6, #1
 800a6b2:	702e      	strb	r6, [r5, #0]
 800a6b4:	f004 ff60 	bl	800f578 <_ZN8touchgfx11Application11getInstanceEv>
 800a6b8:	6803      	ldr	r3, [r0, #0]
 800a6ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a6bc:	4798      	blx	r3
 800a6be:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a6c2:	b90b      	cbnz	r3, 800a6c8 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a6c4:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800a6c8:	f004 ff56 	bl	800f578 <_ZN8touchgfx11Application11getInstanceEv>
 800a6cc:	6803      	ldr	r3, [r0, #0]
 800a6ce:	695b      	ldr	r3, [r3, #20]
 800a6d0:	4798      	blx	r3
 800a6d2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a6d4:	6803      	ldr	r3, [r0, #0]
 800a6d6:	691b      	ldr	r3, [r3, #16]
 800a6d8:	4798      	blx	r3
 800a6da:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a6de:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800a6e2:	3b01      	subs	r3, #1
 800a6e4:	b2db      	uxtb	r3, r3
 800a6e6:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a6ea:	b10a      	cbz	r2, 800a6f0 <_ZN8touchgfx3HAL4tickEv+0x94>
 800a6ec:	2b00      	cmp	r3, #0
 800a6ee:	d1eb      	bne.n	800a6c8 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a6f0:	4a3f      	ldr	r2, [pc, #252]	@ (800a7f0 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800a6f2:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800a6f6:	7813      	ldrb	r3, [r2, #0]
 800a6f8:	3301      	adds	r3, #1
 800a6fa:	b25b      	sxtb	r3, r3
 800a6fc:	4299      	cmp	r1, r3
 800a6fe:	7013      	strb	r3, [r2, #0]
 800a700:	dc10      	bgt.n	800a724 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a702:	68e0      	ldr	r0, [r4, #12]
 800a704:	2300      	movs	r3, #0
 800a706:	7013      	strb	r3, [r2, #0]
 800a708:	6803      	ldr	r3, [r0, #0]
 800a70a:	aa03      	add	r2, sp, #12
 800a70c:	68db      	ldr	r3, [r3, #12]
 800a70e:	a902      	add	r1, sp, #8
 800a710:	4798      	blx	r3
 800a712:	6823      	ldr	r3, [r4, #0]
 800a714:	2800      	cmp	r0, #0
 800a716:	d059      	beq.n	800a7cc <_ZN8touchgfx3HAL4tickEv+0x170>
 800a718:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a71c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a720:	4620      	mov	r0, r4
 800a722:	4798      	blx	r3
 800a724:	6960      	ldr	r0, [r4, #20]
 800a726:	2300      	movs	r3, #0
 800a728:	f88d 3007 	strb.w	r3, [sp, #7]
 800a72c:	b158      	cbz	r0, 800a746 <_ZN8touchgfx3HAL4tickEv+0xea>
 800a72e:	6803      	ldr	r3, [r0, #0]
 800a730:	f10d 0107 	add.w	r1, sp, #7
 800a734:	68db      	ldr	r3, [r3, #12]
 800a736:	4798      	blx	r3
 800a738:	b128      	cbz	r0, 800a746 <_ZN8touchgfx3HAL4tickEv+0xea>
 800a73a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a73c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a740:	6803      	ldr	r3, [r0, #0]
 800a742:	68db      	ldr	r3, [r3, #12]
 800a744:	4798      	blx	r3
 800a746:	f104 001c 	add.w	r0, r4, #28
 800a74a:	f016 fba9 	bl	8020ea0 <_ZN8touchgfx8Gestures4tickEv>
 800a74e:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800a752:	b30b      	cbz	r3, 800a798 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a754:	6920      	ldr	r0, [r4, #16]
 800a756:	6803      	ldr	r3, [r0, #0]
 800a758:	691b      	ldr	r3, [r3, #16]
 800a75a:	4798      	blx	r3
 800a75c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a75e:	4606      	mov	r6, r0
 800a760:	b903      	cbnz	r3, 800a764 <_ZN8touchgfx3HAL4tickEv+0x108>
 800a762:	6760      	str	r0, [r4, #116]	@ 0x74
 800a764:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a766:	4a23      	ldr	r2, [pc, #140]	@ (800a7f4 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800a768:	1af3      	subs	r3, r6, r3
 800a76a:	4293      	cmp	r3, r2
 800a76c:	d914      	bls.n	800a798 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a76e:	6920      	ldr	r0, [r4, #16]
 800a770:	6803      	ldr	r3, [r0, #0]
 800a772:	699b      	ldr	r3, [r3, #24]
 800a774:	4798      	blx	r3
 800a776:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a778:	2264      	movs	r2, #100	@ 0x64
 800a77a:	1af3      	subs	r3, r6, r3
 800a77c:	fbb3 f3f2 	udiv	r3, r3, r2
 800a780:	fbb0 f0f3 	udiv	r0, r0, r3
 800a784:	2800      	cmp	r0, #0
 800a786:	dc26      	bgt.n	800a7d6 <_ZN8touchgfx3HAL4tickEv+0x17a>
 800a788:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800a78c:	6920      	ldr	r0, [r4, #16]
 800a78e:	6803      	ldr	r3, [r0, #0]
 800a790:	2100      	movs	r1, #0
 800a792:	69db      	ldr	r3, [r3, #28]
 800a794:	4798      	blx	r3
 800a796:	6766      	str	r6, [r4, #116]	@ 0x74
 800a798:	6823      	ldr	r3, [r4, #0]
 800a79a:	4620      	mov	r0, r4
 800a79c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800a7a0:	4798      	blx	r3
 800a7a2:	f004 fee9 	bl	800f578 <_ZN8touchgfx11Application11getInstanceEv>
 800a7a6:	6803      	ldr	r3, [r0, #0]
 800a7a8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a7aa:	4798      	blx	r3
 800a7ac:	6823      	ldr	r3, [r4, #0]
 800a7ae:	4620      	mov	r0, r4
 800a7b0:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800a7b4:	4798      	blx	r3
 800a7b6:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a7ba:	2b02      	cmp	r3, #2
 800a7bc:	d002      	beq.n	800a7c4 <_ZN8touchgfx3HAL4tickEv+0x168>
 800a7be:	2001      	movs	r0, #1
 800a7c0:	f7f6 f874 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a7c4:	2300      	movs	r3, #0
 800a7c6:	702b      	strb	r3, [r5, #0]
 800a7c8:	b004      	add	sp, #16
 800a7ca:	bd70      	pop	{r4, r5, r6, pc}
 800a7cc:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800a7d0:	4620      	mov	r0, r4
 800a7d2:	4798      	blx	r3
 800a7d4:	e7a6      	b.n	800a724 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a7d6:	2863      	cmp	r0, #99	@ 0x63
 800a7d8:	bfcb      	itete	gt
 800a7da:	2300      	movgt	r3, #0
 800a7dc:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800a7e0:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800a7e4:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800a7e8:	e7d0      	b.n	800a78c <_ZN8touchgfx3HAL4tickEv+0x130>
 800a7ea:	bf00      	nop
 800a7ec:	20013ffc 	.word	0x20013ffc
 800a7f0:	20013ffd 	.word	0x20013ffd
 800a7f4:	05f5e100 	.word	0x05f5e100

0800a7f8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a7f8:	b510      	push	{r4, lr}
 800a7fa:	4604      	mov	r4, r0
 800a7fc:	f7f6 f9d4 	bl	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800a800:	6863      	ldr	r3, [r4, #4]
 800a802:	2200      	movs	r2, #0
 800a804:	729a      	strb	r2, [r3, #10]
 800a806:	bd10      	pop	{r4, pc}

0800a808 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a808:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800a80a:	301c      	adds	r0, #28
 800a80c:	f016 bb46 	b.w	8020e9c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a810 <_ZN8touchgfx3HAL5touchEll>:
 800a810:	b530      	push	{r4, r5, lr}
 800a812:	b087      	sub	sp, #28
 800a814:	4604      	mov	r4, r0
 800a816:	a804      	add	r0, sp, #16
 800a818:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a81c:	f004 fc94 	bl	800f148 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a820:	9b04      	ldr	r3, [sp, #16]
 800a822:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a826:	a906      	add	r1, sp, #24
 800a828:	9b05      	ldr	r3, [sp, #20]
 800a82a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a82e:	a803      	add	r0, sp, #12
 800a830:	f004 fcdc 	bl	800f1ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a834:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800a838:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a83c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a840:	f104 001c 	add.w	r0, r4, #28
 800a844:	b189      	cbz	r1, 800a86a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a846:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800a84a:	9300      	str	r3, [sp, #0]
 800a84c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800a850:	4613      	mov	r3, r2
 800a852:	462a      	mov	r2, r5
 800a854:	f016 fb32 	bl	8020ebc <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a858:	b128      	cbz	r0, 800a866 <_ZN8touchgfx3HAL5touchEll+0x56>
 800a85a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a85e:	6623      	str	r3, [r4, #96]	@ 0x60
 800a860:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a864:	6663      	str	r3, [r4, #100]	@ 0x64
 800a866:	b007      	add	sp, #28
 800a868:	bd30      	pop	{r4, r5, pc}
 800a86a:	f016 fb67 	bl	8020f3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a86e:	2301      	movs	r3, #1
 800a870:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a874:	e7f1      	b.n	800a85a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a876 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a876:	b510      	push	{r4, lr}
 800a878:	2b00      	cmp	r3, #0
 800a87a:	d046      	beq.n	800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a87c:	ea81 0002 	eor.w	r0, r1, r2
 800a880:	07c4      	lsls	r4, r0, #31
 800a882:	d508      	bpl.n	800a896 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a884:	440b      	add	r3, r1
 800a886:	3a01      	subs	r2, #1
 800a888:	428b      	cmp	r3, r1
 800a88a:	d93e      	bls.n	800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a88c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a890:	f801 0b01 	strb.w	r0, [r1], #1
 800a894:	e7f8      	b.n	800a888 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a896:	07d0      	lsls	r0, r2, #31
 800a898:	bf42      	ittt	mi
 800a89a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a89e:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a8a2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a8a6:	2b01      	cmp	r3, #1
 800a8a8:	d911      	bls.n	800a8ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a8aa:	ea81 0402 	eor.w	r4, r1, r2
 800a8ae:	07a4      	lsls	r4, r4, #30
 800a8b0:	4610      	mov	r0, r2
 800a8b2:	d022      	beq.n	800a8fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a8b4:	f023 0401 	bic.w	r4, r3, #1
 800a8b8:	440c      	add	r4, r1
 800a8ba:	428c      	cmp	r4, r1
 800a8bc:	4602      	mov	r2, r0
 800a8be:	d904      	bls.n	800a8ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a8c0:	8812      	ldrh	r2, [r2, #0]
 800a8c2:	f821 2b02 	strh.w	r2, [r1], #2
 800a8c6:	3002      	adds	r0, #2
 800a8c8:	e7f7      	b.n	800a8ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a8ca:	f003 0301 	and.w	r3, r3, #1
 800a8ce:	f023 0003 	bic.w	r0, r3, #3
 800a8d2:	4408      	add	r0, r1
 800a8d4:	4288      	cmp	r0, r1
 800a8d6:	4614      	mov	r4, r2
 800a8d8:	d904      	bls.n	800a8e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a8da:	6824      	ldr	r4, [r4, #0]
 800a8dc:	f841 4b04 	str.w	r4, [r1], #4
 800a8e0:	3204      	adds	r2, #4
 800a8e2:	e7f7      	b.n	800a8d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a8e4:	f003 0303 	and.w	r3, r3, #3
 800a8e8:	440b      	add	r3, r1
 800a8ea:	3a01      	subs	r2, #1
 800a8ec:	428b      	cmp	r3, r1
 800a8ee:	d90c      	bls.n	800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a8f0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a8f4:	f801 0b01 	strb.w	r0, [r1], #1
 800a8f8:	e7f8      	b.n	800a8ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a8fa:	0790      	lsls	r0, r2, #30
 800a8fc:	d0e7      	beq.n	800a8ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a8fe:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a902:	f821 0b02 	strh.w	r0, [r1], #2
 800a906:	3b02      	subs	r3, #2
 800a908:	e7e1      	b.n	800a8ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a90a:	2001      	movs	r0, #1
 800a90c:	bd10      	pop	{r4, pc}

0800a90e <_ZN8touchgfx3HAL7noTouchEv>:
 800a90e:	b510      	push	{r4, lr}
 800a910:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800a914:	4604      	mov	r4, r0
 800a916:	b153      	cbz	r3, 800a92e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a918:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800a91c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800a920:	2101      	movs	r1, #1
 800a922:	301c      	adds	r0, #28
 800a924:	f016 fb0a 	bl	8020f3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a928:	2300      	movs	r3, #0
 800a92a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a92e:	bd10      	pop	{r4, pc}

0800a930 <_ZN8touchgfx8Drawable5setXYEss>:
 800a930:	b570      	push	{r4, r5, r6, lr}
 800a932:	6803      	ldr	r3, [r0, #0]
 800a934:	4604      	mov	r4, r0
 800a936:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a938:	4615      	mov	r5, r2
 800a93a:	4798      	blx	r3
 800a93c:	6823      	ldr	r3, [r4, #0]
 800a93e:	4629      	mov	r1, r5
 800a940:	4620      	mov	r0, r4
 800a942:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a944:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a948:	4718      	bx	r3
	...

0800a94c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a94c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a950:	b085      	sub	sp, #20
 800a952:	ad04      	add	r5, sp, #16
 800a954:	4604      	mov	r4, r0
 800a956:	2000      	movs	r0, #0
 800a958:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a95c:	69a0      	ldr	r0, [r4, #24]
 800a95e:	6806      	ldr	r6, [r0, #0]
 800a960:	9501      	str	r5, [sp, #4]
 800a962:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800a966:	9500      	str	r5, [sp, #0]
 800a968:	6835      	ldr	r5, [r6, #0]
 800a96a:	4699      	mov	r9, r3
 800a96c:	460f      	mov	r7, r1
 800a96e:	4690      	mov	r8, r2
 800a970:	47a8      	blx	r5
 800a972:	4d10      	ldr	r5, [pc, #64]	@ (800a9b4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a974:	4606      	mov	r6, r0
 800a976:	f8a5 9000 	strh.w	r9, [r5]
 800a97a:	f7f8 f893 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a97e:	6803      	ldr	r3, [r0, #0]
 800a980:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a982:	4798      	blx	r3
 800a984:	b128      	cbz	r0, 800a992 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a986:	2801      	cmp	r0, #1
 800a988:	d00b      	beq.n	800a9a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a98a:	4630      	mov	r0, r6
 800a98c:	b005      	add	sp, #20
 800a98e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a992:	882b      	ldrh	r3, [r5, #0]
 800a994:	fb08 7203 	mla	r2, r8, r3, r7
 800a998:	9b03      	ldr	r3, [sp, #12]
 800a99a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a99e:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a9a0:	e7f3      	b.n	800a98a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a9a2:	882a      	ldrh	r2, [r5, #0]
 800a9a4:	9b03      	ldr	r3, [sp, #12]
 800a9a6:	fb08 7202 	mla	r2, r8, r2, r7
 800a9aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a9ae:	1a9a      	subs	r2, r3, r2
 800a9b0:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800a9b2:	e7ea      	b.n	800a98a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a9b4:	20013ff0 	.word	0x20013ff0

0800a9b8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800a9b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a9ba:	4b15      	ldr	r3, [pc, #84]	@ (800aa10 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800a9bc:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800a9c0:	881b      	ldrh	r3, [r3, #0]
 800a9c2:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800a9c4:	fb93 f4f4 	sdiv	r4, r3, r4
 800a9c8:	460f      	mov	r7, r1
 800a9ca:	4606      	mov	r6, r0
 800a9cc:	f7f8 f86a 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a9d0:	6803      	ldr	r3, [r0, #0]
 800a9d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a9d4:	4798      	blx	r3
 800a9d6:	2801      	cmp	r0, #1
 800a9d8:	d00b      	beq.n	800a9f2 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800a9da:	d303      	bcc.n	800a9e4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800a9dc:	2802      	cmp	r0, #2
 800a9de:	d010      	beq.n	800aa02 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800a9e0:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800a9e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a9e4:	4b0b      	ldr	r3, [pc, #44]	@ (800aa14 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a9e6:	8819      	ldrh	r1, [r3, #0]
 800a9e8:	437c      	muls	r4, r7
 800a9ea:	434c      	muls	r4, r1
 800a9ec:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800a9f0:	e7f6      	b.n	800a9e0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a9f2:	4b08      	ldr	r3, [pc, #32]	@ (800aa14 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a9f4:	8819      	ldrh	r1, [r3, #0]
 800a9f6:	437c      	muls	r4, r7
 800a9f8:	434c      	muls	r4, r1
 800a9fa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800a9fe:	1b2d      	subs	r5, r5, r4
 800aa00:	e7ee      	b.n	800a9e0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800aa02:	4b04      	ldr	r3, [pc, #16]	@ (800aa14 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800aa04:	8819      	ldrh	r1, [r3, #0]
 800aa06:	437c      	muls	r4, r7
 800aa08:	434c      	muls	r4, r1
 800aa0a:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800aa0e:	e7e7      	b.n	800a9e0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800aa10:	20013ff2 	.word	0x20013ff2
 800aa14:	20013ff0 	.word	0x20013ff0

0800aa18 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800aa18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa1a:	b08b      	sub	sp, #44	@ 0x2c
 800aa1c:	4617      	mov	r7, r2
 800aa1e:	4604      	mov	r4, r0
 800aa20:	460e      	mov	r6, r1
 800aa22:	461d      	mov	r5, r3
 800aa24:	f7f8 f83e 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800aa28:	6803      	ldr	r3, [r0, #0]
 800aa2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa2c:	4798      	blx	r3
 800aa2e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800aa32:	9007      	str	r0, [sp, #28]
 800aa34:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800aa38:	4b0d      	ldr	r3, [pc, #52]	@ (800aa70 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800aa3a:	6822      	ldr	r2, [r4, #0]
 800aa3c:	881b      	ldrh	r3, [r3, #0]
 800aa3e:	9306      	str	r3, [sp, #24]
 800aa40:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800aa44:	9305      	str	r3, [sp, #20]
 800aa46:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800aa4a:	9304      	str	r3, [sp, #16]
 800aa4c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aa50:	9303      	str	r3, [sp, #12]
 800aa52:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800aa56:	9302      	str	r3, [sp, #8]
 800aa58:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800aa5c:	e9cd 5300 	strd	r5, r3, [sp]
 800aa60:	4631      	mov	r1, r6
 800aa62:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800aa64:	463b      	mov	r3, r7
 800aa66:	2200      	movs	r2, #0
 800aa68:	4620      	mov	r0, r4
 800aa6a:	47a8      	blx	r5
 800aa6c:	b00b      	add	sp, #44	@ 0x2c
 800aa6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa70:	20013ff0 	.word	0x20013ff0

0800aa74 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800aa74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa78:	4698      	mov	r8, r3
 800aa7a:	6803      	ldr	r3, [r0, #0]
 800aa7c:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800aa7e:	4b15      	ldr	r3, [pc, #84]	@ (800aad4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800aa80:	b08b      	sub	sp, #44	@ 0x2c
 800aa82:	4617      	mov	r7, r2
 800aa84:	f8b3 9000 	ldrh.w	r9, [r3]
 800aa88:	460e      	mov	r6, r1
 800aa8a:	4604      	mov	r4, r0
 800aa8c:	f7f8 f80a 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800aa90:	6803      	ldr	r3, [r0, #0]
 800aa92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa94:	4798      	blx	r3
 800aa96:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800aa9a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800aa9e:	2302      	movs	r3, #2
 800aaa0:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800aaa4:	2301      	movs	r3, #1
 800aaa6:	9305      	str	r3, [sp, #20]
 800aaa8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800aaac:	9304      	str	r3, [sp, #16]
 800aaae:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800aab2:	9303      	str	r3, [sp, #12]
 800aab4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800aab8:	9302      	str	r3, [sp, #8]
 800aaba:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aabe:	2200      	movs	r2, #0
 800aac0:	e9cd 8300 	strd	r8, r3, [sp]
 800aac4:	4631      	mov	r1, r6
 800aac6:	463b      	mov	r3, r7
 800aac8:	4620      	mov	r0, r4
 800aaca:	47a8      	blx	r5
 800aacc:	b00b      	add	sp, #44	@ 0x2c
 800aace:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aad2:	bf00      	nop
 800aad4:	20013ff0 	.word	0x20013ff0

0800aad8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800aad8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aadc:	4698      	mov	r8, r3
 800aade:	6803      	ldr	r3, [r0, #0]
 800aae0:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800aae2:	4b11      	ldr	r3, [pc, #68]	@ (800ab28 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800aae4:	b087      	sub	sp, #28
 800aae6:	f8b3 9000 	ldrh.w	r9, [r3]
 800aaea:	460e      	mov	r6, r1
 800aaec:	4617      	mov	r7, r2
 800aaee:	4604      	mov	r4, r0
 800aaf0:	f7f7 ffd8 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800aaf4:	6803      	ldr	r3, [r0, #0]
 800aaf6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aaf8:	4798      	blx	r3
 800aafa:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800aafe:	f8cd 900c 	str.w	r9, [sp, #12]
 800ab02:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ab06:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800ab0a:	9302      	str	r3, [sp, #8]
 800ab0c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800ab10:	9301      	str	r3, [sp, #4]
 800ab12:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800ab16:	9300      	str	r3, [sp, #0]
 800ab18:	463a      	mov	r2, r7
 800ab1a:	4643      	mov	r3, r8
 800ab1c:	4631      	mov	r1, r6
 800ab1e:	4620      	mov	r0, r4
 800ab20:	47a8      	blx	r5
 800ab22:	b007      	add	sp, #28
 800ab24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab28:	20013ff0 	.word	0x20013ff0

0800ab2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ab2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab30:	4604      	mov	r4, r0
 800ab32:	b08f      	sub	sp, #60	@ 0x3c
 800ab34:	4610      	mov	r0, r2
 800ab36:	460d      	mov	r5, r1
 800ab38:	4691      	mov	r9, r2
 800ab3a:	461e      	mov	r6, r3
 800ab3c:	f007 fe9e 	bl	801287c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ab40:	2800      	cmp	r0, #0
 800ab42:	f000 809d 	beq.w	800ac80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ab46:	6823      	ldr	r3, [r4, #0]
 800ab48:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800ace4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ab4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ab4e:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800ace8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ab52:	4f61      	ldr	r7, [pc, #388]	@ (800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab54:	4620      	mov	r0, r4
 800ab56:	4798      	blx	r3
 800ab58:	6823      	ldr	r3, [r4, #0]
 800ab5a:	4620      	mov	r0, r4
 800ab5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ab5e:	4798      	blx	r3
 800ab60:	f8bb 3000 	ldrh.w	r3, [fp]
 800ab64:	9301      	str	r3, [sp, #4]
 800ab66:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800ab6a:	f8ba 3000 	ldrh.w	r3, [sl]
 800ab6e:	9302      	str	r3, [sp, #8]
 800ab70:	883b      	ldrh	r3, [r7, #0]
 800ab72:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ab76:	9303      	str	r3, [sp, #12]
 800ab78:	4b58      	ldr	r3, [pc, #352]	@ (800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ab7a:	9305      	str	r3, [sp, #20]
 800ab7c:	881a      	ldrh	r2, [r3, #0]
 800ab7e:	9204      	str	r2, [sp, #16]
 800ab80:	4640      	mov	r0, r8
 800ab82:	f007 ff0f 	bl	80129a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ab86:	8038      	strh	r0, [r7, #0]
 800ab88:	4640      	mov	r0, r8
 800ab8a:	f007 ff3f 	bl	8012a0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ab8e:	9b05      	ldr	r3, [sp, #20]
 800ab90:	b280      	uxth	r0, r0
 800ab92:	8018      	strh	r0, [r3, #0]
 800ab94:	4b52      	ldr	r3, [pc, #328]	@ (800ace0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ab96:	781b      	ldrb	r3, [r3, #0]
 800ab98:	2b00      	cmp	r3, #0
 800ab9a:	d174      	bne.n	800ac86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ab9c:	883b      	ldrh	r3, [r7, #0]
 800ab9e:	f8ab 3000 	strh.w	r3, [fp]
 800aba2:	f8aa 0000 	strh.w	r0, [sl]
 800aba6:	4648      	mov	r0, r9
 800aba8:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800abac:	f007 fe66 	bl	801287c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800abb0:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800abb4:	2200      	movs	r2, #0
 800abb6:	4611      	mov	r1, r2
 800abb8:	4628      	mov	r0, r5
 800abba:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800abbe:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800abc2:	f7ff feb5 	bl	800a930 <_ZN8touchgfx8Drawable5setXYEss>
 800abc6:	2301      	movs	r3, #1
 800abc8:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800abcc:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800abd0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800abd4:	2b00      	cmp	r3, #0
 800abd6:	dd5c      	ble.n	800ac92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800abd8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800abdc:	2b00      	cmp	r3, #0
 800abde:	dd58      	ble.n	800ac92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800abe0:	462a      	mov	r2, r5
 800abe2:	ab0a      	add	r3, sp, #40	@ 0x28
 800abe4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800abe8:	6851      	ldr	r1, [r2, #4]
 800abea:	c303      	stmia	r3!, {r0, r1}
 800abec:	4631      	mov	r1, r6
 800abee:	a80a      	add	r0, sp, #40	@ 0x28
 800abf0:	f7ff fbba 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 800abf4:	4b38      	ldr	r3, [pc, #224]	@ (800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800abf6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800abfa:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800abfe:	2100      	movs	r1, #0
 800ac00:	aa0a      	add	r2, sp, #40	@ 0x28
 800ac02:	4b36      	ldr	r3, [pc, #216]	@ (800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ac04:	910c      	str	r1, [sp, #48]	@ 0x30
 800ac06:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ac0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ac0e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ac12:	ab08      	add	r3, sp, #32
 800ac14:	e883 0003 	stmia.w	r3, {r0, r1}
 800ac18:	4618      	mov	r0, r3
 800ac1a:	a90c      	add	r1, sp, #48	@ 0x30
 800ac1c:	f7ff fba4 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 800ac20:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800ac22:	2b00      	cmp	r3, #0
 800ac24:	d13c      	bne.n	800aca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ac26:	2000      	movs	r0, #0
 800ac28:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800ac2c:	2600      	movs	r6, #0
 800ac2e:	682a      	ldr	r2, [r5, #0]
 800ac30:	696b      	ldr	r3, [r5, #20]
 800ac32:	616e      	str	r6, [r5, #20]
 800ac34:	9305      	str	r3, [sp, #20]
 800ac36:	6892      	ldr	r2, [r2, #8]
 800ac38:	a908      	add	r1, sp, #32
 800ac3a:	4628      	mov	r0, r5
 800ac3c:	4790      	blx	r2
 800ac3e:	9b05      	ldr	r3, [sp, #20]
 800ac40:	616b      	str	r3, [r5, #20]
 800ac42:	4652      	mov	r2, sl
 800ac44:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800ac48:	4649      	mov	r1, r9
 800ac4a:	4628      	mov	r0, r5
 800ac4c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800ac50:	f7ff fe6e 	bl	800a930 <_ZN8touchgfx8Drawable5setXYEss>
 800ac54:	4b23      	ldr	r3, [pc, #140]	@ (800ace4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ac56:	9a01      	ldr	r2, [sp, #4]
 800ac58:	801a      	strh	r2, [r3, #0]
 800ac5a:	4b23      	ldr	r3, [pc, #140]	@ (800ace8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ac5c:	9a02      	ldr	r2, [sp, #8]
 800ac5e:	801a      	strh	r2, [r3, #0]
 800ac60:	4b1d      	ldr	r3, [pc, #116]	@ (800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ac62:	9a03      	ldr	r2, [sp, #12]
 800ac64:	801a      	strh	r2, [r3, #0]
 800ac66:	4b1d      	ldr	r3, [pc, #116]	@ (800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ac68:	9a04      	ldr	r2, [sp, #16]
 800ac6a:	801a      	strh	r2, [r3, #0]
 800ac6c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800ac70:	6823      	ldr	r3, [r4, #0]
 800ac72:	4620      	mov	r0, r4
 800ac74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac76:	4798      	blx	r3
 800ac78:	6823      	ldr	r3, [r4, #0]
 800ac7a:	4620      	mov	r0, r4
 800ac7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ac7e:	4798      	blx	r3
 800ac80:	b00f      	add	sp, #60	@ 0x3c
 800ac82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac86:	883b      	ldrh	r3, [r7, #0]
 800ac88:	f8ab 0000 	strh.w	r0, [fp]
 800ac8c:	f8aa 3000 	strh.w	r3, [sl]
 800ac90:	e789      	b.n	800aba6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ac92:	462a      	mov	r2, r5
 800ac94:	ab0a      	add	r3, sp, #40	@ 0x28
 800ac96:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ac9a:	6851      	ldr	r1, [r2, #4]
 800ac9c:	c303      	stmia	r3!, {r0, r1}
 800ac9e:	e7a9      	b.n	800abf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800aca0:	a807      	add	r0, sp, #28
 800aca2:	f007 fff5 	bl	8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800aca6:	4606      	mov	r6, r0
 800aca8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800acaa:	6803      	ldr	r3, [r0, #0]
 800acac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800acae:	4798      	blx	r3
 800acb0:	4286      	cmp	r6, r0
 800acb2:	d1b8      	bne.n	800ac26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800acb4:	f7f7 fef6 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800acb8:	6803      	ldr	r3, [r0, #0]
 800acba:	4606      	mov	r6, r0
 800acbc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800acbe:	9305      	str	r3, [sp, #20]
 800acc0:	a807      	add	r0, sp, #28
 800acc2:	f007 ffe5 	bl	8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800acc6:	9b05      	ldr	r3, [sp, #20]
 800acc8:	4601      	mov	r1, r0
 800acca:	4630      	mov	r0, r6
 800accc:	4798      	blx	r3
 800acce:	f080 0001 	eor.w	r0, r0, #1
 800acd2:	b2c0      	uxtb	r0, r0
 800acd4:	e7a8      	b.n	800ac28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800acd6:	bf00      	nop
 800acd8:	20013fea 	.word	0x20013fea
 800acdc:	20013fec 	.word	0x20013fec
 800ace0:	20013fee 	.word	0x20013fee
 800ace4:	20013ff0 	.word	0x20013ff0
 800ace8:	20013ff2 	.word	0x20013ff2

0800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800acec:	b510      	push	{r4, lr}
 800acee:	4b07      	ldr	r3, [pc, #28]	@ (800ad0c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800acf0:	781b      	ldrb	r3, [r3, #0]
 800acf2:	4604      	mov	r4, r0
 800acf4:	b13b      	cbz	r3, 800ad06 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800acf6:	6803      	ldr	r3, [r0, #0]
 800acf8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800acfa:	4798      	blx	r3
 800acfc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800acfe:	4283      	cmp	r3, r0
 800ad00:	d101      	bne.n	800ad06 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ad02:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800ad04:	bd10      	pop	{r4, pc}
 800ad06:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800ad08:	e7fc      	b.n	800ad04 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ad0a:	bf00      	nop
 800ad0c:	20013ff4 	.word	0x20013ff4

0800ad10 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ad10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad14:	b08a      	sub	sp, #40	@ 0x28
 800ad16:	461d      	mov	r5, r3
 800ad18:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800ad1c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ad20:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ad24:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad28:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ad2c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ad30:	2400      	movs	r4, #0
 800ad32:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ad36:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800ad3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ad3e:	4690      	mov	r8, r2
 800ad40:	4607      	mov	r7, r0
 800ad42:	9404      	str	r4, [sp, #16]
 800ad44:	f88d 4020 	strb.w	r4, [sp, #32]
 800ad48:	f7ff ffd0 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad4c:	fb06 8505 	mla	r5, r6, r5, r8
 800ad50:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ad54:	6878      	ldr	r0, [r7, #4]
 800ad56:	9505      	str	r5, [sp, #20]
 800ad58:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ad5c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ad60:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800ad64:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ad68:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ad6c:	6803      	ldr	r3, [r0, #0]
 800ad6e:	a901      	add	r1, sp, #4
 800ad70:	685b      	ldr	r3, [r3, #4]
 800ad72:	4798      	blx	r3
 800ad74:	b00a      	add	sp, #40	@ 0x28
 800ad76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ad7a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800ad7a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad7e:	b08b      	sub	sp, #44	@ 0x2c
 800ad80:	2400      	movs	r4, #0
 800ad82:	461d      	mov	r5, r3
 800ad84:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800ad88:	4688      	mov	r8, r1
 800ad8a:	4691      	mov	r9, r2
 800ad8c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800ad90:	9404      	str	r4, [sp, #16]
 800ad92:	4607      	mov	r7, r0
 800ad94:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ad98:	f7ff ffa8 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad9c:	fb06 9505 	mla	r5, r6, r5, r9
 800ada0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ada4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ada8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800adac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800adb0:	6878      	ldr	r0, [r7, #4]
 800adb2:	9505      	str	r5, [sp, #20]
 800adb4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800adb8:	f8ad 401c 	strh.w	r4, [sp, #28]
 800adbc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800adc0:	f8cd 8010 	str.w	r8, [sp, #16]
 800adc4:	f8ad 4020 	strh.w	r4, [sp, #32]
 800adc8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800adcc:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800add0:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800add4:	6803      	ldr	r3, [r0, #0]
 800add6:	a901      	add	r1, sp, #4
 800add8:	685b      	ldr	r3, [r3, #4]
 800adda:	4798      	blx	r3
 800addc:	b00b      	add	sp, #44	@ 0x2c
 800adde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800ade4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800ade4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ade8:	b08a      	sub	sp, #40	@ 0x28
 800adea:	4698      	mov	r8, r3
 800adec:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800adf0:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800adf4:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800adf8:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800adfc:	2300      	movs	r3, #0
 800adfe:	2d0b      	cmp	r5, #11
 800ae00:	4606      	mov	r6, r0
 800ae02:	9304      	str	r3, [sp, #16]
 800ae04:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800ae08:	d138      	bne.n	800ae7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800ae0a:	2380      	movs	r3, #128	@ 0x80
 800ae0c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ae10:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ae14:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ae18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ae1c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ae20:	f88d 0020 	strb.w	r0, [sp, #32]
 800ae24:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ae28:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ae2c:	4630      	mov	r0, r6
 800ae2e:	9203      	str	r2, [sp, #12]
 800ae30:	f7ff ff5c 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ae34:	2c0b      	cmp	r4, #11
 800ae36:	bf98      	it	ls
 800ae38:	4b1b      	ldrls	r3, [pc, #108]	@ (800aea8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800ae3a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800ae3e:	bf98      	it	ls
 800ae40:	5d19      	ldrbls	r1, [r3, r4]
 800ae42:	f8ad 701e 	strh.w	r7, [sp, #30]
 800ae46:	bf88      	it	hi
 800ae48:	2100      	movhi	r1, #0
 800ae4a:	fb02 8307 	mla	r3, r2, r7, r8
 800ae4e:	10c9      	asrs	r1, r1, #3
 800ae50:	fb01 0003 	mla	r0, r1, r3, r0
 800ae54:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800ae58:	9005      	str	r0, [sp, #20]
 800ae5a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800ae5e:	6870      	ldr	r0, [r6, #4]
 800ae60:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800ae64:	2300      	movs	r3, #0
 800ae66:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ae6a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800ae6e:	6803      	ldr	r3, [r0, #0]
 800ae70:	a901      	add	r1, sp, #4
 800ae72:	685b      	ldr	r3, [r3, #4]
 800ae74:	4798      	blx	r3
 800ae76:	b00a      	add	sp, #40	@ 0x28
 800ae78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae7c:	2d02      	cmp	r5, #2
 800ae7e:	d109      	bne.n	800ae94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800ae80:	28ff      	cmp	r0, #255	@ 0xff
 800ae82:	d105      	bne.n	800ae90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800ae84:	f1bc 0f00 	cmp.w	ip, #0
 800ae88:	bf14      	ite	ne
 800ae8a:	2340      	movne	r3, #64	@ 0x40
 800ae8c:	2320      	moveq	r3, #32
 800ae8e:	e7bd      	b.n	800ae0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae90:	2340      	movs	r3, #64	@ 0x40
 800ae92:	e7bb      	b.n	800ae0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae94:	28ff      	cmp	r0, #255	@ 0xff
 800ae96:	d105      	bne.n	800aea4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800ae98:	f1bc 0f00 	cmp.w	ip, #0
 800ae9c:	bf14      	ite	ne
 800ae9e:	2304      	movne	r3, #4
 800aea0:	2301      	moveq	r3, #1
 800aea2:	e7b3      	b.n	800ae0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800aea4:	2304      	movs	r3, #4
 800aea6:	e7b1      	b.n	800ae0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800aea8:	08024efc 	.word	0x08024efc

0800aeac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800aeac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aeb0:	b08b      	sub	sp, #44	@ 0x2c
 800aeb2:	461d      	mov	r5, r3
 800aeb4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800aeb8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800aebc:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800aec0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800aec4:	bf14      	ite	ne
 800aec6:	2308      	movne	r3, #8
 800aec8:	2302      	moveq	r3, #2
 800aeca:	2400      	movs	r4, #0
 800aecc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800aed0:	4688      	mov	r8, r1
 800aed2:	4693      	mov	fp, r2
 800aed4:	9404      	str	r4, [sp, #16]
 800aed6:	4607      	mov	r7, r0
 800aed8:	f7ff ff08 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aedc:	2e0b      	cmp	r6, #11
 800aede:	bf98      	it	ls
 800aee0:	4b15      	ldrls	r3, [pc, #84]	@ (800af38 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800aee2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800aee6:	bf98      	it	ls
 800aee8:	5d9c      	ldrbls	r4, [r3, r6]
 800aeea:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800aeee:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aef2:	fb05 b50a 	mla	r5, r5, sl, fp
 800aef6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800aefa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aefe:	10e4      	asrs	r4, r4, #3
 800af00:	fb04 0405 	mla	r4, r4, r5, r0
 800af04:	2300      	movs	r3, #0
 800af06:	6878      	ldr	r0, [r7, #4]
 800af08:	9405      	str	r4, [sp, #20]
 800af0a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800af0e:	f8ad a01e 	strh.w	sl, [sp, #30]
 800af12:	f8cd 8010 	str.w	r8, [sp, #16]
 800af16:	f88d 9020 	strb.w	r9, [sp, #32]
 800af1a:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800af1e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800af22:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800af26:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800af2a:	6803      	ldr	r3, [r0, #0]
 800af2c:	a901      	add	r1, sp, #4
 800af2e:	685b      	ldr	r3, [r3, #4]
 800af30:	4798      	blx	r3
 800af32:	b00b      	add	sp, #44	@ 0x2c
 800af34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af38:	08024efc 	.word	0x08024efc

0800af3c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800af3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af40:	461e      	mov	r6, r3
 800af42:	4b0a      	ldr	r3, [pc, #40]	@ (800af6c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800af44:	460f      	mov	r7, r1
 800af46:	881d      	ldrh	r5, [r3, #0]
 800af48:	4690      	mov	r8, r2
 800af4a:	f7f7 fdab 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800af4e:	6803      	ldr	r3, [r0, #0]
 800af50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af52:	4798      	blx	r3
 800af54:	280b      	cmp	r0, #11
 800af56:	bf9a      	itte	ls
 800af58:	4b05      	ldrls	r3, [pc, #20]	@ (800af70 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800af5a:	5c1c      	ldrbls	r4, [r3, r0]
 800af5c:	2400      	movhi	r4, #0
 800af5e:	fb08 7005 	mla	r0, r8, r5, r7
 800af62:	10e4      	asrs	r4, r4, #3
 800af64:	fb04 6000 	mla	r0, r4, r0, r6
 800af68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af6c:	20013ff0 	.word	0x20013ff0
 800af70:	08024efc 	.word	0x08024efc

0800af74 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800af74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af76:	b08b      	sub	sp, #44	@ 0x2c
 800af78:	461f      	mov	r7, r3
 800af7a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800af7e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800af82:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800af86:	f8ad 3018 	strh.w	r3, [sp, #24]
 800af8a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800af8e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800af92:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800af96:	f8ad 301c 	strh.w	r3, [sp, #28]
 800af9a:	2500      	movs	r5, #0
 800af9c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800afa0:	f88d 3020 	strb.w	r3, [sp, #32]
 800afa4:	4604      	mov	r4, r0
 800afa6:	4616      	mov	r6, r2
 800afa8:	9504      	str	r5, [sp, #16]
 800afaa:	f7ff fe9f 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800afae:	463a      	mov	r2, r7
 800afb0:	4631      	mov	r1, r6
 800afb2:	4603      	mov	r3, r0
 800afb4:	4620      	mov	r0, r4
 800afb6:	f7ff ffc1 	bl	800af3c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800afba:	4b0e      	ldr	r3, [pc, #56]	@ (800aff4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800afbc:	9005      	str	r0, [sp, #20]
 800afbe:	881b      	ldrh	r3, [r3, #0]
 800afc0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800afc4:	f7f7 fd6e 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800afc8:	6803      	ldr	r3, [r0, #0]
 800afca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800afcc:	4798      	blx	r3
 800afce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800afd0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800afd4:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800afd8:	9304      	str	r3, [sp, #16]
 800afda:	6860      	ldr	r0, [r4, #4]
 800afdc:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800afe0:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800afe4:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800afe8:	6803      	ldr	r3, [r0, #0]
 800afea:	a901      	add	r1, sp, #4
 800afec:	685b      	ldr	r3, [r3, #4]
 800afee:	4798      	blx	r3
 800aff0:	b00b      	add	sp, #44	@ 0x2c
 800aff2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aff4:	20013ff0 	.word	0x20013ff0

0800aff8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800aff8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800affa:	b08d      	sub	sp, #52	@ 0x34
 800affc:	466b      	mov	r3, sp
 800affe:	e883 0006 	stmia.w	r3, {r1, r2}
 800b002:	2300      	movs	r3, #0
 800b004:	9306      	str	r3, [sp, #24]
 800b006:	6803      	ldr	r3, [r0, #0]
 800b008:	f8bd 6000 	ldrh.w	r6, [sp]
 800b00c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b00e:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b012:	2501      	movs	r5, #1
 800b014:	9503      	str	r5, [sp, #12]
 800b016:	4604      	mov	r4, r0
 800b018:	4798      	blx	r3
 800b01a:	463a      	mov	r2, r7
 800b01c:	4631      	mov	r1, r6
 800b01e:	4603      	mov	r3, r0
 800b020:	4620      	mov	r0, r4
 800b022:	f7ff ff8b 	bl	800af3c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b026:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b028:	9307      	str	r3, [sp, #28]
 800b02a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b02e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b032:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b036:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b03a:	4b0f      	ldr	r3, [pc, #60]	@ (800b078 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b03c:	9004      	str	r0, [sp, #16]
 800b03e:	881b      	ldrh	r3, [r3, #0]
 800b040:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b044:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b048:	f7f7 fd2c 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800b04c:	6803      	ldr	r3, [r0, #0]
 800b04e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b050:	4798      	blx	r3
 800b052:	23ff      	movs	r3, #255	@ 0xff
 800b054:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b058:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b05c:	6860      	ldr	r0, [r4, #4]
 800b05e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b062:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b066:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b06a:	6803      	ldr	r3, [r0, #0]
 800b06c:	a903      	add	r1, sp, #12
 800b06e:	685b      	ldr	r3, [r3, #4]
 800b070:	4798      	blx	r3
 800b072:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b074:	b00d      	add	sp, #52	@ 0x34
 800b076:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b078:	20013ff0 	.word	0x20013ff0

0800b07c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b07c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b080:	b08c      	sub	sp, #48	@ 0x30
 800b082:	461e      	mov	r6, r3
 800b084:	466d      	mov	r5, sp
 800b086:	2300      	movs	r3, #0
 800b088:	e885 0006 	stmia.w	r5, {r1, r2}
 800b08c:	9306      	str	r3, [sp, #24]
 800b08e:	6803      	ldr	r3, [r0, #0]
 800b090:	f8bd 7000 	ldrh.w	r7, [sp]
 800b094:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b096:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b09a:	2501      	movs	r5, #1
 800b09c:	9503      	str	r5, [sp, #12]
 800b09e:	4604      	mov	r4, r0
 800b0a0:	4798      	blx	r3
 800b0a2:	4642      	mov	r2, r8
 800b0a4:	4639      	mov	r1, r7
 800b0a6:	4603      	mov	r3, r0
 800b0a8:	4620      	mov	r0, r4
 800b0aa:	f7ff ff47 	bl	800af3c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b0ae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b0b2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b0b6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b0ba:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b0be:	4b11      	ldr	r3, [pc, #68]	@ (800b104 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b0c0:	9004      	str	r0, [sp, #16]
 800b0c2:	881b      	ldrh	r3, [r3, #0]
 800b0c4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b0c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b0ca:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b0ce:	9607      	str	r6, [sp, #28]
 800b0d0:	f7f7 fce8 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800b0d4:	6803      	ldr	r3, [r0, #0]
 800b0d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b0d8:	4798      	blx	r3
 800b0da:	23ff      	movs	r3, #255	@ 0xff
 800b0dc:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b0e0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b0e4:	6860      	ldr	r0, [r4, #4]
 800b0e6:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b0ea:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b0ee:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b0f2:	6803      	ldr	r3, [r0, #0]
 800b0f4:	a903      	add	r1, sp, #12
 800b0f6:	685b      	ldr	r3, [r3, #4]
 800b0f8:	4798      	blx	r3
 800b0fa:	4630      	mov	r0, r6
 800b0fc:	b00c      	add	sp, #48	@ 0x30
 800b0fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b102:	bf00      	nop
 800b104:	20013ff0 	.word	0x20013ff0

0800b108 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b108:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b10a:	b085      	sub	sp, #20
 800b10c:	ac02      	add	r4, sp, #8
 800b10e:	e884 0006 	stmia.w	r4, {r1, r2}
 800b112:	4605      	mov	r5, r0
 800b114:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b118:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b11c:	f7ff fde6 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b120:	463a      	mov	r2, r7
 800b122:	4603      	mov	r3, r0
 800b124:	4631      	mov	r1, r6
 800b126:	4628      	mov	r0, r5
 800b128:	f7ff ff08 	bl	800af3c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b12c:	4a05      	ldr	r2, [pc, #20]	@ (800b144 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b12e:	682b      	ldr	r3, [r5, #0]
 800b130:	8812      	ldrh	r2, [r2, #0]
 800b132:	9200      	str	r2, [sp, #0]
 800b134:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800b136:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b13a:	4603      	mov	r3, r0
 800b13c:	4628      	mov	r0, r5
 800b13e:	47b0      	blx	r6
 800b140:	b005      	add	sp, #20
 800b142:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b144:	20013ff0 	.word	0x20013ff0

0800b148 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b148:	b570      	push	{r4, r5, r6, lr}
 800b14a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b14e:	4604      	mov	r4, r0
 800b150:	b19b      	cbz	r3, 800b17a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b152:	2002      	movs	r0, #2
 800b154:	f7f5 fbd4 	bl	8000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b158:	2300      	movs	r3, #0
 800b15a:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b15e:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b162:	6823      	ldr	r3, [r4, #0]
 800b164:	4620      	mov	r0, r4
 800b166:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800b16a:	f7ff fdbf 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b16e:	462b      	mov	r3, r5
 800b170:	4601      	mov	r1, r0
 800b172:	4620      	mov	r0, r4
 800b174:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b178:	4718      	bx	r3
 800b17a:	bd70      	pop	{r4, r5, r6, pc}

0800b17c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b17c:	b538      	push	{r3, r4, r5, lr}
 800b17e:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b182:	428b      	cmp	r3, r1
 800b184:	4604      	mov	r4, r0
 800b186:	460d      	mov	r5, r1
 800b188:	d006      	beq.n	800b198 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b18a:	6803      	ldr	r3, [r0, #0]
 800b18c:	b929      	cbnz	r1, 800b19a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b18e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800b192:	4798      	blx	r3
 800b194:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b198:	bd38      	pop	{r3, r4, r5, pc}
 800b19a:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800b19e:	e7f8      	b.n	800b192 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b1a0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b1a0:	b510      	push	{r4, lr}
 800b1a2:	4b0c      	ldr	r3, [pc, #48]	@ (800b1d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800b1a4:	781b      	ldrb	r3, [r3, #0]
 800b1a6:	4604      	mov	r4, r0
 800b1a8:	b953      	cbnz	r3, 800b1c0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b1aa:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b1ae:	b93b      	cbnz	r3, 800b1c0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b1b0:	6840      	ldr	r0, [r0, #4]
 800b1b2:	f000 f92b 	bl	800b40c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b1b6:	b118      	cbz	r0, 800b1c0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b1b8:	6862      	ldr	r2, [r4, #4]
 800b1ba:	7a53      	ldrb	r3, [r2, #9]
 800b1bc:	2b00      	cmp	r3, #0
 800b1be:	d0fc      	beq.n	800b1ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800b1c0:	f7f5 fcea 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b1c4:	4620      	mov	r0, r4
 800b1c6:	2100      	movs	r1, #0
 800b1c8:	f7ff ffd8 	bl	800b17c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b1cc:	4620      	mov	r0, r4
 800b1ce:	f7ff fd8d 	bl	800acec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b1d2:	bd10      	pop	{r4, pc}
 800b1d4:	20013ff4 	.word	0x20013ff4

0800b1d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b1d8:	b570      	push	{r4, r5, r6, lr}
 800b1da:	4604      	mov	r4, r0
 800b1dc:	6803      	ldr	r3, [r0, #0]
 800b1de:	b919      	cbnz	r1, 800b1e8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b1e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b1e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1e6:	4718      	bx	r3
 800b1e8:	2200      	movs	r2, #0
 800b1ea:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800b1ee:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800b1f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b1f4:	4798      	blx	r3
 800b1f6:	6863      	ldr	r3, [r4, #4]
 800b1f8:	2101      	movs	r1, #1
 800b1fa:	4605      	mov	r5, r0
 800b1fc:	7299      	strb	r1, [r3, #10]
 800b1fe:	4620      	mov	r0, r4
 800b200:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800b204:	f7ff ffba 	bl	800b17c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b208:	4628      	mov	r0, r5
 800b20a:	bd70      	pop	{r4, r5, r6, pc}

0800b20c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b20c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b210:	1a13      	subs	r3, r2, r0
 800b212:	4258      	negs	r0, r3
 800b214:	4158      	adcs	r0, r3
 800b216:	4770      	bx	lr

0800b218 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b218:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b21c:	1a9b      	subs	r3, r3, r2
 800b21e:	2b00      	cmp	r3, #0
 800b220:	bfdc      	itt	le
 800b222:	6882      	ldrle	r2, [r0, #8]
 800b224:	189b      	addle	r3, r3, r2
 800b226:	2b01      	cmp	r3, #1
 800b228:	bfcc      	ite	gt
 800b22a:	2000      	movgt	r0, #0
 800b22c:	2001      	movle	r0, #1
 800b22e:	4770      	bx	lr

0800b230 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b230:	6902      	ldr	r2, [r0, #16]
 800b232:	6843      	ldr	r3, [r0, #4]
 800b234:	2024      	movs	r0, #36	@ 0x24
 800b236:	fb00 3002 	mla	r0, r0, r2, r3
 800b23a:	4770      	bx	lr

0800b23c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b23c:	6803      	ldr	r3, [r0, #0]
 800b23e:	691b      	ldr	r3, [r3, #16]
 800b240:	4718      	bx	r3

0800b242 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b242:	b570      	push	{r4, r5, r6, lr}
 800b244:	2301      	movs	r3, #1
 800b246:	7203      	strb	r3, [r0, #8]
 800b248:	4604      	mov	r4, r0
 800b24a:	6840      	ldr	r0, [r0, #4]
 800b24c:	6803      	ldr	r3, [r0, #0]
 800b24e:	699b      	ldr	r3, [r3, #24]
 800b250:	4798      	blx	r3
 800b252:	6803      	ldr	r3, [r0, #0]
 800b254:	2b40      	cmp	r3, #64	@ 0x40
 800b256:	4605      	mov	r5, r0
 800b258:	d00c      	beq.n	800b274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b25a:	d810      	bhi.n	800b27e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b25c:	2b04      	cmp	r3, #4
 800b25e:	d01d      	beq.n	800b29c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b260:	d804      	bhi.n	800b26c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b262:	2b01      	cmp	r3, #1
 800b264:	d006      	beq.n	800b274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b266:	2b02      	cmp	r3, #2
 800b268:	d02c      	beq.n	800b2c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b26a:	bd70      	pop	{r4, r5, r6, pc}
 800b26c:	2b08      	cmp	r3, #8
 800b26e:	d01d      	beq.n	800b2ac <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b270:	2b20      	cmp	r3, #32
 800b272:	d1fa      	bne.n	800b26a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b274:	6823      	ldr	r3, [r4, #0]
 800b276:	4620      	mov	r0, r4
 800b278:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b27a:	4798      	blx	r3
 800b27c:	e013      	b.n	800b2a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b27e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b282:	d0f7      	beq.n	800b274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b284:	d804      	bhi.n	800b290 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b286:	2b80      	cmp	r3, #128	@ 0x80
 800b288:	d0f4      	beq.n	800b274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b28a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b28e:	e7f0      	b.n	800b272 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b290:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b294:	d0ee      	beq.n	800b274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b296:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b29a:	e7e5      	b.n	800b268 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b29c:	6823      	ldr	r3, [r4, #0]
 800b29e:	7f01      	ldrb	r1, [r0, #28]
 800b2a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b2a2:	4620      	mov	r0, r4
 800b2a4:	4798      	blx	r3
 800b2a6:	6823      	ldr	r3, [r4, #0]
 800b2a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b2aa:	e006      	b.n	800b2ba <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b2ac:	6823      	ldr	r3, [r4, #0]
 800b2ae:	7f01      	ldrb	r1, [r0, #28]
 800b2b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b2b2:	4620      	mov	r0, r4
 800b2b4:	4798      	blx	r3
 800b2b6:	6823      	ldr	r3, [r4, #0]
 800b2b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b2ba:	4629      	mov	r1, r5
 800b2bc:	4620      	mov	r0, r4
 800b2be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2c2:	4718      	bx	r3
 800b2c4:	6823      	ldr	r3, [r4, #0]
 800b2c6:	4620      	mov	r0, r4
 800b2c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b2ca:	4798      	blx	r3
 800b2cc:	e7f3      	b.n	800b2b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b2ce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b2ce:	4770      	bx	lr

0800b2d0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b2d0:	4770      	bx	lr

0800b2d2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b2d2:	4770      	bx	lr

0800b2d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b2d4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b2d8:	1ad2      	subs	r2, r2, r3
 800b2da:	2a00      	cmp	r2, #0
 800b2dc:	b510      	push	{r4, lr}
 800b2de:	bfdc      	itt	le
 800b2e0:	6884      	ldrle	r4, [r0, #8]
 800b2e2:	1912      	addle	r2, r2, r4
 800b2e4:	2a01      	cmp	r2, #1
 800b2e6:	dd16      	ble.n	800b316 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b2e8:	6842      	ldr	r2, [r0, #4]
 800b2ea:	2424      	movs	r4, #36	@ 0x24
 800b2ec:	fb04 2303 	mla	r3, r4, r3, r2
 800b2f0:	f101 0220 	add.w	r2, r1, #32
 800b2f4:	f851 4b04 	ldr.w	r4, [r1], #4
 800b2f8:	f843 4b04 	str.w	r4, [r3], #4
 800b2fc:	4291      	cmp	r1, r2
 800b2fe:	d1f9      	bne.n	800b2f4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b300:	780a      	ldrb	r2, [r1, #0]
 800b302:	701a      	strb	r2, [r3, #0]
 800b304:	68c3      	ldr	r3, [r0, #12]
 800b306:	6882      	ldr	r2, [r0, #8]
 800b308:	f3bf 8f5b 	dmb	ish
 800b30c:	3301      	adds	r3, #1
 800b30e:	429a      	cmp	r2, r3
 800b310:	bfd8      	it	le
 800b312:	1a9b      	suble	r3, r3, r2
 800b314:	60c3      	str	r3, [r0, #12]
 800b316:	bd10      	pop	{r4, pc}

0800b318 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b318:	6903      	ldr	r3, [r0, #16]
 800b31a:	6882      	ldr	r2, [r0, #8]
 800b31c:	f3bf 8f5b 	dmb	ish
 800b320:	3301      	adds	r3, #1
 800b322:	429a      	cmp	r2, r3
 800b324:	bfd8      	it	le
 800b326:	1a9b      	suble	r3, r3, r2
 800b328:	6103      	str	r3, [r0, #16]
 800b32a:	4770      	bx	lr

0800b32c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b32c:	b570      	push	{r4, r5, r6, lr}
 800b32e:	4604      	mov	r4, r0
 800b330:	460e      	mov	r6, r1
 800b332:	6860      	ldr	r0, [r4, #4]
 800b334:	6803      	ldr	r3, [r0, #0]
 800b336:	685b      	ldr	r3, [r3, #4]
 800b338:	4798      	blx	r3
 800b33a:	2800      	cmp	r0, #0
 800b33c:	d1f9      	bne.n	800b332 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b33e:	4d0d      	ldr	r5, [pc, #52]	@ (800b374 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b340:	6828      	ldr	r0, [r5, #0]
 800b342:	6803      	ldr	r3, [r0, #0]
 800b344:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b348:	4798      	blx	r3
 800b34a:	f7f5 fc33 	bl	8000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b34e:	6828      	ldr	r0, [r5, #0]
 800b350:	2101      	movs	r1, #1
 800b352:	f7ff ff13 	bl	800b17c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b356:	6860      	ldr	r0, [r4, #4]
 800b358:	6803      	ldr	r3, [r0, #0]
 800b35a:	4631      	mov	r1, r6
 800b35c:	689b      	ldr	r3, [r3, #8]
 800b35e:	4798      	blx	r3
 800b360:	6823      	ldr	r3, [r4, #0]
 800b362:	4620      	mov	r0, r4
 800b364:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b366:	4798      	blx	r3
 800b368:	6828      	ldr	r0, [r5, #0]
 800b36a:	6803      	ldr	r3, [r0, #0]
 800b36c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b370:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b372:	4718      	bx	r3
 800b374:	20013ff8 	.word	0x20013ff8

0800b378 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b378:	b508      	push	{r3, lr}
 800b37a:	f7f5 fc0d 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b37e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b382:	f7f5 bc11 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b386 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b386:	b510      	push	{r4, lr}
 800b388:	2114      	movs	r1, #20
 800b38a:	4604      	mov	r4, r0
 800b38c:	f016 fb89 	bl	8021aa2 <_ZdlPvj>
 800b390:	4620      	mov	r0, r4
 800b392:	bd10      	pop	{r4, pc}

0800b394 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b394:	b510      	push	{r4, lr}
 800b396:	4604      	mov	r4, r0
 800b398:	6840      	ldr	r0, [r0, #4]
 800b39a:	6803      	ldr	r3, [r0, #0]
 800b39c:	681b      	ldr	r3, [r3, #0]
 800b39e:	4798      	blx	r3
 800b3a0:	b948      	cbnz	r0, 800b3b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b3a2:	7a63      	ldrb	r3, [r4, #9]
 800b3a4:	b13b      	cbz	r3, 800b3b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b3a6:	7a23      	ldrb	r3, [r4, #8]
 800b3a8:	b92b      	cbnz	r3, 800b3b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b3aa:	6823      	ldr	r3, [r4, #0]
 800b3ac:	4620      	mov	r0, r4
 800b3ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b3b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b3b4:	4718      	bx	r3
 800b3b6:	bd10      	pop	{r4, pc}

0800b3b8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b3b8:	b570      	push	{r4, r5, r6, lr}
 800b3ba:	4604      	mov	r4, r0
 800b3bc:	6840      	ldr	r0, [r0, #4]
 800b3be:	6803      	ldr	r3, [r0, #0]
 800b3c0:	681b      	ldr	r3, [r3, #0]
 800b3c2:	4798      	blx	r3
 800b3c4:	4605      	mov	r5, r0
 800b3c6:	b930      	cbnz	r0, 800b3d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b3c8:	7a23      	ldrb	r3, [r4, #8]
 800b3ca:	b123      	cbz	r3, 800b3d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b3cc:	6860      	ldr	r0, [r4, #4]
 800b3ce:	6803      	ldr	r3, [r0, #0]
 800b3d0:	695b      	ldr	r3, [r3, #20]
 800b3d2:	4798      	blx	r3
 800b3d4:	7225      	strb	r5, [r4, #8]
 800b3d6:	6860      	ldr	r0, [r4, #4]
 800b3d8:	6803      	ldr	r3, [r0, #0]
 800b3da:	681b      	ldr	r3, [r3, #0]
 800b3dc:	4798      	blx	r3
 800b3de:	b928      	cbnz	r0, 800b3ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b3e0:	6823      	ldr	r3, [r4, #0]
 800b3e2:	4620      	mov	r0, r4
 800b3e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b3e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b3ea:	4718      	bx	r3
 800b3ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b3f0:	f7f5 bbe8 	b.w	8000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b3f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b3f4:	b510      	push	{r4, lr}
 800b3f6:	4c04      	ldr	r4, [pc, #16]	@ (800b408 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b3f8:	6082      	str	r2, [r0, #8]
 800b3fa:	2200      	movs	r2, #0
 800b3fc:	e9c0 4100 	strd	r4, r1, [r0]
 800b400:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b404:	bd10      	pop	{r4, pc}
 800b406:	bf00      	nop
 800b408:	08024f10 	.word	0x08024f10

0800b40c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b40c:	6840      	ldr	r0, [r0, #4]
 800b40e:	6803      	ldr	r3, [r0, #0]
 800b410:	681b      	ldr	r3, [r3, #0]
 800b412:	4718      	bx	r3
 800b414:	0000      	movs	r0, r0
	...

0800b418 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800b418:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800b41c:	4f20      	ldr	r7, [pc, #128]	@ (800b4a0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800b41e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800b422:	fb80 0101 	smull	r0, r1, r0, r1
 800b426:	fba0 bc07 	umull	fp, ip, r0, r7
 800b42a:	fb07 cc01 	mla	ip, r7, r1, ip
 800b42e:	fb0b f70c 	mul.w	r7, fp, ip
 800b432:	fbab 010b 	umull	r0, r1, fp, fp
 800b436:	461c      	mov	r4, r3
 800b438:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800b43c:	fb00 f30c 	mul.w	r3, r0, ip
 800b440:	fb0b 3301 	mla	r3, fp, r1, r3
 800b444:	fba0 010b 	umull	r0, r1, r0, fp
 800b448:	4616      	mov	r6, r2
 800b44a:	4419      	add	r1, r3
 800b44c:	a312      	add	r3, pc, #72	@ (adr r3, 800b498 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800b44e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b452:	f7f4 ff25 	bl	80002a0 <__aeabi_ldivmod>
 800b456:	2ef7      	cmp	r6, #247	@ 0xf7
 800b458:	b290      	uxth	r0, r2
 800b45a:	bf9e      	ittt	ls
 800b45c:	f002 0207 	andls.w	r2, r2, #7
 800b460:	18b6      	addls	r6, r6, r2
 800b462:	b2f6      	uxtbls	r6, r6
 800b464:	2cfb      	cmp	r4, #251	@ 0xfb
 800b466:	bf9e      	ittt	ls
 800b468:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800b46c:	18e4      	addls	r4, r4, r3
 800b46e:	b2e4      	uxtbls	r4, r4
 800b470:	2df7      	cmp	r5, #247	@ 0xf7
 800b472:	bf9c      	itt	ls
 800b474:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800b478:	182d      	addls	r5, r5, r0
 800b47a:	480a      	ldr	r0, [pc, #40]	@ (800b4a4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800b47c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800b480:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800b484:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800b488:	bf98      	it	ls
 800b48a:	b2ed      	uxtbls	r5, r5
 800b48c:	4304      	orrs	r4, r0
 800b48e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800b492:	b280      	uxth	r0, r0
 800b494:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800b498:	797a8d77 	.word	0x797a8d77
 800b49c:	00000000 	.word	0x00000000
 800b4a0:	00ec4ba7 	.word	0x00ec4ba7
 800b4a4:	fffff800 	.word	0xfffff800

0800b4a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800b4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4ac:	ed2d 8b02 	vpush	{d8}
 800b4b0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b4b4:	b087      	sub	sp, #28
 800b4b6:	7c41      	ldrb	r1, [r0, #17]
 800b4b8:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800b4bc:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800b4c0:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800b4c4:	4605      	mov	r5, r0
 800b4c6:	2900      	cmp	r1, #0
 800b4c8:	f000 809a 	beq.w	800b600 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800b4cc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b4d0:	ed90 7a08 	vldr	s14, [r0, #32]
 800b4d4:	68c0      	ldr	r0, [r0, #12]
 800b4d6:	454a      	cmp	r2, r9
 800b4d8:	db25      	blt.n	800b526 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800b4da:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b4de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4e2:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b4e6:	bfc8      	it	gt
 800b4e8:	2200      	movgt	r2, #0
 800b4ea:	5882      	ldr	r2, [r0, r2]
 800b4ec:	2100      	movs	r1, #0
 800b4ee:	7c2d      	ldrb	r5, [r5, #16]
 800b4f0:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800b4f4:	0950      	lsrs	r0, r2, #5
 800b4f6:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800b4fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b4fe:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800b502:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800b506:	2d00      	cmp	r5, #0
 800b508:	d044      	beq.n	800b594 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b50a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b50e:	d141      	bne.n	800b594 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b510:	bb61      	cbnz	r1, 800b56c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800b512:	ea4e 0000 	orr.w	r0, lr, r0
 800b516:	ea4c 0500 	orr.w	r5, ip, r0
 800b51a:	42bc      	cmp	r4, r7
 800b51c:	f080 8217 	bcs.w	800b94e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b520:	f824 5b02 	strh.w	r5, [r4], #2
 800b524:	e7f9      	b.n	800b51a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800b526:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800b52a:	454f      	cmp	r7, r9
 800b52c:	dc08      	bgt.n	800b540 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800b52e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b536:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b53a:	bfd8      	it	le
 800b53c:	2200      	movle	r2, #0
 800b53e:	e7d4      	b.n	800b4ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800b540:	eba9 0202 	sub.w	r2, r9, r2
 800b544:	ee07 2a90 	vmov	s15, r2
 800b548:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b54c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b550:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b558:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b55c:	ee17 2a90 	vmov	r2, s15
 800b560:	bfd8      	it	le
 800b562:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800b566:	0092      	lsls	r2, r2, #2
 800b568:	5882      	ldr	r2, [r0, r2]
 800b56a:	e7c0      	b.n	800b4ee <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800b56c:	b2d5      	uxtb	r5, r2
 800b56e:	fa5f f888 	uxtb.w	r8, r8
 800b572:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800b576:	461e      	mov	r6, r3
 800b578:	42bc      	cmp	r4, r7
 800b57a:	f080 81e8 	bcs.w	800b94e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b57e:	4630      	mov	r0, r6
 800b580:	9500      	str	r5, [sp, #0]
 800b582:	4643      	mov	r3, r8
 800b584:	4652      	mov	r2, sl
 800b586:	4649      	mov	r1, r9
 800b588:	f7ff ff46 	bl	800b418 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b58c:	3601      	adds	r6, #1
 800b58e:	f824 0b02 	strh.w	r0, [r4], #2
 800b592:	e7f1      	b.n	800b578 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800b594:	0e12      	lsrs	r2, r2, #24
 800b596:	fb02 f20a 	mul.w	r2, r2, sl
 800b59a:	1c53      	adds	r3, r2, #1
 800b59c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800b5a0:	1212      	asrs	r2, r2, #8
 800b5a2:	fb02 f50c 	mul.w	r5, r2, ip
 800b5a6:	fb02 f10e 	mul.w	r1, r2, lr
 800b5aa:	4350      	muls	r0, r2
 800b5ac:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800b960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b5b0:	43d2      	mvns	r2, r2
 800b5b2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b5b6:	26ff      	movs	r6, #255	@ 0xff
 800b5b8:	42bc      	cmp	r4, r7
 800b5ba:	f080 81c8 	bcs.w	800b94e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b5be:	f8b4 e000 	ldrh.w	lr, [r4]
 800b5c2:	ea0e 030c 	and.w	r3, lr, ip
 800b5c6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b5ca:	fb02 1303 	mla	r3, r2, r3, r1
 800b5ce:	fb02 0808 	mla	r8, r2, r8, r0
 800b5d2:	fb93 f3f6 	sdiv	r3, r3, r6
 800b5d6:	fb98 f8f6 	sdiv	r8, r8, r6
 800b5da:	ea03 030c 	and.w	r3, r3, ip
 800b5de:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b5e2:	f00e 0e1f 	and.w	lr, lr, #31
 800b5e6:	ea43 0308 	orr.w	r3, r3, r8
 800b5ea:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b5ee:	fb9e fef6 	sdiv	lr, lr, r6
 800b5f2:	f00e 0e1f 	and.w	lr, lr, #31
 800b5f6:	ea43 030e 	orr.w	r3, r3, lr
 800b5fa:	f824 3b02 	strh.w	r3, [r4], #2
 800b5fe:	e7db      	b.n	800b5b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800b600:	7c82      	ldrb	r2, [r0, #18]
 800b602:	2a00      	cmp	r2, #0
 800b604:	d04f      	beq.n	800b6a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800b606:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b60a:	ee07 2a90 	vmov	s15, r2
 800b60e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b612:	ee07 3a10 	vmov	s14, r3
 800b616:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b61a:	461f      	mov	r7, r3
 800b61c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800b620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b624:	f200 8095 	bhi.w	800b752 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800b628:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b62c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b630:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800b634:	ee37 7a66 	vsub.f32	s14, s14, s13
 800b638:	ee06 6a90 	vmov	s13, r6
 800b63c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b640:	68ea      	ldr	r2, [r5, #12]
 800b642:	f895 c010 	ldrb.w	ip, [r5, #16]
 800b646:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b64a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b64e:	bf4a      	itet	mi
 800b650:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800b654:	9602      	strpl	r6, [sp, #8]
 800b656:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800b65a:	ed95 7a08 	vldr	s14, [r5, #32]
 800b65e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b666:	bfc8      	it	gt
 800b668:	2100      	movgt	r1, #0
 800b66a:	5852      	ldr	r2, [r2, r1]
 800b66c:	9902      	ldr	r1, [sp, #8]
 800b66e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800b672:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800b676:	0950      	lsrs	r0, r2, #5
 800b678:	9103      	str	r1, [sp, #12]
 800b67a:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800b67e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b682:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800b686:	f1bc 0f00 	cmp.w	ip, #0
 800b68a:	d024      	beq.n	800b6d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b68c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b690:	d121      	bne.n	800b6d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b692:	ea4b 0b00 	orr.w	fp, fp, r0
 800b696:	ea41 010b 	orr.w	r1, r1, fp
 800b69a:	9a03      	ldr	r2, [sp, #12]
 800b69c:	4294      	cmp	r4, r2
 800b69e:	d255      	bcs.n	800b74c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b6a0:	f824 1b02 	strh.w	r1, [r4], #2
 800b6a4:	e7f9      	b.n	800b69a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800b6a6:	ee07 9a10 	vmov	s14, r9
 800b6aa:	edd0 7a06 	vldr	s15, [r0, #24]
 800b6ae:	edd0 6a05 	vldr	s13, [r0, #20]
 800b6b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b6b6:	ee37 7a67 	vsub.f32	s14, s14, s15
 800b6ba:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b6be:	ed90 7a08 	vldr	s14, [r0, #32]
 800b6c2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b6c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b6ca:	bf44      	itt	mi
 800b6cc:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800b6d0:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800b6d4:	e79d      	b.n	800b612 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800b6d6:	0e12      	lsrs	r2, r2, #24
 800b6d8:	fb02 f20a 	mul.w	r2, r2, sl
 800b6dc:	f102 0c01 	add.w	ip, r2, #1
 800b6e0:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800b6e4:	1212      	asrs	r2, r2, #8
 800b6e6:	4350      	muls	r0, r2
 800b6e8:	4351      	muls	r1, r2
 800b6ea:	fb02 fb0b 	mul.w	fp, r2, fp
 800b6ee:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800b960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b6f2:	9004      	str	r0, [sp, #16]
 800b6f4:	43d2      	mvns	r2, r2
 800b6f6:	9105      	str	r1, [sp, #20]
 800b6f8:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b6fc:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800b700:	9903      	ldr	r1, [sp, #12]
 800b702:	428c      	cmp	r4, r1
 800b704:	d222      	bcs.n	800b74c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b706:	8820      	ldrh	r0, [r4, #0]
 800b708:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800b70c:	460f      	mov	r7, r1
 800b70e:	9904      	ldr	r1, [sp, #16]
 800b710:	ea00 0c08 	and.w	ip, r0, r8
 800b714:	fb02 bc0c 	mla	ip, r2, ip, fp
 800b718:	fb02 1107 	mla	r1, r2, r7, r1
 800b71c:	fb9c fcfe 	sdiv	ip, ip, lr
 800b720:	fb91 f1fe 	sdiv	r1, r1, lr
 800b724:	ea0c 0c08 	and.w	ip, ip, r8
 800b728:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800b72c:	ea4c 0101 	orr.w	r1, ip, r1
 800b730:	f000 0c1f 	and.w	ip, r0, #31
 800b734:	9805      	ldr	r0, [sp, #20]
 800b736:	fb02 0c0c 	mla	ip, r2, ip, r0
 800b73a:	fb9c fcfe 	sdiv	ip, ip, lr
 800b73e:	f00c 0c1f 	and.w	ip, ip, #31
 800b742:	ea41 010c 	orr.w	r1, r1, ip
 800b746:	f824 1b02 	strh.w	r1, [r4], #2
 800b74a:	e7d9      	b.n	800b700 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800b74c:	9a02      	ldr	r2, [sp, #8]
 800b74e:	441a      	add	r2, r3
 800b750:	4617      	mov	r7, r2
 800b752:	441e      	add	r6, r3
 800b754:	b236      	sxth	r6, r6
 800b756:	42be      	cmp	r6, r7
 800b758:	f340 80f9 	ble.w	800b94e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b75c:	ed95 7a07 	vldr	s14, [r5, #28]
 800b760:	ee06 7a90 	vmov	s13, r7
 800b764:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b768:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b76c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b774:	f340 80b5 	ble.w	800b8e2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800b778:	ee06 6a10 	vmov	s12, r6
 800b77c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800b780:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800b958 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800b784:	7c2b      	ldrb	r3, [r5, #16]
 800b786:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800b78a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b78e:	bfd8      	it	le
 800b790:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800b794:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800b95c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800b798:	bfd8      	it	le
 800b79a:	ee17 8a10 	vmovle	r8, s14
 800b79e:	ed95 7a08 	vldr	s14, [r5, #32]
 800b7a2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b7a6:	bfc8      	it	gt
 800b7a8:	46b0      	movgt	r8, r6
 800b7aa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800b7ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7b2:	eba8 0707 	sub.w	r7, r8, r7
 800b7b6:	bfd8      	it	le
 800b7b8:	eeb0 8a46 	vmovle.f32	s16, s12
 800b7bc:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800b7c0:	eea7 8a27 	vfma.f32	s16, s14, s15
 800b7c4:	b1db      	cbz	r3, 800b7fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b7c6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b7ca:	d118      	bne.n	800b7fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b7cc:	42bc      	cmp	r4, r7
 800b7ce:	d262      	bcs.n	800b896 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b7d0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b7d4:	68eb      	ldr	r3, [r5, #12]
 800b7d6:	ee17 0a90 	vmov	r0, s15
 800b7da:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800b7de:	b2d3      	uxtb	r3, r2
 800b7e0:	9300      	str	r3, [sp, #0]
 800b7e2:	4649      	mov	r1, r9
 800b7e4:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800b7e8:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800b7ec:	f7ff fe14 	bl	800b418 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b7f0:	f824 0b02 	strh.w	r0, [r4], #2
 800b7f4:	edd5 7a08 	vldr	s15, [r5, #32]
 800b7f8:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b7fc:	e7e6      	b.n	800b7cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800b7fe:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800b960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b802:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800b806:	42bc      	cmp	r4, r7
 800b808:	d245      	bcs.n	800b896 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b80a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b80e:	68eb      	ldr	r3, [r5, #12]
 800b810:	f8b4 e000 	ldrh.w	lr, [r4]
 800b814:	ee17 2a90 	vmov	r2, s15
 800b818:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800b81c:	0e13      	lsrs	r3, r2, #24
 800b81e:	fb03 f30a 	mul.w	r3, r3, sl
 800b822:	1c58      	adds	r0, r3, #1
 800b824:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800b828:	1200      	asrs	r0, r0, #8
 800b82a:	ea6f 0c00 	mvn.w	ip, r0
 800b82e:	fa5f fc8c 	uxtb.w	ip, ip
 800b832:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800b836:	ea0e 030b 	and.w	r3, lr, fp
 800b83a:	fb0c f303 	mul.w	r3, ip, r3
 800b83e:	b289      	uxth	r1, r1
 800b840:	fb00 3101 	mla	r1, r0, r1, r3
 800b844:	fb91 f1f9 	sdiv	r1, r1, r9
 800b848:	ea01 030b 	and.w	r3, r1, fp
 800b84c:	9302      	str	r3, [sp, #8]
 800b84e:	0953      	lsrs	r3, r2, #5
 800b850:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b854:	4619      	mov	r1, r3
 800b856:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800b85a:	fb0c f303 	mul.w	r3, ip, r3
 800b85e:	fb00 3301 	mla	r3, r0, r1, r3
 800b862:	f00e 0e1f 	and.w	lr, lr, #31
 800b866:	9902      	ldr	r1, [sp, #8]
 800b868:	fb93 f3f9 	sdiv	r3, r3, r9
 800b86c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800b870:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b874:	fb0c fc0e 	mul.w	ip, ip, lr
 800b878:	4319      	orrs	r1, r3
 800b87a:	fb00 c002 	mla	r0, r0, r2, ip
 800b87e:	fb90 f0f9 	sdiv	r0, r0, r9
 800b882:	f000 001f 	and.w	r0, r0, #31
 800b886:	4301      	orrs	r1, r0
 800b888:	f824 1b02 	strh.w	r1, [r4], #2
 800b88c:	edd5 7a08 	vldr	s15, [r5, #32]
 800b890:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b894:	e7b7      	b.n	800b806 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800b896:	4546      	cmp	r6, r8
 800b898:	dd59      	ble.n	800b94e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b89a:	edd5 7a08 	vldr	s15, [r5, #32]
 800b89e:	68ea      	ldr	r2, [r5, #12]
 800b8a0:	7c29      	ldrb	r1, [r5, #16]
 800b8a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b8a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8aa:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800b8ae:	bfd8      	it	le
 800b8b0:	2300      	movle	r3, #0
 800b8b2:	eba6 0608 	sub.w	r6, r6, r8
 800b8b6:	58d2      	ldr	r2, [r2, r3]
 800b8b8:	0a10      	lsrs	r0, r2, #8
 800b8ba:	0953      	lsrs	r3, r2, #5
 800b8bc:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800b8c0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800b8c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b8c8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800b8cc:	b159      	cbz	r1, 800b8e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b8ce:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b8d2:	d108      	bne.n	800b8e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b8d4:	4318      	orrs	r0, r3
 800b8d6:	4338      	orrs	r0, r7
 800b8d8:	42b4      	cmp	r4, r6
 800b8da:	d238      	bcs.n	800b94e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b8dc:	f824 0b02 	strh.w	r0, [r4], #2
 800b8e0:	e7fa      	b.n	800b8d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800b8e2:	46b8      	mov	r8, r7
 800b8e4:	e7d9      	b.n	800b89a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800b8e6:	0e12      	lsrs	r2, r2, #24
 800b8e8:	fb02 f10a 	mul.w	r1, r2, sl
 800b8ec:	1c4a      	adds	r2, r1, #1
 800b8ee:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800b8f2:	1212      	asrs	r2, r2, #8
 800b8f4:	fb02 f507 	mul.w	r5, r2, r7
 800b8f8:	4350      	muls	r0, r2
 800b8fa:	4353      	muls	r3, r2
 800b8fc:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800b960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b900:	43d2      	mvns	r2, r2
 800b902:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b906:	27ff      	movs	r7, #255	@ 0xff
 800b908:	42b4      	cmp	r4, r6
 800b90a:	d220      	bcs.n	800b94e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b90c:	f8b4 e000 	ldrh.w	lr, [r4]
 800b910:	ea0e 010c 	and.w	r1, lr, ip
 800b914:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b918:	fb02 0101 	mla	r1, r2, r1, r0
 800b91c:	fb02 3808 	mla	r8, r2, r8, r3
 800b920:	fb91 f1f7 	sdiv	r1, r1, r7
 800b924:	fb98 f8f7 	sdiv	r8, r8, r7
 800b928:	ea01 010c 	and.w	r1, r1, ip
 800b92c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b930:	f00e 0e1f 	and.w	lr, lr, #31
 800b934:	ea41 0108 	orr.w	r1, r1, r8
 800b938:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b93c:	fb9e fef7 	sdiv	lr, lr, r7
 800b940:	f00e 0e1f 	and.w	lr, lr, #31
 800b944:	ea41 010e 	orr.w	r1, r1, lr
 800b948:	f824 1b02 	strh.w	r1, [r4], #2
 800b94c:	e7dc      	b.n	800b908 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800b94e:	b007      	add	sp, #28
 800b950:	ecbd 8b02 	vpop	{d8}
 800b954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b958:	00000000 	.word	0x00000000
 800b95c:	447ffffe 	.word	0x447ffffe
 800b960:	fffff800 	.word	0xfffff800

0800b964 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800b964:	4770      	bx	lr

0800b966 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800b966:	4770      	bx	lr

0800b968 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800b968:	b510      	push	{r4, lr}
 800b96a:	2124      	movs	r1, #36	@ 0x24
 800b96c:	4604      	mov	r4, r0
 800b96e:	f016 f898 	bl	8021aa2 <_ZdlPvj>
 800b972:	4620      	mov	r0, r4
 800b974:	bd10      	pop	{r4, pc}
	...

0800b978 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b978:	4b06      	ldr	r3, [pc, #24]	@ (800b994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b97a:	60c1      	str	r1, [r0, #12]
 800b97c:	094a      	lsrs	r2, r1, #5
 800b97e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b982:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800b986:	4313      	orrs	r3, r2
 800b988:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b98c:	4319      	orrs	r1, r3
 800b98e:	8201      	strh	r1, [r0, #16]
 800b990:	4770      	bx	lr
 800b992:	bf00      	nop
 800b994:	fffff800 	.word	0xfffff800

0800b998 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b998:	f1a0 0008 	sub.w	r0, r0, #8
 800b99c:	e7ec      	b.n	800b978 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b99e:	bf00      	nop

0800b9a0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b9a0:	b508      	push	{r3, lr}
 800b9a2:	4b05      	ldr	r3, [pc, #20]	@ (800b9b8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b9a4:	6818      	ldr	r0, [r3, #0]
 800b9a6:	6803      	ldr	r3, [r0, #0]
 800b9a8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b9ac:	4798      	blx	r3
 800b9ae:	1e43      	subs	r3, r0, #1
 800b9b0:	4258      	negs	r0, r3
 800b9b2:	4158      	adcs	r0, r3
 800b9b4:	bd08      	pop	{r3, pc}
 800b9b6:	bf00      	nop
 800b9b8:	20013ff8 	.word	0x20013ff8

0800b9bc <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b9bc:	4770      	bx	lr

0800b9be <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b9be:	3808      	subs	r0, #8
 800b9c0:	4770      	bx	lr

0800b9c2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b9c2:	b430      	push	{r4, r5}
 800b9c4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b9c8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b9cc:	8a02      	ldrh	r2, [r0, #16]
 800b9ce:	9202      	str	r2, [sp, #8]
 800b9d0:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b9d4:	68c2      	ldr	r2, [r0, #12]
 800b9d6:	4629      	mov	r1, r5
 800b9d8:	4620      	mov	r0, r4
 800b9da:	bc30      	pop	{r4, r5}
 800b9dc:	f7f5 baba 	b.w	8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b9e0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b9e0:	f7f5 baac 	b.w	8000f3c <_ZN8touchgfx5paint8tearDownEv>

0800b9e4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b9e4:	b510      	push	{r4, lr}
 800b9e6:	2114      	movs	r1, #20
 800b9e8:	4604      	mov	r4, r0
 800b9ea:	f016 f85a 	bl	8021aa2 <_ZdlPvj>
 800b9ee:	4620      	mov	r0, r4
 800b9f0:	bd10      	pop	{r4, pc}

0800b9f2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b9f2:	f1a0 0008 	sub.w	r0, r0, #8
 800b9f6:	e7f5      	b.n	800b9e4 <_ZN8touchgfx13PainterRGB565D0Ev>

0800b9f8 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800b9f8:	2300      	movs	r3, #0
 800b9fa:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800b9fc:	8503      	strh	r3, [r0, #40]	@ 0x28
 800b9fe:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800ba00:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800ba02:	6980      	ldr	r0, [r0, #24]
 800ba04:	b110      	cbz	r0, 800ba0c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800ba06:	6803      	ldr	r3, [r0, #0]
 800ba08:	691b      	ldr	r3, [r3, #16]
 800ba0a:	4718      	bx	r3
 800ba0c:	4770      	bx	lr

0800ba0e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800ba0e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800ba12:	4770      	bx	lr

0800ba14 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800ba14:	b538      	push	{r3, r4, r5, lr}
 800ba16:	0e0b      	lsrs	r3, r1, #24
 800ba18:	7783      	strb	r3, [r0, #30]
 800ba1a:	6803      	ldr	r3, [r0, #0]
 800ba1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ba1e:	4604      	mov	r4, r0
 800ba20:	460d      	mov	r5, r1
 800ba22:	4798      	blx	r3
 800ba24:	6803      	ldr	r3, [r0, #0]
 800ba26:	4629      	mov	r1, r5
 800ba28:	689b      	ldr	r3, [r3, #8]
 800ba2a:	4798      	blx	r3
 800ba2c:	6823      	ldr	r3, [r4, #0]
 800ba2e:	4620      	mov	r0, r4
 800ba30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ba32:	4798      	blx	r3
 800ba34:	61a0      	str	r0, [r4, #24]
 800ba36:	bd38      	pop	{r3, r4, r5, pc}

0800ba38 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800ba38:	7741      	strb	r1, [r0, #29]
 800ba3a:	4770      	bx	lr

0800ba3c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800ba3c:	b530      	push	{r4, r5, lr}
 800ba3e:	460d      	mov	r5, r1
 800ba40:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800ba44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ba48:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ba4c:	682b      	ldr	r3, [r5, #0]
 800ba4e:	6023      	str	r3, [r4, #0]
 800ba50:	bd30      	pop	{r4, r5, pc}

0800ba52 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800ba52:	b538      	push	{r3, r4, r5, lr}
 800ba54:	4604      	mov	r4, r0
 800ba56:	1d03      	adds	r3, r0, #4
 800ba58:	6808      	ldr	r0, [r1, #0]
 800ba5a:	6849      	ldr	r1, [r1, #4]
 800ba5c:	c303      	stmia	r3!, {r0, r1}
 800ba5e:	6813      	ldr	r3, [r2, #0]
 800ba60:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800ba64:	6853      	ldr	r3, [r2, #4]
 800ba66:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800ba6a:	2500      	movs	r5, #0
 800ba6c:	61a5      	str	r5, [r4, #24]
 800ba6e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800ba72:	f005 fac1 	bl	8010ff8 <_ZN8touchgfx9Matrix3x35resetEv>
 800ba76:	23ff      	movs	r3, #255	@ 0xff
 800ba78:	7763      	strb	r3, [r4, #29]
 800ba7a:	77a3      	strb	r3, [r4, #30]
 800ba7c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ba80:	6323      	str	r3, [r4, #48]	@ 0x30
 800ba82:	2301      	movs	r3, #1
 800ba84:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800ba88:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800ba8c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800ba90 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800ba90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba94:	ed2d 8b0a 	vpush	{d8-d12}
 800ba98:	ee70 7a41 	vsub.f32	s15, s0, s2
 800ba9c:	b087      	sub	sp, #28
 800ba9e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800baa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800baa6:	4605      	mov	r5, r0
 800baa8:	eef0 9a40 	vmov.f32	s19, s0
 800baac:	eeb0 aa60 	vmov.f32	s20, s1
 800bab0:	eeb0 9a41 	vmov.f32	s18, s2
 800bab4:	eef0 8a61 	vmov.f32	s17, s3
 800bab8:	eeb0 ca42 	vmov.f32	s24, s4
 800babc:	eef0 ca62 	vmov.f32	s25, s5
 800bac0:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800bac4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800bac6:	6802      	ldr	r2, [r0, #0]
 800bac8:	d112      	bne.n	800baf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800baca:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800bace:	eef5 7a40 	vcmp.f32	s15, #0.0
 800bad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bad6:	d10b      	bne.n	800baf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800bad8:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800badc:	3901      	subs	r1, #1
 800bade:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800bae0:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800bae4:	b007      	add	sp, #28
 800bae6:	ecbd 8b0a 	vpop	{d8-d12}
 800baea:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800baee:	4710      	bx	r2
 800baf0:	23ff      	movs	r3, #255	@ 0xff
 800baf2:	77ab      	strb	r3, [r5, #30]
 800baf4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800baf6:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800bdbc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800bafa:	4628      	mov	r0, r5
 800bafc:	4798      	blx	r3
 800bafe:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800bb02:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800bb06:	80c3      	strh	r3, [r0, #6]
 800bb08:	eef0 0a4a 	vmov.f32	s1, s20
 800bb0c:	eeb0 0a69 	vmov.f32	s0, s19
 800bb10:	4604      	mov	r4, r0
 800bb12:	4640      	mov	r0, r8
 800bb14:	f005 fb1f 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bb18:	4640      	mov	r0, r8
 800bb1a:	eeb0 ba40 	vmov.f32	s22, s0
 800bb1e:	eef0 ba60 	vmov.f32	s23, s1
 800bb22:	ed8d 0a00 	vstr	s0, [sp]
 800bb26:	edcd 0a01 	vstr	s1, [sp, #4]
 800bb2a:	eeb0 0a49 	vmov.f32	s0, s18
 800bb2e:	eef0 0a68 	vmov.f32	s1, s17
 800bb32:	f005 fb10 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bb36:	eeb4 ba40 	vcmp.f32	s22, s0
 800bb3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb3e:	eef4 ba60 	vcmp.f32	s23, s1
 800bb42:	bf0c      	ite	eq
 800bb44:	2301      	moveq	r3, #1
 800bb46:	2300      	movne	r3, #0
 800bb48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb4c:	eeb4 ba40 	vcmp.f32	s22, s0
 800bb50:	7463      	strb	r3, [r4, #17]
 800bb52:	bf0c      	ite	eq
 800bb54:	2301      	moveq	r3, #1
 800bb56:	2300      	movne	r3, #0
 800bb58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb5c:	eeb0 8a40 	vmov.f32	s16, s0
 800bb60:	eef0 aa60 	vmov.f32	s21, s1
 800bb64:	ed8d 0a02 	vstr	s0, [sp, #8]
 800bb68:	edcd 0a03 	vstr	s1, [sp, #12]
 800bb6c:	74a3      	strb	r3, [r4, #18]
 800bb6e:	d030      	beq.n	800bbd2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bb70:	eef4 ba60 	vcmp.f32	s23, s1
 800bb74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb78:	d02b      	beq.n	800bbd2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bb7a:	ee39 9a69 	vsub.f32	s18, s18, s19
 800bb7e:	ee78 8aca 	vsub.f32	s17, s17, s20
 800bb82:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800bb86:	4640      	mov	r0, r8
 800bb88:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800bb8c:	eef0 0a4a 	vmov.f32	s1, s20
 800bb90:	eeb0 0a69 	vmov.f32	s0, s19
 800bb94:	eea7 0acc 	vfms.f32	s0, s15, s24
 800bb98:	eeec 0a87 	vfma.f32	s1, s25, s14
 800bb9c:	f005 fadb 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bba0:	f899 3000 	ldrb.w	r3, [r9]
 800bba4:	edcd 0a05 	vstr	s1, [sp, #20]
 800bba8:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800bbac:	2b01      	cmp	r3, #1
 800bbae:	ed8d 0a04 	vstr	s0, [sp, #16]
 800bbb2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bbb6:	bf02      	ittt	eq
 800bbb8:	eef1 7a60 	vnegeq.f32	s15, s1
 800bbbc:	eef0 0a40 	vmoveq.f32	s1, s0
 800bbc0:	eeb0 0a67 	vmoveq.f32	s0, s15
 800bbc4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800bbc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbcc:	d134      	bne.n	800bc38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800bbce:	2301      	movs	r3, #1
 800bbd0:	74a3      	strb	r3, [r4, #18]
 800bbd2:	f899 2000 	ldrb.w	r2, [r9]
 800bbd6:	7c63      	ldrb	r3, [r4, #17]
 800bbd8:	2a01      	cmp	r2, #1
 800bbda:	f040 80a3 	bne.w	800bd24 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800bbde:	2b00      	cmp	r3, #0
 800bbe0:	d072      	beq.n	800bcc8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800bbe2:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800bbe6:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800bdb4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bbea:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bbee:	eef4 baea 	vcmpe.f32	s23, s21
 800bbf2:	edc4 7a08 	vstr	s15, [r4, #32]
 800bbf6:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800bbfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbfe:	ee17 3a90 	vmov	r3, s15
 800bc02:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800bc06:	b21a      	sxth	r2, r3
 800bc08:	ee17 3a90 	vmov	r3, s15
 800bc0c:	b21b      	sxth	r3, r3
 800bc0e:	bf47      	ittee	mi
 800bc10:	8123      	strhmi	r3, [r4, #8]
 800bc12:	8162      	strhmi	r2, [r4, #10]
 800bc14:	8122      	strhpl	r2, [r4, #8]
 800bc16:	8163      	strhpl	r3, [r4, #10]
 800bc18:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bc1c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bc20:	1a9b      	subs	r3, r3, r2
 800bc22:	ee07 3a90 	vmov	s15, r3
 800bc26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bc2a:	2300      	movs	r3, #0
 800bc2c:	7463      	strb	r3, [r4, #17]
 800bc2e:	edc4 7a07 	vstr	s15, [r4, #28]
 800bc32:	2301      	movs	r3, #1
 800bc34:	74a3      	strb	r3, [r4, #18]
 800bc36:	e03f      	b.n	800bcb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bc38:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800bc3c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800bc40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc44:	ed84 7a05 	vstr	s14, [r4, #20]
 800bc48:	d102      	bne.n	800bc50 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800bc4a:	2301      	movs	r3, #1
 800bc4c:	7463      	strb	r3, [r4, #17]
 800bc4e:	e7c0      	b.n	800bbd2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bc50:	2b01      	cmp	r3, #1
 800bc52:	bf03      	ittte	eq
 800bc54:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800bc58:	ee07 2a90 	vmoveq	s15, r2
 800bc5c:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800bc60:	eef0 7a6b 	vmovne.f32	s15, s23
 800bc64:	bf0a      	itet	eq
 800bc66:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800bc6a:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800bc6e:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800bc72:	2b01      	cmp	r3, #1
 800bc74:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800bc78:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800bc7c:	edc4 7a06 	vstr	s15, [r4, #24]
 800bc80:	bf02      	ittt	eq
 800bc82:	eef1 7a48 	vnegeq.f32	s15, s16
 800bc86:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800bc8a:	eef0 aa67 	vmoveq.f32	s21, s15
 800bc8e:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800bc92:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800bdb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800bc96:	ee38 8a67 	vsub.f32	s16, s16, s15
 800bc9a:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800bc9e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800bca2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bca6:	ed84 8a07 	vstr	s16, [r4, #28]
 800bcaa:	edc4 7a08 	vstr	s15, [r4, #32]
 800bcae:	d503      	bpl.n	800bcb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bcb0:	eeb1 8a48 	vneg.f32	s16, s16
 800bcb4:	ed84 8a07 	vstr	s16, [r4, #28]
 800bcb8:	60e7      	str	r7, [r4, #12]
 800bcba:	7426      	strb	r6, [r4, #16]
 800bcbc:	61ac      	str	r4, [r5, #24]
 800bcbe:	b007      	add	sp, #28
 800bcc0:	ecbd 8b0a 	vpop	{d8-d12}
 800bcc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bcc8:	7ca3      	ldrb	r3, [r4, #18]
 800bcca:	2b00      	cmp	r3, #0
 800bccc:	d0f4      	beq.n	800bcb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bcce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800bcd2:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800bdb4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bcd6:	ee00 3a10 	vmov	s0, r3
 800bcda:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800bcde:	ee30 8a48 	vsub.f32	s16, s0, s16
 800bce2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bce6:	ee38 7a40 	vsub.f32	s14, s16, s0
 800bcea:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800bcee:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bcf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcf6:	edc4 7a08 	vstr	s15, [r4, #32]
 800bcfa:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800bcfe:	ee17 3a90 	vmov	r3, s15
 800bd02:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800bd06:	b21a      	sxth	r2, r3
 800bd08:	ee17 3a90 	vmov	r3, s15
 800bd0c:	b21b      	sxth	r3, r3
 800bd0e:	bfcc      	ite	gt
 800bd10:	8123      	strhgt	r3, [r4, #8]
 800bd12:	8163      	strhle	r3, [r4, #10]
 800bd14:	f04f 0301 	mov.w	r3, #1
 800bd18:	7463      	strb	r3, [r4, #17]
 800bd1a:	bfcc      	ite	gt
 800bd1c:	8162      	strhgt	r2, [r4, #10]
 800bd1e:	8122      	strhle	r2, [r4, #8]
 800bd20:	2300      	movs	r3, #0
 800bd22:	e787      	b.n	800bc34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800bd24:	b1db      	cbz	r3, 800bd5e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800bd26:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800bd2a:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800bdb4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bd2e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bd32:	eef4 baea 	vcmpe.f32	s23, s21
 800bd36:	edc4 7a08 	vstr	s15, [r4, #32]
 800bd3a:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800bd3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd42:	ee17 3a90 	vmov	r3, s15
 800bd46:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800bd4a:	b21a      	sxth	r2, r3
 800bd4c:	ee17 3a90 	vmov	r3, s15
 800bd50:	b21b      	sxth	r3, r3
 800bd52:	bf47      	ittee	mi
 800bd54:	8123      	strhmi	r3, [r4, #8]
 800bd56:	8162      	strhmi	r2, [r4, #10]
 800bd58:	8122      	strhpl	r2, [r4, #8]
 800bd5a:	8163      	strhpl	r3, [r4, #10]
 800bd5c:	e7ac      	b.n	800bcb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bd5e:	7ca3      	ldrb	r3, [r4, #18]
 800bd60:	2b00      	cmp	r3, #0
 800bd62:	d0a9      	beq.n	800bcb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bd64:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800bd68:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800bdb4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bd6c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bd70:	eeb4 bac8 	vcmpe.f32	s22, s16
 800bd74:	edc4 7a08 	vstr	s15, [r4, #32]
 800bd78:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800bd7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd80:	ee17 3a90 	vmov	r3, s15
 800bd84:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800bd88:	b21a      	sxth	r2, r3
 800bd8a:	ee17 3a90 	vmov	r3, s15
 800bd8e:	b21b      	sxth	r3, r3
 800bd90:	bf47      	ittee	mi
 800bd92:	8123      	strhmi	r3, [r4, #8]
 800bd94:	8162      	strhmi	r2, [r4, #10]
 800bd96:	8122      	strhpl	r2, [r4, #8]
 800bd98:	8163      	strhpl	r3, [r4, #10]
 800bd9a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd9e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bda2:	1a9b      	subs	r3, r3, r2
 800bda4:	ee07 3a90 	vmov	s15, r3
 800bda8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bdac:	edc4 7a07 	vstr	s15, [r4, #28]
 800bdb0:	e782      	b.n	800bcb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bdb2:	bf00      	nop
 800bdb4:	447ffffe 	.word	0x447ffffe
 800bdb8:	44800000 	.word	0x44800000
 800bdbc:	20013fee 	.word	0x20013fee

0800bdc0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800bdc0:	b510      	push	{r4, lr}
 800bdc2:	2100      	movs	r1, #0
 800bdc4:	ed2d 8b02 	vpush	{d8}
 800bdc8:	eef0 8a62 	vmov.f32	s17, s5
 800bdcc:	4604      	mov	r4, r0
 800bdce:	eeb0 8a42 	vmov.f32	s16, s4
 800bdd2:	f015 fbf5 	bl	80215c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800bdd6:	eef0 7a68 	vmov.f32	s15, s17
 800bdda:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bdde:	6823      	ldr	r3, [r4, #0]
 800bde0:	ee17 2a90 	vmov	r2, s15
 800bde4:	eef0 7a48 	vmov.f32	s15, s16
 800bde8:	ecbd 8b02 	vpop	{d8}
 800bdec:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bdf0:	4620      	mov	r0, r4
 800bdf2:	689b      	ldr	r3, [r3, #8]
 800bdf4:	ee17 1a90 	vmov	r1, s15
 800bdf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdfc:	4718      	bx	r3

0800bdfe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800bdfe:	b510      	push	{r4, lr}
 800be00:	2100      	movs	r1, #0
 800be02:	ed2d 8b02 	vpush	{d8}
 800be06:	eef0 8a63 	vmov.f32	s17, s7
 800be0a:	4604      	mov	r4, r0
 800be0c:	eeb0 8a43 	vmov.f32	s16, s6
 800be10:	f015 fc98 	bl	8021744 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800be14:	eef0 7a68 	vmov.f32	s15, s17
 800be18:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be1c:	6823      	ldr	r3, [r4, #0]
 800be1e:	ee17 2a90 	vmov	r2, s15
 800be22:	eef0 7a48 	vmov.f32	s15, s16
 800be26:	ecbd 8b02 	vpop	{d8}
 800be2a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be2e:	4620      	mov	r0, r4
 800be30:	689b      	ldr	r3, [r3, #8]
 800be32:	ee17 1a90 	vmov	r1, s15
 800be36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be3a:	4718      	bx	r3

0800be3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800be3c:	b513      	push	{r0, r1, r4, lr}
 800be3e:	4604      	mov	r4, r0
 800be40:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800be42:	f005 f988 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800be46:	eef0 7a60 	vmov.f32	s15, s1
 800be4a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be4e:	4620      	mov	r0, r4
 800be50:	ee17 2a90 	vmov	r2, s15
 800be54:	eef0 7a40 	vmov.f32	s15, s0
 800be58:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be5c:	ee17 1a90 	vmov	r1, s15
 800be60:	b002      	add	sp, #8
 800be62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be66:	f015 bb05 	b.w	8021474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800be6a:	b513      	push	{r0, r1, r4, lr}
 800be6c:	4604      	mov	r4, r0
 800be6e:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800be70:	f005 f971 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800be74:	eef0 7a60 	vmov.f32	s15, s1
 800be78:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be7c:	4620      	mov	r0, r4
 800be7e:	ee17 2a90 	vmov	r2, s15
 800be82:	eef0 7a40 	vmov.f32	s15, s0
 800be86:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be8a:	ee17 1a90 	vmov	r1, s15
 800be8e:	b002      	add	sp, #8
 800be90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be94:	f015 bb3b 	b.w	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800be98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800be98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be9a:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800be9e:	2400      	movs	r4, #0
 800bea0:	9f07      	ldr	r7, [sp, #28]
 800bea2:	4463      	add	r3, ip
 800bea4:	4626      	mov	r6, r4
 800bea6:	f04f 0e01 	mov.w	lr, #1
 800beaa:	4563      	cmp	r3, ip
 800beac:	d02d      	beq.n	800bf0a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800beae:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800beb2:	2d06      	cmp	r5, #6
 800beb4:	d8f9      	bhi.n	800beaa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800beb6:	fa0e f505 	lsl.w	r5, lr, r5
 800beba:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800bebe:	d10d      	bne.n	800bedc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800bec0:	f015 0f10 	tst.w	r5, #16
 800bec4:	d117      	bne.n	800bef6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800bec6:	072d      	lsls	r5, r5, #28
 800bec8:	d5ef      	bpl.n	800beaa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800beca:	3801      	subs	r0, #1
 800becc:	b91e      	cbnz	r6, 800bed6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800bece:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800bed2:	682d      	ldr	r5, [r5, #0]
 800bed4:	600d      	str	r5, [r1, #0]
 800bed6:	b96c      	cbnz	r4, 800bef4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800bed8:	2601      	movs	r6, #1
 800beda:	e7e6      	b.n	800beaa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800bedc:	b926      	cbnz	r6, 800bee8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800bede:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800bee2:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800bee6:	600b      	str	r3, [r1, #0]
 800bee8:	b924      	cbnz	r4, 800bef4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800beea:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800beee:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800bef2:	6013      	str	r3, [r2, #0]
 800bef4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bef6:	3801      	subs	r0, #1
 800bef8:	b91c      	cbnz	r4, 800bf02 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800befa:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800befe:	6824      	ldr	r4, [r4, #0]
 800bf00:	6014      	str	r4, [r2, #0]
 800bf02:	2e00      	cmp	r6, #0
 800bf04:	d1f6      	bne.n	800bef4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800bf06:	2401      	movs	r4, #1
 800bf08:	e7cf      	b.n	800beaa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800bf0a:	b90e      	cbnz	r6, 800bf10 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800bf0c:	2300      	movs	r3, #0
 800bf0e:	600b      	str	r3, [r1, #0]
 800bf10:	2c00      	cmp	r4, #0
 800bf12:	d1ef      	bne.n	800bef4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800bf14:	2300      	movs	r3, #0
 800bf16:	e7ec      	b.n	800bef2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800bf18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800bf18:	b538      	push	{r3, r4, r5, lr}
 800bf1a:	4604      	mov	r4, r0
 800bf1c:	ed2d 8b0a 	vpush	{d8-d12}
 800bf20:	460d      	mov	r5, r1
 800bf22:	eef0 ba40 	vmov.f32	s23, s0
 800bf26:	eeb0 ca60 	vmov.f32	s24, s1
 800bf2a:	eef0 aa41 	vmov.f32	s21, s2
 800bf2e:	eeb0 ba61 	vmov.f32	s22, s3
 800bf32:	eeb0 9a42 	vmov.f32	s18, s4
 800bf36:	eef0 9a62 	vmov.f32	s19, s5
 800bf3a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800bf3e:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800bf42:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800bf46:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800bf4a:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800bf4e:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800bf52:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800bf56:	ee20 0a00 	vmul.f32	s0, s0, s0
 800bf5a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800bf5e:	f015 fdcb 	bl	8021af8 <sqrtf>
 800bf62:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800bf66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf6a:	d12e      	bne.n	800bfca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800bf6c:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800bf70:	ee39 7acb 	vsub.f32	s14, s19, s22
 800bf74:	eeb0 8a6a 	vmov.f32	s16, s21
 800bf78:	eef0 8a4b 	vmov.f32	s17, s22
 800bf7c:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800bf80:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800bf84:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800bf88:	eee7 8aca 	vfms.f32	s17, s15, s20
 800bf8c:	2d02      	cmp	r5, #2
 800bf8e:	dc2f      	bgt.n	800bff0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800bf90:	3501      	adds	r5, #1
 800bf92:	eef0 1a4b 	vmov.f32	s3, s22
 800bf96:	eeb0 1a6a 	vmov.f32	s2, s21
 800bf9a:	4629      	mov	r1, r5
 800bf9c:	eef0 2a68 	vmov.f32	s5, s17
 800bfa0:	eeb0 2a48 	vmov.f32	s4, s16
 800bfa4:	eef0 0a4c 	vmov.f32	s1, s24
 800bfa8:	eeb0 0a6b 	vmov.f32	s0, s23
 800bfac:	4620      	mov	r0, r4
 800bfae:	f7ff ffb3 	bl	800bf18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800bfb2:	eef0 0a68 	vmov.f32	s1, s17
 800bfb6:	eeb0 0a48 	vmov.f32	s0, s16
 800bfba:	4620      	mov	r0, r4
 800bfbc:	f7ff ff55 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bfc0:	eeb0 ba68 	vmov.f32	s22, s17
 800bfc4:	eef0 aa48 	vmov.f32	s21, s16
 800bfc8:	e7b9      	b.n	800bf3e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800bfca:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800bfce:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800bfd2:	ee78 8acc 	vsub.f32	s17, s17, s24
 800bfd6:	ee28 7a27 	vmul.f32	s14, s16, s15
 800bfda:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800bfde:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800bfe2:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800bfe6:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800bfea:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800bfee:	e7cd      	b.n	800bf8c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800bff0:	eef0 0a68 	vmov.f32	s1, s17
 800bff4:	eeb0 0a48 	vmov.f32	s0, s16
 800bff8:	4620      	mov	r0, r4
 800bffa:	f7ff ff36 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bffe:	ecbd 8b0a 	vpop	{d8-d12}
 800c002:	bd38      	pop	{r3, r4, r5, pc}

0800c004 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800c004:	b510      	push	{r4, lr}
 800c006:	ed2d 8b0a 	vpush	{d8-d12}
 800c00a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800c00e:	2b02      	cmp	r3, #2
 800c010:	4604      	mov	r4, r0
 800c012:	eeb0 ca40 	vmov.f32	s24, s0
 800c016:	eeb0 9a60 	vmov.f32	s18, s1
 800c01a:	eef0 9a41 	vmov.f32	s19, s2
 800c01e:	eef0 8a61 	vmov.f32	s17, s3
 800c022:	eeb0 ba42 	vmov.f32	s22, s4
 800c026:	eef0 ba62 	vmov.f32	s23, s5
 800c02a:	eeb0 aa43 	vmov.f32	s20, s6
 800c02e:	eef0 aa63 	vmov.f32	s21, s7
 800c032:	eeb0 8a44 	vmov.f32	s16, s8
 800c036:	eef0 ca64 	vmov.f32	s25, s9
 800c03a:	d12c      	bne.n	800c096 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800c03c:	eef0 0a62 	vmov.f32	s1, s5
 800c040:	eeb0 0a42 	vmov.f32	s0, s4
 800c044:	f7ff ff11 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c048:	ee79 9acb 	vsub.f32	s19, s19, s22
 800c04c:	ee7a caec 	vsub.f32	s25, s21, s25
 800c050:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800c054:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c058:	ee69 9aac 	vmul.f32	s19, s19, s25
 800c05c:	ee28 8a88 	vmul.f32	s16, s17, s16
 800c060:	eef4 9ac8 	vcmpe.f32	s19, s16
 800c064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c068:	db0f      	blt.n	800c08a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800c06a:	2101      	movs	r1, #1
 800c06c:	eef0 2a6a 	vmov.f32	s5, s21
 800c070:	eeb0 2a4a 	vmov.f32	s4, s20
 800c074:	eef0 1a6b 	vmov.f32	s3, s23
 800c078:	eeb0 1a4b 	vmov.f32	s2, s22
 800c07c:	eef0 0a49 	vmov.f32	s1, s18
 800c080:	eeb0 0a4c 	vmov.f32	s0, s24
 800c084:	4620      	mov	r0, r4
 800c086:	f7ff ff47 	bl	800bf18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c08a:	eef0 0a6a 	vmov.f32	s1, s21
 800c08e:	eeb0 0a4a 	vmov.f32	s0, s20
 800c092:	4620      	mov	r0, r4
 800c094:	e035      	b.n	800c102 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800c096:	2b01      	cmp	r3, #1
 800c098:	d138      	bne.n	800c10c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c09a:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800c09e:	ee33 6a48 	vsub.f32	s12, s6, s16
 800c0a2:	ee71 7a42 	vsub.f32	s15, s2, s4
 800c0a6:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800c0aa:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800c0ae:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800c0b2:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c0b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c0ba:	d027      	beq.n	800c10c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c0bc:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800c0c0:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800c0c4:	eea4 8a83 	vfma.f32	s16, s9, s6
 800c0c8:	eee1 8a22 	vfma.f32	s17, s2, s5
 800c0cc:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800c0d0:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800c0d4:	eee6 7a28 	vfma.f32	s15, s12, s17
 800c0d8:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800c0dc:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800c0e0:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800c0e4:	ee3c ca40 	vsub.f32	s24, s24, s0
 800c0e8:	ee39 9a60 	vsub.f32	s18, s18, s1
 800c0ec:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800c0f0:	ee29 9a09 	vmul.f32	s18, s18, s18
 800c0f4:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800c0f8:	eef4 7ac9 	vcmpe.f32	s15, s18
 800c0fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c100:	db04      	blt.n	800c10c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c102:	f7ff feb2 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c106:	ecbd 8b0a 	vpop	{d8-d12}
 800c10a:	bd10      	pop	{r4, pc}
 800c10c:	eef0 0a6b 	vmov.f32	s1, s23
 800c110:	eeb0 0a4b 	vmov.f32	s0, s22
 800c114:	4620      	mov	r0, r4
 800c116:	f7ff fea8 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c11a:	e7b6      	b.n	800c08a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800c11c:	b510      	push	{r4, lr}
 800c11e:	ed2d 8b0c 	vpush	{d8-d13}
 800c122:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800c126:	4604      	mov	r4, r0
 800c128:	eeb0 9a40 	vmov.f32	s18, s0
 800c12c:	eef0 9a60 	vmov.f32	s19, s1
 800c130:	eef0 aa41 	vmov.f32	s21, s2
 800c134:	eeb0 ba61 	vmov.f32	s22, s3
 800c138:	b933      	cbnz	r3, 800c148 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800c13a:	f7ff fe96 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c13e:	eef0 0a4b 	vmov.f32	s1, s22
 800c142:	eeb0 0a6a 	vmov.f32	s0, s21
 800c146:	e015      	b.n	800c174 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800c148:	ee71 8a40 	vsub.f32	s17, s2, s0
 800c14c:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800c150:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800c154:	2b02      	cmp	r3, #2
 800c156:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800c15a:	ee28 8a27 	vmul.f32	s16, s16, s15
 800c15e:	d10f      	bne.n	800c180 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800c160:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c164:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c168:	f7ff fe7f 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c16c:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800c170:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800c174:	4620      	mov	r0, r4
 800c176:	f7ff fe78 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c17a:	ecbd 8b0c 	vpop	{d8-d13}
 800c17e:	bd10      	pop	{r4, pc}
 800c180:	f7ff fe73 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c184:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800c2bc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800c188:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800c2c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800c18c:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800c2c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800c190:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800c2c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800c194:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800c2cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800c198:	eef0 0a69 	vmov.f32	s1, s19
 800c19c:	eeb0 0a49 	vmov.f32	s0, s18
 800c1a0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c1a4:	4620      	mov	r0, r4
 800c1a6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c1aa:	eeb1 aa68 	vneg.f32	s20, s17
 800c1ae:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c1b2:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c1b6:	f7ff fe58 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1ba:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800c2d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800c1be:	eef0 0a69 	vmov.f32	s1, s19
 800c1c2:	eeb0 0a49 	vmov.f32	s0, s18
 800c1c6:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c1ca:	4620      	mov	r0, r4
 800c1cc:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c1d0:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c1d4:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c1d8:	f7ff fe47 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1dc:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800c2d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800c1e0:	eef0 0a69 	vmov.f32	s1, s19
 800c1e4:	eeb0 0a49 	vmov.f32	s0, s18
 800c1e8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c1ec:	4620      	mov	r0, r4
 800c1ee:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c1f2:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c1f6:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c1fa:	f7ff fe36 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1fe:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800c2d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800c202:	eef0 0a69 	vmov.f32	s1, s19
 800c206:	eeb0 0a49 	vmov.f32	s0, s18
 800c20a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c20e:	4620      	mov	r0, r4
 800c210:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c214:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c218:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c21c:	f7ff fe25 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c220:	ee79 0a88 	vadd.f32	s1, s19, s16
 800c224:	ee39 0a28 	vadd.f32	s0, s18, s17
 800c228:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c22c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c230:	4620      	mov	r0, r4
 800c232:	f7ff fe1a 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c236:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800c2dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800c23a:	eef0 0a69 	vmov.f32	s1, s19
 800c23e:	eeb0 0a49 	vmov.f32	s0, s18
 800c242:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c246:	4620      	mov	r0, r4
 800c248:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c24c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c250:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c254:	f7ff fe09 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c258:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800c2e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800c25c:	eef0 0a69 	vmov.f32	s1, s19
 800c260:	eeb0 0a49 	vmov.f32	s0, s18
 800c264:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c268:	4620      	mov	r0, r4
 800c26a:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c26e:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c272:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c276:	f7ff fdf8 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c27a:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800c2e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800c27e:	eef0 0a69 	vmov.f32	s1, s19
 800c282:	eeb0 0a49 	vmov.f32	s0, s18
 800c286:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c28a:	4620      	mov	r0, r4
 800c28c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c290:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c294:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c298:	f7ff fde7 	bl	800be6a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c29c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800c2e8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800c2a0:	eef0 0a69 	vmov.f32	s1, s19
 800c2a4:	eeb0 0a49 	vmov.f32	s0, s18
 800c2a8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c2ac:	4620      	mov	r0, r4
 800c2ae:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c2b2:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c2b6:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c2ba:	e73e      	b.n	800c13a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800c2bc:	3d23d70a 	.word	0x3d23d70a
 800c2c0:	3e8f5c29 	.word	0x3e8f5c29
 800c2c4:	3f19999a 	.word	0x3f19999a
 800c2c8:	3f4ccccd 	.word	0x3f4ccccd
 800c2cc:	3f75c28f 	.word	0x3f75c28f
 800c2d0:	3e4ccccd 	.word	0x3e4ccccd
 800c2d4:	3ecccccd 	.word	0x3ecccccd
 800c2d8:	3f3851ec 	.word	0x3f3851ec
 800c2dc:	3fa3d70a 	.word	0x3fa3d70a
 800c2e0:	3fcccccd 	.word	0x3fcccccd
 800c2e4:	3fe66666 	.word	0x3fe66666
 800c2e8:	3ffae148 	.word	0x3ffae148

0800c2ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800c2ec:	b570      	push	{r4, r5, r6, lr}
 800c2ee:	ed2d 8b06 	vpush	{d8-d10}
 800c2f2:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c2f6:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800c2fa:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800c2fe:	ee30 9a49 	vsub.f32	s18, s0, s18
 800c302:	eef0 aa40 	vmov.f32	s21, s0
 800c306:	ee28 0a08 	vmul.f32	s0, s16, s16
 800c30a:	4604      	mov	r4, r0
 800c30c:	eea9 0a09 	vfma.f32	s0, s18, s18
 800c310:	eeb0 aa60 	vmov.f32	s20, s1
 800c314:	f015 fbf0 	bl	8021af8 <sqrtf>
 800c318:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800c31c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c320:	dd36      	ble.n	800c390 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800c322:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c326:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800c32a:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800c32e:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800c332:	2600      	movs	r6, #0
 800c334:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c338:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800c33c:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800c340:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800c344:	ee70 9a28 	vadd.f32	s19, s0, s17
 800c348:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800c34c:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800c350:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c354:	b1fd      	cbz	r5, 800c396 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800c356:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800c35a:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800c35e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800c362:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800c366:	eef0 0a49 	vmov.f32	s1, s18
 800c36a:	eeb0 0a69 	vmov.f32	s0, s19
 800c36e:	4620      	mov	r0, r4
 800c370:	f7ff fd64 	bl	800be3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c374:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800c378:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800c37c:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800c380:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800c384:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800c388:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800c38c:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800c390:	ecbd 8b06 	vpop	{d8-d10}
 800c394:	bd70      	pop	{r4, r5, r6, pc}
 800c396:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800c39a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c39e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c3a2:	b16b      	cbz	r3, 800c3c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800c3a4:	eef0 1a49 	vmov.f32	s3, s18
 800c3a8:	eeb0 1a69 	vmov.f32	s2, s19
 800c3ac:	eef0 0a62 	vmov.f32	s1, s5
 800c3b0:	eeb0 0a42 	vmov.f32	s0, s4
 800c3b4:	4620      	mov	r0, r4
 800c3b6:	f7ff feb1 	bl	800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c3ba:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800c3be:	e7db      	b.n	800c378 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800c3c0:	eef0 4a48 	vmov.f32	s9, s16
 800c3c4:	eeb0 4a68 	vmov.f32	s8, s17
 800c3c8:	eef0 3a49 	vmov.f32	s7, s18
 800c3cc:	eeb0 3a69 	vmov.f32	s6, s19
 800c3d0:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c3d4:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c3d8:	4620      	mov	r0, r4
 800c3da:	f7ff fe13 	bl	800c004 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c3de:	e7cb      	b.n	800c378 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800c3e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800c3e0:	ee07 2a90 	vmov	s15, r2
 800c3e4:	ee07 1a10 	vmov	s14, r1
 800c3e8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800c3ec:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800c3f0:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800c400 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800c3f4:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800c3f8:	ee20 0a27 	vmul.f32	s0, s0, s15
 800c3fc:	f7ff bf76 	b.w	800c2ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c400:	3d000000 	.word	0x3d000000

0800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800c404:	b538      	push	{r3, r4, r5, lr}
 800c406:	ed2d 8b02 	vpush	{d8}
 800c40a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800c40e:	4604      	mov	r4, r0
 800c410:	b31d      	cbz	r5, 800c45a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800c412:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800c416:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c41a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800c41e:	ee78 8a67 	vsub.f32	s17, s16, s15
 800c422:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c426:	eef0 0a68 	vmov.f32	s1, s17
 800c42a:	f7ff fd07 	bl	800be3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c42e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c432:	eef0 1a48 	vmov.f32	s3, s16
 800c436:	eeb0 0a41 	vmov.f32	s0, s2
 800c43a:	eef0 0a68 	vmov.f32	s1, s17
 800c43e:	4620      	mov	r0, r4
 800c440:	f7ff fe6c 	bl	800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c444:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c448:	eef0 1a68 	vmov.f32	s3, s17
 800c44c:	eef0 0a48 	vmov.f32	s1, s16
 800c450:	eeb0 0a41 	vmov.f32	s0, s2
 800c454:	4620      	mov	r0, r4
 800c456:	f7ff fe61 	bl	800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c45a:	ecbd 8b02 	vpop	{d8}
 800c45e:	4628      	mov	r0, r5
 800c460:	bd38      	pop	{r3, r4, r5, pc}

0800c462 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800c462:	b510      	push	{r4, lr}
 800c464:	ed2d 8b02 	vpush	{d8}
 800c468:	4604      	mov	r4, r0
 800c46a:	eeb0 8a40 	vmov.f32	s16, s0
 800c46e:	eef0 8a60 	vmov.f32	s17, s1
 800c472:	f7ff ffc7 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c476:	b9d0      	cbnz	r0, 800c4ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800c478:	4620      	mov	r0, r4
 800c47a:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800c47e:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800c482:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800c486:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800c48a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c48e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c492:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c496:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c49a:	eef0 0a68 	vmov.f32	s1, s17
 800c49e:	eeb0 0a48 	vmov.f32	s0, s16
 800c4a2:	f7ff fdaf 	bl	800c004 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c4a6:	2001      	movs	r0, #1
 800c4a8:	ecbd 8b02 	vpop	{d8}
 800c4ac:	bd10      	pop	{r4, pc}
 800c4ae:	2000      	movs	r0, #0
 800c4b0:	e7fa      	b.n	800c4a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800c4b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800c4b2:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800c4b6:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800c4ba:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800c4be:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800c4c2:	f7ff be2b 	b.w	800c11c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800c4c8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800c4c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4cc:	b089      	sub	sp, #36	@ 0x24
 800c4ce:	461c      	mov	r4, r3
 800c4d0:	f10d 0820 	add.w	r8, sp, #32
 800c4d4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c4d8:	9304      	str	r3, [sp, #16]
 800c4da:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800c4dc:	9105      	str	r1, [sp, #20]
 800c4de:	2300      	movs	r3, #0
 800c4e0:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800c4e4:	9306      	str	r3, [sp, #24]
 800c4e6:	f848 3d04 	str.w	r3, [r8, #-4]!
 800c4ea:	9b04      	ldr	r3, [sp, #16]
 800c4ec:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800c4f0:	4682      	mov	sl, r0
 800c4f2:	4615      	mov	r5, r2
 800c4f4:	9b05      	ldr	r3, [sp, #20]
 800c4f6:	429d      	cmp	r5, r3
 800c4f8:	d96d      	bls.n	800c5d6 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800c4fa:	3d01      	subs	r5, #1
 800c4fc:	f819 3005 	ldrb.w	r3, [r9, r5]
 800c500:	2b06      	cmp	r3, #6
 800c502:	d8f7      	bhi.n	800c4f4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c504:	a201      	add	r2, pc, #4	@ (adr r2, 800c50c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800c506:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c50a:	bf00      	nop
 800c50c:	0800c52b 	.word	0x0800c52b
 800c510:	0800c4f5 	.word	0x0800c4f5
 800c514:	0800c529 	.word	0x0800c529
 800c518:	0800c54d 	.word	0x0800c54d
 800c51c:	0800c54d 	.word	0x0800c54d
 800c520:	0800c551 	.word	0x0800c551
 800c524:	0800c591 	.word	0x0800c591
 800c528:	3c02      	subs	r4, #2
 800c52a:	4650      	mov	r0, sl
 800c52c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c530:	9400      	str	r4, [sp, #0]
 800c532:	462b      	mov	r3, r5
 800c534:	4642      	mov	r2, r8
 800c536:	a906      	add	r1, sp, #24
 800c538:	f7ff fcae 	bl	800be98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c53c:	eddd 0a07 	vldr	s1, [sp, #28]
 800c540:	ed9d 0a06 	vldr	s0, [sp, #24]
 800c544:	4630      	mov	r0, r6
 800c546:	f7ff fed1 	bl	800c2ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c54a:	e7d3      	b.n	800c4f4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c54c:	3c01      	subs	r4, #1
 800c54e:	e7ec      	b.n	800c52a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800c550:	f1a4 0b04 	sub.w	fp, r4, #4
 800c554:	3c02      	subs	r4, #2
 800c556:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c55a:	4650      	mov	r0, sl
 800c55c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c560:	f8cd b000 	str.w	fp, [sp]
 800c564:	462b      	mov	r3, r5
 800c566:	4642      	mov	r2, r8
 800c568:	a906      	add	r1, sp, #24
 800c56a:	f7ff fc95 	bl	800be98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c56e:	eddd 2a07 	vldr	s5, [sp, #28]
 800c572:	ed9d 2a06 	vldr	s4, [sp, #24]
 800c576:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c57a:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c57e:	edd4 0a01 	vldr	s1, [r4, #4]
 800c582:	ed94 0a00 	vldr	s0, [r4]
 800c586:	4630      	mov	r0, r6
 800c588:	f7ff fc1a 	bl	800bdc0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c58c:	465c      	mov	r4, fp
 800c58e:	e7b1      	b.n	800c4f4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c590:	f1a4 0b06 	sub.w	fp, r4, #6
 800c594:	3c02      	subs	r4, #2
 800c596:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c59a:	4650      	mov	r0, sl
 800c59c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c5a0:	f8cd b000 	str.w	fp, [sp]
 800c5a4:	462b      	mov	r3, r5
 800c5a6:	4642      	mov	r2, r8
 800c5a8:	a906      	add	r1, sp, #24
 800c5aa:	f7ff fc75 	bl	800be98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c5ae:	eddd 3a07 	vldr	s7, [sp, #28]
 800c5b2:	ed9d 3a06 	vldr	s6, [sp, #24]
 800c5b6:	ed54 2a03 	vldr	s5, [r4, #-12]
 800c5ba:	ed14 2a04 	vldr	s4, [r4, #-16]
 800c5be:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c5c2:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c5c6:	edd4 0a01 	vldr	s1, [r4, #4]
 800c5ca:	ed94 0a00 	vldr	s0, [r4]
 800c5ce:	4630      	mov	r0, r6
 800c5d0:	f7ff fc15 	bl	800bdfe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c5d4:	e7da      	b.n	800c58c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800c5d6:	9b04      	ldr	r3, [sp, #16]
 800c5d8:	b113      	cbz	r3, 800c5e0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800c5da:	4630      	mov	r0, r6
 800c5dc:	f7ff ff69 	bl	800c4b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800c5e0:	b009      	add	sp, #36	@ 0x24
 800c5e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5e6:	bf00      	nop

0800c5e8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800c5e8:	eef0 7a60 	vmov.f32	s15, s1
 800c5ec:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c5f0:	6803      	ldr	r3, [r0, #0]
 800c5f2:	ee17 2a90 	vmov	r2, s15
 800c5f6:	eef0 7a40 	vmov.f32	s15, s0
 800c5fa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c5fe:	689b      	ldr	r3, [r3, #8]
 800c600:	ee17 1a90 	vmov	r1, s15
 800c604:	4718      	bx	r3
	...

0800c608 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800c608:	b510      	push	{r4, lr}
 800c60a:	4b04      	ldr	r3, [pc, #16]	@ (800c61c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800c60c:	4604      	mov	r4, r0
 800c60e:	f840 3b14 	str.w	r3, [r0], #20
 800c612:	f001 f8d3 	bl	800d7bc <_ZN8touchgfx7OutlineD1Ev>
 800c616:	4620      	mov	r0, r4
 800c618:	bd10      	pop	{r4, pc}
 800c61a:	bf00      	nop
 800c61c:	08025640 	.word	0x08025640

0800c620 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800c620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c624:	ed2d 8b04 	vpush	{d8-d9}
 800c628:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800c62c:	b0b5      	sub	sp, #212	@ 0xd4
 800c62e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c632:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c636:	4605      	mov	r5, r0
 800c638:	468b      	mov	fp, r1
 800c63a:	9206      	str	r2, [sp, #24]
 800c63c:	461e      	mov	r6, r3
 800c63e:	f04f 0400 	mov.w	r4, #0
 800c642:	f240 814e 	bls.w	800c8e2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800c646:	23ff      	movs	r3, #255	@ 0xff
 800c648:	9300      	str	r3, [sp, #0]
 800c64a:	1d02      	adds	r2, r0, #4
 800c64c:	6981      	ldr	r1, [r0, #24]
 800c64e:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800c650:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800c8e8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800c654:	a808      	add	r0, sp, #32
 800c656:	f014 fdc1 	bl	80211dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c65a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800c65e:	4ba3      	ldr	r3, [pc, #652]	@ (800c8ec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800c660:	edd5 6a08 	vldr	s13, [r5, #32]
 800c664:	9308      	str	r3, [sp, #32]
 800c666:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c66a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c66e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800c672:	bf48      	it	mi
 800c674:	eef1 7a67 	vnegmi.f32	s15, s15
 800c678:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c67c:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800c680:	2201      	movs	r2, #1
 800c682:	9325      	str	r3, [sp, #148]	@ 0x94
 800c684:	2300      	movs	r3, #0
 800c686:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800c68a:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800c68e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800c692:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800c696:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800c69a:	7f6a      	ldrb	r2, [r5, #29]
 800c69c:	7fab      	ldrb	r3, [r5, #30]
 800c69e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800c6a2:	435a      	muls	r2, r3
 800c6a4:	ee27 7a26 	vmul.f32	s14, s14, s13
 800c6a8:	1c53      	adds	r3, r2, #1
 800c6aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800c6ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c6b2:	f04f 0800 	mov.w	r8, #0
 800c6b6:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800c6ba:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800c6be:	942a      	str	r4, [sp, #168]	@ 0xa8
 800c6c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800c6c4:	942b      	str	r4, [sp, #172]	@ 0xac
 800c6c6:	942c      	str	r4, [sp, #176]	@ 0xb0
 800c6c8:	942d      	str	r4, [sp, #180]	@ 0xb4
 800c6ca:	942e      	str	r4, [sp, #184]	@ 0xb8
 800c6cc:	942f      	str	r4, [sp, #188]	@ 0xbc
 800c6ce:	9430      	str	r4, [sp, #192]	@ 0xc0
 800c6d0:	9431      	str	r4, [sp, #196]	@ 0xc4
 800c6d2:	9432      	str	r4, [sp, #200]	@ 0xc8
 800c6d4:	9433      	str	r4, [sp, #204]	@ 0xcc
 800c6d6:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800c6da:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800c6de:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800c6e2:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800c6e6:	eef0 9a49 	vmov.f32	s19, s18
 800c6ea:	eeb0 8a49 	vmov.f32	s16, s18
 800c6ee:	eef0 8a49 	vmov.f32	s17, s18
 800c6f2:	4644      	mov	r4, r8
 800c6f4:	46c1      	mov	r9, r8
 800c6f6:	af08      	add	r7, sp, #32
 800c6f8:	f04f 0a01 	mov.w	sl, #1
 800c6fc:	9b06      	ldr	r3, [sp, #24]
 800c6fe:	454b      	cmp	r3, r9
 800c700:	f000 80cc 	beq.w	800c89c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800c704:	f109 0301 	add.w	r3, r9, #1
 800c708:	9305      	str	r3, [sp, #20]
 800c70a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800c70e:	2b06      	cmp	r3, #6
 800c710:	d839      	bhi.n	800c786 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c712:	e8df f003 	tbb	[pc, r3]
 800c716:	3b04      	.short	0x3b04
 800c718:	817c6f60 	.word	0x817c6f60
 800c71c:	a0          	.byte	0xa0
 800c71d:	00          	.byte	0x00
 800c71e:	45c1      	cmp	r9, r8
 800c720:	d92b      	bls.n	800c77a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c722:	eef0 0a49 	vmov.f32	s1, s18
 800c726:	eeb0 0a69 	vmov.f32	s0, s19
 800c72a:	4638      	mov	r0, r7
 800c72c:	f7ff fdde 	bl	800c2ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c730:	4638      	mov	r0, r7
 800c732:	f7ff fe67 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c736:	4681      	mov	r9, r0
 800c738:	b9f8      	cbnz	r0, 800c77a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c73a:	eef0 0a49 	vmov.f32	s1, s18
 800c73e:	eeb0 0a69 	vmov.f32	s0, s19
 800c742:	4638      	mov	r0, r7
 800c744:	f7ff fe8d 	bl	800c462 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c748:	4628      	mov	r0, r5
 800c74a:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800c74e:	e9cd b600 	strd	fp, r6, [sp]
 800c752:	4623      	mov	r3, r4
 800c754:	9a05      	ldr	r2, [sp, #20]
 800c756:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800c75a:	4641      	mov	r1, r8
 800c75c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800c760:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c764:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c768:	f7ff feae 	bl	800c4c8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c76c:	eef0 0a49 	vmov.f32	s1, s18
 800c770:	eeb0 0a69 	vmov.f32	s0, s19
 800c774:	4638      	mov	r0, r7
 800c776:	f7ff fe74 	bl	800c462 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c77a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c77e:	eeb0 8a49 	vmov.f32	s16, s18
 800c782:	eef0 8a69 	vmov.f32	s17, s19
 800c786:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c78a:	e7b7      	b.n	800c6fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800c78c:	45c1      	cmp	r9, r8
 800c78e:	d90d      	bls.n	800c7ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c790:	4638      	mov	r0, r7
 800c792:	f7ff fe37 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c796:	b948      	cbnz	r0, 800c7ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c798:	e9cd a702 	strd	sl, r7, [sp, #8]
 800c79c:	e9cd b600 	strd	fp, r6, [sp]
 800c7a0:	4623      	mov	r3, r4
 800c7a2:	464a      	mov	r2, r9
 800c7a4:	4641      	mov	r1, r8
 800c7a6:	4628      	mov	r0, r5
 800c7a8:	f7ff fe8e 	bl	800c4c8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c7ac:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c7b0:	edd3 8a00 	vldr	s17, [r3]
 800c7b4:	ed93 8a01 	vldr	s16, [r3, #4]
 800c7b8:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800c7bc:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800c7c0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c7c4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c7c8:	3402      	adds	r4, #2
 800c7ca:	46c8      	mov	r8, r9
 800c7cc:	eeb0 9a48 	vmov.f32	s18, s16
 800c7d0:	eef0 9a68 	vmov.f32	s19, s17
 800c7d4:	e7d7      	b.n	800c786 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c7d6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c7da:	edd3 8a00 	vldr	s17, [r3]
 800c7de:	ed93 8a01 	vldr	s16, [r3, #4]
 800c7e2:	eeb0 0a68 	vmov.f32	s0, s17
 800c7e6:	eef0 0a48 	vmov.f32	s1, s16
 800c7ea:	4638      	mov	r0, r7
 800c7ec:	f7ff fd7e 	bl	800c2ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c7f0:	3402      	adds	r4, #2
 800c7f2:	e7c8      	b.n	800c786 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c7f4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c7f8:	edd3 8a00 	vldr	s17, [r3]
 800c7fc:	eef0 0a48 	vmov.f32	s1, s16
 800c800:	eeb0 0a68 	vmov.f32	s0, s17
 800c804:	4638      	mov	r0, r7
 800c806:	f7ff fd71 	bl	800c2ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c80a:	3401      	adds	r4, #1
 800c80c:	e7bb      	b.n	800c786 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c80e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c812:	ed93 8a00 	vldr	s16, [r3]
 800c816:	e7f1      	b.n	800c7fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800c818:	00a3      	lsls	r3, r4, #2
 800c81a:	f103 0208 	add.w	r2, r3, #8
 800c81e:	f103 090c 	add.w	r9, r3, #12
 800c822:	4432      	add	r2, r6
 800c824:	4433      	add	r3, r6
 800c826:	44b1      	add	r9, r6
 800c828:	ed92 2a00 	vldr	s4, [r2]
 800c82c:	edd9 2a00 	vldr	s5, [r9]
 800c830:	edd3 1a01 	vldr	s3, [r3, #4]
 800c834:	ed93 1a00 	vldr	s2, [r3]
 800c838:	9207      	str	r2, [sp, #28]
 800c83a:	eef0 0a48 	vmov.f32	s1, s16
 800c83e:	eeb0 0a68 	vmov.f32	s0, s17
 800c842:	4638      	mov	r0, r7
 800c844:	f7ff fabc 	bl	800bdc0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c848:	9a07      	ldr	r2, [sp, #28]
 800c84a:	ed99 8a00 	vldr	s16, [r9]
 800c84e:	edd2 8a00 	vldr	s17, [r2]
 800c852:	3404      	adds	r4, #4
 800c854:	e797      	b.n	800c786 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c856:	00a3      	lsls	r3, r4, #2
 800c858:	f103 0210 	add.w	r2, r3, #16
 800c85c:	f103 0914 	add.w	r9, r3, #20
 800c860:	4432      	add	r2, r6
 800c862:	4433      	add	r3, r6
 800c864:	44b1      	add	r9, r6
 800c866:	ed92 3a00 	vldr	s6, [r2]
 800c86a:	edd9 3a00 	vldr	s7, [r9]
 800c86e:	edd3 2a03 	vldr	s5, [r3, #12]
 800c872:	ed93 2a02 	vldr	s4, [r3, #8]
 800c876:	edd3 1a01 	vldr	s3, [r3, #4]
 800c87a:	ed93 1a00 	vldr	s2, [r3]
 800c87e:	9207      	str	r2, [sp, #28]
 800c880:	eef0 0a48 	vmov.f32	s1, s16
 800c884:	eeb0 0a68 	vmov.f32	s0, s17
 800c888:	4638      	mov	r0, r7
 800c88a:	f7ff fab8 	bl	800bdfe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c88e:	9a07      	ldr	r2, [sp, #28]
 800c890:	ed99 8a00 	vldr	s16, [r9]
 800c894:	edd2 8a00 	vldr	s17, [r2]
 800c898:	3406      	adds	r4, #6
 800c89a:	e774      	b.n	800c786 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c89c:	9b06      	ldr	r3, [sp, #24]
 800c89e:	4543      	cmp	r3, r8
 800c8a0:	af08      	add	r7, sp, #32
 800c8a2:	d90f      	bls.n	800c8c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c8a4:	4638      	mov	r0, r7
 800c8a6:	f7ff fdad 	bl	800c404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c8aa:	b958      	cbnz	r0, 800c8c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c8ac:	2301      	movs	r3, #1
 800c8ae:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800c8b2:	9703      	str	r7, [sp, #12]
 800c8b4:	f8cd b000 	str.w	fp, [sp]
 800c8b8:	4623      	mov	r3, r4
 800c8ba:	9a06      	ldr	r2, [sp, #24]
 800c8bc:	4641      	mov	r1, r8
 800c8be:	4628      	mov	r0, r5
 800c8c0:	f7ff fe02 	bl	800c4c8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c8c4:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800c8c8:	4638      	mov	r0, r7
 800c8ca:	f014 fd1b 	bl	8021304 <_ZN8touchgfx6Canvas6renderEh>
 800c8ce:	4604      	mov	r4, r0
 800c8d0:	4638      	mov	r0, r7
 800c8d2:	f7ff fe99 	bl	800c608 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c8d6:	4620      	mov	r0, r4
 800c8d8:	b035      	add	sp, #212	@ 0xd4
 800c8da:	ecbd 8b04 	vpop	{d8-d9}
 800c8de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8e2:	2401      	movs	r4, #1
 800c8e4:	e7f7      	b.n	800c8d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800c8e6:	bf00      	nop
 800c8e8:	00000000 	.word	0x00000000
 800c8ec:	08024f8c 	.word	0x08024f8c

0800c8f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800c8f0:	b510      	push	{r4, lr}
 800c8f2:	4604      	mov	r4, r0
 800c8f4:	f7ff fe88 	bl	800c608 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c8f8:	4620      	mov	r0, r4
 800c8fa:	21b0      	movs	r1, #176	@ 0xb0
 800c8fc:	f015 f8d1 	bl	8021aa2 <_ZdlPvj>
 800c900:	4620      	mov	r0, r4
 800c902:	bd10      	pop	{r4, pc}

0800c904 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800c904:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c908:	ed2d 8b06 	vpush	{d8-d10}
 800c90c:	b0aa      	sub	sp, #168	@ 0xa8
 800c90e:	4698      	mov	r8, r3
 800c910:	23ff      	movs	r3, #255	@ 0xff
 800c912:	4607      	mov	r7, r0
 800c914:	9300      	str	r3, [sp, #0]
 800c916:	4689      	mov	r9, r1
 800c918:	4692      	mov	sl, r2
 800c91a:	6981      	ldr	r1, [r0, #24]
 800c91c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800c91e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800cb28 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c922:	1d02      	adds	r2, r0, #4
 800c924:	a80d      	add	r0, sp, #52	@ 0x34
 800c926:	f014 fc59 	bl	80211dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c92a:	7f3b      	ldrb	r3, [r7, #28]
 800c92c:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800cb28 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c930:	1e5a      	subs	r2, r3, #1
 800c932:	4253      	negs	r3, r2
 800c934:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800c938:	4153      	adcs	r3, r2
 800c93a:	eeb0 0a60 	vmov.f32	s0, s1
 800c93e:	4628      	mov	r0, r5
 800c940:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800c944:	f004 fc07 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c948:	44ca      	add	sl, r9
 800c94a:	eeb0 9a40 	vmov.f32	s18, s0
 800c94e:	eef0 9a60 	vmov.f32	s19, s1
 800c952:	eef0 8a48 	vmov.f32	s17, s16
 800c956:	2400      	movs	r4, #0
 800c958:	45ca      	cmp	sl, r9
 800c95a:	f000 80cd 	beq.w	800caf8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800c95e:	f819 3b01 	ldrb.w	r3, [r9], #1
 800c962:	2b06      	cmp	r3, #6
 800c964:	d8f8      	bhi.n	800c958 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c966:	e8df f003 	tbb	[pc, r3]
 800c96a:	0804      	.short	0x0804
 800c96c:	58533f2a 	.word	0x58533f2a
 800c970:	8a          	.byte	0x8a
 800c971:	00          	.byte	0x00
 800c972:	a80d      	add	r0, sp, #52	@ 0x34
 800c974:	f014 fca4 	bl	80212c0 <_ZN8touchgfx6Canvas5closeEv>
 800c978:	e7ee      	b.n	800c958 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c97a:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c97e:	edd3 8a00 	vldr	s17, [r3]
 800c982:	ed93 8a01 	vldr	s16, [r3, #4]
 800c986:	eeb0 0a68 	vmov.f32	s0, s17
 800c98a:	eef0 0a48 	vmov.f32	s1, s16
 800c98e:	4628      	mov	r0, r5
 800c990:	f004 fbe1 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c994:	eef0 7a60 	vmov.f32	s15, s1
 800c998:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c99c:	a80d      	add	r0, sp, #52	@ 0x34
 800c99e:	ee17 2a90 	vmov	r2, s15
 800c9a2:	eef0 7a40 	vmov.f32	s15, s0
 800c9a6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c9aa:	eeb0 9a40 	vmov.f32	s18, s0
 800c9ae:	ee17 1a90 	vmov	r1, s15
 800c9b2:	eef0 9a60 	vmov.f32	s19, s1
 800c9b6:	f014 fd5d 	bl	8021474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c9ba:	3402      	adds	r4, #2
 800c9bc:	e7cc      	b.n	800c958 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c9be:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c9c2:	edd3 8a00 	vldr	s17, [r3]
 800c9c6:	ed93 8a01 	vldr	s16, [r3, #4]
 800c9ca:	eeb0 0a68 	vmov.f32	s0, s17
 800c9ce:	eef0 0a48 	vmov.f32	s1, s16
 800c9d2:	4628      	mov	r0, r5
 800c9d4:	f004 fbbf 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c9d8:	a80d      	add	r0, sp, #52	@ 0x34
 800c9da:	eeb0 9a40 	vmov.f32	s18, s0
 800c9de:	eef0 9a60 	vmov.f32	s19, s1
 800c9e2:	f7ff fe01 	bl	800c5e8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800c9e6:	e7e8      	b.n	800c9ba <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800c9e8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c9ec:	edd3 8a00 	vldr	s17, [r3]
 800c9f0:	eef0 0a48 	vmov.f32	s1, s16
 800c9f4:	eeb0 0a68 	vmov.f32	s0, s17
 800c9f8:	4628      	mov	r0, r5
 800c9fa:	f004 fbac 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c9fe:	a80d      	add	r0, sp, #52	@ 0x34
 800ca00:	eeb0 9a40 	vmov.f32	s18, s0
 800ca04:	eef0 9a60 	vmov.f32	s19, s1
 800ca08:	3401      	adds	r4, #1
 800ca0a:	f7ff fded 	bl	800c5e8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800ca0e:	e7a3      	b.n	800c958 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ca10:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800ca14:	ed93 8a00 	vldr	s16, [r3]
 800ca18:	e7ea      	b.n	800c9f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800ca1a:	1ca3      	adds	r3, r4, #2
 800ca1c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800ca20:	ed53 0a01 	vldr	s1, [r3, #-4]
 800ca24:	ed13 0a02 	vldr	s0, [r3, #-8]
 800ca28:	edd3 8a00 	vldr	s17, [r3]
 800ca2c:	ed93 8a01 	vldr	s16, [r3, #4]
 800ca30:	4628      	mov	r0, r5
 800ca32:	f004 fb90 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca36:	4628      	mov	r0, r5
 800ca38:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800ca3c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800ca40:	eeb0 0a68 	vmov.f32	s0, s17
 800ca44:	eef0 0a48 	vmov.f32	s1, s16
 800ca48:	f004 fb85 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca4c:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800ca50:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800ca54:	eef0 2a60 	vmov.f32	s5, s1
 800ca58:	eeb0 2a40 	vmov.f32	s4, s0
 800ca5c:	eeb0 aa40 	vmov.f32	s20, s0
 800ca60:	eef0 aa60 	vmov.f32	s21, s1
 800ca64:	eeb0 0a49 	vmov.f32	s0, s18
 800ca68:	eef0 0a69 	vmov.f32	s1, s19
 800ca6c:	a80d      	add	r0, sp, #52	@ 0x34
 800ca6e:	f7ff f9a7 	bl	800bdc0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800ca72:	3404      	adds	r4, #4
 800ca74:	eef0 9a6a 	vmov.f32	s19, s21
 800ca78:	eeb0 9a4a 	vmov.f32	s18, s20
 800ca7c:	e76c      	b.n	800c958 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ca7e:	1d26      	adds	r6, r4, #4
 800ca80:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800ca84:	ed56 0a03 	vldr	s1, [r6, #-12]
 800ca88:	ed16 0a04 	vldr	s0, [r6, #-16]
 800ca8c:	edd6 8a00 	vldr	s17, [r6]
 800ca90:	ed96 8a01 	vldr	s16, [r6, #4]
 800ca94:	4628      	mov	r0, r5
 800ca96:	f004 fb5e 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca9a:	4628      	mov	r0, r5
 800ca9c:	ed8d 0a07 	vstr	s0, [sp, #28]
 800caa0:	edcd 0a08 	vstr	s1, [sp, #32]
 800caa4:	ed16 0a02 	vldr	s0, [r6, #-8]
 800caa8:	ed56 0a01 	vldr	s1, [r6, #-4]
 800caac:	f004 fb53 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cab0:	4628      	mov	r0, r5
 800cab2:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800cab6:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800caba:	eeb0 0a68 	vmov.f32	s0, s17
 800cabe:	eef0 0a48 	vmov.f32	s1, s16
 800cac2:	f004 fb48 	bl	8011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cac6:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800caca:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800cace:	eddd 1a08 	vldr	s3, [sp, #32]
 800cad2:	ed9d 1a07 	vldr	s2, [sp, #28]
 800cad6:	eef0 3a60 	vmov.f32	s7, s1
 800cada:	eeb0 3a40 	vmov.f32	s6, s0
 800cade:	eeb0 aa40 	vmov.f32	s20, s0
 800cae2:	eef0 aa60 	vmov.f32	s21, s1
 800cae6:	eeb0 0a49 	vmov.f32	s0, s18
 800caea:	eef0 0a69 	vmov.f32	s1, s19
 800caee:	a80d      	add	r0, sp, #52	@ 0x34
 800caf0:	f7ff f985 	bl	800bdfe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800caf4:	3406      	adds	r4, #6
 800caf6:	e7bd      	b.n	800ca74 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800caf8:	7f7b      	ldrb	r3, [r7, #29]
 800cafa:	7fb9      	ldrb	r1, [r7, #30]
 800cafc:	4359      	muls	r1, r3
 800cafe:	1c4b      	adds	r3, r1, #1
 800cb00:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800cb04:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800cb08:	a80d      	add	r0, sp, #52	@ 0x34
 800cb0a:	f014 fbfb 	bl	8021304 <_ZN8touchgfx6Canvas6renderEh>
 800cb0e:	4b07      	ldr	r3, [pc, #28]	@ (800cb2c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800cb10:	930d      	str	r3, [sp, #52]	@ 0x34
 800cb12:	4604      	mov	r4, r0
 800cb14:	a812      	add	r0, sp, #72	@ 0x48
 800cb16:	f000 fe51 	bl	800d7bc <_ZN8touchgfx7OutlineD1Ev>
 800cb1a:	4620      	mov	r0, r4
 800cb1c:	b02a      	add	sp, #168	@ 0xa8
 800cb1e:	ecbd 8b06 	vpop	{d8-d10}
 800cb22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cb26:	bf00      	nop
 800cb28:	00000000 	.word	0x00000000
 800cb2c:	08025640 	.word	0x08025640

0800cb30 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800cb30:	b410      	push	{r4}
 800cb32:	7f04      	ldrb	r4, [r0, #28]
 800cb34:	b11c      	cbz	r4, 800cb3e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800cb36:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cb3a:	f7ff bee3 	b.w	800c904 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800cb3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cb42:	f7ff bd6d 	b.w	800c620 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800cb48 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800cb48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb4c:	4691      	mov	r9, r2
 800cb4e:	4602      	mov	r2, r0
 800cb50:	4605      	mov	r5, r0
 800cb52:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800cb56:	b085      	sub	sp, #20
 800cb58:	4688      	mov	r8, r1
 800cb5a:	6851      	ldr	r1, [r2, #4]
 800cb5c:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800cb60:	469a      	mov	sl, r3
 800cb62:	ab02      	add	r3, sp, #8
 800cb64:	c303      	stmia	r3!, {r0, r1}
 800cb66:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cb6a:	2b00      	cmp	r3, #0
 800cb6c:	af02      	add	r7, sp, #8
 800cb6e:	dd08      	ble.n	800cb82 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb70:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800cb74:	2c00      	cmp	r4, #0
 800cb76:	dd04      	ble.n	800cb82 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb78:	4a2e      	ldr	r2, [pc, #184]	@ (800cc34 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800cb7a:	7812      	ldrb	r2, [r2, #0]
 800cb7c:	b122      	cbz	r2, 800cb88 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800cb7e:	2a01      	cmp	r2, #1
 800cb80:	d02d      	beq.n	800cbde <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800cb82:	b005      	add	sp, #20
 800cb84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb88:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cb8c:	441c      	add	r4, r3
 800cb8e:	b2a4      	uxth	r4, r4
 800cb90:	b226      	sxth	r6, r4
 800cb92:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800cb96:	42b3      	cmp	r3, r6
 800cb98:	daf3      	bge.n	800cb82 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb9a:	e9cd b700 	strd	fp, r7, [sp]
 800cb9e:	4653      	mov	r3, sl
 800cba0:	464a      	mov	r2, r9
 800cba2:	4641      	mov	r1, r8
 800cba4:	4628      	mov	r0, r5
 800cba6:	f7ff ffc3 	bl	800cb30 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800cbaa:	b940      	cbnz	r0, 800cbbe <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800cbac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cbb0:	2b01      	cmp	r3, #1
 800cbb2:	d004      	beq.n	800cbbe <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800cbb4:	3301      	adds	r3, #1
 800cbb6:	105b      	asrs	r3, r3, #1
 800cbb8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cbbc:	e7ed      	b.n	800cb9a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800cbbe:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800cbc2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cbc6:	4413      	add	r3, r2
 800cbc8:	b29b      	uxth	r3, r3
 800cbca:	441a      	add	r2, r3
 800cbcc:	b212      	sxth	r2, r2
 800cbce:	4296      	cmp	r6, r2
 800cbd0:	f8ad 300a 	strh.w	r3, [sp, #10]
 800cbd4:	dadd      	bge.n	800cb92 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800cbd6:	1ae3      	subs	r3, r4, r3
 800cbd8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cbdc:	e7d9      	b.n	800cb92 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800cbde:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800cbe2:	441c      	add	r4, r3
 800cbe4:	b2a4      	uxth	r4, r4
 800cbe6:	b226      	sxth	r6, r4
 800cbe8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800cbec:	42b3      	cmp	r3, r6
 800cbee:	dac8      	bge.n	800cb82 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cbf0:	e9cd b700 	strd	fp, r7, [sp]
 800cbf4:	4653      	mov	r3, sl
 800cbf6:	464a      	mov	r2, r9
 800cbf8:	4641      	mov	r1, r8
 800cbfa:	4628      	mov	r0, r5
 800cbfc:	f7ff ff98 	bl	800cb30 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800cc00:	b940      	cbnz	r0, 800cc14 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cc02:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cc06:	2b01      	cmp	r3, #1
 800cc08:	d004      	beq.n	800cc14 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cc0a:	3301      	adds	r3, #1
 800cc0c:	105b      	asrs	r3, r3, #1
 800cc0e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cc12:	e7ed      	b.n	800cbf0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800cc14:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cc18:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800cc1c:	4413      	add	r3, r2
 800cc1e:	b29b      	uxth	r3, r3
 800cc20:	441a      	add	r2, r3
 800cc22:	b212      	sxth	r2, r2
 800cc24:	4296      	cmp	r6, r2
 800cc26:	f8ad 3008 	strh.w	r3, [sp, #8]
 800cc2a:	dadd      	bge.n	800cbe8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cc2c:	1ae3      	subs	r3, r4, r3
 800cc2e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cc32:	e7d9      	b.n	800cbe8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cc34:	20013fee 	.word	0x20013fee

0800cc38 <_ZN8touchgfx6CircleD1Ev>:
 800cc38:	4770      	bx	lr

0800cc3a <_ZN8touchgfx6CircleD0Ev>:
 800cc3a:	b510      	push	{r4, lr}
 800cc3c:	2148      	movs	r1, #72	@ 0x48
 800cc3e:	4604      	mov	r4, r0
 800cc40:	f014 ff2f 	bl	8021aa2 <_ZdlPvj>
 800cc44:	4620      	mov	r0, r4
 800cc46:	bd10      	pop	{r4, pc}

0800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800cc48:	b507      	push	{r0, r1, r2, lr}
 800cc4a:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800cc4e:	ab01      	add	r3, sp, #4
 800cc50:	6809      	ldr	r1, [r1, #0]
 800cc52:	6800      	ldr	r0, [r0, #0]
 800cc54:	f004 fb98 	bl	8011388 <_ZN8touchgfx6muldivElllRl>
 800cc58:	b003      	add	sp, #12
 800cc5a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800cc60 <_ZN8touchgfx7CWRUtil4sineEi>:
 800cc60:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 800cc64:	fb90 f2f3 	sdiv	r2, r0, r3
 800cc68:	fb02 0013 	mls	r0, r2, r3, r0
 800cc6c:	2800      	cmp	r0, #0
 800cc6e:	bfb8      	it	lt
 800cc70:	18c0      	addlt	r0, r0, r3
 800cc72:	285a      	cmp	r0, #90	@ 0x5a
 800cc74:	4b09      	ldr	r3, [pc, #36]	@ (800cc9c <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800cc76:	dc02      	bgt.n	800cc7e <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800cc78:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cc7c:	4770      	bx	lr
 800cc7e:	28b4      	cmp	r0, #180	@ 0xb4
 800cc80:	dc02      	bgt.n	800cc88 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800cc82:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 800cc86:	e7f7      	b.n	800cc78 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800cc88:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 800cc8c:	bfd4      	ite	le
 800cc8e:	38b4      	suble	r0, #180	@ 0xb4
 800cc90:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 800cc94:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cc98:	4240      	negs	r0, r0
 800cc9a:	4770      	bx	lr
 800cc9c:	08024fe4 	.word	0x08024fe4

0800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800cca0:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800cca4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cca6:	fb90 f2f3 	sdiv	r2, r0, r3
 800ccaa:	fb02 0013 	mls	r0, r2, r3, r0
 800ccae:	2800      	cmp	r0, #0
 800ccb0:	bfb8      	it	lt
 800ccb2:	18c0      	addlt	r0, r0, r3
 800ccb4:	1144      	asrs	r4, r0, #5
 800ccb6:	f000 061f 	and.w	r6, r0, #31
 800ccba:	4620      	mov	r0, r4
 800ccbc:	f7ff ffd0 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineEi>
 800ccc0:	4605      	mov	r5, r0
 800ccc2:	b90e      	cbnz	r6, 800ccc8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800ccc4:	b002      	add	sp, #8
 800ccc6:	bd70      	pop	{r4, r5, r6, pc}
 800ccc8:	1c60      	adds	r0, r4, #1
 800ccca:	f7ff ffc9 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineEi>
 800ccce:	ab01      	add	r3, sp, #4
 800ccd0:	2220      	movs	r2, #32
 800ccd2:	4631      	mov	r1, r6
 800ccd4:	1b40      	subs	r0, r0, r5
 800ccd6:	f004 fb57 	bl	8011388 <_ZN8touchgfx6muldivElllRl>
 800ccda:	4428      	add	r0, r5
 800ccdc:	e7f2      	b.n	800ccc4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800ccde:	b508      	push	{r3, lr}
 800cce0:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 800cce4:	f7ff ffdc 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cce8:	bd08      	pop	{r3, pc}
	...

0800ccec <_ZN8touchgfx6CircleC1Ev>:
 800ccec:	b510      	push	{r4, lr}
 800ccee:	4604      	mov	r4, r0
 800ccf0:	f000 fd0a 	bl	800d708 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800ccf4:	4b08      	ldr	r3, [pc, #32]	@ (800cd18 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800ccf6:	6023      	str	r3, [r4, #0]
 800ccf8:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 800ccfc:	2300      	movs	r3, #0
 800ccfe:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 800cd02:	f24b 4205 	movw	r2, #46085	@ 0xb405
 800cd06:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 800cd0a:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 800cd0e:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 800cd12:	60a3      	str	r3, [r4, #8]
 800cd14:	4620      	mov	r0, r4
 800cd16:	bd10      	pop	{r4, pc}
 800cd18:	080250a4 	.word	0x080250a4

0800cd1c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800cd1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd20:	428a      	cmp	r2, r1
 800cd22:	4680      	mov	r8, r0
 800cd24:	4610      	mov	r0, r2
 800cd26:	4699      	mov	r9, r3
 800cd28:	bfa6      	itte	ge
 800cd2a:	460a      	movge	r2, r1
 800cd2c:	4603      	movge	r3, r0
 800cd2e:	460b      	movlt	r3, r1
 800cd30:	1a99      	subs	r1, r3, r2
 800cd32:	b085      	sub	sp, #20
 800cd34:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 800cd38:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 800cd3c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 800cd3e:	bfa4      	itt	ge
 800cd40:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 800cd44:	2200      	movge	r2, #0
 800cd46:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 800cd4a:	9300      	str	r3, [sp, #0]
 800cd4c:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 800cd50:	f102 0b01 	add.w	fp, r2, #1
 800cd54:	2c00      	cmp	r4, #0
 800cd56:	f040 80af 	bne.w	800ceb8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 800cd5a:	4610      	mov	r0, r2
 800cd5c:	9201      	str	r2, [sp, #4]
 800cd5e:	f7ff ff9f 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cd62:	a903      	add	r1, sp, #12
 800cd64:	9003      	str	r0, [sp, #12]
 800cd66:	4650      	mov	r0, sl
 800cd68:	f7ff ff6e 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd6c:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800cd70:	9a01      	ldr	r2, [sp, #4]
 800cd72:	4408      	add	r0, r1
 800cd74:	f8d9 1000 	ldr.w	r1, [r9]
 800cd78:	4281      	cmp	r1, r0
 800cd7a:	bfc8      	it	gt
 800cd7c:	f8c9 0000 	strgt.w	r0, [r9]
 800cd80:	6839      	ldr	r1, [r7, #0]
 800cd82:	4288      	cmp	r0, r1
 800cd84:	bfc8      	it	gt
 800cd86:	6038      	strgt	r0, [r7, #0]
 800cd88:	4610      	mov	r0, r2
 800cd8a:	f7ff ffa8 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cd8e:	a903      	add	r1, sp, #12
 800cd90:	9003      	str	r0, [sp, #12]
 800cd92:	4650      	mov	r0, sl
 800cd94:	f7ff ff58 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd98:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cd9c:	1a10      	subs	r0, r2, r0
 800cd9e:	6832      	ldr	r2, [r6, #0]
 800cda0:	4282      	cmp	r2, r0
 800cda2:	bfc8      	it	gt
 800cda4:	6030      	strgt	r0, [r6, #0]
 800cda6:	682a      	ldr	r2, [r5, #0]
 800cda8:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800cdac:	4290      	cmp	r0, r2
 800cdae:	fb9b f2f1 	sdiv	r2, fp, r1
 800cdb2:	fb01 b212 	mls	r2, r1, r2, fp
 800cdb6:	eba1 0202 	sub.w	r2, r1, r2
 800cdba:	bfc8      	it	gt
 800cdbc:	6028      	strgt	r0, [r5, #0]
 800cdbe:	fb92 f0f1 	sdiv	r0, r2, r1
 800cdc2:	fb01 2210 	mls	r2, r1, r0, r2
 800cdc6:	4493      	add	fp, r2
 800cdc8:	9b00      	ldr	r3, [sp, #0]
 800cdca:	455b      	cmp	r3, fp
 800cdcc:	db2a      	blt.n	800ce24 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 800cdce:	4658      	mov	r0, fp
 800cdd0:	f7ff ff66 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cdd4:	a903      	add	r1, sp, #12
 800cdd6:	9003      	str	r0, [sp, #12]
 800cdd8:	4650      	mov	r0, sl
 800cdda:	f7ff ff35 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cdde:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cde2:	4410      	add	r0, r2
 800cde4:	f8d9 2000 	ldr.w	r2, [r9]
 800cde8:	4282      	cmp	r2, r0
 800cdea:	bfc8      	it	gt
 800cdec:	f8c9 0000 	strgt.w	r0, [r9]
 800cdf0:	683a      	ldr	r2, [r7, #0]
 800cdf2:	4290      	cmp	r0, r2
 800cdf4:	bfc8      	it	gt
 800cdf6:	6038      	strgt	r0, [r7, #0]
 800cdf8:	4658      	mov	r0, fp
 800cdfa:	f7ff ff70 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cdfe:	a903      	add	r1, sp, #12
 800ce00:	9003      	str	r0, [sp, #12]
 800ce02:	4650      	mov	r0, sl
 800ce04:	f7ff ff20 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce08:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800ce0c:	1a10      	subs	r0, r2, r0
 800ce0e:	6832      	ldr	r2, [r6, #0]
 800ce10:	4282      	cmp	r2, r0
 800ce12:	bfc8      	it	gt
 800ce14:	6030      	strgt	r0, [r6, #0]
 800ce16:	682a      	ldr	r2, [r5, #0]
 800ce18:	4290      	cmp	r0, r2
 800ce1a:	bfc8      	it	gt
 800ce1c:	6028      	strgt	r0, [r5, #0]
 800ce1e:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800ce22:	e7d1      	b.n	800cdc8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 800ce24:	9b00      	ldr	r3, [sp, #0]
 800ce26:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800ce2a:	455b      	cmp	r3, fp
 800ce2c:	dd27      	ble.n	800ce7e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 800ce2e:	4618      	mov	r0, r3
 800ce30:	f7ff ff36 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ce34:	a903      	add	r1, sp, #12
 800ce36:	9003      	str	r0, [sp, #12]
 800ce38:	4650      	mov	r0, sl
 800ce3a:	f7ff ff05 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce3e:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800ce42:	4410      	add	r0, r2
 800ce44:	f8d9 2000 	ldr.w	r2, [r9]
 800ce48:	4282      	cmp	r2, r0
 800ce4a:	bfc8      	it	gt
 800ce4c:	f8c9 0000 	strgt.w	r0, [r9]
 800ce50:	683a      	ldr	r2, [r7, #0]
 800ce52:	4290      	cmp	r0, r2
 800ce54:	bfc8      	it	gt
 800ce56:	6038      	strgt	r0, [r7, #0]
 800ce58:	9800      	ldr	r0, [sp, #0]
 800ce5a:	f7ff ff40 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ce5e:	a903      	add	r1, sp, #12
 800ce60:	9003      	str	r0, [sp, #12]
 800ce62:	4650      	mov	r0, sl
 800ce64:	f7ff fef0 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce68:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800ce6c:	1a10      	subs	r0, r2, r0
 800ce6e:	6832      	ldr	r2, [r6, #0]
 800ce70:	4282      	cmp	r2, r0
 800ce72:	bfc8      	it	gt
 800ce74:	6030      	strgt	r0, [r6, #0]
 800ce76:	682a      	ldr	r2, [r5, #0]
 800ce78:	4290      	cmp	r0, r2
 800ce7a:	bfc8      	it	gt
 800ce7c:	6028      	strgt	r0, [r5, #0]
 800ce7e:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800ce82:	f8d9 1000 	ldr.w	r1, [r9]
 800ce86:	4291      	cmp	r1, r2
 800ce88:	bfc8      	it	gt
 800ce8a:	f8c9 2000 	strgt.w	r2, [r9]
 800ce8e:	683a      	ldr	r2, [r7, #0]
 800ce90:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 800ce94:	429a      	cmp	r2, r3
 800ce96:	bfb8      	it	lt
 800ce98:	603b      	strlt	r3, [r7, #0]
 800ce9a:	6832      	ldr	r2, [r6, #0]
 800ce9c:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800cea0:	429a      	cmp	r2, r3
 800cea2:	bfc8      	it	gt
 800cea4:	6033      	strgt	r3, [r6, #0]
 800cea6:	682a      	ldr	r2, [r5, #0]
 800cea8:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800ceac:	429a      	cmp	r2, r3
 800ceae:	da00      	bge.n	800ceb2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800ceb0:	602b      	str	r3, [r5, #0]
 800ceb2:	b005      	add	sp, #20
 800ceb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ceb8:	2002      	movs	r0, #2
 800ceba:	3401      	adds	r4, #1
 800cebc:	fb94 f4f0 	sdiv	r4, r4, r0
 800cec0:	4610      	mov	r0, r2
 800cec2:	9201      	str	r2, [sp, #4]
 800cec4:	f7ff feec 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cec8:	a903      	add	r1, sp, #12
 800ceca:	9003      	str	r0, [sp, #12]
 800cecc:	4650      	mov	r0, sl
 800cece:	f7ff febb 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ced2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800ced6:	9a01      	ldr	r2, [sp, #4]
 800ced8:	4408      	add	r0, r1
 800ceda:	f8d9 1000 	ldr.w	r1, [r9]
 800cede:	1b03      	subs	r3, r0, r4
 800cee0:	4299      	cmp	r1, r3
 800cee2:	bfc8      	it	gt
 800cee4:	f8c9 3000 	strgt.w	r3, [r9]
 800cee8:	6839      	ldr	r1, [r7, #0]
 800ceea:	428b      	cmp	r3, r1
 800ceec:	bfc8      	it	gt
 800ceee:	603b      	strgt	r3, [r7, #0]
 800cef0:	f8d9 1000 	ldr.w	r1, [r9]
 800cef4:	4420      	add	r0, r4
 800cef6:	4281      	cmp	r1, r0
 800cef8:	bfc8      	it	gt
 800cefa:	f8c9 0000 	strgt.w	r0, [r9]
 800cefe:	6839      	ldr	r1, [r7, #0]
 800cf00:	4288      	cmp	r0, r1
 800cf02:	bfc8      	it	gt
 800cf04:	6038      	strgt	r0, [r7, #0]
 800cf06:	4610      	mov	r0, r2
 800cf08:	f7ff fee9 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cf0c:	a903      	add	r1, sp, #12
 800cf0e:	9003      	str	r0, [sp, #12]
 800cf10:	4650      	mov	r0, sl
 800cf12:	f7ff fe99 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf16:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cf1a:	1a10      	subs	r0, r2, r0
 800cf1c:	6832      	ldr	r2, [r6, #0]
 800cf1e:	1b01      	subs	r1, r0, r4
 800cf20:	428a      	cmp	r2, r1
 800cf22:	bfc8      	it	gt
 800cf24:	6031      	strgt	r1, [r6, #0]
 800cf26:	682a      	ldr	r2, [r5, #0]
 800cf28:	4291      	cmp	r1, r2
 800cf2a:	bfc8      	it	gt
 800cf2c:	6029      	strgt	r1, [r5, #0]
 800cf2e:	6832      	ldr	r2, [r6, #0]
 800cf30:	4420      	add	r0, r4
 800cf32:	4282      	cmp	r2, r0
 800cf34:	bfc8      	it	gt
 800cf36:	6030      	strgt	r0, [r6, #0]
 800cf38:	682a      	ldr	r2, [r5, #0]
 800cf3a:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800cf3e:	4290      	cmp	r0, r2
 800cf40:	fb9b f2f1 	sdiv	r2, fp, r1
 800cf44:	fb01 b212 	mls	r2, r1, r2, fp
 800cf48:	eba1 0202 	sub.w	r2, r1, r2
 800cf4c:	bfc8      	it	gt
 800cf4e:	6028      	strgt	r0, [r5, #0]
 800cf50:	fb92 f0f1 	sdiv	r0, r2, r1
 800cf54:	fb01 2210 	mls	r2, r1, r0, r2
 800cf58:	4493      	add	fp, r2
 800cf5a:	9b00      	ldr	r3, [sp, #0]
 800cf5c:	455b      	cmp	r3, fp
 800cf5e:	db40      	blt.n	800cfe2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 800cf60:	4658      	mov	r0, fp
 800cf62:	f7ff fe9d 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cf66:	a903      	add	r1, sp, #12
 800cf68:	9003      	str	r0, [sp, #12]
 800cf6a:	4650      	mov	r0, sl
 800cf6c:	f7ff fe6c 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf70:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cf74:	4410      	add	r0, r2
 800cf76:	f8d9 2000 	ldr.w	r2, [r9]
 800cf7a:	1b01      	subs	r1, r0, r4
 800cf7c:	428a      	cmp	r2, r1
 800cf7e:	bfc8      	it	gt
 800cf80:	f8c9 1000 	strgt.w	r1, [r9]
 800cf84:	683a      	ldr	r2, [r7, #0]
 800cf86:	4291      	cmp	r1, r2
 800cf88:	bfc8      	it	gt
 800cf8a:	6039      	strgt	r1, [r7, #0]
 800cf8c:	f8d9 2000 	ldr.w	r2, [r9]
 800cf90:	4420      	add	r0, r4
 800cf92:	4282      	cmp	r2, r0
 800cf94:	bfc8      	it	gt
 800cf96:	f8c9 0000 	strgt.w	r0, [r9]
 800cf9a:	683a      	ldr	r2, [r7, #0]
 800cf9c:	4290      	cmp	r0, r2
 800cf9e:	bfc8      	it	gt
 800cfa0:	6038      	strgt	r0, [r7, #0]
 800cfa2:	4658      	mov	r0, fp
 800cfa4:	f7ff fe9b 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cfa8:	a903      	add	r1, sp, #12
 800cfaa:	9003      	str	r0, [sp, #12]
 800cfac:	4650      	mov	r0, sl
 800cfae:	f7ff fe4b 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cfb2:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cfb6:	1a10      	subs	r0, r2, r0
 800cfb8:	6832      	ldr	r2, [r6, #0]
 800cfba:	1b01      	subs	r1, r0, r4
 800cfbc:	428a      	cmp	r2, r1
 800cfbe:	bfc8      	it	gt
 800cfc0:	6031      	strgt	r1, [r6, #0]
 800cfc2:	682a      	ldr	r2, [r5, #0]
 800cfc4:	4291      	cmp	r1, r2
 800cfc6:	bfc8      	it	gt
 800cfc8:	6029      	strgt	r1, [r5, #0]
 800cfca:	6832      	ldr	r2, [r6, #0]
 800cfcc:	4420      	add	r0, r4
 800cfce:	4282      	cmp	r2, r0
 800cfd0:	bfc8      	it	gt
 800cfd2:	6030      	strgt	r0, [r6, #0]
 800cfd4:	682a      	ldr	r2, [r5, #0]
 800cfd6:	4290      	cmp	r0, r2
 800cfd8:	bfc8      	it	gt
 800cfda:	6028      	strgt	r0, [r5, #0]
 800cfdc:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800cfe0:	e7bb      	b.n	800cf5a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 800cfe2:	9b00      	ldr	r3, [sp, #0]
 800cfe4:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800cfe8:	455b      	cmp	r3, fp
 800cfea:	f77f af62 	ble.w	800ceb2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800cfee:	4618      	mov	r0, r3
 800cff0:	f7ff fe56 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cff4:	a903      	add	r1, sp, #12
 800cff6:	9003      	str	r0, [sp, #12]
 800cff8:	4650      	mov	r0, sl
 800cffa:	f7ff fe25 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cffe:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d002:	4410      	add	r0, r2
 800d004:	f8d9 2000 	ldr.w	r2, [r9]
 800d008:	1b01      	subs	r1, r0, r4
 800d00a:	428a      	cmp	r2, r1
 800d00c:	bfc8      	it	gt
 800d00e:	f8c9 1000 	strgt.w	r1, [r9]
 800d012:	683a      	ldr	r2, [r7, #0]
 800d014:	4291      	cmp	r1, r2
 800d016:	bfc8      	it	gt
 800d018:	6039      	strgt	r1, [r7, #0]
 800d01a:	f8d9 2000 	ldr.w	r2, [r9]
 800d01e:	4420      	add	r0, r4
 800d020:	4282      	cmp	r2, r0
 800d022:	bfc8      	it	gt
 800d024:	f8c9 0000 	strgt.w	r0, [r9]
 800d028:	683b      	ldr	r3, [r7, #0]
 800d02a:	4298      	cmp	r0, r3
 800d02c:	bfc8      	it	gt
 800d02e:	6038      	strgt	r0, [r7, #0]
 800d030:	9800      	ldr	r0, [sp, #0]
 800d032:	f7ff fe54 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d036:	a903      	add	r1, sp, #12
 800d038:	9003      	str	r0, [sp, #12]
 800d03a:	4650      	mov	r0, sl
 800d03c:	f7ff fe04 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d040:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800d044:	6832      	ldr	r2, [r6, #0]
 800d046:	1a18      	subs	r0, r3, r0
 800d048:	1b03      	subs	r3, r0, r4
 800d04a:	429a      	cmp	r2, r3
 800d04c:	bfc8      	it	gt
 800d04e:	6033      	strgt	r3, [r6, #0]
 800d050:	682a      	ldr	r2, [r5, #0]
 800d052:	4293      	cmp	r3, r2
 800d054:	bfc8      	it	gt
 800d056:	602b      	strgt	r3, [r5, #0]
 800d058:	6833      	ldr	r3, [r6, #0]
 800d05a:	4404      	add	r4, r0
 800d05c:	42a3      	cmp	r3, r4
 800d05e:	bfc8      	it	gt
 800d060:	6034      	strgt	r4, [r6, #0]
 800d062:	682b      	ldr	r3, [r5, #0]
 800d064:	429c      	cmp	r4, r3
 800d066:	bfc8      	it	gt
 800d068:	602c      	strgt	r4, [r5, #0]
 800d06a:	e722      	b.n	800ceb2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0800d06c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800d06c:	b530      	push	{r4, r5, lr}
 800d06e:	4604      	mov	r4, r0
 800d070:	4608      	mov	r0, r1
 800d072:	4611      	mov	r1, r2
 800d074:	461a      	mov	r2, r3
 800d076:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d07a:	b089      	sub	sp, #36	@ 0x24
 800d07c:	015b      	lsls	r3, r3, #5
 800d07e:	9304      	str	r3, [sp, #16]
 800d080:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d084:	2500      	movs	r5, #0
 800d086:	015b      	lsls	r3, r3, #5
 800d088:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800d08c:	ab07      	add	r3, sp, #28
 800d08e:	9302      	str	r3, [sp, #8]
 800d090:	ab06      	add	r3, sp, #24
 800d092:	9301      	str	r3, [sp, #4]
 800d094:	ab05      	add	r3, sp, #20
 800d096:	9300      	str	r3, [sp, #0]
 800d098:	ab04      	add	r3, sp, #16
 800d09a:	9505      	str	r5, [sp, #20]
 800d09c:	f7ff fe3e 	bl	800cd1c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800d0a0:	2520      	movs	r5, #32
 800d0a2:	9a04      	ldr	r2, [sp, #16]
 800d0a4:	9805      	ldr	r0, [sp, #20]
 800d0a6:	fb92 f2f5 	sdiv	r2, r2, r5
 800d0aa:	fb90 f0f5 	sdiv	r0, r0, r5
 800d0ae:	b292      	uxth	r2, r2
 800d0b0:	3002      	adds	r0, #2
 800d0b2:	1a80      	subs	r0, r0, r2
 800d0b4:	9b06      	ldr	r3, [sp, #24]
 800d0b6:	9907      	ldr	r1, [sp, #28]
 800d0b8:	fb93 f3f5 	sdiv	r3, r3, r5
 800d0bc:	fb91 f1f5 	sdiv	r1, r1, r5
 800d0c0:	b29b      	uxth	r3, r3
 800d0c2:	3102      	adds	r1, #2
 800d0c4:	1ac9      	subs	r1, r1, r3
 800d0c6:	3a01      	subs	r2, #1
 800d0c8:	3b01      	subs	r3, #1
 800d0ca:	80a0      	strh	r0, [r4, #4]
 800d0cc:	4620      	mov	r0, r4
 800d0ce:	8022      	strh	r2, [r4, #0]
 800d0d0:	8063      	strh	r3, [r4, #2]
 800d0d2:	80e1      	strh	r1, [r4, #6]
 800d0d4:	b009      	add	sp, #36	@ 0x24
 800d0d6:	bd30      	pop	{r4, r5, pc}

0800d0d8 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800d0d8:	b510      	push	{r4, lr}
 800d0da:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 800d0de:	4604      	mov	r4, r0
 800d0e0:	f7ff ffc4 	bl	800d06c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d0e4:	4620      	mov	r0, r4
 800d0e6:	bd10      	pop	{r4, pc}

0800d0e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800d0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0ec:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 800d0f0:	42b5      	cmp	r5, r6
 800d0f2:	bfa2      	ittt	ge
 800d0f4:	462b      	movge	r3, r5
 800d0f6:	4635      	movge	r5, r6
 800d0f8:	461e      	movge	r6, r3
 800d0fa:	1b73      	subs	r3, r6, r5
 800d0fc:	468a      	mov	sl, r1
 800d0fe:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800d100:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 800d104:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 800d108:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 800d10a:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d10e:	b0af      	sub	sp, #188	@ 0xbc
 800d110:	f04f 0320 	mov.w	r3, #32
 800d114:	4604      	mov	r4, r0
 800d116:	bfa4      	itt	ge
 800d118:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 800d11c:	2500      	movge	r5, #0
 800d11e:	fb99 f9f3 	sdiv	r9, r9, r3
 800d122:	fb9b fbf3 	sdiv	fp, fp, r3
 800d126:	2900      	cmp	r1, #0
 800d128:	f000 80ff 	beq.w	800d32a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800d12c:	f9ba 0000 	ldrsh.w	r0, [sl]
 800d130:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 800d134:	eba9 0700 	sub.w	r7, r9, r0
 800d138:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800d13c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800d140:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 800d144:	ebab 0803 	sub.w	r8, fp, r3
 800d148:	4407      	add	r7, r0
 800d14a:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800d14e:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800d152:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 800d156:	b23f      	sxth	r7, r7
 800d158:	4498      	add	r8, r3
 800d15a:	eba9 0707 	sub.w	r7, r9, r7
 800d15e:	fa0f f888 	sxth.w	r8, r8
 800d162:	ebab 0808 	sub.w	r8, fp, r8
 800d166:	2f00      	cmp	r7, #0
 800d168:	bfb8      	it	lt
 800d16a:	427f      	neglt	r7, r7
 800d16c:	f1b8 0f00 	cmp.w	r8, #0
 800d170:	bfb8      	it	lt
 800d172:	f1c8 0800 	rsblt	r8, r8, #0
 800d176:	45bc      	cmp	ip, r7
 800d178:	bfcc      	ite	gt
 800d17a:	f10c 0701 	addgt.w	r7, ip, #1
 800d17e:	3701      	addle	r7, #1
 800d180:	4540      	cmp	r0, r8
 800d182:	bfc8      	it	gt
 800d184:	f100 0801 	addgt.w	r8, r0, #1
 800d188:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 800d18c:	f100 0001 	add.w	r0, r0, #1
 800d190:	ea4f 0060 	mov.w	r0, r0, asr #1
 800d194:	f04f 0302 	mov.w	r3, #2
 800d198:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 800d19c:	fb91 f1f3 	sdiv	r1, r1, r3
 800d1a0:	eba2 0201 	sub.w	r2, r2, r1
 800d1a4:	bfd8      	it	le
 800d1a6:	f108 0801 	addle.w	r8, r8, #1
 800d1aa:	9303      	str	r3, [sp, #12]
 800d1ac:	920f      	str	r2, [sp, #60]	@ 0x3c
 800d1ae:	f7ff fd57 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineEi>
 800d1b2:	a92e      	add	r1, sp, #184	@ 0xb8
 800d1b4:	fb08 f808 	mul.w	r8, r8, r8
 800d1b8:	f841 0d74 	str.w	r0, [r1, #-116]!
 800d1bc:	a80f      	add	r0, sp, #60	@ 0x3c
 800d1be:	f7ff fd43 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d1c2:	fb07 8707 	mla	r7, r7, r7, r8
 800d1c6:	f04f 0c20 	mov.w	ip, #32
 800d1ca:	fb90 f0fc 	sdiv	r0, r0, ip
 800d1ce:	4340      	muls	r0, r0
 800d1d0:	4287      	cmp	r7, r0
 800d1d2:	9b03      	ldr	r3, [sp, #12]
 800d1d4:	da04      	bge.n	800d1e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 800d1d6:	2401      	movs	r4, #1
 800d1d8:	4620      	mov	r0, r4
 800d1da:	b02f      	add	sp, #188	@ 0xbc
 800d1dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1e0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800d1e2:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800d1e4:	fb91 f2f3 	sdiv	r2, r1, r3
 800d1e8:	4402      	add	r2, r0
 800d1ea:	fb92 f2fc 	sdiv	r2, r2, ip
 800d1ee:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d1f2:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 800d1f6:	440b      	add	r3, r1
 800d1f8:	b21b      	sxth	r3, r3
 800d1fa:	454b      	cmp	r3, r9
 800d1fc:	bfa8      	it	ge
 800d1fe:	464b      	movge	r3, r9
 800d200:	428b      	cmp	r3, r1
 800d202:	bfac      	ite	ge
 800d204:	eba9 0903 	subge.w	r9, r9, r3
 800d208:	eba9 0901 	sublt.w	r9, r9, r1
 800d20c:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 800d210:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 800d214:	440b      	add	r3, r1
 800d216:	b21b      	sxth	r3, r3
 800d218:	455b      	cmp	r3, fp
 800d21a:	bfa8      	it	ge
 800d21c:	465b      	movge	r3, fp
 800d21e:	428b      	cmp	r3, r1
 800d220:	bfac      	ite	ge
 800d222:	ebab 0b03 	subge.w	fp, fp, r3
 800d226:	ebab 0b01 	sublt.w	fp, fp, r1
 800d22a:	3201      	adds	r2, #1
 800d22c:	fb0b fb0b 	mul.w	fp, fp, fp
 800d230:	fb09 b909 	mla	r9, r9, r9, fp
 800d234:	4352      	muls	r2, r2
 800d236:	4591      	cmp	r9, r2
 800d238:	dccd      	bgt.n	800d1d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 800d23a:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 800d23e:	4621      	mov	r1, r4
 800d240:	4648      	mov	r0, r9
 800d242:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 800d244:	f003 fbe6 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d248:	6823      	ldr	r3, [r4, #0]
 800d24a:	4620      	mov	r0, r4
 800d24c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800d24e:	4798      	blx	r3
 800d250:	4653      	mov	r3, sl
 800d252:	9000      	str	r0, [sp, #0]
 800d254:	464a      	mov	r2, r9
 800d256:	4639      	mov	r1, r7
 800d258:	a811      	add	r0, sp, #68	@ 0x44
 800d25a:	f013 ffbf 	bl	80211dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d25e:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800d260:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d262:	920b      	str	r2, [sp, #44]	@ 0x2c
 800d264:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800d268:	930c      	str	r3, [sp, #48]	@ 0x30
 800d26a:	dd07      	ble.n	800d27c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 800d26c:	2102      	movs	r1, #2
 800d26e:	fb93 f3f1 	sdiv	r3, r3, r1
 800d272:	4413      	add	r3, r2
 800d274:	930c      	str	r3, [sp, #48]	@ 0x30
 800d276:	fb93 f3f1 	sdiv	r3, r3, r1
 800d27a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d27c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d280:	4628      	mov	r0, r5
 800d282:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d286:	930d      	str	r3, [sp, #52]	@ 0x34
 800d288:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 800d28c:	f7ff fd08 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d290:	4649      	mov	r1, r9
 800d292:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d294:	a80d      	add	r0, sp, #52	@ 0x34
 800d296:	f7ff fcd7 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d29a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d29c:	f04f 0a02 	mov.w	sl, #2
 800d2a0:	fb90 f0fa 	sdiv	r0, r0, sl
 800d2a4:	eb00 0b03 	add.w	fp, r0, r3
 800d2a8:	4628      	mov	r0, r5
 800d2aa:	f7ff fd18 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d2ae:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 800d2b2:	017f      	lsls	r7, r7, #5
 800d2b4:	f848 0d80 	str.w	r0, [r8, #-128]!
 800d2b8:	a80d      	add	r0, sp, #52	@ 0x34
 800d2ba:	4641      	mov	r1, r8
 800d2bc:	f7ff fcc4 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d2c0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d2c2:	fb90 f0fa 	sdiv	r0, r0, sl
 800d2c6:	4659      	mov	r1, fp
 800d2c8:	1a12      	subs	r2, r2, r0
 800d2ca:	a811      	add	r0, sp, #68	@ 0x44
 800d2cc:	f014 f8d2 	bl	8021474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d2d0:	f105 0a20 	add.w	sl, r5, #32
 800d2d4:	bb67      	cbnz	r7, 800d330 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 800d2d6:	46ab      	mov	fp, r5
 800d2d8:	45b2      	cmp	sl, r6
 800d2da:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800d2dc:	dc33      	bgt.n	800d346 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 800d2de:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d2e0:	4650      	mov	r0, sl
 800d2e2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800d2e6:	920d      	str	r2, [sp, #52]	@ 0x34
 800d2e8:	f7ff fcda 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d2ec:	4641      	mov	r1, r8
 800d2ee:	900e      	str	r0, [sp, #56]	@ 0x38
 800d2f0:	a80d      	add	r0, sp, #52	@ 0x34
 800d2f2:	f7ff fca9 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d2f6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d2f8:	2302      	movs	r3, #2
 800d2fa:	fb90 f0f3 	sdiv	r0, r0, r3
 800d2fe:	eb00 0b02 	add.w	fp, r0, r2
 800d302:	4650      	mov	r0, sl
 800d304:	f7ff fceb 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d308:	4649      	mov	r1, r9
 800d30a:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d30c:	a80d      	add	r0, sp, #52	@ 0x34
 800d30e:	f7ff fc9b 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d312:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d314:	2302      	movs	r3, #2
 800d316:	4659      	mov	r1, fp
 800d318:	fb90 f0f3 	sdiv	r0, r0, r3
 800d31c:	1a12      	subs	r2, r2, r0
 800d31e:	a811      	add	r0, sp, #68	@ 0x44
 800d320:	46d3      	mov	fp, sl
 800d322:	f014 f8f4 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d326:	44ba      	add	sl, r7
 800d328:	e7d6      	b.n	800d2d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 800d32a:	fb92 f2f3 	sdiv	r2, r2, r3
 800d32e:	e75e      	b.n	800d1ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 800d330:	fb9a f2f7 	sdiv	r2, sl, r7
 800d334:	fb07 a212 	mls	r2, r7, r2, sl
 800d338:	1aba      	subs	r2, r7, r2
 800d33a:	fb92 f1f7 	sdiv	r1, r2, r7
 800d33e:	fb07 2211 	mls	r2, r7, r1, r2
 800d342:	4492      	add	sl, r2
 800d344:	e7c7      	b.n	800d2d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 800d346:	455e      	cmp	r6, fp
 800d348:	dd23      	ble.n	800d392 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 800d34a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800d34c:	4630      	mov	r0, r6
 800d34e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800d352:	920d      	str	r2, [sp, #52]	@ 0x34
 800d354:	f7ff fca4 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d358:	4641      	mov	r1, r8
 800d35a:	900e      	str	r0, [sp, #56]	@ 0x38
 800d35c:	a80d      	add	r0, sp, #52	@ 0x34
 800d35e:	f7ff fc73 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d362:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d364:	f04f 0a02 	mov.w	sl, #2
 800d368:	fb90 f0fa 	sdiv	r0, r0, sl
 800d36c:	4403      	add	r3, r0
 800d36e:	4630      	mov	r0, r6
 800d370:	9303      	str	r3, [sp, #12]
 800d372:	f7ff fcb4 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d376:	4649      	mov	r1, r9
 800d378:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d37a:	a80d      	add	r0, sp, #52	@ 0x34
 800d37c:	f7ff fc64 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d380:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d382:	9b03      	ldr	r3, [sp, #12]
 800d384:	fb90 f0fa 	sdiv	r0, r0, sl
 800d388:	4619      	mov	r1, r3
 800d38a:	1a12      	subs	r2, r2, r0
 800d38c:	a811      	add	r0, sp, #68	@ 0x44
 800d38e:	f014 f8be 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d392:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d394:	b99b      	cbnz	r3, 800d3be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 800d396:	1b75      	subs	r5, r6, r5
 800d398:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 800d39c:	da04      	bge.n	800d3a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d39e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800d3a2:	a811      	add	r0, sp, #68	@ 0x44
 800d3a4:	f014 f8b3 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d3a8:	21ff      	movs	r1, #255	@ 0xff
 800d3aa:	a811      	add	r0, sp, #68	@ 0x44
 800d3ac:	f013 ffaa 	bl	8021304 <_ZN8touchgfx6Canvas6renderEh>
 800d3b0:	4604      	mov	r4, r0
 800d3b2:	4b8a      	ldr	r3, [pc, #552]	@ (800d5dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 800d3b4:	9311      	str	r3, [sp, #68]	@ 0x44
 800d3b6:	a816      	add	r0, sp, #88	@ 0x58
 800d3b8:	f000 fa00 	bl	800d7bc <_ZN8touchgfx7OutlineD1Ev>
 800d3bc:	e70c      	b.n	800d1d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800d3be:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 800d3c2:	429a      	cmp	r2, r3
 800d3c4:	f0c0 8107 	bcc.w	800d5d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 800d3c8:	1b73      	subs	r3, r6, r5
 800d3ca:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 800d3ce:	9303      	str	r3, [sp, #12]
 800d3d0:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d3d4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800d3d8:	da43      	bge.n	800d462 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d3da:	4630      	mov	r0, r6
 800d3dc:	f7ff fc60 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d3e0:	4649      	mov	r1, r9
 800d3e2:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d3e4:	a80b      	add	r0, sp, #44	@ 0x2c
 800d3e6:	f7ff fc2f 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d3ec:	18c3      	adds	r3, r0, r3
 800d3ee:	4630      	mov	r0, r6
 800d3f0:	9305      	str	r3, [sp, #20]
 800d3f2:	f7ff fc74 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d3f6:	4649      	mov	r1, r9
 800d3f8:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d3fa:	a80b      	add	r0, sp, #44	@ 0x2c
 800d3fc:	f7ff fc24 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d400:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d402:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 800d406:	1a1b      	subs	r3, r3, r0
 800d408:	9304      	str	r3, [sp, #16]
 800d40a:	9206      	str	r2, [sp, #24]
 800d40c:	eb06 030a 	add.w	r3, r6, sl
 800d410:	9a06      	ldr	r2, [sp, #24]
 800d412:	4293      	cmp	r3, r2
 800d414:	da25      	bge.n	800d462 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d416:	4618      	mov	r0, r3
 800d418:	9308      	str	r3, [sp, #32]
 800d41a:	f7ff fc41 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d41e:	4649      	mov	r1, r9
 800d420:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d422:	a80c      	add	r0, sp, #48	@ 0x30
 800d424:	f7ff fc10 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d428:	9b05      	ldr	r3, [sp, #20]
 800d42a:	2202      	movs	r2, #2
 800d42c:	fb90 f0f2 	sdiv	r0, r0, r2
 800d430:	18c3      	adds	r3, r0, r3
 800d432:	9307      	str	r3, [sp, #28]
 800d434:	9b08      	ldr	r3, [sp, #32]
 800d436:	9209      	str	r2, [sp, #36]	@ 0x24
 800d438:	4618      	mov	r0, r3
 800d43a:	f7ff fc50 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d43e:	a92e      	add	r1, sp, #184	@ 0xb8
 800d440:	f841 0d80 	str.w	r0, [r1, #-128]!
 800d444:	a80c      	add	r0, sp, #48	@ 0x30
 800d446:	f7ff fbff 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d44a:	9b04      	ldr	r3, [sp, #16]
 800d44c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d44e:	9907      	ldr	r1, [sp, #28]
 800d450:	fb90 f2f2 	sdiv	r2, r0, r2
 800d454:	a811      	add	r0, sp, #68	@ 0x44
 800d456:	1a9a      	subs	r2, r3, r2
 800d458:	f014 f859 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d45c:	9b08      	ldr	r3, [sp, #32]
 800d45e:	4453      	add	r3, sl
 800d460:	e7d6      	b.n	800d410 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 800d462:	455e      	cmp	r6, fp
 800d464:	dd25      	ble.n	800d4b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 800d466:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d46a:	4630      	mov	r0, r6
 800d46c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d470:	930d      	str	r3, [sp, #52]	@ 0x34
 800d472:	f7ff fc15 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d476:	4641      	mov	r1, r8
 800d478:	900e      	str	r0, [sp, #56]	@ 0x38
 800d47a:	a80d      	add	r0, sp, #52	@ 0x34
 800d47c:	f7ff fbe4 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d480:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d482:	2202      	movs	r2, #2
 800d484:	fb90 f0f2 	sdiv	r0, r0, r2
 800d488:	eb00 0903 	add.w	r9, r0, r3
 800d48c:	4630      	mov	r0, r6
 800d48e:	9204      	str	r2, [sp, #16]
 800d490:	f7ff fc25 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d494:	a92e      	add	r1, sp, #184	@ 0xb8
 800d496:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d49a:	a80d      	add	r0, sp, #52	@ 0x34
 800d49c:	f7ff fbd4 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4a0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d4a2:	9a04      	ldr	r2, [sp, #16]
 800d4a4:	fb90 f2f2 	sdiv	r2, r0, r2
 800d4a8:	4649      	mov	r1, r9
 800d4aa:	1a9a      	subs	r2, r3, r2
 800d4ac:	a811      	add	r0, sp, #68	@ 0x44
 800d4ae:	f014 f82e 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d4b2:	46d9      	mov	r9, fp
 800d4b4:	2602      	movs	r6, #2
 800d4b6:	45a9      	cmp	r9, r5
 800d4b8:	db25      	blt.n	800d506 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 800d4ba:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d4be:	4648      	mov	r0, r9
 800d4c0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d4c4:	930d      	str	r3, [sp, #52]	@ 0x34
 800d4c6:	f7ff fbeb 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d4ca:	4641      	mov	r1, r8
 800d4cc:	900e      	str	r0, [sp, #56]	@ 0x38
 800d4ce:	a80d      	add	r0, sp, #52	@ 0x34
 800d4d0:	f7ff fbba 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4d4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d4d6:	fb90 f0f6 	sdiv	r0, r0, r6
 800d4da:	eb00 0b03 	add.w	fp, r0, r3
 800d4de:	4648      	mov	r0, r9
 800d4e0:	f7ff fbfd 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d4e4:	a90f      	add	r1, sp, #60	@ 0x3c
 800d4e6:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d4e8:	a80d      	add	r0, sp, #52	@ 0x34
 800d4ea:	f7ff fbad 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4ee:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d4f0:	fb90 f0f6 	sdiv	r0, r0, r6
 800d4f4:	4659      	mov	r1, fp
 800d4f6:	1a12      	subs	r2, r2, r0
 800d4f8:	a811      	add	r0, sp, #68	@ 0x44
 800d4fa:	46cb      	mov	fp, r9
 800d4fc:	f014 f807 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d500:	eba9 0907 	sub.w	r9, r9, r7
 800d504:	e7d7      	b.n	800d4b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 800d506:	455d      	cmp	r5, fp
 800d508:	da22      	bge.n	800d550 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 800d50a:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d50e:	4628      	mov	r0, r5
 800d510:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d514:	930d      	str	r3, [sp, #52]	@ 0x34
 800d516:	f7ff fbc3 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d51a:	4641      	mov	r1, r8
 800d51c:	900e      	str	r0, [sp, #56]	@ 0x38
 800d51e:	a80d      	add	r0, sp, #52	@ 0x34
 800d520:	f7ff fb92 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d524:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800d526:	2602      	movs	r6, #2
 800d528:	fb90 f0f6 	sdiv	r0, r0, r6
 800d52c:	4407      	add	r7, r0
 800d52e:	4628      	mov	r0, r5
 800d530:	f7ff fbd5 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d534:	a92e      	add	r1, sp, #184	@ 0xb8
 800d536:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d53a:	a80d      	add	r0, sp, #52	@ 0x34
 800d53c:	f7ff fb84 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d540:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d542:	fb90 f0f6 	sdiv	r0, r0, r6
 800d546:	4639      	mov	r1, r7
 800d548:	1a12      	subs	r2, r2, r0
 800d54a:	a811      	add	r0, sp, #68	@ 0x44
 800d54c:	f013 ffdf 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d550:	9b03      	ldr	r3, [sp, #12]
 800d552:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d556:	f6bf af27 	bge.w	800d3a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d55a:	4628      	mov	r0, r5
 800d55c:	f7ff fba0 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d560:	ae2e      	add	r6, sp, #184	@ 0xb8
 800d562:	f04f 0b02 	mov.w	fp, #2
 800d566:	f846 0d7c 	str.w	r0, [r6, #-124]!
 800d56a:	a80b      	add	r0, sp, #44	@ 0x2c
 800d56c:	4631      	mov	r1, r6
 800d56e:	f7ff fb6b 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d572:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d574:	eb00 0903 	add.w	r9, r0, r3
 800d578:	4628      	mov	r0, r5
 800d57a:	f7ff fbb0 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d57e:	4631      	mov	r1, r6
 800d580:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d582:	a80b      	add	r0, sp, #44	@ 0x2c
 800d584:	f7ff fb60 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d588:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d58a:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 800d58e:	eba3 0800 	sub.w	r8, r3, r0
 800d592:	4454      	add	r4, sl
 800d594:	42a5      	cmp	r5, r4
 800d596:	f77f af07 	ble.w	800d3a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d59a:	4620      	mov	r0, r4
 800d59c:	f7ff fb80 	bl	800cca0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d5a0:	4631      	mov	r1, r6
 800d5a2:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d5a4:	a80c      	add	r0, sp, #48	@ 0x30
 800d5a6:	f7ff fb4f 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d5aa:	fb90 f0fb 	sdiv	r0, r0, fp
 800d5ae:	eb00 0709 	add.w	r7, r0, r9
 800d5b2:	4620      	mov	r0, r4
 800d5b4:	f7ff fb93 	bl	800ccde <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d5b8:	a90e      	add	r1, sp, #56	@ 0x38
 800d5ba:	900e      	str	r0, [sp, #56]	@ 0x38
 800d5bc:	a80c      	add	r0, sp, #48	@ 0x30
 800d5be:	f7ff fb43 	bl	800cc48 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d5c2:	4639      	mov	r1, r7
 800d5c4:	fb90 f2fb 	sdiv	r2, r0, fp
 800d5c8:	a811      	add	r0, sp, #68	@ 0x44
 800d5ca:	eba8 0202 	sub.w	r2, r8, r2
 800d5ce:	f013 ff9e 	bl	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d5d2:	4454      	add	r4, sl
 800d5d4:	e7de      	b.n	800d594 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 800d5d6:	2400      	movs	r4, #0
 800d5d8:	e6eb      	b.n	800d3b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 800d5da:	bf00      	nop
 800d5dc:	08025640 	.word	0x08025640

0800d5e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d5e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d5e2:	6803      	ldr	r3, [r0, #0]
 800d5e4:	460d      	mov	r5, r1
 800d5e6:	4604      	mov	r4, r0
 800d5e8:	4601      	mov	r1, r0
 800d5ea:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d5ec:	a802      	add	r0, sp, #8
 800d5ee:	4798      	blx	r3
 800d5f0:	6828      	ldr	r0, [r5, #0]
 800d5f2:	6869      	ldr	r1, [r5, #4]
 800d5f4:	466b      	mov	r3, sp
 800d5f6:	c303      	stmia	r3!, {r0, r1}
 800d5f8:	4668      	mov	r0, sp
 800d5fa:	4619      	mov	r1, r3
 800d5fc:	f7fc feb4 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 800d600:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d602:	b188      	cbz	r0, 800d628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d604:	6803      	ldr	r3, [r0, #0]
 800d606:	1d21      	adds	r1, r4, #4
 800d608:	68db      	ldr	r3, [r3, #12]
 800d60a:	4798      	blx	r3
 800d60c:	b160      	cbz	r0, 800d628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d60e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d612:	2b00      	cmp	r3, #0
 800d614:	dd08      	ble.n	800d628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d616:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d61a:	2d00      	cmp	r5, #0
 800d61c:	dd04      	ble.n	800d628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d61e:	4a2b      	ldr	r2, [pc, #172]	@ (800d6cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800d620:	7812      	ldrb	r2, [r2, #0]
 800d622:	b11a      	cbz	r2, 800d62c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800d624:	2a01      	cmp	r2, #1
 800d626:	d029      	beq.n	800d67c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800d628:	b004      	add	sp, #16
 800d62a:	bd70      	pop	{r4, r5, r6, pc}
 800d62c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d630:	441d      	add	r5, r3
 800d632:	b2ad      	uxth	r5, r5
 800d634:	b22e      	sxth	r6, r5
 800d636:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d63a:	42b3      	cmp	r3, r6
 800d63c:	daf4      	bge.n	800d628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d63e:	6823      	ldr	r3, [r4, #0]
 800d640:	4669      	mov	r1, sp
 800d642:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d644:	4620      	mov	r0, r4
 800d646:	4798      	blx	r3
 800d648:	b940      	cbnz	r0, 800d65c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d64a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d64e:	2b01      	cmp	r3, #1
 800d650:	d004      	beq.n	800d65c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d652:	3301      	adds	r3, #1
 800d654:	105b      	asrs	r3, r3, #1
 800d656:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d65a:	e7f0      	b.n	800d63e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d65c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d660:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d664:	4413      	add	r3, r2
 800d666:	b29b      	uxth	r3, r3
 800d668:	441a      	add	r2, r3
 800d66a:	b212      	sxth	r2, r2
 800d66c:	4296      	cmp	r6, r2
 800d66e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d672:	dae0      	bge.n	800d636 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d674:	1aeb      	subs	r3, r5, r3
 800d676:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d67a:	e7dc      	b.n	800d636 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d67c:	f8bd 5000 	ldrh.w	r5, [sp]
 800d680:	441d      	add	r5, r3
 800d682:	b2ad      	uxth	r5, r5
 800d684:	b22e      	sxth	r6, r5
 800d686:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d68a:	42b3      	cmp	r3, r6
 800d68c:	dacc      	bge.n	800d628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d68e:	6823      	ldr	r3, [r4, #0]
 800d690:	4669      	mov	r1, sp
 800d692:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d694:	4620      	mov	r0, r4
 800d696:	4798      	blx	r3
 800d698:	b940      	cbnz	r0, 800d6ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d69a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d69e:	2b01      	cmp	r3, #1
 800d6a0:	d004      	beq.n	800d6ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d6a2:	3301      	adds	r3, #1
 800d6a4:	105b      	asrs	r3, r3, #1
 800d6a6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d6aa:	e7f0      	b.n	800d68e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d6ac:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d6b0:	f8bd 3000 	ldrh.w	r3, [sp]
 800d6b4:	4413      	add	r3, r2
 800d6b6:	b29b      	uxth	r3, r3
 800d6b8:	441a      	add	r2, r3
 800d6ba:	b212      	sxth	r2, r2
 800d6bc:	4296      	cmp	r6, r2
 800d6be:	f8ad 3000 	strh.w	r3, [sp]
 800d6c2:	dae0      	bge.n	800d686 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d6c4:	1aeb      	subs	r3, r5, r3
 800d6c6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d6ca:	e7dc      	b.n	800d686 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d6cc:	20013fee 	.word	0x20013fee

0800d6d0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d6d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d6d2:	6803      	ldr	r3, [r0, #0]
 800d6d4:	4604      	mov	r4, r0
 800d6d6:	4601      	mov	r1, r0
 800d6d8:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d6da:	4668      	mov	r0, sp
 800d6dc:	4798      	blx	r3
 800d6de:	2100      	movs	r1, #0
 800d6e0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d6e4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6e8:	9102      	str	r1, [sp, #8]
 800d6ea:	4668      	mov	r0, sp
 800d6ec:	a902      	add	r1, sp, #8
 800d6ee:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d6f2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d6f6:	f7fc fe37 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 800d6fa:	6823      	ldr	r3, [r4, #0]
 800d6fc:	4669      	mov	r1, sp
 800d6fe:	691b      	ldr	r3, [r3, #16]
 800d700:	4620      	mov	r0, r4
 800d702:	4798      	blx	r3
 800d704:	b004      	add	sp, #16
 800d706:	bd10      	pop	{r4, pc}

0800d708 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d708:	2101      	movs	r1, #1
 800d70a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800d70e:	490b      	ldr	r1, [pc, #44]	@ (800d73c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d710:	6001      	str	r1, [r0, #0]
 800d712:	2200      	movs	r2, #0
 800d714:	21ff      	movs	r1, #255	@ 0xff
 800d716:	8082      	strh	r2, [r0, #4]
 800d718:	80c2      	strh	r2, [r0, #6]
 800d71a:	8102      	strh	r2, [r0, #8]
 800d71c:	8142      	strh	r2, [r0, #10]
 800d71e:	8182      	strh	r2, [r0, #12]
 800d720:	81c2      	strh	r2, [r0, #14]
 800d722:	8202      	strh	r2, [r0, #16]
 800d724:	8242      	strh	r2, [r0, #18]
 800d726:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d72a:	61c2      	str	r2, [r0, #28]
 800d72c:	8402      	strh	r2, [r0, #32]
 800d72e:	8442      	strh	r2, [r0, #34]	@ 0x22
 800d730:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800d734:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800d738:	6282      	str	r2, [r0, #40]	@ 0x28
 800d73a:	4770      	bx	lr
 800d73c:	0802511c 	.word	0x0802511c

0800d740 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d740:	2300      	movs	r3, #0
 800d742:	8083      	strh	r3, [r0, #4]
 800d744:	80c3      	strh	r3, [r0, #6]
 800d746:	8003      	strh	r3, [r0, #0]
 800d748:	8043      	strh	r3, [r0, #2]
 800d74a:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800d74e:	2bff      	cmp	r3, #255	@ 0xff
 800d750:	bf01      	itttt	eq
 800d752:	890b      	ldrheq	r3, [r1, #8]
 800d754:	8083      	strheq	r3, [r0, #4]
 800d756:	894b      	ldrheq	r3, [r1, #10]
 800d758:	80c3      	strheq	r3, [r0, #6]
 800d75a:	4770      	bx	lr

0800d75c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d75c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d75e:	4604      	mov	r4, r0
 800d760:	6808      	ldr	r0, [r1, #0]
 800d762:	6849      	ldr	r1, [r1, #4]
 800d764:	466b      	mov	r3, sp
 800d766:	c303      	stmia	r3!, {r0, r1}
 800d768:	6823      	ldr	r3, [r4, #0]
 800d76a:	4669      	mov	r1, sp
 800d76c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d76e:	4620      	mov	r0, r4
 800d770:	4798      	blx	r3
 800d772:	4b08      	ldr	r3, [pc, #32]	@ (800d794 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d774:	681b      	ldr	r3, [r3, #0]
 800d776:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d77a:	b10a      	cbz	r2, 800d780 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d77c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d77e:	b900      	cbnz	r0, 800d782 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d780:	6898      	ldr	r0, [r3, #8]
 800d782:	6803      	ldr	r3, [r0, #0]
 800d784:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d786:	6a1d      	ldr	r5, [r3, #32]
 800d788:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d78c:	4669      	mov	r1, sp
 800d78e:	47a8      	blx	r5
 800d790:	b003      	add	sp, #12
 800d792:	bd30      	pop	{r4, r5, pc}
 800d794:	20013ff8 	.word	0x20013ff8

0800d798 <_ZN8touchgfx3BoxD1Ev>:
 800d798:	4770      	bx	lr

0800d79a <_ZN8touchgfx3BoxD0Ev>:
 800d79a:	b510      	push	{r4, lr}
 800d79c:	212c      	movs	r1, #44	@ 0x2c
 800d79e:	4604      	mov	r4, r0
 800d7a0:	f014 f97f 	bl	8021aa2 <_ZdlPvj>
 800d7a4:	4620      	mov	r0, r4
 800d7a6:	bd10      	pop	{r4, pc}

0800d7a8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d7a8:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800d7ac:	b12a      	cbz	r2, 800d7ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d7ae:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d7b2:	b112      	cbz	r2, 800d7ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d7b4:	6803      	ldr	r3, [r0, #0]
 800d7b6:	695b      	ldr	r3, [r3, #20]
 800d7b8:	4718      	bx	r3
 800d7ba:	4770      	bx	lr

0800d7bc <_ZN8touchgfx7OutlineD1Ev>:
 800d7bc:	4770      	bx	lr

0800d7be <_ZN8touchgfx7OutlineD0Ev>:
 800d7be:	b510      	push	{r4, lr}
 800d7c0:	2130      	movs	r1, #48	@ 0x30
 800d7c2:	4604      	mov	r4, r0
 800d7c4:	f014 f96d 	bl	8021aa2 <_ZdlPvj>
 800d7c8:	4620      	mov	r0, r4
 800d7ca:	bd10      	pop	{r4, pc}

0800d7cc <_ZN8touchgfx7Outline5resetEv>:
 800d7cc:	b510      	push	{r4, lr}
 800d7ce:	4604      	mov	r4, r0
 800d7d0:	f000 fe8c 	bl	800e4ec <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800d7d4:	60e0      	str	r0, [r4, #12]
 800d7d6:	f000 fe8f 	bl	800e4f8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800d7da:	68e3      	ldr	r3, [r4, #12]
 800d7dc:	6123      	str	r3, [r4, #16]
 800d7de:	08c0      	lsrs	r0, r0, #3
 800d7e0:	2200      	movs	r2, #0
 800d7e2:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800d7e6:	3801      	subs	r0, #1
 800d7e8:	6060      	str	r0, [r4, #4]
 800d7ea:	60a2      	str	r2, [r4, #8]
 800d7ec:	8019      	strh	r1, [r3, #0]
 800d7ee:	8059      	strh	r1, [r3, #2]
 800d7f0:	809a      	strh	r2, [r3, #4]
 800d7f2:	80da      	strh	r2, [r3, #6]
 800d7f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d7f6:	f023 0301 	bic.w	r3, r3, #1
 800d7fa:	f043 0302 	orr.w	r3, r3, #2
 800d7fe:	6263      	str	r3, [r4, #36]	@ 0x24
 800d800:	bd10      	pop	{r4, pc}
	...

0800d804 <_ZN8touchgfx7OutlineC1Ev>:
 800d804:	b510      	push	{r4, lr}
 800d806:	4b0a      	ldr	r3, [pc, #40]	@ (800d830 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800d808:	6003      	str	r3, [r0, #0]
 800d80a:	2300      	movs	r3, #0
 800d80c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800d810:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d814:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d818:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800d81c:	6243      	str	r3, [r0, #36]	@ 0x24
 800d81e:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800d822:	4604      	mov	r4, r0
 800d824:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800d828:	f7ff ffd0 	bl	800d7cc <_ZN8touchgfx7Outline5resetEv>
 800d82c:	4620      	mov	r0, r4
 800d82e:	bd10      	pop	{r4, pc}
 800d830:	080251fc 	.word	0x080251fc

0800d834 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800d834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d838:	b093      	sub	sp, #76	@ 0x4c
 800d83a:	1156      	asrs	r6, r2, #5
 800d83c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800d83e:	9305      	str	r3, [sp, #20]
 800d840:	f004 051f 	and.w	r5, r4, #31
 800d844:	1153      	asrs	r3, r2, #5
 800d846:	9504      	str	r5, [sp, #16]
 800d848:	1165      	asrs	r5, r4, #5
 800d84a:	9303      	str	r3, [sp, #12]
 800d84c:	42ae      	cmp	r6, r5
 800d84e:	ea4f 1364 	mov.w	r3, r4, asr #5
 800d852:	9306      	str	r3, [sp, #24]
 800d854:	f002 031f 	and.w	r3, r2, #31
 800d858:	f040 80f8 	bne.w	800da4c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800d85c:	9c04      	ldr	r4, [sp, #16]
 800d85e:	9a05      	ldr	r2, [sp, #20]
 800d860:	42a3      	cmp	r3, r4
 800d862:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800d866:	6902      	ldr	r2, [r0, #16]
 800d868:	d125      	bne.n	800d8b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800d86a:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d86e:	459e      	cmp	lr, r3
 800d870:	d103      	bne.n	800d87a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800d872:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d876:	429e      	cmp	r6, r3
 800d878:	d035      	beq.n	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d87a:	88d1      	ldrh	r1, [r2, #6]
 800d87c:	8893      	ldrh	r3, [r2, #4]
 800d87e:	430b      	orrs	r3, r1
 800d880:	d010      	beq.n	800d8a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d882:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d886:	2b00      	cmp	r3, #0
 800d888:	db0c      	blt.n	800d8a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d88a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800d88c:	428b      	cmp	r3, r1
 800d88e:	da09      	bge.n	800d8a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d890:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d894:	428b      	cmp	r3, r1
 800d896:	bf38      	it	cc
 800d898:	3208      	addcc	r2, #8
 800d89a:	f103 0301 	add.w	r3, r3, #1
 800d89e:	bf38      	it	cc
 800d8a0:	6102      	strcc	r2, [r0, #16]
 800d8a2:	6083      	str	r3, [r0, #8]
 800d8a4:	6903      	ldr	r3, [r0, #16]
 800d8a6:	9a03      	ldr	r2, [sp, #12]
 800d8a8:	f8a3 e000 	strh.w	lr, [r3]
 800d8ac:	805a      	strh	r2, [r3, #2]
 800d8ae:	2200      	movs	r2, #0
 800d8b0:	809a      	strh	r2, [r3, #4]
 800d8b2:	80da      	strh	r2, [r3, #6]
 800d8b4:	e017      	b.n	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d8b6:	9c05      	ldr	r4, [sp, #20]
 800d8b8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800d8bc:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800d8c0:	f004 041f 	and.w	r4, r4, #31
 800d8c4:	114e      	asrs	r6, r1, #5
 800d8c6:	9402      	str	r4, [sp, #8]
 800d8c8:	9c04      	ldr	r4, [sp, #16]
 800d8ca:	4576      	cmp	r6, lr
 800d8cc:	f001 0c1f 	and.w	ip, r1, #31
 800d8d0:	eba4 0403 	sub.w	r4, r4, r3
 800d8d4:	d10a      	bne.n	800d8ec <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800d8d6:	9b02      	ldr	r3, [sp, #8]
 800d8d8:	449c      	add	ip, r3
 800d8da:	44a0      	add	r8, r4
 800d8dc:	fb04 a40c 	mla	r4, r4, ip, sl
 800d8e0:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d8e4:	80d4      	strh	r4, [r2, #6]
 800d8e6:	b013      	add	sp, #76	@ 0x4c
 800d8e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8ec:	9d05      	ldr	r5, [sp, #20]
 800d8ee:	1a69      	subs	r1, r5, r1
 800d8f0:	bf5b      	ittet	pl
 800d8f2:	f1cc 0520 	rsbpl	r5, ip, #32
 800d8f6:	436c      	mulpl	r4, r5
 800d8f8:	2500      	movmi	r5, #0
 800d8fa:	2520      	movpl	r5, #32
 800d8fc:	bf44      	itt	mi
 800d8fe:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d902:	4249      	negmi	r1, r1
 800d904:	9501      	str	r5, [sp, #4]
 800d906:	9f01      	ldr	r7, [sp, #4]
 800d908:	fb94 f5f1 	sdiv	r5, r4, r1
 800d90c:	fb01 4415 	mls	r4, r1, r5, r4
 800d910:	bf54      	ite	pl
 800d912:	f04f 0901 	movpl.w	r9, #1
 800d916:	f04f 39ff 	movmi.w	r9, #4294967295
 800d91a:	2c00      	cmp	r4, #0
 800d91c:	bfb8      	it	lt
 800d91e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d922:	44bc      	add	ip, r7
 800d924:	44a8      	add	r8, r5
 800d926:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d92a:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d92e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d932:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d936:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d93a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800d93e:	bfb8      	it	lt
 800d940:	1864      	addlt	r4, r4, r1
 800d942:	ea58 0202 	orrs.w	r2, r8, r2
 800d946:	444e      	add	r6, r9
 800d948:	d011      	beq.n	800d96e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d94a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d94e:	f1b8 0f00 	cmp.w	r8, #0
 800d952:	db0c      	blt.n	800d96e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d954:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800d956:	4590      	cmp	r8, r2
 800d958:	da09      	bge.n	800d96e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d95a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800d95e:	4590      	cmp	r8, r2
 800d960:	bf3c      	itt	cc
 800d962:	f10c 0208 	addcc.w	r2, ip, #8
 800d966:	6102      	strcc	r2, [r0, #16]
 800d968:	f108 0201 	add.w	r2, r8, #1
 800d96c:	6082      	str	r2, [r0, #8]
 800d96e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d972:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d976:	f8ac 6000 	strh.w	r6, [ip]
 800d97a:	2700      	movs	r7, #0
 800d97c:	45b6      	cmp	lr, r6
 800d97e:	f8ac 2002 	strh.w	r2, [ip, #2]
 800d982:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d986:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d98a:	442b      	add	r3, r5
 800d98c:	d04d      	beq.n	800da2a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800d98e:	9f04      	ldr	r7, [sp, #16]
 800d990:	1aff      	subs	r7, r7, r3
 800d992:	443d      	add	r5, r7
 800d994:	016d      	lsls	r5, r5, #5
 800d996:	fb95 f8f1 	sdiv	r8, r5, r1
 800d99a:	fb01 5518 	mls	r5, r1, r8, r5
 800d99e:	2d00      	cmp	r5, #0
 800d9a0:	bfb8      	it	lt
 800d9a2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d9a6:	f108 0701 	add.w	r7, r8, #1
 800d9aa:	bfb8      	it	lt
 800d9ac:	186d      	addlt	r5, r5, r1
 800d9ae:	1a64      	subs	r4, r4, r1
 800d9b0:	9703      	str	r7, [sp, #12]
 800d9b2:	f04f 0a00 	mov.w	sl, #0
 800d9b6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d9ba:	1964      	adds	r4, r4, r5
 800d9bc:	bf58      	it	pl
 800d9be:	9f03      	ldrpl	r7, [sp, #12]
 800d9c0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d9c4:	bf48      	it	mi
 800d9c6:	4647      	movmi	r7, r8
 800d9c8:	44bb      	add	fp, r7
 800d9ca:	f8ac b004 	strh.w	fp, [ip, #4]
 800d9ce:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d9d2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d9d6:	f8ac b006 	strh.w	fp, [ip, #6]
 800d9da:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d9de:	443b      	add	r3, r7
 800d9e0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d9e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d9e8:	bf58      	it	pl
 800d9ea:	1a64      	subpl	r4, r4, r1
 800d9ec:	ea5b 0707 	orrs.w	r7, fp, r7
 800d9f0:	444e      	add	r6, r9
 800d9f2:	d011      	beq.n	800da18 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9f4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d9f8:	f1bb 0f00 	cmp.w	fp, #0
 800d9fc:	db0c      	blt.n	800da18 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9fe:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800da00:	45bb      	cmp	fp, r7
 800da02:	da09      	bge.n	800da18 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800da04:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800da08:	45bb      	cmp	fp, r7
 800da0a:	bf3c      	itt	cc
 800da0c:	f10c 0708 	addcc.w	r7, ip, #8
 800da10:	6107      	strcc	r7, [r0, #16]
 800da12:	f10b 0701 	add.w	r7, fp, #1
 800da16:	6087      	str	r7, [r0, #8]
 800da18:	6907      	ldr	r7, [r0, #16]
 800da1a:	45b6      	cmp	lr, r6
 800da1c:	803e      	strh	r6, [r7, #0]
 800da1e:	807a      	strh	r2, [r7, #2]
 800da20:	f8a7 a004 	strh.w	sl, [r7, #4]
 800da24:	f8a7 a006 	strh.w	sl, [r7, #6]
 800da28:	d1c5      	bne.n	800d9b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800da2a:	9a04      	ldr	r2, [sp, #16]
 800da2c:	1ad3      	subs	r3, r2, r3
 800da2e:	6902      	ldr	r2, [r0, #16]
 800da30:	8891      	ldrh	r1, [r2, #4]
 800da32:	88d6      	ldrh	r6, [r2, #6]
 800da34:	4419      	add	r1, r3
 800da36:	8091      	strh	r1, [r2, #4]
 800da38:	9902      	ldr	r1, [sp, #8]
 800da3a:	f101 0c20 	add.w	ip, r1, #32
 800da3e:	9901      	ldr	r1, [sp, #4]
 800da40:	ebac 0c01 	sub.w	ip, ip, r1
 800da44:	fb03 630c 	mla	r3, r3, ip, r6
 800da48:	80d3      	strh	r3, [r2, #6]
 800da4a:	e74c      	b.n	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800da4c:	9d05      	ldr	r5, [sp, #20]
 800da4e:	1aa2      	subs	r2, r4, r2
 800da50:	eba5 0501 	sub.w	r5, r5, r1
 800da54:	9508      	str	r5, [sp, #32]
 800da56:	9202      	str	r2, [sp, #8]
 800da58:	f140 8128 	bpl.w	800dcac <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800da5c:	9a03      	ldr	r2, [sp, #12]
 800da5e:	2a00      	cmp	r2, #0
 800da60:	f6ff af41 	blt.w	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800da64:	9a02      	ldr	r2, [sp, #8]
 800da66:	4252      	negs	r2, r2
 800da68:	9202      	str	r2, [sp, #8]
 800da6a:	9a06      	ldr	r2, [sp, #24]
 800da6c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800da70:	f04f 34ff 	mov.w	r4, #4294967295
 800da74:	9206      	str	r2, [sp, #24]
 800da76:	462a      	mov	r2, r5
 800da78:	940b      	str	r4, [sp, #44]	@ 0x2c
 800da7a:	435a      	muls	r2, r3
 800da7c:	2400      	movs	r4, #0
 800da7e:	9d02      	ldr	r5, [sp, #8]
 800da80:	9401      	str	r4, [sp, #4]
 800da82:	9c02      	ldr	r4, [sp, #8]
 800da84:	fb92 f4f4 	sdiv	r4, r2, r4
 800da88:	fb05 2214 	mls	r2, r5, r4, r2
 800da8c:	2a00      	cmp	r2, #0
 800da8e:	9207      	str	r2, [sp, #28]
 800da90:	bfbc      	itt	lt
 800da92:	1952      	addlt	r2, r2, r5
 800da94:	9207      	strlt	r2, [sp, #28]
 800da96:	9a01      	ldr	r2, [sp, #4]
 800da98:	6905      	ldr	r5, [r0, #16]
 800da9a:	bfb8      	it	lt
 800da9c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800daa0:	eb04 0901 	add.w	r9, r4, r1
 800daa4:	429a      	cmp	r2, r3
 800daa6:	ea4f 1669 	mov.w	r6, r9, asr #5
 800daaa:	f040 8112 	bne.w	800dcd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800daae:	f9b5 3000 	ldrsh.w	r3, [r5]
 800dab2:	429e      	cmp	r6, r3
 800dab4:	d104      	bne.n	800dac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800dab6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800daba:	9a03      	ldr	r2, [sp, #12]
 800dabc:	429a      	cmp	r2, r3
 800dabe:	d01b      	beq.n	800daf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dac0:	88ea      	ldrh	r2, [r5, #6]
 800dac2:	88ab      	ldrh	r3, [r5, #4]
 800dac4:	4313      	orrs	r3, r2
 800dac6:	d010      	beq.n	800daea <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dac8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dacc:	2a00      	cmp	r2, #0
 800dace:	db0c      	blt.n	800daea <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dad0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dad2:	429a      	cmp	r2, r3
 800dad4:	da09      	bge.n	800daea <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dad6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800dada:	429a      	cmp	r2, r3
 800dadc:	bf38      	it	cc
 800dade:	3508      	addcc	r5, #8
 800dae0:	f102 0201 	add.w	r2, r2, #1
 800dae4:	bf38      	it	cc
 800dae6:	6105      	strcc	r5, [r0, #16]
 800dae8:	6082      	str	r2, [r0, #8]
 800daea:	6903      	ldr	r3, [r0, #16]
 800daec:	9a03      	ldr	r2, [sp, #12]
 800daee:	805a      	strh	r2, [r3, #2]
 800daf0:	2200      	movs	r2, #0
 800daf2:	801e      	strh	r6, [r3, #0]
 800daf4:	809a      	strh	r2, [r3, #4]
 800daf6:	80da      	strh	r2, [r3, #6]
 800daf8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dafa:	9a03      	ldr	r2, [sp, #12]
 800dafc:	6901      	ldr	r1, [r0, #16]
 800dafe:	441a      	add	r2, r3
 800db00:	f9b1 3000 	ldrsh.w	r3, [r1]
 800db04:	42b3      	cmp	r3, r6
 800db06:	d103      	bne.n	800db10 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800db08:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800db0c:	429a      	cmp	r2, r3
 800db0e:	d01a      	beq.n	800db46 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800db10:	88cc      	ldrh	r4, [r1, #6]
 800db12:	888b      	ldrh	r3, [r1, #4]
 800db14:	4323      	orrs	r3, r4
 800db16:	d010      	beq.n	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db18:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800db1c:	2c00      	cmp	r4, #0
 800db1e:	db0c      	blt.n	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db20:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800db22:	429c      	cmp	r4, r3
 800db24:	da09      	bge.n	800db3a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db26:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800db2a:	429c      	cmp	r4, r3
 800db2c:	bf38      	it	cc
 800db2e:	3108      	addcc	r1, #8
 800db30:	f104 0401 	add.w	r4, r4, #1
 800db34:	bf38      	it	cc
 800db36:	6101      	strcc	r1, [r0, #16]
 800db38:	6084      	str	r4, [r0, #8]
 800db3a:	6903      	ldr	r3, [r0, #16]
 800db3c:	2100      	movs	r1, #0
 800db3e:	801e      	strh	r6, [r3, #0]
 800db40:	805a      	strh	r2, [r3, #2]
 800db42:	8099      	strh	r1, [r3, #4]
 800db44:	80d9      	strh	r1, [r3, #6]
 800db46:	9b06      	ldr	r3, [sp, #24]
 800db48:	4293      	cmp	r3, r2
 800db4a:	f000 8082 	beq.w	800dc52 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800db4e:	9b08      	ldr	r3, [sp, #32]
 800db50:	9c02      	ldr	r4, [sp, #8]
 800db52:	9902      	ldr	r1, [sp, #8]
 800db54:	015b      	lsls	r3, r3, #5
 800db56:	fb93 f1f1 	sdiv	r1, r3, r1
 800db5a:	fb04 3311 	mls	r3, r4, r1, r3
 800db5e:	2b00      	cmp	r3, #0
 800db60:	9103      	str	r1, [sp, #12]
 800db62:	9308      	str	r3, [sp, #32]
 800db64:	da04      	bge.n	800db70 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800db66:	1e4b      	subs	r3, r1, #1
 800db68:	9303      	str	r3, [sp, #12]
 800db6a:	9b08      	ldr	r3, [sp, #32]
 800db6c:	4423      	add	r3, r4
 800db6e:	9308      	str	r3, [sp, #32]
 800db70:	9b07      	ldr	r3, [sp, #28]
 800db72:	9902      	ldr	r1, [sp, #8]
 800db74:	1a5b      	subs	r3, r3, r1
 800db76:	9307      	str	r3, [sp, #28]
 800db78:	9b01      	ldr	r3, [sp, #4]
 800db7a:	f1c3 0320 	rsb	r3, r3, #32
 800db7e:	930e      	str	r3, [sp, #56]	@ 0x38
 800db80:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800db82:	9b01      	ldr	r3, [sp, #4]
 800db84:	1a5b      	subs	r3, r3, r1
 800db86:	464f      	mov	r7, r9
 800db88:	930a      	str	r3, [sp, #40]	@ 0x28
 800db8a:	2600      	movs	r6, #0
 800db8c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800db90:	185b      	adds	r3, r3, r1
 800db92:	bf58      	it	pl
 800db94:	9902      	ldrpl	r1, [sp, #8]
 800db96:	9307      	str	r3, [sp, #28]
 800db98:	bf5d      	ittte	pl
 800db9a:	1a5b      	subpl	r3, r3, r1
 800db9c:	9307      	strpl	r3, [sp, #28]
 800db9e:	9b03      	ldrpl	r3, [sp, #12]
 800dba0:	9903      	ldrmi	r1, [sp, #12]
 800dba2:	bf58      	it	pl
 800dba4:	1c59      	addpl	r1, r3, #1
 800dba6:	4489      	add	r9, r1
 800dba8:	2a00      	cmp	r2, #0
 800dbaa:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800dbae:	db2e      	blt.n	800dc0e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dbb0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dbb2:	4293      	cmp	r3, r2
 800dbb4:	dd2b      	ble.n	800dc0e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dbb6:	9c01      	ldr	r4, [sp, #4]
 800dbb8:	6905      	ldr	r5, [r0, #16]
 800dbba:	46a0      	mov	r8, r4
 800dbbc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800dbbe:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800dbc2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800dbc6:	45a0      	cmp	r8, r4
 800dbc8:	f040 814f 	bne.w	800de6a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800dbcc:	f9b5 1000 	ldrsh.w	r1, [r5]
 800dbd0:	4551      	cmp	r1, sl
 800dbd2:	d103      	bne.n	800dbdc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800dbd4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dbd8:	4291      	cmp	r1, r2
 800dbda:	d018      	beq.n	800dc0e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dbdc:	ea5c 010e 	orrs.w	r1, ip, lr
 800dbe0:	d00f      	beq.n	800dc02 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbe2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dbe6:	2900      	cmp	r1, #0
 800dbe8:	db0b      	blt.n	800dc02 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbea:	428b      	cmp	r3, r1
 800dbec:	dd09      	ble.n	800dc02 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbee:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800dbf2:	4299      	cmp	r1, r3
 800dbf4:	bf38      	it	cc
 800dbf6:	3508      	addcc	r5, #8
 800dbf8:	f101 0101 	add.w	r1, r1, #1
 800dbfc:	bf38      	it	cc
 800dbfe:	6105      	strcc	r5, [r0, #16]
 800dc00:	6081      	str	r1, [r0, #8]
 800dc02:	6903      	ldr	r3, [r0, #16]
 800dc04:	f8a3 a000 	strh.w	sl, [r3]
 800dc08:	805a      	strh	r2, [r3, #2]
 800dc0a:	809e      	strh	r6, [r3, #4]
 800dc0c:	80de      	strh	r6, [r3, #6]
 800dc0e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dc10:	6901      	ldr	r1, [r0, #16]
 800dc12:	441a      	add	r2, r3
 800dc14:	88cc      	ldrh	r4, [r1, #6]
 800dc16:	888b      	ldrh	r3, [r1, #4]
 800dc18:	4323      	orrs	r3, r4
 800dc1a:	d010      	beq.n	800dc3e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dc1c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dc20:	2c00      	cmp	r4, #0
 800dc22:	db0c      	blt.n	800dc3e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dc24:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dc26:	429c      	cmp	r4, r3
 800dc28:	da09      	bge.n	800dc3e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dc2a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dc2e:	429c      	cmp	r4, r3
 800dc30:	bf38      	it	cc
 800dc32:	3108      	addcc	r1, #8
 800dc34:	f104 0401 	add.w	r4, r4, #1
 800dc38:	bf38      	it	cc
 800dc3a:	6101      	strcc	r1, [r0, #16]
 800dc3c:	6084      	str	r4, [r0, #8]
 800dc3e:	6903      	ldr	r3, [r0, #16]
 800dc40:	f8a3 a000 	strh.w	sl, [r3]
 800dc44:	805a      	strh	r2, [r3, #2]
 800dc46:	809e      	strh	r6, [r3, #4]
 800dc48:	80de      	strh	r6, [r3, #6]
 800dc4a:	9b06      	ldr	r3, [sp, #24]
 800dc4c:	4293      	cmp	r3, r2
 800dc4e:	464f      	mov	r7, r9
 800dc50:	d19c      	bne.n	800db8c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800dc52:	9b01      	ldr	r3, [sp, #4]
 800dc54:	6907      	ldr	r7, [r0, #16]
 800dc56:	f1c3 0620 	rsb	r6, r3, #32
 800dc5a:	9b05      	ldr	r3, [sp, #20]
 800dc5c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800dc60:	9b04      	ldr	r3, [sp, #16]
 800dc62:	429e      	cmp	r6, r3
 800dc64:	f040 81cc 	bne.w	800e000 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800dc68:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dc6c:	459e      	cmp	lr, r3
 800dc6e:	d104      	bne.n	800dc7a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800dc70:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc74:	429a      	cmp	r2, r3
 800dc76:	f43f ae36 	beq.w	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc7a:	88f9      	ldrh	r1, [r7, #6]
 800dc7c:	88bb      	ldrh	r3, [r7, #4]
 800dc7e:	430b      	orrs	r3, r1
 800dc80:	d010      	beq.n	800dca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc82:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc86:	2b00      	cmp	r3, #0
 800dc88:	db0c      	blt.n	800dca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc8a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800dc8c:	428b      	cmp	r3, r1
 800dc8e:	da09      	bge.n	800dca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc90:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dc94:	428b      	cmp	r3, r1
 800dc96:	bf38      	it	cc
 800dc98:	3708      	addcc	r7, #8
 800dc9a:	f103 0301 	add.w	r3, r3, #1
 800dc9e:	bf38      	it	cc
 800dca0:	6107      	strcc	r7, [r0, #16]
 800dca2:	6083      	str	r3, [r0, #8]
 800dca4:	6903      	ldr	r3, [r0, #16]
 800dca6:	f8a3 e000 	strh.w	lr, [r3]
 800dcaa:	e5ff      	b.n	800d8ac <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800dcac:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800dcae:	9c03      	ldr	r4, [sp, #12]
 800dcb0:	42a2      	cmp	r2, r4
 800dcb2:	f6ff ae18 	blt.w	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dcb6:	9c06      	ldr	r4, [sp, #24]
 800dcb8:	42a2      	cmp	r2, r4
 800dcba:	bfb8      	it	lt
 800dcbc:	3201      	addlt	r2, #1
 800dcbe:	9c08      	ldr	r4, [sp, #32]
 800dcc0:	bfb8      	it	lt
 800dcc2:	9206      	strlt	r2, [sp, #24]
 800dcc4:	f1c3 0220 	rsb	r2, r3, #32
 800dcc8:	4362      	muls	r2, r4
 800dcca:	2401      	movs	r4, #1
 800dccc:	940b      	str	r4, [sp, #44]	@ 0x2c
 800dcce:	2420      	movs	r4, #32
 800dcd0:	e6d5      	b.n	800da7e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800dcd2:	f009 021f 	and.w	r2, r9, #31
 800dcd6:	ea4f 1861 	mov.w	r8, r1, asr #5
 800dcda:	920c      	str	r2, [sp, #48]	@ 0x30
 800dcdc:	9a01      	ldr	r2, [sp, #4]
 800dcde:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800dce2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800dce6:	45b0      	cmp	r8, r6
 800dce8:	f001 011f 	and.w	r1, r1, #31
 800dcec:	eba2 0203 	sub.w	r2, r2, r3
 800dcf0:	d108      	bne.n	800dd04 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800dcf2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dcf4:	4419      	add	r1, r3
 800dcf6:	4496      	add	lr, r2
 800dcf8:	fb02 a101 	mla	r1, r2, r1, sl
 800dcfc:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dd00:	80e9      	strh	r1, [r5, #6]
 800dd02:	e6f9      	b.n	800daf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dd04:	2c00      	cmp	r4, #0
 800dd06:	f2c0 80a9 	blt.w	800de5c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800dd0a:	2701      	movs	r7, #1
 800dd0c:	f1c1 0c20 	rsb	ip, r1, #32
 800dd10:	970a      	str	r7, [sp, #40]	@ 0x28
 800dd12:	fb02 f20c 	mul.w	r2, r2, ip
 800dd16:	2720      	movs	r7, #32
 800dd18:	9709      	str	r7, [sp, #36]	@ 0x24
 800dd1a:	fb92 fcf4 	sdiv	ip, r2, r4
 800dd1e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800dd20:	fb04 221c 	mls	r2, r4, ip, r2
 800dd24:	2a00      	cmp	r2, #0
 800dd26:	bfb8      	it	lt
 800dd28:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800dd2c:	4439      	add	r1, r7
 800dd2e:	fb0c a101 	mla	r1, ip, r1, sl
 800dd32:	80e9      	strh	r1, [r5, #6]
 800dd34:	44e6      	add	lr, ip
 800dd36:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800dd38:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dd3c:	eb08 0501 	add.w	r5, r8, r1
 800dd40:	6901      	ldr	r1, [r0, #16]
 800dd42:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800dd46:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800dd4a:	bfb8      	it	lt
 800dd4c:	1912      	addlt	r2, r2, r4
 800dd4e:	ea58 070e 	orrs.w	r7, r8, lr
 800dd52:	d010      	beq.n	800dd76 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd54:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800dd58:	f1be 0f00 	cmp.w	lr, #0
 800dd5c:	db0b      	blt.n	800dd76 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd5e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dd60:	45be      	cmp	lr, r7
 800dd62:	da08      	bge.n	800dd76 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd64:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dd68:	45be      	cmp	lr, r7
 800dd6a:	bf3c      	itt	cc
 800dd6c:	3108      	addcc	r1, #8
 800dd6e:	6101      	strcc	r1, [r0, #16]
 800dd70:	f10e 0101 	add.w	r1, lr, #1
 800dd74:	6081      	str	r1, [r0, #8]
 800dd76:	6901      	ldr	r1, [r0, #16]
 800dd78:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800dd7c:	800d      	strh	r5, [r1, #0]
 800dd7e:	f04f 0e00 	mov.w	lr, #0
 800dd82:	42ae      	cmp	r6, r5
 800dd84:	f8a1 8002 	strh.w	r8, [r1, #2]
 800dd88:	f8a1 e004 	strh.w	lr, [r1, #4]
 800dd8c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800dd90:	4463      	add	r3, ip
 800dd92:	d054      	beq.n	800de3e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800dd94:	9901      	ldr	r1, [sp, #4]
 800dd96:	1ac9      	subs	r1, r1, r3
 800dd98:	4461      	add	r1, ip
 800dd9a:	0149      	lsls	r1, r1, #5
 800dd9c:	fb91 fef4 	sdiv	lr, r1, r4
 800dda0:	fb04 111e 	mls	r1, r4, lr, r1
 800dda4:	2900      	cmp	r1, #0
 800dda6:	bfb8      	it	lt
 800dda8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800ddac:	f10e 0701 	add.w	r7, lr, #1
 800ddb0:	bfb8      	it	lt
 800ddb2:	1909      	addlt	r1, r1, r4
 800ddb4:	1b12      	subs	r2, r2, r4
 800ddb6:	970d      	str	r7, [sp, #52]	@ 0x34
 800ddb8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800ddbc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800ddbe:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800ddc2:	1852      	adds	r2, r2, r1
 800ddc4:	bf54      	ite	pl
 800ddc6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800ddca:	46f4      	movmi	ip, lr
 800ddcc:	44e3      	add	fp, ip
 800ddce:	f8aa b004 	strh.w	fp, [sl, #4]
 800ddd2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800ddd6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800ddda:	f8aa b006 	strh.w	fp, [sl, #6]
 800ddde:	4463      	add	r3, ip
 800dde0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dde4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dde8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800ddec:	bf58      	it	pl
 800ddee:	1b12      	subpl	r2, r2, r4
 800ddf0:	443d      	add	r5, r7
 800ddf2:	ea5b 070a 	orrs.w	r7, fp, sl
 800ddf6:	d014      	beq.n	800de22 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ddf8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800ddfc:	f1ba 0f00 	cmp.w	sl, #0
 800de00:	db0f      	blt.n	800de22 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800de02:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800de04:	45ba      	cmp	sl, r7
 800de06:	da0c      	bge.n	800de22 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800de08:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800de0c:	45ba      	cmp	sl, r7
 800de0e:	bf38      	it	cc
 800de10:	f10c 0c08 	addcc.w	ip, ip, #8
 800de14:	f10a 0a01 	add.w	sl, sl, #1
 800de18:	bf38      	it	cc
 800de1a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800de1e:	f8c0 a008 	str.w	sl, [r0, #8]
 800de22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de26:	f04f 0700 	mov.w	r7, #0
 800de2a:	42ae      	cmp	r6, r5
 800de2c:	f8ac 5000 	strh.w	r5, [ip]
 800de30:	f8ac 8002 	strh.w	r8, [ip, #2]
 800de34:	f8ac 7004 	strh.w	r7, [ip, #4]
 800de38:	f8ac 7006 	strh.w	r7, [ip, #6]
 800de3c:	d1bc      	bne.n	800ddb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800de3e:	6904      	ldr	r4, [r0, #16]
 800de40:	9a01      	ldr	r2, [sp, #4]
 800de42:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800de44:	1ad3      	subs	r3, r2, r3
 800de46:	88a2      	ldrh	r2, [r4, #4]
 800de48:	441a      	add	r2, r3
 800de4a:	80a2      	strh	r2, [r4, #4]
 800de4c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800de4e:	3120      	adds	r1, #32
 800de50:	1a89      	subs	r1, r1, r2
 800de52:	88e2      	ldrh	r2, [r4, #6]
 800de54:	fb03 2301 	mla	r3, r3, r1, r2
 800de58:	80e3      	strh	r3, [r4, #6]
 800de5a:	e64d      	b.n	800daf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800de5c:	f04f 37ff 	mov.w	r7, #4294967295
 800de60:	970a      	str	r7, [sp, #40]	@ 0x28
 800de62:	434a      	muls	r2, r1
 800de64:	4264      	negs	r4, r4
 800de66:	2700      	movs	r7, #0
 800de68:	e756      	b.n	800dd18 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800de6a:	ea4f 1867 	mov.w	r8, r7, asr #5
 800de6e:	f009 031f 	and.w	r3, r9, #31
 800de72:	45d0      	cmp	r8, sl
 800de74:	f007 071f 	and.w	r7, r7, #31
 800de78:	930f      	str	r3, [sp, #60]	@ 0x3c
 800de7a:	fa1f fc8c 	uxth.w	ip, ip
 800de7e:	fa1f fe8e 	uxth.w	lr, lr
 800de82:	d10a      	bne.n	800de9a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800de84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de86:	449c      	add	ip, r3
 800de88:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800de8a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800de8e:	441f      	add	r7, r3
 800de90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de92:	fb03 e707 	mla	r7, r3, r7, lr
 800de96:	80ef      	strh	r7, [r5, #6]
 800de98:	e6b9      	b.n	800dc0e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800de9a:	2900      	cmp	r1, #0
 800de9c:	f2c0 80a8 	blt.w	800dff0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800dea0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800dea2:	f1c7 0320 	rsb	r3, r7, #32
 800dea6:	4363      	muls	r3, r4
 800dea8:	2401      	movs	r4, #1
 800deaa:	940d      	str	r4, [sp, #52]	@ 0x34
 800deac:	2420      	movs	r4, #32
 800deae:	940c      	str	r4, [sp, #48]	@ 0x30
 800deb0:	fb93 f4f1 	sdiv	r4, r3, r1
 800deb4:	fb01 3b14 	mls	fp, r1, r4, r3
 800deb8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800deba:	f1bb 0f00 	cmp.w	fp, #0
 800debe:	bfb8      	it	lt
 800dec0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800dec4:	441f      	add	r7, r3
 800dec6:	fb04 e707 	mla	r7, r4, r7, lr
 800deca:	44a4      	add	ip, r4
 800decc:	f8a5 c004 	strh.w	ip, [r5, #4]
 800ded0:	80ef      	strh	r7, [r5, #6]
 800ded2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ded6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ded8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800dedc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800dee0:	bfb8      	it	lt
 800dee2:	448b      	addlt	fp, r1
 800dee4:	eb08 0503 	add.w	r5, r8, r3
 800dee8:	ea5e 0307 	orrs.w	r3, lr, r7
 800deec:	d011      	beq.n	800df12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800deee:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800def2:	f1be 0f00 	cmp.w	lr, #0
 800def6:	db0c      	blt.n	800df12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800def8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800defa:	45be      	cmp	lr, r7
 800defc:	da09      	bge.n	800df12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800defe:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800df02:	45be      	cmp	lr, r7
 800df04:	bf3c      	itt	cc
 800df06:	f10c 0708 	addcc.w	r7, ip, #8
 800df0a:	6107      	strcc	r7, [r0, #16]
 800df0c:	f10e 0701 	add.w	r7, lr, #1
 800df10:	6087      	str	r7, [r0, #8]
 800df12:	6907      	ldr	r7, [r0, #16]
 800df14:	b213      	sxth	r3, r2
 800df16:	9310      	str	r3, [sp, #64]	@ 0x40
 800df18:	807b      	strh	r3, [r7, #2]
 800df1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800df1c:	803d      	strh	r5, [r7, #0]
 800df1e:	4555      	cmp	r5, sl
 800df20:	80be      	strh	r6, [r7, #4]
 800df22:	80fe      	strh	r6, [r7, #6]
 800df24:	eb04 0c03 	add.w	ip, r4, r3
 800df28:	d051      	beq.n	800dfce <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800df2a:	9b01      	ldr	r3, [sp, #4]
 800df2c:	eba3 070c 	sub.w	r7, r3, ip
 800df30:	443c      	add	r4, r7
 800df32:	0164      	lsls	r4, r4, #5
 800df34:	fb94 f8f1 	sdiv	r8, r4, r1
 800df38:	fb01 4418 	mls	r4, r1, r8, r4
 800df3c:	2c00      	cmp	r4, #0
 800df3e:	bfb8      	it	lt
 800df40:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800df44:	ebab 0301 	sub.w	r3, fp, r1
 800df48:	f108 0701 	add.w	r7, r8, #1
 800df4c:	bfb8      	it	lt
 800df4e:	1864      	addlt	r4, r4, r1
 800df50:	9309      	str	r3, [sp, #36]	@ 0x24
 800df52:	9711      	str	r7, [sp, #68]	@ 0x44
 800df54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800df56:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df5a:	191b      	adds	r3, r3, r4
 800df5c:	bf58      	it	pl
 800df5e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800df60:	f8be b004 	ldrh.w	fp, [lr, #4]
 800df64:	9309      	str	r3, [sp, #36]	@ 0x24
 800df66:	bf48      	it	mi
 800df68:	4647      	movmi	r7, r8
 800df6a:	44bb      	add	fp, r7
 800df6c:	f8ae b004 	strh.w	fp, [lr, #4]
 800df70:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df74:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800df78:	f8ae b006 	strh.w	fp, [lr, #6]
 800df7c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df80:	44bc      	add	ip, r7
 800df82:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800df84:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df88:	443d      	add	r5, r7
 800df8a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800df8e:	bf5c      	itt	pl
 800df90:	1a5b      	subpl	r3, r3, r1
 800df92:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800df94:	ea5b 0307 	orrs.w	r3, fp, r7
 800df98:	d011      	beq.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df9a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800df9e:	f1bb 0f00 	cmp.w	fp, #0
 800dfa2:	db0c      	blt.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800dfa4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dfa6:	45bb      	cmp	fp, r7
 800dfa8:	da09      	bge.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800dfaa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800dfae:	45bb      	cmp	fp, r7
 800dfb0:	bf3c      	itt	cc
 800dfb2:	f10e 0708 	addcc.w	r7, lr, #8
 800dfb6:	6107      	strcc	r7, [r0, #16]
 800dfb8:	f10b 0701 	add.w	r7, fp, #1
 800dfbc:	6087      	str	r7, [r0, #8]
 800dfbe:	6907      	ldr	r7, [r0, #16]
 800dfc0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800dfc2:	803d      	strh	r5, [r7, #0]
 800dfc4:	4555      	cmp	r5, sl
 800dfc6:	807b      	strh	r3, [r7, #2]
 800dfc8:	80be      	strh	r6, [r7, #4]
 800dfca:	80fe      	strh	r6, [r7, #6]
 800dfcc:	d1c2      	bne.n	800df54 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800dfce:	9b01      	ldr	r3, [sp, #4]
 800dfd0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800dfd2:	eba3 0c0c 	sub.w	ip, r3, ip
 800dfd6:	6903      	ldr	r3, [r0, #16]
 800dfd8:	8899      	ldrh	r1, [r3, #4]
 800dfda:	4461      	add	r1, ip
 800dfdc:	8099      	strh	r1, [r3, #4]
 800dfde:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800dfe0:	3720      	adds	r7, #32
 800dfe2:	1a7f      	subs	r7, r7, r1
 800dfe4:	88d9      	ldrh	r1, [r3, #6]
 800dfe6:	fb0c 1c07 	mla	ip, ip, r7, r1
 800dfea:	f8a3 c006 	strh.w	ip, [r3, #6]
 800dfee:	e60e      	b.n	800dc0e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dff0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800dff2:	f04f 34ff 	mov.w	r4, #4294967295
 800dff6:	940d      	str	r4, [sp, #52]	@ 0x34
 800dff8:	437b      	muls	r3, r7
 800dffa:	4249      	negs	r1, r1
 800dffc:	2400      	movs	r4, #0
 800dffe:	e756      	b.n	800deae <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800e000:	9905      	ldr	r1, [sp, #20]
 800e002:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e006:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e00a:	f001 011f 	and.w	r1, r1, #31
 800e00e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e012:	9102      	str	r1, [sp, #8]
 800e014:	9904      	ldr	r1, [sp, #16]
 800e016:	45f3      	cmp	fp, lr
 800e018:	f009 0c1f 	and.w	ip, r9, #31
 800e01c:	eba1 0406 	sub.w	r4, r1, r6
 800e020:	d108      	bne.n	800e034 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e022:	9b02      	ldr	r3, [sp, #8]
 800e024:	449c      	add	ip, r3
 800e026:	44a0      	add	r8, r4
 800e028:	fb04 a40c 	mla	r4, r4, ip, sl
 800e02c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e030:	80fc      	strh	r4, [r7, #6]
 800e032:	e458      	b.n	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e034:	9905      	ldr	r1, [sp, #20]
 800e036:	ebb1 0109 	subs.w	r1, r1, r9
 800e03a:	bf5b      	ittet	pl
 800e03c:	f1cc 0520 	rsbpl	r5, ip, #32
 800e040:	436c      	mulpl	r4, r5
 800e042:	2500      	movmi	r5, #0
 800e044:	2520      	movpl	r5, #32
 800e046:	bf44      	itt	mi
 800e048:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e04c:	4249      	negmi	r1, r1
 800e04e:	9501      	str	r5, [sp, #4]
 800e050:	9b01      	ldr	r3, [sp, #4]
 800e052:	fb94 f5f1 	sdiv	r5, r4, r1
 800e056:	fb01 4415 	mls	r4, r1, r5, r4
 800e05a:	bf54      	ite	pl
 800e05c:	f04f 0901 	movpl.w	r9, #1
 800e060:	f04f 39ff 	movmi.w	r9, #4294967295
 800e064:	2c00      	cmp	r4, #0
 800e066:	bfb8      	it	lt
 800e068:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e06c:	449c      	add	ip, r3
 800e06e:	44a8      	add	r8, r5
 800e070:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e074:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e078:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e07c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e080:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e084:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e088:	bfb8      	it	lt
 800e08a:	1864      	addlt	r4, r4, r1
 800e08c:	ea58 0707 	orrs.w	r7, r8, r7
 800e090:	eb0b 0309 	add.w	r3, fp, r9
 800e094:	d011      	beq.n	800e0ba <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e096:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e09a:	f1b8 0f00 	cmp.w	r8, #0
 800e09e:	db0c      	blt.n	800e0ba <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e0a0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e0a2:	45b8      	cmp	r8, r7
 800e0a4:	da09      	bge.n	800e0ba <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e0a6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e0aa:	45b8      	cmp	r8, r7
 800e0ac:	bf3c      	itt	cc
 800e0ae:	f10c 0708 	addcc.w	r7, ip, #8
 800e0b2:	6107      	strcc	r7, [r0, #16]
 800e0b4:	f108 0701 	add.w	r7, r8, #1
 800e0b8:	6087      	str	r7, [r0, #8]
 800e0ba:	6907      	ldr	r7, [r0, #16]
 800e0bc:	f04f 0c00 	mov.w	ip, #0
 800e0c0:	b212      	sxth	r2, r2
 800e0c2:	459e      	cmp	lr, r3
 800e0c4:	803b      	strh	r3, [r7, #0]
 800e0c6:	807a      	strh	r2, [r7, #2]
 800e0c8:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e0cc:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e0d0:	442e      	add	r6, r5
 800e0d2:	d04d      	beq.n	800e170 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e0d4:	9f04      	ldr	r7, [sp, #16]
 800e0d6:	1bbf      	subs	r7, r7, r6
 800e0d8:	443d      	add	r5, r7
 800e0da:	016d      	lsls	r5, r5, #5
 800e0dc:	fb95 f8f1 	sdiv	r8, r5, r1
 800e0e0:	fb01 5518 	mls	r5, r1, r8, r5
 800e0e4:	4565      	cmp	r5, ip
 800e0e6:	bfb8      	it	lt
 800e0e8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e0ec:	f108 0701 	add.w	r7, r8, #1
 800e0f0:	bfb8      	it	lt
 800e0f2:	186d      	addlt	r5, r5, r1
 800e0f4:	1a64      	subs	r4, r4, r1
 800e0f6:	9703      	str	r7, [sp, #12]
 800e0f8:	f04f 0a00 	mov.w	sl, #0
 800e0fc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e100:	1964      	adds	r4, r4, r5
 800e102:	bf58      	it	pl
 800e104:	9f03      	ldrpl	r7, [sp, #12]
 800e106:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e10a:	bf48      	it	mi
 800e10c:	4647      	movmi	r7, r8
 800e10e:	44bb      	add	fp, r7
 800e110:	f8ac b004 	strh.w	fp, [ip, #4]
 800e114:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e118:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e11c:	f8ac b006 	strh.w	fp, [ip, #6]
 800e120:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e124:	443e      	add	r6, r7
 800e126:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e12a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e12e:	bf58      	it	pl
 800e130:	1a64      	subpl	r4, r4, r1
 800e132:	ea5b 0707 	orrs.w	r7, fp, r7
 800e136:	444b      	add	r3, r9
 800e138:	d011      	beq.n	800e15e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e13a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e13e:	f1bb 0f00 	cmp.w	fp, #0
 800e142:	db0c      	blt.n	800e15e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e144:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e146:	45bb      	cmp	fp, r7
 800e148:	da09      	bge.n	800e15e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e14a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e14e:	45bb      	cmp	fp, r7
 800e150:	bf3c      	itt	cc
 800e152:	f10c 0708 	addcc.w	r7, ip, #8
 800e156:	6107      	strcc	r7, [r0, #16]
 800e158:	f10b 0701 	add.w	r7, fp, #1
 800e15c:	6087      	str	r7, [r0, #8]
 800e15e:	6907      	ldr	r7, [r0, #16]
 800e160:	459e      	cmp	lr, r3
 800e162:	803b      	strh	r3, [r7, #0]
 800e164:	807a      	strh	r2, [r7, #2]
 800e166:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e16a:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e16e:	d1c5      	bne.n	800e0fc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e170:	9b04      	ldr	r3, [sp, #16]
 800e172:	1b9e      	subs	r6, r3, r6
 800e174:	6903      	ldr	r3, [r0, #16]
 800e176:	889a      	ldrh	r2, [r3, #4]
 800e178:	4432      	add	r2, r6
 800e17a:	809a      	strh	r2, [r3, #4]
 800e17c:	9a02      	ldr	r2, [sp, #8]
 800e17e:	f102 0c20 	add.w	ip, r2, #32
 800e182:	9a01      	ldr	r2, [sp, #4]
 800e184:	ebac 0c02 	sub.w	ip, ip, r2
 800e188:	88da      	ldrh	r2, [r3, #6]
 800e18a:	fb06 260c 	mla	r6, r6, ip, r2
 800e18e:	80de      	strh	r6, [r3, #6]
 800e190:	f7ff bba9 	b.w	800d8e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e194 <_ZN8touchgfx7Outline6lineToEii>:
 800e194:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e196:	079b      	lsls	r3, r3, #30
 800e198:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e19a:	460e      	mov	r6, r1
 800e19c:	4615      	mov	r5, r2
 800e19e:	d511      	bpl.n	800e1c4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e1a0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e1a4:	ea86 0701 	eor.w	r7, r6, r1
 800e1a8:	ea85 0302 	eor.w	r3, r5, r2
 800e1ac:	433b      	orrs	r3, r7
 800e1ae:	d009      	beq.n	800e1c4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e1b0:	4633      	mov	r3, r6
 800e1b2:	9500      	str	r5, [sp, #0]
 800e1b4:	f7ff fb3e 	bl	800d834 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e1b8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e1ba:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e1be:	f043 0301 	orr.w	r3, r3, #1
 800e1c2:	6243      	str	r3, [r0, #36]	@ 0x24
 800e1c4:	b003      	add	sp, #12
 800e1c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e1c8 <_ZN8touchgfx7Outline6moveToEii>:
 800e1c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e1ca:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e1cc:	4615      	mov	r5, r2
 800e1ce:	079a      	lsls	r2, r3, #30
 800e1d0:	4604      	mov	r4, r0
 800e1d2:	460e      	mov	r6, r1
 800e1d4:	d401      	bmi.n	800e1da <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e1d6:	f7ff faf9 	bl	800d7cc <_ZN8touchgfx7Outline5resetEv>
 800e1da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e1dc:	07db      	lsls	r3, r3, #31
 800e1de:	d504      	bpl.n	800e1ea <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e1e0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e1e4:	4620      	mov	r0, r4
 800e1e6:	f7ff ffd5 	bl	800e194 <_ZN8touchgfx7Outline6lineToEii>
 800e1ea:	6923      	ldr	r3, [r4, #16]
 800e1ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1f0:	1170      	asrs	r0, r6, #5
 800e1f2:	4290      	cmp	r0, r2
 800e1f4:	ea4f 1165 	mov.w	r1, r5, asr #5
 800e1f8:	d103      	bne.n	800e202 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800e1fa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e1fe:	4291      	cmp	r1, r2
 800e200:	d01a      	beq.n	800e238 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800e202:	88df      	ldrh	r7, [r3, #6]
 800e204:	889a      	ldrh	r2, [r3, #4]
 800e206:	433a      	orrs	r2, r7
 800e208:	d010      	beq.n	800e22c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e20a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e20e:	2a00      	cmp	r2, #0
 800e210:	db0c      	blt.n	800e22c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e212:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800e214:	42ba      	cmp	r2, r7
 800e216:	da09      	bge.n	800e22c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e218:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e21c:	42ba      	cmp	r2, r7
 800e21e:	bf38      	it	cc
 800e220:	3308      	addcc	r3, #8
 800e222:	f102 0201 	add.w	r2, r2, #1
 800e226:	bf38      	it	cc
 800e228:	6123      	strcc	r3, [r4, #16]
 800e22a:	60a2      	str	r2, [r4, #8]
 800e22c:	6923      	ldr	r3, [r4, #16]
 800e22e:	2200      	movs	r2, #0
 800e230:	8018      	strh	r0, [r3, #0]
 800e232:	8059      	strh	r1, [r3, #2]
 800e234:	809a      	strh	r2, [r3, #4]
 800e236:	80da      	strh	r2, [r3, #6]
 800e238:	6166      	str	r6, [r4, #20]
 800e23a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e23e:	6225      	str	r5, [r4, #32]
 800e240:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e242 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e242:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e246:	b0d0      	sub	sp, #320	@ 0x140
 800e248:	466c      	mov	r4, sp
 800e24a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e24e:	4627      	mov	r7, r4
 800e250:	1a0d      	subs	r5, r1, r0
 800e252:	2d48      	cmp	r5, #72	@ 0x48
 800e254:	f100 0308 	add.w	r3, r0, #8
 800e258:	f340 80d5 	ble.w	800e406 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e25c:	112d      	asrs	r5, r5, #4
 800e25e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e262:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e266:	6816      	ldr	r6, [r2, #0]
 800e268:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e26c:	6006      	str	r6, [r0, #0]
 800e26e:	6856      	ldr	r6, [r2, #4]
 800e270:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e274:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e278:	6046      	str	r6, [r0, #4]
 800e27a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e27e:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e282:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e286:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e28a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e28e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e292:	4565      	cmp	r5, ip
 800e294:	f1a1 0208 	sub.w	r2, r1, #8
 800e298:	db06      	blt.n	800e2a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e29a:	d119      	bne.n	800e2d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e29c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e2a0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e2a4:	42ae      	cmp	r6, r5
 800e2a6:	dd13      	ble.n	800e2d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e2a8:	460e      	mov	r6, r1
 800e2aa:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e2ae:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e2b2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e2b6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e2ba:	601d      	str	r5, [r3, #0]
 800e2bc:	6875      	ldr	r5, [r6, #4]
 800e2be:	605d      	str	r5, [r3, #4]
 800e2c0:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e2c4:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e2c8:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e2cc:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e2d0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e2d4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e2d8:	42ae      	cmp	r6, r5
 800e2da:	db06      	blt.n	800e2ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e2dc:	d116      	bne.n	800e30c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e2de:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e2e2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e2e6:	45ac      	cmp	ip, r5
 800e2e8:	da10      	bge.n	800e30c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e2ea:	681d      	ldr	r5, [r3, #0]
 800e2ec:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e2f0:	6005      	str	r5, [r0, #0]
 800e2f2:	685d      	ldr	r5, [r3, #4]
 800e2f4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e2f8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e2fc:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e300:	6045      	str	r5, [r0, #4]
 800e302:	8146      	strh	r6, [r0, #10]
 800e304:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e308:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e30c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e310:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e314:	4565      	cmp	r5, ip
 800e316:	db06      	blt.n	800e326 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e318:	d119      	bne.n	800e34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e31a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e31e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e322:	42ae      	cmp	r6, r5
 800e324:	da13      	bge.n	800e34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e326:	460e      	mov	r6, r1
 800e328:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e32c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e330:	6005      	str	r5, [r0, #0]
 800e332:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e336:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e33a:	6875      	ldr	r5, [r6, #4]
 800e33c:	6045      	str	r5, [r0, #4]
 800e33e:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e342:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e346:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e34a:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e34e:	3308      	adds	r3, #8
 800e350:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e354:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e358:	45e6      	cmp	lr, ip
 800e35a:	dbf8      	blt.n	800e34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e35c:	d105      	bne.n	800e36a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e35e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e362:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e366:	42ae      	cmp	r6, r5
 800e368:	dbf1      	blt.n	800e34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e36a:	4615      	mov	r5, r2
 800e36c:	3a08      	subs	r2, #8
 800e36e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e372:	45b4      	cmp	ip, r6
 800e374:	dbf9      	blt.n	800e36a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e376:	d105      	bne.n	800e384 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e378:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e37c:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e380:	45b0      	cmp	r8, r6
 800e382:	dbf2      	blt.n	800e36a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e384:	4293      	cmp	r3, r2
 800e386:	f1a5 0608 	sub.w	r6, r5, #8
 800e38a:	d816      	bhi.n	800e3ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e38c:	f8d6 c000 	ldr.w	ip, [r6]
 800e390:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e394:	f8c3 c000 	str.w	ip, [r3]
 800e398:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e39c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e3a0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e3a4:	f8c3 c004 	str.w	ip, [r3, #4]
 800e3a8:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e3ac:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e3b0:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e3b4:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e3b8:	e7c9      	b.n	800e34e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e3ba:	f8d6 e000 	ldr.w	lr, [r6]
 800e3be:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e3c2:	f8c0 e000 	str.w	lr, [r0]
 800e3c6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e3ca:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e3ce:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e3d2:	f8c0 e004 	str.w	lr, [r0, #4]
 800e3d6:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e3da:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e3de:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e3e2:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e3e6:	1acd      	subs	r5, r1, r3
 800e3e8:	1a16      	subs	r6, r2, r0
 800e3ea:	10ed      	asrs	r5, r5, #3
 800e3ec:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e3f0:	bfb5      	itete	lt
 800e3f2:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e3f6:	e9c4 3100 	strdge	r3, r1, [r4]
 800e3fa:	460a      	movlt	r2, r1
 800e3fc:	4603      	movge	r3, r0
 800e3fe:	3408      	adds	r4, #8
 800e400:	4618      	mov	r0, r3
 800e402:	4611      	mov	r1, r2
 800e404:	e724      	b.n	800e250 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e406:	4299      	cmp	r1, r3
 800e408:	d928      	bls.n	800e45c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800e40a:	f1a3 0210 	sub.w	r2, r3, #16
 800e40e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e412:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e416:	45ac      	cmp	ip, r5
 800e418:	db06      	blt.n	800e428 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e41a:	d11d      	bne.n	800e458 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e41c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e420:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e424:	42ae      	cmp	r6, r5
 800e426:	da17      	bge.n	800e458 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e428:	4615      	mov	r5, r2
 800e42a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e42e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e432:	6116      	str	r6, [r2, #16]
 800e434:	686e      	ldr	r6, [r5, #4]
 800e436:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e43a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800e43e:	f8a2 9008 	strh.w	r9, [r2, #8]
 800e442:	42a8      	cmp	r0, r5
 800e444:	6156      	str	r6, [r2, #20]
 800e446:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800e44a:	f8a2 800c 	strh.w	r8, [r2, #12]
 800e44e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800e452:	f1a2 0208 	sub.w	r2, r2, #8
 800e456:	d1da      	bne.n	800e40e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e458:	3308      	adds	r3, #8
 800e45a:	e7d4      	b.n	800e406 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e45c:	42bc      	cmp	r4, r7
 800e45e:	d903      	bls.n	800e468 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800e460:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e464:	3c08      	subs	r4, #8
 800e466:	e6f3      	b.n	800e250 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e468:	b050      	add	sp, #320	@ 0x140
 800e46a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e46e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e46e:	b510      	push	{r4, lr}
 800e470:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e472:	07da      	lsls	r2, r3, #31
 800e474:	4604      	mov	r4, r0
 800e476:	d507      	bpl.n	800e488 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e478:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e47c:	f7ff fe8a 	bl	800e194 <_ZN8touchgfx7Outline6lineToEii>
 800e480:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e482:	f023 0301 	bic.w	r3, r3, #1
 800e486:	6243      	str	r3, [r0, #36]	@ 0x24
 800e488:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e48a:	079b      	lsls	r3, r3, #30
 800e48c:	d521      	bpl.n	800e4d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e48e:	6923      	ldr	r3, [r4, #16]
 800e490:	88d9      	ldrh	r1, [r3, #6]
 800e492:	889a      	ldrh	r2, [r3, #4]
 800e494:	430a      	orrs	r2, r1
 800e496:	d010      	beq.n	800e4ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e498:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e49c:	2a00      	cmp	r2, #0
 800e49e:	db0c      	blt.n	800e4ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e4a0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800e4a2:	428a      	cmp	r2, r1
 800e4a4:	da09      	bge.n	800e4ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e4a6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e4aa:	4291      	cmp	r1, r2
 800e4ac:	bf88      	it	hi
 800e4ae:	3308      	addhi	r3, #8
 800e4b0:	f102 0201 	add.w	r2, r2, #1
 800e4b4:	bf88      	it	hi
 800e4b6:	6123      	strhi	r3, [r4, #16]
 800e4b8:	60a2      	str	r2, [r4, #8]
 800e4ba:	68a1      	ldr	r1, [r4, #8]
 800e4bc:	b129      	cbz	r1, 800e4ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e4be:	6863      	ldr	r3, [r4, #4]
 800e4c0:	4299      	cmp	r1, r3
 800e4c2:	d802      	bhi.n	800e4ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e4c4:	68e0      	ldr	r0, [r4, #12]
 800e4c6:	f7ff febc 	bl	800e242 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e4ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e4cc:	f023 0302 	bic.w	r3, r3, #2
 800e4d0:	6263      	str	r3, [r4, #36]	@ 0x24
 800e4d2:	68e0      	ldr	r0, [r4, #12]
 800e4d4:	bd10      	pop	{r4, pc}
	...

0800e4d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e4d8:	4b02      	ldr	r3, [pc, #8]	@ (800e4e4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e4da:	6018      	str	r0, [r3, #0]
 800e4dc:	4b02      	ldr	r3, [pc, #8]	@ (800e4e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e4de:	6019      	str	r1, [r3, #0]
 800e4e0:	4770      	bx	lr
 800e4e2:	bf00      	nop
 800e4e4:	20014000 	.word	0x20014000
 800e4e8:	20014004 	.word	0x20014004

0800e4ec <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e4ec:	4b01      	ldr	r3, [pc, #4]	@ (800e4f4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e4ee:	6818      	ldr	r0, [r3, #0]
 800e4f0:	4770      	bx	lr
 800e4f2:	bf00      	nop
 800e4f4:	20014000 	.word	0x20014000

0800e4f8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e4f8:	4b01      	ldr	r3, [pc, #4]	@ (800e500 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e4fa:	6818      	ldr	r0, [r3, #0]
 800e4fc:	4770      	bx	lr
 800e4fe:	bf00      	nop
 800e500:	20014004 	.word	0x20014004

0800e504 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e504:	b510      	push	{r4, lr}
 800e506:	6803      	ldr	r3, [r0, #0]
 800e508:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e50a:	460c      	mov	r4, r1
 800e50c:	4798      	blx	r3
 800e50e:	1b03      	subs	r3, r0, r4
 800e510:	4258      	negs	r0, r3
 800e512:	4158      	adcs	r0, r3
 800e514:	bd10      	pop	{r4, pc}
	...

0800e518 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e518:	4b01      	ldr	r3, [pc, #4]	@ (800e520 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e51a:	6019      	str	r1, [r3, #0]
 800e51c:	4770      	bx	lr
 800e51e:	bf00      	nop
 800e520:	20014008 	.word	0x20014008

0800e524 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e528:	4696      	mov	lr, r2
 800e52a:	4605      	mov	r5, r0
 800e52c:	4614      	mov	r4, r2
 800e52e:	460e      	mov	r6, r1
 800e530:	461f      	mov	r7, r3
 800e532:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e536:	b097      	sub	sp, #92	@ 0x5c
 800e538:	f10d 0c1c 	add.w	ip, sp, #28
 800e53c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e540:	f8de 3000 	ldr.w	r3, [lr]
 800e544:	f8cc 3000 	str.w	r3, [ip]
 800e548:	f104 0e14 	add.w	lr, r4, #20
 800e54c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e550:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e554:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e558:	f8de 3000 	ldr.w	r3, [lr]
 800e55c:	f8cc 3000 	str.w	r3, [ip]
 800e560:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e564:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e568:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e56c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e570:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e574:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e578:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e57c:	f8de 3000 	ldr.w	r3, [lr]
 800e580:	f8cc 3000 	str.w	r3, [ip]
 800e584:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e586:	682b      	ldr	r3, [r5, #0]
 800e588:	9201      	str	r2, [sp, #4]
 800e58a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e58e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e590:	9200      	str	r2, [sp, #0]
 800e592:	f8cd 8008 	str.w	r8, [sp, #8]
 800e596:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e59a:	aa07      	add	r2, sp, #28
 800e59c:	463b      	mov	r3, r7
 800e59e:	4631      	mov	r1, r6
 800e5a0:	4628      	mov	r0, r5
 800e5a2:	47d8      	blx	fp
 800e5a4:	46a6      	mov	lr, r4
 800e5a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e5aa:	f10d 0c1c 	add.w	ip, sp, #28
 800e5ae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5b2:	f8de 3000 	ldr.w	r3, [lr]
 800e5b6:	f8cc 3000 	str.w	r3, [ip]
 800e5ba:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e5be:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e5c2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e5c6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5ca:	343c      	adds	r4, #60	@ 0x3c
 800e5cc:	f8de 3000 	ldr.w	r3, [lr]
 800e5d0:	f8cc 3000 	str.w	r3, [ip]
 800e5d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e5d6:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e5da:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5de:	6823      	ldr	r3, [r4, #0]
 800e5e0:	f8cc 3000 	str.w	r3, [ip]
 800e5e4:	682b      	ldr	r3, [r5, #0]
 800e5e6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e5ea:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e5ec:	9201      	str	r2, [sp, #4]
 800e5ee:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e5f0:	9200      	str	r2, [sp, #0]
 800e5f2:	f8cd 8008 	str.w	r8, [sp, #8]
 800e5f6:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e5f8:	aa07      	add	r2, sp, #28
 800e5fa:	463b      	mov	r3, r7
 800e5fc:	4631      	mov	r1, r6
 800e5fe:	4628      	mov	r0, r5
 800e600:	47a0      	blx	r4
 800e602:	b017      	add	sp, #92	@ 0x5c
 800e604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e608 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e60c:	b08d      	sub	sp, #52	@ 0x34
 800e60e:	4688      	mov	r8, r1
 800e610:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e612:	f8d3 c000 	ldr.w	ip, [r3]
 800e616:	680f      	ldr	r7, [r1, #0]
 800e618:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e61c:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e620:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e624:	edd3 6a07 	vldr	s13, [r3, #28]
 800e628:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e62a:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e62e:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e632:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e636:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e63a:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e63e:	eba7 070c 	sub.w	r7, r7, ip
 800e642:	42bc      	cmp	r4, r7
 800e644:	bfa8      	it	ge
 800e646:	463c      	movge	r4, r7
 800e648:	ee07 4a90 	vmov	s15, r4
 800e64c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e650:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e654:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e658:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e65c:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e660:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800e664:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e668:	eb09 0e0c 	add.w	lr, r9, ip
 800e66c:	4571      	cmp	r1, lr
 800e66e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e672:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e676:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e67a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e67e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e682:	f340 808d 	ble.w	800e7a0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e686:	eba1 060e 	sub.w	r6, r1, lr
 800e68a:	fb96 f5f4 	sdiv	r5, r6, r4
 800e68e:	ee07 5a10 	vmov	s14, r5
 800e692:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e696:	2d00      	cmp	r5, #0
 800e698:	fb04 6615 	mls	r6, r4, r5, r6
 800e69c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e6a0:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e6a4:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e6a8:	dd13      	ble.n	800e6d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e6aa:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e6ae:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e6b2:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e6b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e6ba:	bf18      	it	ne
 800e6bc:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e6c0:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e6c4:	bf08      	it	eq
 800e6c6:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e6ca:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e6ce:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e6d2:	fb05 f204 	mul.w	r2, r5, r4
 800e6d6:	1abf      	subs	r7, r7, r2
 800e6d8:	4494      	add	ip, r2
 800e6da:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e6de:	4411      	add	r1, r2
 800e6e0:	eb09 020c 	add.w	r2, r9, ip
 800e6e4:	443a      	add	r2, r7
 800e6e6:	b209      	sxth	r1, r1
 800e6e8:	428a      	cmp	r2, r1
 800e6ea:	bfc4      	itt	gt
 800e6ec:	eba1 0209 	subgt.w	r2, r1, r9
 800e6f0:	eba2 070c 	subgt.w	r7, r2, ip
 800e6f4:	2f00      	cmp	r7, #0
 800e6f6:	dd50      	ble.n	800e79a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e6f8:	fb97 f1f4 	sdiv	r1, r7, r4
 800e6fc:	fb04 7211 	mls	r2, r4, r1, r7
 800e700:	b90a      	cbnz	r2, 800e706 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e702:	3901      	subs	r1, #1
 800e704:	4622      	mov	r2, r4
 800e706:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e70a:	6840      	ldr	r0, [r0, #4]
 800e70c:	900b      	str	r0, [sp, #44]	@ 0x2c
 800e70e:	f8d0 a000 	ldr.w	sl, [r0]
 800e712:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800e714:	9008      	str	r0, [sp, #32]
 800e716:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800e71a:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800e71c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800e720:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e724:	695b      	ldr	r3, [r3, #20]
 800e726:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e728:	445b      	add	r3, fp
 800e72a:	eef0 6a42 	vmov.f32	s13, s4
 800e72e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e732:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e736:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e73a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e73e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e742:	9307      	str	r3, [sp, #28]
 800e744:	ee17 7a90 	vmov	r7, s15
 800e748:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e74c:	eeb0 7a61 	vmov.f32	s14, s3
 800e750:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e754:	ee16 3a90 	vmov	r3, s13
 800e758:	fb97 f7f4 	sdiv	r7, r7, r4
 800e75c:	ee17 ca90 	vmov	ip, s15
 800e760:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e764:	fb9c fcf4 	sdiv	ip, ip, r4
 800e768:	fb0c 3306 	mla	r3, ip, r6, r3
 800e76c:	9302      	str	r3, [sp, #8]
 800e76e:	ee17 3a10 	vmov	r3, s14
 800e772:	44b6      	add	lr, r6
 800e774:	fb04 e505 	mla	r5, r4, r5, lr
 800e778:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e77c:	fb07 3706 	mla	r7, r7, r6, r3
 800e780:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e784:	e9cd 4700 	strd	r4, r7, [sp]
 800e788:	2900      	cmp	r1, #0
 800e78a:	bfcc      	ite	gt
 800e78c:	46a1      	movgt	r9, r4
 800e78e:	4691      	movle	r9, r2
 800e790:	eba9 0306 	sub.w	r3, r9, r6
 800e794:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e798:	47a0      	blx	r4
 800e79a:	b00d      	add	sp, #52	@ 0x34
 800e79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7a0:	2500      	movs	r5, #0
 800e7a2:	462e      	mov	r6, r5
 800e7a4:	e799      	b.n	800e6da <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800e7a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e7a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7ac:	b0db      	sub	sp, #364	@ 0x16c
 800e7ae:	461d      	mov	r5, r3
 800e7b0:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800e7b4:	930a      	str	r3, [sp, #40]	@ 0x28
 800e7b6:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800e7ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e7bc:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800e7c0:	9310      	str	r3, [sp, #64]	@ 0x40
 800e7c2:	6803      	ldr	r3, [r0, #0]
 800e7c4:	910f      	str	r1, [sp, #60]	@ 0x3c
 800e7c6:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800e7c8:	9009      	str	r0, [sp, #36]	@ 0x24
 800e7ca:	4614      	mov	r4, r2
 800e7cc:	4629      	mov	r1, r5
 800e7ce:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800e7d2:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800e7d6:	47b8      	blx	r7
 800e7d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e7da:	6058      	str	r0, [r3, #4]
 800e7dc:	2800      	cmp	r0, #0
 800e7de:	f000 83a1 	beq.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7e2:	682b      	ldr	r3, [r5, #0]
 800e7e4:	9314      	str	r3, [sp, #80]	@ 0x50
 800e7e6:	686b      	ldr	r3, [r5, #4]
 800e7e8:	9315      	str	r3, [sp, #84]	@ 0x54
 800e7ea:	4bc4      	ldr	r3, [pc, #784]	@ (800eafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e7ec:	ed94 7a02 	vldr	s14, [r4, #8]
 800e7f0:	7819      	ldrb	r1, [r3, #0]
 800e7f2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e7f6:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800e7fa:	2900      	cmp	r1, #0
 800e7fc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e800:	bf16      	itet	ne
 800e802:	4619      	movne	r1, r3
 800e804:	4611      	moveq	r1, r2
 800e806:	4613      	movne	r3, r2
 800e808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e80c:	9116      	str	r1, [sp, #88]	@ 0x58
 800e80e:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800e812:	f240 8387 	bls.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e816:	ed94 7a07 	vldr	s14, [r4, #28]
 800e81a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e81e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e822:	f240 837f 	bls.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e826:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800e82a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e82e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e832:	f240 8377 	bls.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e836:	6822      	ldr	r2, [r4, #0]
 800e838:	4bb1      	ldr	r3, [pc, #708]	@ (800eb00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e83a:	429a      	cmp	r2, r3
 800e83c:	f2c0 8372 	blt.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e840:	49b0      	ldr	r1, [pc, #704]	@ (800eb04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e842:	6963      	ldr	r3, [r4, #20]
 800e844:	428a      	cmp	r2, r1
 800e846:	f300 836d 	bgt.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e84a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e84e:	48ae      	ldr	r0, [pc, #696]	@ (800eb08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e850:	33ff      	adds	r3, #255	@ 0xff
 800e852:	4283      	cmp	r3, r0
 800e854:	f200 8366 	bhi.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e858:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e85a:	4dac      	ldr	r5, [pc, #688]	@ (800eb0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e85c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e860:	33ff      	adds	r3, #255	@ 0xff
 800e862:	42ab      	cmp	r3, r5
 800e864:	f200 835e 	bhi.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e868:	6862      	ldr	r2, [r4, #4]
 800e86a:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800e86e:	33ff      	adds	r3, #255	@ 0xff
 800e870:	4283      	cmp	r3, r0
 800e872:	f200 8357 	bhi.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e876:	69a1      	ldr	r1, [r4, #24]
 800e878:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800e87c:	33ff      	adds	r3, #255	@ 0xff
 800e87e:	4283      	cmp	r3, r0
 800e880:	f200 8350 	bhi.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e884:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e886:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800e88a:	30ff      	adds	r0, #255	@ 0xff
 800e88c:	42a8      	cmp	r0, r5
 800e88e:	f200 8349 	bhi.w	800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e892:	428a      	cmp	r2, r1
 800e894:	f280 8110 	bge.w	800eab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e898:	429a      	cmp	r2, r3
 800e89a:	f300 8119 	bgt.w	800ead0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e89e:	4299      	cmp	r1, r3
 800e8a0:	f280 811d 	bge.w	800eade <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e8a4:	2502      	movs	r5, #2
 800e8a6:	2701      	movs	r7, #1
 800e8a8:	46a9      	mov	r9, r5
 800e8aa:	46b8      	mov	r8, r7
 800e8ac:	f04f 0a00 	mov.w	sl, #0
 800e8b0:	4621      	mov	r1, r4
 800e8b2:	a849      	add	r0, sp, #292	@ 0x124
 800e8b4:	f003 fdae 	bl	8012414 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e8b8:	4622      	mov	r2, r4
 800e8ba:	4653      	mov	r3, sl
 800e8bc:	a949      	add	r1, sp, #292	@ 0x124
 800e8be:	f8cd 9000 	str.w	r9, [sp]
 800e8c2:	a819      	add	r0, sp, #100	@ 0x64
 800e8c4:	f003 fed6 	bl	8012674 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8c8:	4622      	mov	r2, r4
 800e8ca:	4653      	mov	r3, sl
 800e8cc:	a949      	add	r1, sp, #292	@ 0x124
 800e8ce:	f8cd 8000 	str.w	r8, [sp]
 800e8d2:	a829      	add	r0, sp, #164	@ 0xa4
 800e8d4:	f003 fece 	bl	8012674 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8d8:	4643      	mov	r3, r8
 800e8da:	4622      	mov	r2, r4
 800e8dc:	a949      	add	r1, sp, #292	@ 0x124
 800e8de:	f8cd 9000 	str.w	r9, [sp]
 800e8e2:	a839      	add	r0, sp, #228	@ 0xe4
 800e8e4:	f003 fec6 	bl	8012674 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8e8:	42af      	cmp	r7, r5
 800e8ea:	bfb5      	itete	lt
 800e8ec:	2300      	movlt	r3, #0
 800e8ee:	2301      	movge	r3, #1
 800e8f0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800e8f2:	930e      	strge	r3, [sp, #56]	@ 0x38
 800e8f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e8f6:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e8fa:	af12      	add	r7, sp, #72	@ 0x48
 800e8fc:	bfb9      	ittee	lt
 800e8fe:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800e900:	ac19      	addlt	r4, sp, #100	@ 0x64
 800e902:	ad19      	addge	r5, sp, #100	@ 0x64
 800e904:	ac29      	addge	r4, sp, #164	@ 0xa4
 800e906:	e887 0003 	stmia.w	r7, {r0, r1}
 800e90a:	b928      	cbnz	r0, 800e918 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e90c:	4b80      	ldr	r3, [pc, #512]	@ (800eb10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e90e:	6818      	ldr	r0, [r3, #0]
 800e910:	6803      	ldr	r3, [r0, #0]
 800e912:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e914:	4798      	blx	r3
 800e916:	6038      	str	r0, [r7, #0]
 800e918:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e91a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e91e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e922:	930c      	str	r3, [sp, #48]	@ 0x30
 800e924:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e926:	6963      	ldr	r3, [r4, #20]
 800e928:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800e92a:	440b      	add	r3, r1
 800e92c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e930:	4408      	add	r0, r1
 800e932:	b200      	sxth	r0, r0
 800e934:	4283      	cmp	r3, r0
 800e936:	900d      	str	r0, [sp, #52]	@ 0x34
 800e938:	f280 80dd 	bge.w	800eaf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e93c:	428b      	cmp	r3, r1
 800e93e:	da08      	bge.n	800e952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e940:	2a00      	cmp	r2, #0
 800e942:	dd06      	ble.n	800e952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e944:	1acb      	subs	r3, r1, r3
 800e946:	429a      	cmp	r2, r3
 800e948:	f2c0 80e4 	blt.w	800eb14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e94c:	2b00      	cmp	r3, #0
 800e94e:	f300 80e2 	bgt.w	800eb16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e952:	6967      	ldr	r7, [r4, #20]
 800e954:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e956:	443b      	add	r3, r7
 800e958:	461f      	mov	r7, r3
 800e95a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e95c:	1bdf      	subs	r7, r3, r7
 800e95e:	4297      	cmp	r7, r2
 800e960:	bfa8      	it	ge
 800e962:	4617      	movge	r7, r2
 800e964:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800e968:	2f00      	cmp	r7, #0
 800e96a:	f340 8166 	ble.w	800ec3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e96e:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e970:	6829      	ldr	r1, [r5, #0]
 800e972:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e976:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e97a:	6820      	ldr	r0, [r4, #0]
 800e97c:	4411      	add	r1, r2
 800e97e:	4299      	cmp	r1, r3
 800e980:	dd1a      	ble.n	800e9b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e982:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e986:	440b      	add	r3, r1
 800e988:	4402      	add	r2, r0
 800e98a:	b21b      	sxth	r3, r3
 800e98c:	429a      	cmp	r2, r3
 800e98e:	dc13      	bgt.n	800e9b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e990:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e992:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e994:	681b      	ldr	r3, [r3, #0]
 800e996:	9206      	str	r2, [sp, #24]
 800e998:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e99a:	9205      	str	r2, [sp, #20]
 800e99c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e99e:	9500      	str	r5, [sp, #0]
 800e9a0:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e9a4:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800e9a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e9a8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e9ac:	a912      	add	r1, sp, #72	@ 0x48
 800e9ae:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800e9b2:	aa49      	add	r2, sp, #292	@ 0x124
 800e9b4:	4623      	mov	r3, r4
 800e9b6:	47c8      	blx	r9
 800e9b8:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e9bc:	441a      	add	r2, r3
 800e9be:	6963      	ldr	r3, [r4, #20]
 800e9c0:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800e9c4:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800e9c8:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800e9cc:	68a1      	ldr	r1, [r4, #8]
 800e9ce:	ed94 6a08 	vldr	s12, [r4, #32]
 800e9d2:	6022      	str	r2, [r4, #0]
 800e9d4:	3301      	adds	r3, #1
 800e9d6:	6163      	str	r3, [r4, #20]
 800e9d8:	69a3      	ldr	r3, [r4, #24]
 800e9da:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e9de:	3b01      	subs	r3, #1
 800e9e0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800e9e4:	61a3      	str	r3, [r4, #24]
 800e9e6:	6923      	ldr	r3, [r4, #16]
 800e9e8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e9ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e9f0:	edd4 6a07 	vldr	s13, [r4, #28]
 800e9f4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e9f8:	440b      	add	r3, r1
 800e9fa:	68e1      	ldr	r1, [r4, #12]
 800e9fc:	6123      	str	r3, [r4, #16]
 800e9fe:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ea02:	428b      	cmp	r3, r1
 800ea04:	edc4 6a07 	vstr	s13, [r4, #28]
 800ea08:	db15      	blt.n	800ea36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ea0a:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ea0e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ea12:	3201      	adds	r2, #1
 800ea14:	edc4 6a07 	vstr	s13, [r4, #28]
 800ea18:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ea1c:	6022      	str	r2, [r4, #0]
 800ea1e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ea22:	1a5b      	subs	r3, r3, r1
 800ea24:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ea28:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ea2c:	6123      	str	r3, [r4, #16]
 800ea2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ea32:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ea36:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ea3a:	441a      	add	r2, r3
 800ea3c:	696b      	ldr	r3, [r5, #20]
 800ea3e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ea42:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ea46:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ea4a:	68a9      	ldr	r1, [r5, #8]
 800ea4c:	ed95 6a08 	vldr	s12, [r5, #32]
 800ea50:	602a      	str	r2, [r5, #0]
 800ea52:	3301      	adds	r3, #1
 800ea54:	616b      	str	r3, [r5, #20]
 800ea56:	69ab      	ldr	r3, [r5, #24]
 800ea58:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ea5c:	3b01      	subs	r3, #1
 800ea5e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ea62:	61ab      	str	r3, [r5, #24]
 800ea64:	692b      	ldr	r3, [r5, #16]
 800ea66:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ea6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea6e:	edd5 6a07 	vldr	s13, [r5, #28]
 800ea72:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ea76:	440b      	add	r3, r1
 800ea78:	68e9      	ldr	r1, [r5, #12]
 800ea7a:	612b      	str	r3, [r5, #16]
 800ea7c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ea80:	428b      	cmp	r3, r1
 800ea82:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea86:	db15      	blt.n	800eab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ea88:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ea8c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ea90:	3201      	adds	r2, #1
 800ea92:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea96:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ea9a:	602a      	str	r2, [r5, #0]
 800ea9c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800eaa0:	1a5b      	subs	r3, r3, r1
 800eaa2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800eaa6:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800eaaa:	612b      	str	r3, [r5, #16]
 800eaac:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eab0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800eab4:	3f01      	subs	r7, #1
 800eab6:	e757      	b.n	800e968 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800eab8:	4299      	cmp	r1, r3
 800eaba:	dc13      	bgt.n	800eae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800eabc:	429a      	cmp	r2, r3
 800eabe:	da14      	bge.n	800eaea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800eac0:	2502      	movs	r5, #2
 800eac2:	2703      	movs	r7, #3
 800eac4:	46a9      	mov	r9, r5
 800eac6:	f04f 0800 	mov.w	r8, #0
 800eaca:	f04f 0a01 	mov.w	sl, #1
 800eace:	e6ef      	b.n	800e8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ead0:	2501      	movs	r5, #1
 800ead2:	2700      	movs	r7, #0
 800ead4:	46a9      	mov	r9, r5
 800ead6:	46b8      	mov	r8, r7
 800ead8:	f04f 0a02 	mov.w	sl, #2
 800eadc:	e6e8      	b.n	800e8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eade:	2501      	movs	r5, #1
 800eae0:	2702      	movs	r7, #2
 800eae2:	e6e1      	b.n	800e8a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800eae4:	2500      	movs	r5, #0
 800eae6:	2701      	movs	r7, #1
 800eae8:	e7f4      	b.n	800ead4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800eaea:	2702      	movs	r7, #2
 800eaec:	2503      	movs	r5, #3
 800eaee:	f04f 0900 	mov.w	r9, #0
 800eaf2:	46b8      	mov	r8, r7
 800eaf4:	e7e9      	b.n	800eaca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800eaf6:	4613      	mov	r3, r2
 800eaf8:	e728      	b.n	800e94c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800eafa:	bf00      	nop
 800eafc:	20013fee 	.word	0x20013fee
 800eb00:	fffd8f01 	.word	0xfffd8f01
 800eb04:	00027100 	.word	0x00027100
 800eb08:	0004e1ff 	.word	0x0004e1ff
 800eb0c:	0004e1fe 	.word	0x0004e1fe
 800eb10:	20013ff8 	.word	0x20013ff8
 800eb14:	4613      	mov	r3, r2
 800eb16:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800eb18:	9111      	str	r1, [sp, #68]	@ 0x44
 800eb1a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800eb1e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800eb22:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800eb24:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800eb28:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800eb2c:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800eb30:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800eb34:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800eb38:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800eb3c:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800eb40:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800eb44:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800eb48:	469e      	mov	lr, r3
 800eb4a:	469c      	mov	ip, r3
 800eb4c:	f04f 0900 	mov.w	r9, #0
 800eb50:	f1bc 0f00 	cmp.w	ip, #0
 800eb54:	d147      	bne.n	800ebe6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800eb56:	eb03 0c07 	add.w	ip, r3, r7
 800eb5a:	1ad7      	subs	r7, r2, r3
 800eb5c:	f1b9 0f00 	cmp.w	r9, #0
 800eb60:	d009      	beq.n	800eb76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800eb62:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800eb66:	9029      	str	r0, [sp, #164]	@ 0xa4
 800eb68:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800eb6c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800eb70:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800eb74:	912d      	str	r1, [sp, #180]	@ 0xb4
 800eb76:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800eb78:	9111      	str	r1, [sp, #68]	@ 0x44
 800eb7a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800eb7e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800eb82:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800eb86:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800eb8a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800eb8e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800eb92:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800eb96:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800eb9a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800eb9e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800eba2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800eba6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ebaa:	f04f 0800 	mov.w	r8, #0
 800ebae:	f1be 0f00 	cmp.w	lr, #0
 800ebb2:	d031      	beq.n	800ec18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ebb4:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ebb6:	4431      	add	r1, r6
 800ebb8:	4549      	cmp	r1, r9
 800ebba:	4450      	add	r0, sl
 800ebbc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ebc0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ebc4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ebc8:	db08      	blt.n	800ebdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ebca:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ebce:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ebd2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ebd6:	3001      	adds	r0, #1
 800ebd8:	eba1 0109 	sub.w	r1, r1, r9
 800ebdc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ebe0:	f04f 0801 	mov.w	r8, #1
 800ebe4:	e7e3      	b.n	800ebae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ebe6:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ebe8:	4431      	add	r1, r6
 800ebea:	4541      	cmp	r1, r8
 800ebec:	4450      	add	r0, sl
 800ebee:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ebf2:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ebf6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ebfa:	db08      	blt.n	800ec0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ebfc:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ec00:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ec04:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ec08:	3001      	adds	r0, #1
 800ec0a:	eba1 0108 	sub.w	r1, r1, r8
 800ec0e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ec12:	f04f 0901 	mov.w	r9, #1
 800ec16:	e79b      	b.n	800eb50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ec18:	449c      	add	ip, r3
 800ec1a:	1aff      	subs	r7, r7, r3
 800ec1c:	f1b8 0f00 	cmp.w	r8, #0
 800ec20:	d009      	beq.n	800ec36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ec22:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ec26:	9019      	str	r0, [sp, #100]	@ 0x64
 800ec28:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ec2c:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ec30:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ec34:	911d      	str	r1, [sp, #116]	@ 0x74
 800ec36:	1ad2      	subs	r2, r2, r3
 800ec38:	e68b      	b.n	800e952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ec3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ec3c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800ec3e:	2b00      	cmp	r3, #0
 800ec40:	f000 80d1 	beq.w	800ede6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ec44:	ad19      	add	r5, sp, #100	@ 0x64
 800ec46:	ac39      	add	r4, sp, #228	@ 0xe4
 800ec48:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ec4a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ec4e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ec52:	930c      	str	r3, [sp, #48]	@ 0x30
 800ec54:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ec56:	6963      	ldr	r3, [r4, #20]
 800ec58:	440b      	add	r3, r1
 800ec5a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ec5e:	4408      	add	r0, r1
 800ec60:	b200      	sxth	r0, r0
 800ec62:	4283      	cmp	r3, r0
 800ec64:	900d      	str	r0, [sp, #52]	@ 0x34
 800ec66:	f280 80c1 	bge.w	800edec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ec6a:	428b      	cmp	r3, r1
 800ec6c:	da08      	bge.n	800ec80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec6e:	2a00      	cmp	r2, #0
 800ec70:	dd06      	ble.n	800ec80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec72:	1acb      	subs	r3, r1, r3
 800ec74:	429a      	cmp	r2, r3
 800ec76:	f2c0 80bb 	blt.w	800edf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ec7a:	2b00      	cmp	r3, #0
 800ec7c:	f300 80b9 	bgt.w	800edf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ec80:	6967      	ldr	r7, [r4, #20]
 800ec82:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ec84:	443b      	add	r3, r7
 800ec86:	461f      	mov	r7, r3
 800ec88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ec8a:	1bdf      	subs	r7, r3, r7
 800ec8c:	4297      	cmp	r7, r2
 800ec8e:	bfa8      	it	ge
 800ec90:	4617      	movge	r7, r2
 800ec92:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ec96:	2f00      	cmp	r7, #0
 800ec98:	f340 813c 	ble.w	800ef14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ec9c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ec9e:	6829      	ldr	r1, [r5, #0]
 800eca0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eca4:	f9bb 3000 	ldrsh.w	r3, [fp]
 800eca8:	6820      	ldr	r0, [r4, #0]
 800ecaa:	4411      	add	r1, r2
 800ecac:	4299      	cmp	r1, r3
 800ecae:	dd1a      	ble.n	800ece6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ecb0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ecb4:	440b      	add	r3, r1
 800ecb6:	4402      	add	r2, r0
 800ecb8:	b21b      	sxth	r3, r3
 800ecba:	429a      	cmp	r2, r3
 800ecbc:	dc13      	bgt.n	800ece6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ecbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ecc0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ecc2:	681b      	ldr	r3, [r3, #0]
 800ecc4:	9206      	str	r2, [sp, #24]
 800ecc6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ecc8:	9205      	str	r2, [sp, #20]
 800ecca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800eccc:	9500      	str	r5, [sp, #0]
 800ecce:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ecd2:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ecd4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ecd6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ecda:	a912      	add	r1, sp, #72	@ 0x48
 800ecdc:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ece0:	aa49      	add	r2, sp, #292	@ 0x124
 800ece2:	4623      	mov	r3, r4
 800ece4:	47c8      	blx	r9
 800ece6:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ecea:	441a      	add	r2, r3
 800ecec:	6963      	ldr	r3, [r4, #20]
 800ecee:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ecf2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ecf6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ecfa:	68a1      	ldr	r1, [r4, #8]
 800ecfc:	ed94 6a08 	vldr	s12, [r4, #32]
 800ed00:	6022      	str	r2, [r4, #0]
 800ed02:	3301      	adds	r3, #1
 800ed04:	6163      	str	r3, [r4, #20]
 800ed06:	69a3      	ldr	r3, [r4, #24]
 800ed08:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed0c:	3b01      	subs	r3, #1
 800ed0e:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ed12:	61a3      	str	r3, [r4, #24]
 800ed14:	6923      	ldr	r3, [r4, #16]
 800ed16:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ed1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed1e:	edd4 6a07 	vldr	s13, [r4, #28]
 800ed22:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ed26:	440b      	add	r3, r1
 800ed28:	68e1      	ldr	r1, [r4, #12]
 800ed2a:	6123      	str	r3, [r4, #16]
 800ed2c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed30:	428b      	cmp	r3, r1
 800ed32:	edc4 6a07 	vstr	s13, [r4, #28]
 800ed36:	db15      	blt.n	800ed64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ed38:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ed3c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed40:	3201      	adds	r2, #1
 800ed42:	edc4 6a07 	vstr	s13, [r4, #28]
 800ed46:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ed4a:	6022      	str	r2, [r4, #0]
 800ed4c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed50:	1a5b      	subs	r3, r3, r1
 800ed52:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ed56:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ed5a:	6123      	str	r3, [r4, #16]
 800ed5c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed60:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ed64:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ed68:	441a      	add	r2, r3
 800ed6a:	696b      	ldr	r3, [r5, #20]
 800ed6c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ed70:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ed74:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ed78:	68a9      	ldr	r1, [r5, #8]
 800ed7a:	ed95 6a08 	vldr	s12, [r5, #32]
 800ed7e:	602a      	str	r2, [r5, #0]
 800ed80:	3301      	adds	r3, #1
 800ed82:	616b      	str	r3, [r5, #20]
 800ed84:	69ab      	ldr	r3, [r5, #24]
 800ed86:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed8a:	3b01      	subs	r3, #1
 800ed8c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ed90:	61ab      	str	r3, [r5, #24]
 800ed92:	692b      	ldr	r3, [r5, #16]
 800ed94:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ed98:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed9c:	edd5 6a07 	vldr	s13, [r5, #28]
 800eda0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800eda4:	440b      	add	r3, r1
 800eda6:	68e9      	ldr	r1, [r5, #12]
 800eda8:	612b      	str	r3, [r5, #16]
 800edaa:	ee76 6a86 	vadd.f32	s13, s13, s12
 800edae:	428b      	cmp	r3, r1
 800edb0:	edc5 6a07 	vstr	s13, [r5, #28]
 800edb4:	db15      	blt.n	800ede2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800edb6:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800edba:	ee76 6a26 	vadd.f32	s13, s12, s13
 800edbe:	3201      	adds	r2, #1
 800edc0:	edc5 6a07 	vstr	s13, [r5, #28]
 800edc4:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800edc8:	602a      	str	r2, [r5, #0]
 800edca:	ee36 7a87 	vadd.f32	s14, s13, s14
 800edce:	1a5b      	subs	r3, r3, r1
 800edd0:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800edd4:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800edd8:	612b      	str	r3, [r5, #16]
 800edda:	ee77 7a27 	vadd.f32	s15, s14, s15
 800edde:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ede2:	3f01      	subs	r7, #1
 800ede4:	e757      	b.n	800ec96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ede6:	ad39      	add	r5, sp, #228	@ 0xe4
 800ede8:	ac19      	add	r4, sp, #100	@ 0x64
 800edea:	e72d      	b.n	800ec48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800edec:	4613      	mov	r3, r2
 800edee:	e744      	b.n	800ec7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800edf0:	4613      	mov	r3, r2
 800edf2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800edf6:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800edf8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800edfc:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800ee00:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800ee04:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800ee08:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800ee0c:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800ee10:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800ee14:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800ee16:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800ee1a:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800ee1e:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800ee22:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800ee26:	960e      	str	r6, [sp, #56]	@ 0x38
 800ee28:	469e      	mov	lr, r3
 800ee2a:	461f      	mov	r7, r3
 800ee2c:	f04f 0900 	mov.w	r9, #0
 800ee30:	2f00      	cmp	r7, #0
 800ee32:	d146      	bne.n	800eec2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ee34:	449c      	add	ip, r3
 800ee36:	1ad7      	subs	r7, r2, r3
 800ee38:	f1b9 0f00 	cmp.w	r9, #0
 800ee3c:	d009      	beq.n	800ee52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800ee3e:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800ee42:	9039      	str	r0, [sp, #228]	@ 0xe4
 800ee44:	913d      	str	r1, [sp, #244]	@ 0xf4
 800ee46:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800ee4a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800ee4e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800ee52:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ee54:	910e      	str	r1, [sp, #56]	@ 0x38
 800ee56:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ee5a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ee5e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800ee62:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800ee66:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ee6a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ee6e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ee72:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ee76:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ee7a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ee7e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ee82:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ee86:	f04f 0800 	mov.w	r8, #0
 800ee8a:	f1be 0f00 	cmp.w	lr, #0
 800ee8e:	d030      	beq.n	800eef2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ee90:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ee92:	4431      	add	r1, r6
 800ee94:	4549      	cmp	r1, r9
 800ee96:	4450      	add	r0, sl
 800ee98:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee9c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800eea0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800eea4:	db08      	blt.n	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800eea6:	ee77 7a85 	vadd.f32	s15, s15, s10
 800eeaa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800eeae:	ee37 7a06 	vadd.f32	s14, s14, s12
 800eeb2:	3001      	adds	r0, #1
 800eeb4:	eba1 0109 	sub.w	r1, r1, r9
 800eeb8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800eebc:	f04f 0801 	mov.w	r8, #1
 800eec0:	e7e3      	b.n	800ee8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800eec2:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800eec4:	4431      	add	r1, r6
 800eec6:	4541      	cmp	r1, r8
 800eec8:	4450      	add	r0, sl
 800eeca:	ee37 7a24 	vadd.f32	s14, s14, s9
 800eece:	ee77 7a84 	vadd.f32	s15, s15, s8
 800eed2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800eed6:	db08      	blt.n	800eeea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800eed8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800eedc:	ee37 7a25 	vadd.f32	s14, s14, s11
 800eee0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800eee4:	3001      	adds	r0, #1
 800eee6:	eba1 0108 	sub.w	r1, r1, r8
 800eeea:	3f01      	subs	r7, #1
 800eeec:	f04f 0901 	mov.w	r9, #1
 800eef0:	e79e      	b.n	800ee30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800eef2:	449c      	add	ip, r3
 800eef4:	1aff      	subs	r7, r7, r3
 800eef6:	f1b8 0f00 	cmp.w	r8, #0
 800eefa:	d009      	beq.n	800ef10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800eefc:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ef00:	9019      	str	r0, [sp, #100]	@ 0x64
 800ef02:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ef06:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ef0a:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ef0e:	911d      	str	r1, [sp, #116]	@ 0x74
 800ef10:	1ad2      	subs	r2, r2, r3
 800ef12:	e6b5      	b.n	800ec80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ef14:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ef16:	681b      	ldr	r3, [r3, #0]
 800ef18:	b923      	cbnz	r3, 800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ef1a:	4b04      	ldr	r3, [pc, #16]	@ (800ef2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ef1c:	6818      	ldr	r0, [r3, #0]
 800ef1e:	6803      	ldr	r3, [r0, #0]
 800ef20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ef22:	4798      	blx	r3
 800ef24:	b05b      	add	sp, #364	@ 0x16c
 800ef26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef2a:	bf00      	nop
 800ef2c:	20013ff8 	.word	0x20013ff8

0800ef30 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800ef30:	2b03      	cmp	r3, #3
 800ef32:	d818      	bhi.n	800ef66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800ef34:	e8df f003 	tbb	[pc, r3]
 800ef38:	130d0602 	.word	0x130d0602
 800ef3c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ef40:	1850      	adds	r0, r2, r1
 800ef42:	4770      	bx	lr
 800ef44:	8803      	ldrh	r3, [r0, #0]
 800ef46:	8880      	ldrh	r0, [r0, #4]
 800ef48:	4418      	add	r0, r3
 800ef4a:	b200      	sxth	r0, r0
 800ef4c:	1a80      	subs	r0, r0, r2
 800ef4e:	3801      	subs	r0, #1
 800ef50:	4770      	bx	lr
 800ef52:	8803      	ldrh	r3, [r0, #0]
 800ef54:	8880      	ldrh	r0, [r0, #4]
 800ef56:	4418      	add	r0, r3
 800ef58:	b200      	sxth	r0, r0
 800ef5a:	1a40      	subs	r0, r0, r1
 800ef5c:	e7f7      	b.n	800ef4e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ef5e:	f9b0 0000 	ldrsh.w	r0, [r0]
 800ef62:	4410      	add	r0, r2
 800ef64:	4770      	bx	lr
 800ef66:	2000      	movs	r0, #0
 800ef68:	4770      	bx	lr

0800ef6a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ef6a:	2b03      	cmp	r3, #3
 800ef6c:	d817      	bhi.n	800ef9e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800ef6e:	e8df f003 	tbb	[pc, r3]
 800ef72:	0602      	.short	0x0602
 800ef74:	1009      	.short	0x1009
 800ef76:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ef7a:	1850      	adds	r0, r2, r1
 800ef7c:	4770      	bx	lr
 800ef7e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ef82:	e7fa      	b.n	800ef7a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ef84:	8843      	ldrh	r3, [r0, #2]
 800ef86:	88c0      	ldrh	r0, [r0, #6]
 800ef88:	4418      	add	r0, r3
 800ef8a:	b200      	sxth	r0, r0
 800ef8c:	1a80      	subs	r0, r0, r2
 800ef8e:	3801      	subs	r0, #1
 800ef90:	4770      	bx	lr
 800ef92:	8843      	ldrh	r3, [r0, #2]
 800ef94:	88c0      	ldrh	r0, [r0, #6]
 800ef96:	4418      	add	r0, r3
 800ef98:	b200      	sxth	r0, r0
 800ef9a:	1a40      	subs	r0, r0, r1
 800ef9c:	e7f7      	b.n	800ef8e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ef9e:	2000      	movs	r0, #0
 800efa0:	4770      	bx	lr
	...

0800efa4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800efa4:	4b01      	ldr	r3, [pc, #4]	@ (800efac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800efa6:	2200      	movs	r2, #0
 800efa8:	601a      	str	r2, [r3, #0]
 800efaa:	4770      	bx	lr
 800efac:	20014008 	.word	0x20014008

0800efb0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800efb0:	4603      	mov	r3, r0
 800efb2:	b1c8      	cbz	r0, 800efe8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800efb4:	0c02      	lsrs	r2, r0, #16
 800efb6:	0412      	lsls	r2, r2, #16
 800efb8:	b9a2      	cbnz	r2, 800efe4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800efba:	0403      	lsls	r3, r0, #16
 800efbc:	2010      	movs	r0, #16
 800efbe:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800efc2:	bf04      	itt	eq
 800efc4:	021b      	lsleq	r3, r3, #8
 800efc6:	3008      	addeq	r0, #8
 800efc8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800efcc:	bf04      	itt	eq
 800efce:	011b      	lsleq	r3, r3, #4
 800efd0:	3004      	addeq	r0, #4
 800efd2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800efd6:	bf04      	itt	eq
 800efd8:	009b      	lsleq	r3, r3, #2
 800efda:	3002      	addeq	r0, #2
 800efdc:	2b00      	cmp	r3, #0
 800efde:	db04      	blt.n	800efea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800efe0:	3001      	adds	r0, #1
 800efe2:	4770      	bx	lr
 800efe4:	2000      	movs	r0, #0
 800efe6:	e7ea      	b.n	800efbe <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800efe8:	2020      	movs	r0, #32
 800efea:	4770      	bx	lr

0800efec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800efec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eff0:	b087      	sub	sp, #28
 800eff2:	460d      	mov	r5, r1
 800eff4:	4616      	mov	r6, r2
 800eff6:	4698      	mov	r8, r3
 800eff8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800effc:	4601      	mov	r1, r0
 800effe:	b120      	cbz	r0, 800f00a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f000:	b11a      	cbz	r2, 800f00a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f002:	2d1f      	cmp	r5, #31
 800f004:	d801      	bhi.n	800f00a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f006:	2b1f      	cmp	r3, #31
 800f008:	d904      	bls.n	800f014 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f00a:	2000      	movs	r0, #0
 800f00c:	6038      	str	r0, [r7, #0]
 800f00e:	b007      	add	sp, #28
 800f010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f014:	b97d      	cbnz	r5, 800f036 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f016:	b143      	cbz	r3, 800f02a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f018:	4602      	mov	r2, r0
 800f01a:	e9cd 4700 	strd	r4, r7, [sp]
 800f01e:	462b      	mov	r3, r5
 800f020:	4641      	mov	r1, r8
 800f022:	4630      	mov	r0, r6
 800f024:	f7ff ffe2 	bl	800efec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f028:	e7f1      	b.n	800f00e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f02a:	f04f 33ff 	mov.w	r3, #4294967295
 800f02e:	603b      	str	r3, [r7, #0]
 800f030:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f034:	e7eb      	b.n	800f00e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f036:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f03a:	d106      	bne.n	800f04a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f03c:	4346      	muls	r6, r0
 800f03e:	fbb6 f0f4 	udiv	r0, r6, r4
 800f042:	fb04 6610 	mls	r6, r4, r0, r6
 800f046:	603e      	str	r6, [r7, #0]
 800f048:	e7e1      	b.n	800f00e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f04a:	2201      	movs	r2, #1
 800f04c:	40aa      	lsls	r2, r5
 800f04e:	3a01      	subs	r2, #1
 800f050:	4016      	ands	r6, r2
 800f052:	fa00 fb05 	lsl.w	fp, r0, r5
 800f056:	4630      	mov	r0, r6
 800f058:	fbbb f9f4 	udiv	r9, fp, r4
 800f05c:	fb0a f309 	mul.w	r3, sl, r9
 800f060:	9303      	str	r3, [sp, #12]
 800f062:	f7ff ffa5 	bl	800efb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f066:	462b      	mov	r3, r5
 800f068:	460a      	mov	r2, r1
 800f06a:	e9cd 4700 	strd	r4, r7, [sp]
 800f06e:	4601      	mov	r1, r0
 800f070:	4630      	mov	r0, r6
 800f072:	f7ff ffbb 	bl	800efec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f076:	fb04 b919 	mls	r9, r4, r9, fp
 800f07a:	4606      	mov	r6, r0
 800f07c:	4648      	mov	r0, r9
 800f07e:	eb05 0108 	add.w	r1, r5, r8
 800f082:	f7ff ff95 	bl	800efb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f086:	ab05      	add	r3, sp, #20
 800f088:	e9cd 4300 	strd	r4, r3, [sp]
 800f08c:	464a      	mov	r2, r9
 800f08e:	4603      	mov	r3, r0
 800f090:	4650      	mov	r0, sl
 800f092:	f7ff ffab 	bl	800efec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f096:	6839      	ldr	r1, [r7, #0]
 800f098:	9a05      	ldr	r2, [sp, #20]
 800f09a:	9b03      	ldr	r3, [sp, #12]
 800f09c:	4411      	add	r1, r2
 800f09e:	fbb1 f2f4 	udiv	r2, r1, r4
 800f0a2:	18d3      	adds	r3, r2, r3
 800f0a4:	441e      	add	r6, r3
 800f0a6:	fb04 1412 	mls	r4, r4, r2, r1
 800f0aa:	4430      	add	r0, r6
 800f0ac:	603c      	str	r4, [r7, #0]
 800f0ae:	e7ae      	b.n	800f00e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f0b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f0b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f0b4:	b085      	sub	sp, #20
 800f0b6:	f1b0 0900 	subs.w	r9, r0, #0
 800f0ba:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f0bc:	461d      	mov	r5, r3
 800f0be:	bfbf      	itttt	lt
 800f0c0:	6823      	ldrlt	r3, [r4, #0]
 800f0c2:	425b      	neglt	r3, r3
 800f0c4:	f1c9 0900 	rsblt	r9, r9, #0
 800f0c8:	6023      	strlt	r3, [r4, #0]
 800f0ca:	bfb4      	ite	lt
 800f0cc:	f04f 36ff 	movlt.w	r6, #4294967295
 800f0d0:	2601      	movge	r6, #1
 800f0d2:	2a00      	cmp	r2, #0
 800f0d4:	4617      	mov	r7, r2
 800f0d6:	da04      	bge.n	800f0e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f0d8:	6823      	ldr	r3, [r4, #0]
 800f0da:	425b      	negs	r3, r3
 800f0dc:	4257      	negs	r7, r2
 800f0de:	4276      	negs	r6, r6
 800f0e0:	6023      	str	r3, [r4, #0]
 800f0e2:	2d00      	cmp	r5, #0
 800f0e4:	4638      	mov	r0, r7
 800f0e6:	bfba      	itte	lt
 800f0e8:	426d      	neglt	r5, r5
 800f0ea:	f04f 38ff 	movlt.w	r8, #4294967295
 800f0ee:	f04f 0801 	movge.w	r8, #1
 800f0f2:	f7ff ff5d 	bl	800efb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f0f6:	ab03      	add	r3, sp, #12
 800f0f8:	e9cd 5300 	strd	r5, r3, [sp]
 800f0fc:	463a      	mov	r2, r7
 800f0fe:	4603      	mov	r3, r0
 800f100:	4648      	mov	r0, r9
 800f102:	f7ff ff73 	bl	800efec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f106:	6823      	ldr	r3, [r4, #0]
 800f108:	9a03      	ldr	r2, [sp, #12]
 800f10a:	4546      	cmp	r6, r8
 800f10c:	441a      	add	r2, r3
 800f10e:	fb92 f3f5 	sdiv	r3, r2, r5
 800f112:	4418      	add	r0, r3
 800f114:	bf18      	it	ne
 800f116:	4240      	negne	r0, r0
 800f118:	fb05 2313 	mls	r3, r5, r3, r2
 800f11c:	1c72      	adds	r2, r6, #1
 800f11e:	6023      	str	r3, [r4, #0]
 800f120:	d105      	bne.n	800f12e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f122:	2b00      	cmp	r3, #0
 800f124:	f1c3 0200 	rsb	r2, r3, #0
 800f128:	db0b      	blt.n	800f142 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f12a:	6022      	str	r2, [r4, #0]
 800f12c:	e006      	b.n	800f13c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f12e:	2e01      	cmp	r6, #1
 800f130:	d104      	bne.n	800f13c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f132:	2b00      	cmp	r3, #0
 800f134:	da02      	bge.n	800f13c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f136:	442b      	add	r3, r5
 800f138:	3801      	subs	r0, #1
 800f13a:	6023      	str	r3, [r4, #0]
 800f13c:	b005      	add	sp, #20
 800f13e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f142:	3801      	subs	r0, #1
 800f144:	1b52      	subs	r2, r2, r5
 800f146:	e7f0      	b.n	800f12a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f148 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f148:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f14c:	4c1c      	ldr	r4, [pc, #112]	@ (800f1c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f14e:	6807      	ldr	r7, [r0, #0]
 800f150:	69a3      	ldr	r3, [r4, #24]
 800f152:	4605      	mov	r5, r0
 800f154:	b92b      	cbnz	r3, 800f162 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f156:	6840      	ldr	r0, [r0, #4]
 800f158:	e9c5 7000 	strd	r7, r0, [r5]
 800f15c:	b004      	add	sp, #16
 800f15e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f162:	68a2      	ldr	r2, [r4, #8]
 800f164:	6820      	ldr	r0, [r4, #0]
 800f166:	ae04      	add	r6, sp, #16
 800f168:	f04f 0802 	mov.w	r8, #2
 800f16c:	fb93 f1f8 	sdiv	r1, r3, r8
 800f170:	440a      	add	r2, r1
 800f172:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f176:	69e1      	ldr	r1, [r4, #28]
 800f178:	9600      	str	r6, [sp, #0]
 800f17a:	463a      	mov	r2, r7
 800f17c:	f7ff ff98 	bl	800f0b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f180:	69a3      	ldr	r3, [r4, #24]
 800f182:	686a      	ldr	r2, [r5, #4]
 800f184:	6a21      	ldr	r1, [r4, #32]
 800f186:	9600      	str	r6, [sp, #0]
 800f188:	4607      	mov	r7, r0
 800f18a:	6860      	ldr	r0, [r4, #4]
 800f18c:	f7ff ff90 	bl	800f0b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f190:	6962      	ldr	r2, [r4, #20]
 800f192:	69a3      	ldr	r3, [r4, #24]
 800f194:	fb93 f8f8 	sdiv	r8, r3, r8
 800f198:	4442      	add	r2, r8
 800f19a:	9203      	str	r2, [sp, #12]
 800f19c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f19e:	682a      	ldr	r2, [r5, #0]
 800f1a0:	9600      	str	r6, [sp, #0]
 800f1a2:	4407      	add	r7, r0
 800f1a4:	68e0      	ldr	r0, [r4, #12]
 800f1a6:	f7ff ff83 	bl	800f0b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f1aa:	9600      	str	r6, [sp, #0]
 800f1ac:	4680      	mov	r8, r0
 800f1ae:	69a3      	ldr	r3, [r4, #24]
 800f1b0:	686a      	ldr	r2, [r5, #4]
 800f1b2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f1b4:	6920      	ldr	r0, [r4, #16]
 800f1b6:	f7ff ff7b 	bl	800f0b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f1ba:	4440      	add	r0, r8
 800f1bc:	e7cc      	b.n	800f158 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f1be:	bf00      	nop
 800f1c0:	2001400c 	.word	0x2001400c

0800f1c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f1c4:	4b07      	ldr	r3, [pc, #28]	@ (800f1e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f1c6:	781b      	ldrb	r3, [r3, #0]
 800f1c8:	2b01      	cmp	r3, #1
 800f1ca:	d109      	bne.n	800f1e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f1cc:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f1d0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f1d4:	8003      	strh	r3, [r0, #0]
 800f1d6:	4b04      	ldr	r3, [pc, #16]	@ (800f1e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f1d8:	881b      	ldrh	r3, [r3, #0]
 800f1da:	3b01      	subs	r3, #1
 800f1dc:	1a9b      	subs	r3, r3, r2
 800f1de:	800b      	strh	r3, [r1, #0]
 800f1e0:	4770      	bx	lr
 800f1e2:	bf00      	nop
 800f1e4:	20013fee 	.word	0x20013fee
 800f1e8:	20013fea 	.word	0x20013fea

0800f1ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f1ec:	b510      	push	{r4, lr}
 800f1ee:	4b07      	ldr	r3, [pc, #28]	@ (800f20c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f1f0:	781b      	ldrb	r3, [r3, #0]
 800f1f2:	2b01      	cmp	r3, #1
 800f1f4:	d108      	bne.n	800f208 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f1f6:	4b06      	ldr	r3, [pc, #24]	@ (800f210 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f1f8:	880c      	ldrh	r4, [r1, #0]
 800f1fa:	881b      	ldrh	r3, [r3, #0]
 800f1fc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f200:	3b01      	subs	r3, #1
 800f202:	1b1b      	subs	r3, r3, r4
 800f204:	8003      	strh	r3, [r0, #0]
 800f206:	800a      	strh	r2, [r1, #0]
 800f208:	bd10      	pop	{r4, pc}
 800f20a:	bf00      	nop
 800f20c:	20013fee 	.word	0x20013fee
 800f210:	20013fea 	.word	0x20013fea

0800f214 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f214:	b510      	push	{r4, lr}
 800f216:	4b0a      	ldr	r3, [pc, #40]	@ (800f240 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f218:	781b      	ldrb	r3, [r3, #0]
 800f21a:	2b01      	cmp	r3, #1
 800f21c:	d10e      	bne.n	800f23c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f21e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f222:	8843      	ldrh	r3, [r0, #2]
 800f224:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f228:	8044      	strh	r4, [r0, #2]
 800f22a:	18ca      	adds	r2, r1, r3
 800f22c:	4b05      	ldr	r3, [pc, #20]	@ (800f244 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f22e:	881b      	ldrh	r3, [r3, #0]
 800f230:	1a9b      	subs	r3, r3, r2
 800f232:	8003      	strh	r3, [r0, #0]
 800f234:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f238:	80c3      	strh	r3, [r0, #6]
 800f23a:	8081      	strh	r1, [r0, #4]
 800f23c:	bd10      	pop	{r4, pc}
 800f23e:	bf00      	nop
 800f240:	20013fee 	.word	0x20013fee
 800f244:	20013fea 	.word	0x20013fea

0800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f248:	4b08      	ldr	r3, [pc, #32]	@ (800f26c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f24a:	781b      	ldrb	r3, [r3, #0]
 800f24c:	2b01      	cmp	r3, #1
 800f24e:	d10c      	bne.n	800f26a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f250:	8803      	ldrh	r3, [r0, #0]
 800f252:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f256:	8842      	ldrh	r2, [r0, #2]
 800f258:	8002      	strh	r2, [r0, #0]
 800f25a:	185a      	adds	r2, r3, r1
 800f25c:	4b04      	ldr	r3, [pc, #16]	@ (800f270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f25e:	881b      	ldrh	r3, [r3, #0]
 800f260:	1a9b      	subs	r3, r3, r2
 800f262:	8043      	strh	r3, [r0, #2]
 800f264:	88c3      	ldrh	r3, [r0, #6]
 800f266:	8083      	strh	r3, [r0, #4]
 800f268:	80c1      	strh	r1, [r0, #6]
 800f26a:	4770      	bx	lr
 800f26c:	20013fee 	.word	0x20013fee
 800f270:	20013fea 	.word	0x20013fea

0800f274 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f274:	b510      	push	{r4, lr}
 800f276:	4b07      	ldr	r3, [pc, #28]	@ (800f294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f278:	781b      	ldrb	r3, [r3, #0]
 800f27a:	2b01      	cmp	r3, #1
 800f27c:	d108      	bne.n	800f290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f27e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f282:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f286:	8003      	strh	r3, [r0, #0]
 800f288:	8893      	ldrh	r3, [r2, #4]
 800f28a:	3b01      	subs	r3, #1
 800f28c:	1b1b      	subs	r3, r3, r4
 800f28e:	800b      	strh	r3, [r1, #0]
 800f290:	bd10      	pop	{r4, pc}
 800f292:	bf00      	nop
 800f294:	20013fee 	.word	0x20013fee

0800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f298:	b510      	push	{r4, lr}
 800f29a:	4b0a      	ldr	r3, [pc, #40]	@ (800f2c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f29c:	781b      	ldrb	r3, [r3, #0]
 800f29e:	2b01      	cmp	r3, #1
 800f2a0:	460a      	mov	r2, r1
 800f2a2:	d10d      	bne.n	800f2c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f2a4:	8881      	ldrh	r1, [r0, #4]
 800f2a6:	8803      	ldrh	r3, [r0, #0]
 800f2a8:	440b      	add	r3, r1
 800f2aa:	4601      	mov	r1, r0
 800f2ac:	3b01      	subs	r3, #1
 800f2ae:	f821 3b02 	strh.w	r3, [r1], #2
 800f2b2:	f7ff ffdf 	bl	800f274 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f2b6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f2ba:	88c2      	ldrh	r2, [r0, #6]
 800f2bc:	8082      	strh	r2, [r0, #4]
 800f2be:	80c3      	strh	r3, [r0, #6]
 800f2c0:	bd10      	pop	{r4, pc}
 800f2c2:	bf00      	nop
 800f2c4:	20013fee 	.word	0x20013fee

0800f2c8 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f2c8:	4b06      	ldr	r3, [pc, #24]	@ (800f2e4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f2ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2ce:	4b06      	ldr	r3, [pc, #24]	@ (800f2e8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f2d0:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800f2d4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f2d8:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800f2dc:	2100      	movs	r1, #0
 800f2de:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800f2e2:	4770      	bx	lr
 800f2e4:	20013fea 	.word	0x20013fea
 800f2e8:	20013fec 	.word	0x20013fec

0800f2ec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f2ec:	4b03      	ldr	r3, [pc, #12]	@ (800f2fc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f2ee:	6818      	ldr	r0, [r3, #0]
 800f2f0:	b110      	cbz	r0, 800f2f8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f2f2:	6803      	ldr	r3, [r0, #0]
 800f2f4:	699b      	ldr	r3, [r3, #24]
 800f2f6:	4718      	bx	r3
 800f2f8:	4770      	bx	lr
 800f2fa:	bf00      	nop
 800f2fc:	2001403c 	.word	0x2001403c

0800f300 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f300:	4770      	bx	lr
	...

0800f304 <_ZN8touchgfx11Application4drawEv>:
 800f304:	b507      	push	{r0, r1, r2, lr}
 800f306:	4b09      	ldr	r3, [pc, #36]	@ (800f32c <_ZN8touchgfx11Application4drawEv+0x28>)
 800f308:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f30c:	4b08      	ldr	r3, [pc, #32]	@ (800f330 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f30e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f312:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f316:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f31a:	6803      	ldr	r3, [r0, #0]
 800f31c:	2100      	movs	r1, #0
 800f31e:	9100      	str	r1, [sp, #0]
 800f320:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f322:	4669      	mov	r1, sp
 800f324:	4798      	blx	r3
 800f326:	b003      	add	sp, #12
 800f328:	f85d fb04 	ldr.w	pc, [sp], #4
 800f32c:	20013fea 	.word	0x20013fea
 800f330:	20013fec 	.word	0x20013fec

0800f334 <_ZN8touchgfx11Application10invalidateEv>:
 800f334:	4b09      	ldr	r3, [pc, #36]	@ (800f35c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f336:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f33a:	4b09      	ldr	r3, [pc, #36]	@ (800f360 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f33c:	b082      	sub	sp, #8
 800f33e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f342:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f346:	2100      	movs	r1, #0
 800f348:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f34c:	9100      	str	r1, [sp, #0]
 800f34e:	6803      	ldr	r3, [r0, #0]
 800f350:	aa02      	add	r2, sp, #8
 800f352:	e912 0006 	ldmdb	r2, {r1, r2}
 800f356:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f358:	b002      	add	sp, #8
 800f35a:	4718      	bx	r3
 800f35c:	20013fea 	.word	0x20013fea
 800f360:	20013fec 	.word	0x20013fec

0800f364 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f364:	4b03      	ldr	r3, [pc, #12]	@ (800f374 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f366:	6818      	ldr	r0, [r3, #0]
 800f368:	b110      	cbz	r0, 800f370 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f36a:	6803      	ldr	r3, [r0, #0]
 800f36c:	69db      	ldr	r3, [r3, #28]
 800f36e:	4718      	bx	r3
 800f370:	4770      	bx	lr
 800f372:	bf00      	nop
 800f374:	2001403c 	.word	0x2001403c

0800f378 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f378:	4b03      	ldr	r3, [pc, #12]	@ (800f388 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f37a:	6818      	ldr	r0, [r3, #0]
 800f37c:	b110      	cbz	r0, 800f384 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f37e:	6803      	ldr	r3, [r0, #0]
 800f380:	6a1b      	ldr	r3, [r3, #32]
 800f382:	4718      	bx	r3
 800f384:	4770      	bx	lr
 800f386:	bf00      	nop
 800f388:	2001403c 	.word	0x2001403c

0800f38c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f38c:	2300      	movs	r3, #0
 800f38e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800f392:	4770      	bx	lr

0800f394 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f394:	4b03      	ldr	r3, [pc, #12]	@ (800f3a4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f396:	6818      	ldr	r0, [r3, #0]
 800f398:	b110      	cbz	r0, 800f3a0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f39a:	6803      	ldr	r3, [r0, #0]
 800f39c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f39e:	4718      	bx	r3
 800f3a0:	4770      	bx	lr
 800f3a2:	bf00      	nop
 800f3a4:	2001403c 	.word	0x2001403c

0800f3a8 <_ZN8touchgfx11ApplicationD1Ev>:
 800f3a8:	4770      	bx	lr

0800f3aa <_ZN8touchgfx11ApplicationD0Ev>:
 800f3aa:	b510      	push	{r4, lr}
 800f3ac:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800f3b0:	4604      	mov	r4, r0
 800f3b2:	f012 fb76 	bl	8021aa2 <_ZdlPvj>
 800f3b6:	4620      	mov	r0, r4
 800f3b8:	bd10      	pop	{r4, pc}

0800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f3ba:	b510      	push	{r4, lr}
 800f3bc:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f3c0:	888a      	ldrh	r2, [r1, #4]
 800f3c2:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f3c6:	4422      	add	r2, r4
 800f3c8:	b212      	sxth	r2, r2
 800f3ca:	4293      	cmp	r3, r2
 800f3cc:	da15      	bge.n	800f3fa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f3ce:	8882      	ldrh	r2, [r0, #4]
 800f3d0:	4413      	add	r3, r2
 800f3d2:	b21b      	sxth	r3, r3
 800f3d4:	429c      	cmp	r4, r3
 800f3d6:	da10      	bge.n	800f3fa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f3d8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f3dc:	88c9      	ldrh	r1, [r1, #6]
 800f3de:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f3e2:	4419      	add	r1, r3
 800f3e4:	b209      	sxth	r1, r1
 800f3e6:	428a      	cmp	r2, r1
 800f3e8:	da07      	bge.n	800f3fa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f3ea:	88c0      	ldrh	r0, [r0, #6]
 800f3ec:	4410      	add	r0, r2
 800f3ee:	b200      	sxth	r0, r0
 800f3f0:	4283      	cmp	r3, r0
 800f3f2:	bfac      	ite	ge
 800f3f4:	2000      	movge	r0, #0
 800f3f6:	2001      	movlt	r0, #1
 800f3f8:	bd10      	pop	{r4, pc}
 800f3fa:	2000      	movs	r0, #0
 800f3fc:	e7fc      	b.n	800f3f8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f3fe <_ZN8touchgfx4Rect10restrictToEss>:
 800f3fe:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f402:	2b00      	cmp	r3, #0
 800f404:	b510      	push	{r4, lr}
 800f406:	da04      	bge.n	800f412 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f408:	8884      	ldrh	r4, [r0, #4]
 800f40a:	4423      	add	r3, r4
 800f40c:	8083      	strh	r3, [r0, #4]
 800f40e:	2300      	movs	r3, #0
 800f410:	8003      	strh	r3, [r0, #0]
 800f412:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f416:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f41a:	1b09      	subs	r1, r1, r4
 800f41c:	428b      	cmp	r3, r1
 800f41e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f422:	bfc8      	it	gt
 800f424:	8081      	strhgt	r1, [r0, #4]
 800f426:	2b00      	cmp	r3, #0
 800f428:	da04      	bge.n	800f434 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f42a:	88c1      	ldrh	r1, [r0, #6]
 800f42c:	440b      	add	r3, r1
 800f42e:	80c3      	strh	r3, [r0, #6]
 800f430:	2300      	movs	r3, #0
 800f432:	8043      	strh	r3, [r0, #2]
 800f434:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f438:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f43c:	1a52      	subs	r2, r2, r1
 800f43e:	4293      	cmp	r3, r2
 800f440:	bfc8      	it	gt
 800f442:	80c2      	strhgt	r2, [r0, #6]
 800f444:	bd10      	pop	{r4, pc}
	...

0800f448 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f448:	b510      	push	{r4, lr}
 800f44a:	4b10      	ldr	r3, [pc, #64]	@ (800f48c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f44c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f450:	4b0f      	ldr	r3, [pc, #60]	@ (800f490 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f452:	460c      	mov	r4, r1
 800f454:	4620      	mov	r0, r4
 800f456:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f45a:	f7ff ffd0 	bl	800f3fe <_ZN8touchgfx4Rect10restrictToEss>
 800f45e:	4b0d      	ldr	r3, [pc, #52]	@ (800f494 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f460:	6818      	ldr	r0, [r3, #0]
 800f462:	b190      	cbz	r0, 800f48a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f464:	6803      	ldr	r3, [r0, #0]
 800f466:	4621      	mov	r1, r4
 800f468:	689b      	ldr	r3, [r3, #8]
 800f46a:	4798      	blx	r3
 800f46c:	4b0a      	ldr	r3, [pc, #40]	@ (800f498 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f46e:	6818      	ldr	r0, [r3, #0]
 800f470:	b118      	cbz	r0, 800f47a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f472:	6803      	ldr	r3, [r0, #0]
 800f474:	4621      	mov	r1, r4
 800f476:	689b      	ldr	r3, [r3, #8]
 800f478:	4798      	blx	r3
 800f47a:	4b08      	ldr	r3, [pc, #32]	@ (800f49c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f47c:	6818      	ldr	r0, [r3, #0]
 800f47e:	6803      	ldr	r3, [r0, #0]
 800f480:	4621      	mov	r1, r4
 800f482:	69db      	ldr	r3, [r3, #28]
 800f484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f488:	4718      	bx	r3
 800f48a:	bd10      	pop	{r4, pc}
 800f48c:	20013fec 	.word	0x20013fec
 800f490:	20013fea 	.word	0x20013fea
 800f494:	2001403c 	.word	0x2001403c
 800f498:	20014038 	.word	0x20014038
 800f49c:	20013ff8 	.word	0x20013ff8

0800f4a0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f4a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f4a2:	4606      	mov	r6, r0
 800f4a4:	4608      	mov	r0, r1
 800f4a6:	460f      	mov	r7, r1
 800f4a8:	f7fa ffa1 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4ac:	b9e8      	cbnz	r0, 800f4ea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f4ae:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f4b2:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f4b6:	42a5      	cmp	r5, r4
 800f4b8:	db17      	blt.n	800f4ea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f4ba:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f4be:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f4c2:	429a      	cmp	r2, r3
 800f4c4:	db11      	blt.n	800f4ea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f4c6:	88b9      	ldrh	r1, [r7, #4]
 800f4c8:	440d      	add	r5, r1
 800f4ca:	88b1      	ldrh	r1, [r6, #4]
 800f4cc:	440c      	add	r4, r1
 800f4ce:	b22d      	sxth	r5, r5
 800f4d0:	b224      	sxth	r4, r4
 800f4d2:	42a5      	cmp	r5, r4
 800f4d4:	dc09      	bgt.n	800f4ea <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f4d6:	88f8      	ldrh	r0, [r7, #6]
 800f4d8:	4410      	add	r0, r2
 800f4da:	88f2      	ldrh	r2, [r6, #6]
 800f4dc:	4413      	add	r3, r2
 800f4de:	b200      	sxth	r0, r0
 800f4e0:	b21b      	sxth	r3, r3
 800f4e2:	4298      	cmp	r0, r3
 800f4e4:	bfcc      	ite	gt
 800f4e6:	2000      	movgt	r0, #0
 800f4e8:	2001      	movle	r0, #1
 800f4ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f4ec <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f4ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f4ee:	4604      	mov	r4, r0
 800f4f0:	4608      	mov	r0, r1
 800f4f2:	460d      	mov	r5, r1
 800f4f4:	f7fa ff7b 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4f8:	b978      	cbnz	r0, 800f51a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f4fa:	4620      	mov	r0, r4
 800f4fc:	f7fa ff77 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f500:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f504:	b150      	cbz	r0, 800f51c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f506:	8026      	strh	r6, [r4, #0]
 800f508:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f50c:	8063      	strh	r3, [r4, #2]
 800f50e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f512:	80a3      	strh	r3, [r4, #4]
 800f514:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f518:	80e3      	strh	r3, [r4, #6]
 800f51a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f51c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f520:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f524:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f528:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f52c:	88ed      	ldrh	r5, [r5, #6]
 800f52e:	42b1      	cmp	r1, r6
 800f530:	460f      	mov	r7, r1
 800f532:	bfa8      	it	ge
 800f534:	4637      	movge	r7, r6
 800f536:	4293      	cmp	r3, r2
 800f538:	4618      	mov	r0, r3
 800f53a:	4466      	add	r6, ip
 800f53c:	bfa8      	it	ge
 800f53e:	4610      	movge	r0, r2
 800f540:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f544:	8027      	strh	r7, [r4, #0]
 800f546:	442a      	add	r2, r5
 800f548:	88e5      	ldrh	r5, [r4, #6]
 800f54a:	8060      	strh	r0, [r4, #2]
 800f54c:	4461      	add	r1, ip
 800f54e:	442b      	add	r3, r5
 800f550:	b236      	sxth	r6, r6
 800f552:	b209      	sxth	r1, r1
 800f554:	b212      	sxth	r2, r2
 800f556:	b21b      	sxth	r3, r3
 800f558:	428e      	cmp	r6, r1
 800f55a:	bfac      	ite	ge
 800f55c:	ebc7 0106 	rsbge	r1, r7, r6
 800f560:	ebc7 0101 	rsblt	r1, r7, r1
 800f564:	429a      	cmp	r2, r3
 800f566:	bfac      	ite	ge
 800f568:	ebc0 0202 	rsbge	r2, r0, r2
 800f56c:	ebc0 0203 	rsblt	r2, r0, r3
 800f570:	80a1      	strh	r1, [r4, #4]
 800f572:	80e2      	strh	r2, [r4, #6]
 800f574:	e7d1      	b.n	800f51a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f578 <_ZN8touchgfx11Application11getInstanceEv>:
 800f578:	4b01      	ldr	r3, [pc, #4]	@ (800f580 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f57a:	6818      	ldr	r0, [r3, #0]
 800f57c:	4770      	bx	lr
 800f57e:	bf00      	nop
 800f580:	2001404c 	.word	0x2001404c

0800f584 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f584:	b510      	push	{r4, lr}
 800f586:	2300      	movs	r3, #0
 800f588:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f58c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f590:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f594:	4604      	mov	r4, r0
 800f596:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f59a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f59e:	429a      	cmp	r2, r3
 800f5a0:	d90e      	bls.n	800f5c0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f5a2:	18e2      	adds	r2, r4, r3
 800f5a4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f5a8:	b122      	cbz	r2, 800f5b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f5aa:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f5ae:	6803      	ldr	r3, [r0, #0]
 800f5b0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f5b2:	4798      	blx	r3
 800f5b4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f5b8:	3301      	adds	r3, #1
 800f5ba:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f5be:	e7ea      	b.n	800f596 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f5c0:	bd10      	pop	{r4, pc}

0800f5c2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f5c2:	2300      	movs	r3, #0
 800f5c4:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f5c8:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f5cc:	30a4      	adds	r0, #164	@ 0xa4
 800f5ce:	f802 3b01 	strb.w	r3, [r2], #1
 800f5d2:	4282      	cmp	r2, r0
 800f5d4:	d1fb      	bne.n	800f5ce <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f5d6:	4770      	bx	lr

0800f5d8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f5d8:	b570      	push	{r4, r5, r6, lr}
 800f5da:	4c0b      	ldr	r4, [pc, #44]	@ (800f608 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f5dc:	4605      	mov	r5, r0
 800f5de:	6820      	ldr	r0, [r4, #0]
 800f5e0:	460e      	mov	r6, r1
 800f5e2:	b110      	cbz	r0, 800f5ea <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f5e4:	6803      	ldr	r3, [r0, #0]
 800f5e6:	695b      	ldr	r3, [r3, #20]
 800f5e8:	4798      	blx	r3
 800f5ea:	1d28      	adds	r0, r5, #4
 800f5ec:	f7ff ffe9 	bl	800f5c2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f5f0:	6026      	str	r6, [r4, #0]
 800f5f2:	6833      	ldr	r3, [r6, #0]
 800f5f4:	4630      	mov	r0, r6
 800f5f6:	68db      	ldr	r3, [r3, #12]
 800f5f8:	4798      	blx	r3
 800f5fa:	682b      	ldr	r3, [r5, #0]
 800f5fc:	4628      	mov	r0, r5
 800f5fe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f600:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f604:	4718      	bx	r3
 800f606:	bf00      	nop
 800f608:	2001403c 	.word	0x2001403c

0800f60c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f60c:	2300      	movs	r3, #0
 800f60e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f612:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f616:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f618:	461a      	mov	r2, r3
 800f61a:	461c      	mov	r4, r3
 800f61c:	461d      	mov	r5, r3
 800f61e:	459c      	cmp	ip, r3
 800f620:	dd1a      	ble.n	800f658 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f622:	18c6      	adds	r6, r0, r3
 800f624:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f628:	b16e      	cbz	r6, 800f646 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f62a:	429a      	cmp	r2, r3
 800f62c:	d008      	beq.n	800f640 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f62e:	fa1f fe82 	uxth.w	lr, r2
 800f632:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f636:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f63a:	1887      	adds	r7, r0, r2
 800f63c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f640:	3201      	adds	r2, #1
 800f642:	3301      	adds	r3, #1
 800f644:	e7eb      	b.n	800f61e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f646:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f64a:	4299      	cmp	r1, r3
 800f64c:	bfa8      	it	ge
 800f64e:	3501      	addge	r5, #1
 800f650:	429e      	cmp	r6, r3
 800f652:	bfc8      	it	gt
 800f654:	3401      	addgt	r4, #1
 800f656:	e7f4      	b.n	800f642 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f658:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f65c:	1b49      	subs	r1, r1, r5
 800f65e:	1b1b      	subs	r3, r3, r4
 800f660:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f664:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f668:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f66c:	4293      	cmp	r3, r2
 800f66e:	dd03      	ble.n	800f678 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f670:	3b01      	subs	r3, #1
 800f672:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f676:	e7f7      	b.n	800f668 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f678:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f67c <_ZN8touchgfx11Application15handleTickEventEv>:
 800f67c:	b570      	push	{r4, r5, r6, lr}
 800f67e:	4d16      	ldr	r5, [pc, #88]	@ (800f6d8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f680:	4604      	mov	r4, r0
 800f682:	6828      	ldr	r0, [r5, #0]
 800f684:	b140      	cbz	r0, 800f698 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f686:	7a03      	ldrb	r3, [r0, #8]
 800f688:	b933      	cbnz	r3, 800f698 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f68a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f68e:	6803      	ldr	r3, [r0, #0]
 800f690:	689b      	ldr	r3, [r3, #8]
 800f692:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f696:	4718      	bx	r3
 800f698:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f69c:	4e0f      	ldr	r6, [pc, #60]	@ (800f6dc <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f69e:	b973      	cbnz	r3, 800f6be <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f6a0:	b168      	cbz	r0, 800f6be <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f6a2:	7a03      	ldrb	r3, [r0, #8]
 800f6a4:	b15b      	cbz	r3, 800f6be <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f6a6:	6830      	ldr	r0, [r6, #0]
 800f6a8:	b110      	cbz	r0, 800f6b0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f6aa:	6803      	ldr	r3, [r0, #0]
 800f6ac:	691b      	ldr	r3, [r3, #16]
 800f6ae:	4798      	blx	r3
 800f6b0:	6828      	ldr	r0, [r5, #0]
 800f6b2:	6803      	ldr	r3, [r0, #0]
 800f6b4:	68db      	ldr	r3, [r3, #12]
 800f6b6:	4798      	blx	r3
 800f6b8:	2301      	movs	r3, #1
 800f6ba:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f6be:	3404      	adds	r4, #4
 800f6c0:	4620      	mov	r0, r4
 800f6c2:	f7ff ff5f 	bl	800f584 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f6c6:	4620      	mov	r0, r4
 800f6c8:	f7ff ffa0 	bl	800f60c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f6cc:	6830      	ldr	r0, [r6, #0]
 800f6ce:	b110      	cbz	r0, 800f6d6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f6d0:	6803      	ldr	r3, [r0, #0]
 800f6d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f6d4:	e7dd      	b.n	800f692 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f6d6:	bd70      	pop	{r4, r5, r6, pc}
 800f6d8:	20014040 	.word	0x20014040
 800f6dc:	2001403c 	.word	0x2001403c

0800f6e0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f6e0:	4603      	mov	r3, r0
 800f6e2:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f6e6:	2200      	movs	r2, #0
 800f6e8:	801a      	strh	r2, [r3, #0]
 800f6ea:	805a      	strh	r2, [r3, #2]
 800f6ec:	809a      	strh	r2, [r3, #4]
 800f6ee:	80da      	strh	r2, [r3, #6]
 800f6f0:	3308      	adds	r3, #8
 800f6f2:	428b      	cmp	r3, r1
 800f6f4:	d1f8      	bne.n	800f6e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f6f6:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f6fa:	4770      	bx	lr

0800f6fc <_ZN8touchgfx11ApplicationC1Ev>:
 800f6fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f6fe:	4606      	mov	r6, r0
 800f700:	4b1c      	ldr	r3, [pc, #112]	@ (800f774 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f702:	f846 3b04 	str.w	r3, [r6], #4
 800f706:	4604      	mov	r4, r0
 800f708:	2500      	movs	r5, #0
 800f70a:	22a8      	movs	r2, #168	@ 0xa8
 800f70c:	2100      	movs	r1, #0
 800f70e:	4630      	mov	r0, r6
 800f710:	f013 fb41 	bl	8022d96 <memset>
 800f714:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f718:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f71c:	f7ff ffe0 	bl	800f6e0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f720:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f724:	f7ff ffdc 	bl	800f6e0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f728:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f72c:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f730:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f734:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f738:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f73c:	490e      	ldr	r1, [pc, #56]	@ (800f778 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f73e:	480f      	ldr	r0, [pc, #60]	@ (800f77c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f740:	4f0f      	ldr	r7, [pc, #60]	@ (800f780 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f742:	f011 fb39 	bl	8020db8 <CRC_Lock>
 800f746:	4b0f      	ldr	r3, [pc, #60]	@ (800f784 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f748:	b158      	cbz	r0, 800f762 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f74a:	801d      	strh	r5, [r3, #0]
 800f74c:	4a0e      	ldr	r2, [pc, #56]	@ (800f788 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f74e:	2300      	movs	r3, #0
 800f750:	6013      	str	r3, [r2, #0]
 800f752:	4a0e      	ldr	r2, [pc, #56]	@ (800f78c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f754:	603b      	str	r3, [r7, #0]
 800f756:	4630      	mov	r0, r6
 800f758:	6013      	str	r3, [r2, #0]
 800f75a:	f7ff ff32 	bl	800f5c2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f75e:	4620      	mov	r0, r4
 800f760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f762:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f766:	2002      	movs	r0, #2
 800f768:	801a      	strh	r2, [r3, #0]
 800f76a:	6038      	str	r0, [r7, #0]
 800f76c:	f001 ffcc 	bl	8011708 <_ZN8touchgfx6Screen4drawEv>
 800f770:	e7ec      	b.n	800f74c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f772:	bf00      	nop
 800f774:	0802520c 	.word	0x0802520c
 800f778:	b5e8b5cd 	.word	0xb5e8b5cd
 800f77c:	f407a5c2 	.word	0xf407a5c2
 800f780:	2001403c 	.word	0x2001403c
 800f784:	200001a0 	.word	0x200001a0
 800f788:	2001404c 	.word	0x2001404c
 800f78c:	20014040 	.word	0x20014040

0800f790 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f790:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f794:	3b01      	subs	r3, #1
 800f796:	b29b      	uxth	r3, r3
 800f798:	428b      	cmp	r3, r1
 800f79a:	b510      	push	{r4, lr}
 800f79c:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800f7a0:	d908      	bls.n	800f7b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800f7a2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f7a6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f7aa:	681a      	ldr	r2, [r3, #0]
 800f7ac:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f7b0:	685a      	ldr	r2, [r3, #4]
 800f7b2:	6062      	str	r2, [r4, #4]
 800f7b4:	bd10      	pop	{r4, pc}
	...

0800f7b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7bc:	4b92      	ldr	r3, [pc, #584]	@ (800fa08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 800f7be:	b08f      	sub	sp, #60	@ 0x3c
 800f7c0:	ac0a      	add	r4, sp, #40	@ 0x28
 800f7c2:	e884 0006 	stmia.w	r4, {r1, r2}
 800f7c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f7ca:	4b90      	ldr	r3, [pc, #576]	@ (800fa0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 800f7cc:	4683      	mov	fp, r0
 800f7ce:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f7d2:	4620      	mov	r0, r4
 800f7d4:	f7ff fe13 	bl	800f3fe <_ZN8touchgfx4Rect10restrictToEss>
 800f7d8:	4620      	mov	r0, r4
 800f7da:	f7fa fe08 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f7de:	2800      	cmp	r0, #0
 800f7e0:	d170      	bne.n	800f8c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f7e2:	4b8b      	ldr	r3, [pc, #556]	@ (800fa10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800f7e4:	681b      	ldr	r3, [r3, #0]
 800f7e6:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800f7ea:	2b02      	cmp	r3, #2
 800f7ec:	d06a      	beq.n	800f8c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f7ee:	9403      	str	r4, [sp, #12]
 800f7f0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f7f4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f7f8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800f7fc:	35a4      	adds	r5, #164	@ 0xa4
 800f7fe:	9301      	str	r3, [sp, #4]
 800f800:	b15c      	cbz	r4, 800f81a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800f802:	4629      	mov	r1, r5
 800f804:	9803      	ldr	r0, [sp, #12]
 800f806:	f7ff fe4b 	bl	800f4a0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f80a:	3c01      	subs	r4, #1
 800f80c:	b118      	cbz	r0, 800f816 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800f80e:	b2a1      	uxth	r1, r4
 800f810:	9801      	ldr	r0, [sp, #4]
 800f812:	f7ff ffbd 	bl	800f790 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f816:	3d08      	subs	r5, #8
 800f818:	e7f2      	b.n	800f800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800f81a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800f81e:	f8cd a010 	str.w	sl, [sp, #16]
 800f822:	f10a 33ff 	add.w	r3, sl, #4294967295
 800f826:	9302      	str	r3, [sp, #8]
 800f828:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800f82c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800f830:	9306      	str	r3, [sp, #24]
 800f832:	445c      	add	r4, fp
 800f834:	2500      	movs	r5, #0
 800f836:	4626      	mov	r6, r4
 800f838:	f8cd a014 	str.w	sl, [sp, #20]
 800f83c:	462f      	mov	r7, r5
 800f83e:	9b05      	ldr	r3, [sp, #20]
 800f840:	2b00      	cmp	r3, #0
 800f842:	d073      	beq.n	800f92c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 800f844:	9903      	ldr	r1, [sp, #12]
 800f846:	4630      	mov	r0, r6
 800f848:	f7ff fdb7 	bl	800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f84c:	b350      	cbz	r0, 800f8a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800f84e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800f852:	f9b6 c000 	ldrsh.w	ip, [r6]
 800f856:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800f85a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800f85e:	45e6      	cmp	lr, ip
 800f860:	db33      	blt.n	800f8ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f862:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f866:	88b3      	ldrh	r3, [r6, #4]
 800f868:	4472      	add	r2, lr
 800f86a:	4463      	add	r3, ip
 800f86c:	b212      	sxth	r2, r2
 800f86e:	b21b      	sxth	r3, r3
 800f870:	429a      	cmp	r2, r3
 800f872:	dc2a      	bgt.n	800f8ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f874:	88f3      	ldrh	r3, [r6, #6]
 800f876:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f87a:	fa1f f289 	uxth.w	r2, r9
 800f87e:	4413      	add	r3, r2
 800f880:	b29b      	uxth	r3, r3
 800f882:	45c8      	cmp	r8, r9
 800f884:	fa1f fc88 	uxth.w	ip, r8
 800f888:	fa0f fe83 	sxth.w	lr, r3
 800f88c:	db0f      	blt.n	800f8ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 800f88e:	eba3 030c 	sub.w	r3, r3, ip
 800f892:	1ac9      	subs	r1, r1, r3
 800f894:	b209      	sxth	r1, r1
 800f896:	2900      	cmp	r1, #0
 800f898:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f89c:	dd12      	ble.n	800f8c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f89e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800f8a2:	4605      	mov	r5, r0
 800f8a4:	9b05      	ldr	r3, [sp, #20]
 800f8a6:	3b01      	subs	r3, #1
 800f8a8:	9305      	str	r3, [sp, #20]
 800f8aa:	3e08      	subs	r6, #8
 800f8ac:	e7c7      	b.n	800f83e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 800f8ae:	4461      	add	r1, ip
 800f8b0:	b209      	sxth	r1, r1
 800f8b2:	4571      	cmp	r1, lr
 800f8b4:	dc38      	bgt.n	800f928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f8b6:	eba2 020c 	sub.w	r2, r2, ip
 800f8ba:	b212      	sxth	r2, r2
 800f8bc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800f8c0:	2a00      	cmp	r2, #0
 800f8c2:	dcee      	bgt.n	800f8a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f8c4:	b00f      	add	sp, #60	@ 0x3c
 800f8c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8ca:	45c8      	cmp	r8, r9
 800f8cc:	db2c      	blt.n	800f928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f8ce:	88f3      	ldrh	r3, [r6, #6]
 800f8d0:	4499      	add	r9, r3
 800f8d2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800f8d6:	4498      	add	r8, r3
 800f8d8:	fa0f f989 	sxth.w	r9, r9
 800f8dc:	fa0f f888 	sxth.w	r8, r8
 800f8e0:	45c1      	cmp	r9, r8
 800f8e2:	db21      	blt.n	800f928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f8e4:	88b3      	ldrh	r3, [r6, #4]
 800f8e6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800f8ea:	fa1f f28c 	uxth.w	r2, ip
 800f8ee:	4413      	add	r3, r2
 800f8f0:	b29b      	uxth	r3, r3
 800f8f2:	45e6      	cmp	lr, ip
 800f8f4:	fa1f f88e 	uxth.w	r8, lr
 800f8f8:	fa0f f983 	sxth.w	r9, r3
 800f8fc:	db0a      	blt.n	800f914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 800f8fe:	eba3 0308 	sub.w	r3, r3, r8
 800f902:	1ac9      	subs	r1, r1, r3
 800f904:	b209      	sxth	r1, r1
 800f906:	2900      	cmp	r1, #0
 800f908:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800f90c:	ddda      	ble.n	800f8c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f90e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800f912:	e7c6      	b.n	800f8a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f914:	4441      	add	r1, r8
 800f916:	b209      	sxth	r1, r1
 800f918:	4549      	cmp	r1, r9
 800f91a:	dc05      	bgt.n	800f928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f91c:	eba2 0208 	sub.w	r2, r2, r8
 800f920:	b212      	sxth	r2, r2
 800f922:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800f926:	e7cb      	b.n	800f8c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 800f928:	4607      	mov	r7, r0
 800f92a:	e7bb      	b.n	800f8a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800f92c:	2d00      	cmp	r5, #0
 800f92e:	d181      	bne.n	800f834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800f930:	2f00      	cmp	r7, #0
 800f932:	f000 81df 	beq.w	800fcf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f936:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800f93a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800f93e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800f942:	b2b3      	uxth	r3, r6
 800f944:	9305      	str	r3, [sp, #20]
 800f946:	9a05      	ldr	r2, [sp, #20]
 800f948:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800f94c:	4413      	add	r3, r2
 800f94e:	b2ba      	uxth	r2, r7
 800f950:	4492      	add	sl, r2
 800f952:	b29b      	uxth	r3, r3
 800f954:	fa1f fa8a 	uxth.w	sl, sl
 800f958:	fa0f f883 	sxth.w	r8, r3
 800f95c:	fa0f f98a 	sxth.w	r9, sl
 800f960:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800f964:	9b04      	ldr	r3, [sp, #16]
 800f966:	2b00      	cmp	r3, #0
 800f968:	d054      	beq.n	800fa14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 800f96a:	9903      	ldr	r1, [sp, #12]
 800f96c:	4620      	mov	r0, r4
 800f96e:	f7ff fd24 	bl	800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f972:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f976:	b1c0      	cbz	r0, 800f9aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f978:	f9b4 e000 	ldrsh.w	lr, [r4]
 800f97c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f980:	4576      	cmp	r6, lr
 800f982:	dc22      	bgt.n	800f9ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800f984:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f988:	44f4      	add	ip, lr
 800f98a:	fa0f fc8c 	sxth.w	ip, ip
 800f98e:	45e0      	cmp	r8, ip
 800f990:	db1b      	blt.n	800f9ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800f992:	428f      	cmp	r7, r1
 800f994:	fa1f fc81 	uxth.w	ip, r1
 800f998:	88e1      	ldrh	r1, [r4, #6]
 800f99a:	dc0d      	bgt.n	800f9b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 800f99c:	ebaa 0c0c 	sub.w	ip, sl, ip
 800f9a0:	eba1 010c 	sub.w	r1, r1, ip
 800f9a4:	f8a4 9002 	strh.w	r9, [r4, #2]
 800f9a8:	80e1      	strh	r1, [r4, #6]
 800f9aa:	4628      	mov	r0, r5
 800f9ac:	9904      	ldr	r1, [sp, #16]
 800f9ae:	3901      	subs	r1, #1
 800f9b0:	9104      	str	r1, [sp, #16]
 800f9b2:	3c08      	subs	r4, #8
 800f9b4:	4605      	mov	r5, r0
 800f9b6:	e7d3      	b.n	800f960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 800f9b8:	4461      	add	r1, ip
 800f9ba:	b209      	sxth	r1, r1
 800f9bc:	4549      	cmp	r1, r9
 800f9be:	dcf5      	bgt.n	800f9ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f9c0:	eba2 0c0c 	sub.w	ip, r2, ip
 800f9c4:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f9c8:	e7ef      	b.n	800f9aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f9ca:	428f      	cmp	r7, r1
 800f9cc:	dcee      	bgt.n	800f9ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f9ce:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800f9d2:	4461      	add	r1, ip
 800f9d4:	b209      	sxth	r1, r1
 800f9d6:	4589      	cmp	r9, r1
 800f9d8:	dbe8      	blt.n	800f9ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f9da:	4576      	cmp	r6, lr
 800f9dc:	fa1f fc8e 	uxth.w	ip, lr
 800f9e0:	88a1      	ldrh	r1, [r4, #4]
 800f9e2:	dc07      	bgt.n	800f9f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 800f9e4:	eba3 0c0c 	sub.w	ip, r3, ip
 800f9e8:	eba1 010c 	sub.w	r1, r1, ip
 800f9ec:	f8a4 8000 	strh.w	r8, [r4]
 800f9f0:	80a1      	strh	r1, [r4, #4]
 800f9f2:	e7da      	b.n	800f9aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f9f4:	4461      	add	r1, ip
 800f9f6:	b209      	sxth	r1, r1
 800f9f8:	4588      	cmp	r8, r1
 800f9fa:	dbd7      	blt.n	800f9ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f9fc:	9905      	ldr	r1, [sp, #20]
 800f9fe:	eba1 0c0c 	sub.w	ip, r1, ip
 800fa02:	f8a4 c004 	strh.w	ip, [r4, #4]
 800fa06:	e7d0      	b.n	800f9aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fa08:	20013fec 	.word	0x20013fec
 800fa0c:	20013fea 	.word	0x20013fea
 800fa10:	20013ff8 	.word	0x20013ff8
 800fa14:	2d00      	cmp	r5, #0
 800fa16:	f000 816d 	beq.w	800fcf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fa1a:	9b06      	ldr	r3, [sp, #24]
 800fa1c:	445b      	add	r3, fp
 800fa1e:	461c      	mov	r4, r3
 800fa20:	9b02      	ldr	r3, [sp, #8]
 800fa22:	3301      	adds	r3, #1
 800fa24:	f000 8166 	beq.w	800fcf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800fa28:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800fa2c:	4629      	mov	r1, r5
 800fa2e:	9803      	ldr	r0, [sp, #12]
 800fa30:	f7ff fd36 	bl	800f4a0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800fa34:	b120      	cbz	r0, 800fa40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800fa36:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800fa3a:	9801      	ldr	r0, [sp, #4]
 800fa3c:	f7ff fea8 	bl	800f790 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fa40:	9903      	ldr	r1, [sp, #12]
 800fa42:	4628      	mov	r0, r5
 800fa44:	f7ff fcb9 	bl	800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fa48:	2800      	cmp	r0, #0
 800fa4a:	f000 809c 	beq.w	800fb86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fa4e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800fa52:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fa56:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fa5a:	9309      	str	r3, [sp, #36]	@ 0x24
 800fa5c:	fa1f f189 	uxth.w	r1, r9
 800fa60:	eb01 0c03 	add.w	ip, r1, r3
 800fa64:	fa1f fa8c 	uxth.w	sl, ip
 800fa68:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800fa6c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800fa70:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800fa74:	b283      	uxth	r3, r0
 800fa76:	eb03 050c 	add.w	r5, r3, ip
 800fa7a:	b2ad      	uxth	r5, r5
 800fa7c:	9505      	str	r5, [sp, #20]
 800fa7e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800fa82:	9504      	str	r5, [sp, #16]
 800fa84:	4548      	cmp	r0, r9
 800fa86:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800fa8a:	f340 8099 	ble.w	800fbc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800fa8e:	1a5b      	subs	r3, r3, r1
 800fa90:	b29b      	uxth	r3, r3
 800fa92:	4596      	cmp	lr, r2
 800fa94:	fa0f f08a 	sxth.w	r0, sl
 800fa98:	b21e      	sxth	r6, r3
 800fa9a:	dd2e      	ble.n	800fafa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 800fa9c:	9f02      	ldr	r7, [sp, #8]
 800fa9e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800faa2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800faa6:	9f04      	ldr	r7, [sp, #16]
 800faa8:	1a3f      	subs	r7, r7, r0
 800faaa:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800faae:	fa1f fe8e 	uxth.w	lr, lr
 800fab2:	b292      	uxth	r2, r2
 800fab4:	ebae 0102 	sub.w	r1, lr, r2
 800fab8:	44a6      	add	lr, r4
 800faba:	4402      	add	r2, r0
 800fabc:	b289      	uxth	r1, r1
 800fabe:	fa0f fe8e 	sxth.w	lr, lr
 800fac2:	b212      	sxth	r2, r2
 800fac4:	b20d      	sxth	r5, r1
 800fac6:	ebae 0202 	sub.w	r2, lr, r2
 800faca:	436f      	muls	r7, r5
 800facc:	4372      	muls	r2, r6
 800face:	4297      	cmp	r7, r2
 800fad0:	db09      	blt.n	800fae6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 800fad2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800fad6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800fada:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800fade:	449c      	add	ip, r3
 800fae0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fae4:	e684      	b.n	800f7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fae6:	4421      	add	r1, r4
 800fae8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800faec:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800faf0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800faf4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800faf8:	e67a      	b.n	800f7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fafa:	9f04      	ldr	r7, [sp, #16]
 800fafc:	42b8      	cmp	r0, r7
 800fafe:	da27      	bge.n	800fb50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 800fb00:	9902      	ldr	r1, [sp, #8]
 800fb02:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800fb06:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800fb0a:	eb05 010e 	add.w	r1, r5, lr
 800fb0e:	fa1f f881 	uxth.w	r8, r1
 800fb12:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800fb16:	4411      	add	r1, r2
 800fb18:	eba1 0108 	sub.w	r1, r1, r8
 800fb1c:	b289      	uxth	r1, r1
 800fb1e:	fa0f f988 	sxth.w	r9, r8
 800fb22:	eba2 020e 	sub.w	r2, r2, lr
 800fb26:	fa0f f881 	sxth.w	r8, r1
 800fb2a:	1a3f      	subs	r7, r7, r0
 800fb2c:	4372      	muls	r2, r6
 800fb2e:	fb08 f707 	mul.w	r7, r8, r7
 800fb32:	42ba      	cmp	r2, r7
 800fb34:	dc06      	bgt.n	800fb44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 800fb36:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800fb3a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800fb3e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800fb42:	e7ca      	b.n	800fada <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800fb44:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800fb48:	4429      	add	r1, r5
 800fb4a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fb4e:	e64f      	b.n	800f7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fb50:	9805      	ldr	r0, [sp, #20]
 800fb52:	ebaa 0000 	sub.w	r0, sl, r0
 800fb56:	b280      	uxth	r0, r0
 800fb58:	2d06      	cmp	r5, #6
 800fb5a:	fa0f fe80 	sxth.w	lr, r0
 800fb5e:	d817      	bhi.n	800fb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 800fb60:	9b04      	ldr	r3, [sp, #16]
 800fb62:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fb66:	1c6b      	adds	r3, r5, #1
 800fb68:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800fb6c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800fb70:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fb74:	9b01      	ldr	r3, [sp, #4]
 800fb76:	9801      	ldr	r0, [sp, #4]
 800fb78:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fb7c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fb80:	805a      	strh	r2, [r3, #2]
 800fb82:	809e      	strh	r6, [r3, #4]
 800fb84:	80d9      	strh	r1, [r3, #6]
 800fb86:	9b02      	ldr	r3, [sp, #8]
 800fb88:	3b01      	subs	r3, #1
 800fb8a:	9302      	str	r3, [sp, #8]
 800fb8c:	3c08      	subs	r4, #8
 800fb8e:	e747      	b.n	800fa20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 800fb90:	9a02      	ldr	r2, [sp, #8]
 800fb92:	45b6      	cmp	lr, r6
 800fb94:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fb98:	db0d      	blt.n	800fbb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 800fb9a:	449c      	add	ip, r3
 800fb9c:	fa1f fc8c 	uxth.w	ip, ip
 800fba0:	445a      	add	r2, fp
 800fba2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fba6:	448c      	add	ip, r1
 800fba8:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fbac:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800fbb0:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800fbb4:	e61c      	b.n	800f7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fbb6:	445a      	add	r2, fp
 800fbb8:	4484      	add	ip, r0
 800fbba:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800fbbe:	e78f      	b.n	800fae0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fbc0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800fbc4:	fa1f f18e 	uxth.w	r1, lr
 800fbc8:	eb01 0806 	add.w	r8, r1, r6
 800fbcc:	b293      	uxth	r3, r2
 800fbce:	fa1f f888 	uxth.w	r8, r8
 800fbd2:	9306      	str	r3, [sp, #24]
 800fbd4:	fa0f f388 	sxth.w	r3, r8
 800fbd8:	9307      	str	r3, [sp, #28]
 800fbda:	9f06      	ldr	r7, [sp, #24]
 800fbdc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fbe0:	443b      	add	r3, r7
 800fbe2:	b29b      	uxth	r3, r3
 800fbe4:	4596      	cmp	lr, r2
 800fbe6:	9308      	str	r3, [sp, #32]
 800fbe8:	da24      	bge.n	800fc34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800fbea:	9905      	ldr	r1, [sp, #20]
 800fbec:	eba3 0308 	sub.w	r3, r3, r8
 800fbf0:	ebaa 0401 	sub.w	r4, sl, r1
 800fbf4:	b2a4      	uxth	r4, r4
 800fbf6:	b29b      	uxth	r3, r3
 800fbf8:	b225      	sxth	r5, r4
 800fbfa:	b219      	sxth	r1, r3
 800fbfc:	eba2 020e 	sub.w	r2, r2, lr
 800fc00:	eba9 0000 	sub.w	r0, r9, r0
 800fc04:	436a      	muls	r2, r5
 800fc06:	4348      	muls	r0, r1
 800fc08:	4282      	cmp	r2, r0
 800fc0a:	9a02      	ldr	r2, [sp, #8]
 800fc0c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fc10:	445a      	add	r2, fp
 800fc12:	dc06      	bgt.n	800fc22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800fc14:	9b07      	ldr	r3, [sp, #28]
 800fc16:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800fc1a:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800fc1e:	44a4      	add	ip, r4
 800fc20:	e75e      	b.n	800fae0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fc22:	9904      	ldr	r1, [sp, #16]
 800fc24:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800fc28:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800fc2c:	4433      	add	r3, r6
 800fc2e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fc32:	e5dd      	b.n	800f7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fc34:	9f06      	ldr	r7, [sp, #24]
 800fc36:	9b04      	ldr	r3, [sp, #16]
 800fc38:	1bc9      	subs	r1, r1, r7
 800fc3a:	fa0f f78a 	sxth.w	r7, sl
 800fc3e:	b289      	uxth	r1, r1
 800fc40:	429f      	cmp	r7, r3
 800fc42:	fa0f fe81 	sxth.w	lr, r1
 800fc46:	dd23      	ble.n	800fc90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 800fc48:	9a05      	ldr	r2, [sp, #20]
 800fc4a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fc4e:	9d07      	ldr	r5, [sp, #28]
 800fc50:	ebaa 0202 	sub.w	r2, sl, r2
 800fc54:	b292      	uxth	r2, r2
 800fc56:	eba5 0a03 	sub.w	sl, r5, r3
 800fc5a:	b214      	sxth	r4, r2
 800fc5c:	eba9 0000 	sub.w	r0, r9, r0
 800fc60:	9b02      	ldr	r3, [sp, #8]
 800fc62:	fb0e f000 	mul.w	r0, lr, r0
 800fc66:	fb04 fa0a 	mul.w	sl, r4, sl
 800fc6a:	00db      	lsls	r3, r3, #3
 800fc6c:	4550      	cmp	r0, sl
 800fc6e:	445b      	add	r3, fp
 800fc70:	db03      	blt.n	800fc7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800fc72:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800fc76:	4494      	add	ip, r2
 800fc78:	e732      	b.n	800fae0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fc7a:	9a04      	ldr	r2, [sp, #16]
 800fc7c:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800fc80:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800fc84:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800fc88:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fc8c:	4431      	add	r1, r6
 800fc8e:	e75c      	b.n	800fb4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 800fc90:	9b08      	ldr	r3, [sp, #32]
 800fc92:	eba3 0308 	sub.w	r3, r3, r8
 800fc96:	b29b      	uxth	r3, r3
 800fc98:	2d06      	cmp	r5, #6
 800fc9a:	b218      	sxth	r0, r3
 800fc9c:	d813      	bhi.n	800fcc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 800fc9e:	9b07      	ldr	r3, [sp, #28]
 800fca0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800fca4:	1c6b      	adds	r3, r5, #1
 800fca6:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800fcaa:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fcae:	9b01      	ldr	r3, [sp, #4]
 800fcb0:	9901      	ldr	r1, [sp, #4]
 800fcb2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fcb6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800fcba:	805a      	strh	r2, [r3, #2]
 800fcbc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800fcbe:	809a      	strh	r2, [r3, #4]
 800fcc0:	f8a3 e006 	strh.w	lr, [r3, #6]
 800fcc4:	e75f      	b.n	800fb86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fcc6:	9c02      	ldr	r4, [sp, #8]
 800fcc8:	4570      	cmp	r0, lr
 800fcca:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800fcce:	db0d      	blt.n	800fcec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 800fcd0:	4431      	add	r1, r6
 800fcd2:	9b06      	ldr	r3, [sp, #24]
 800fcd4:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800fcd8:	b289      	uxth	r1, r1
 800fcda:	445c      	add	r4, fp
 800fcdc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fce0:	4419      	add	r1, r3
 800fce2:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800fce6:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800fcea:	e581      	b.n	800f7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fcec:	445c      	add	r4, fp
 800fcee:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800fcf2:	e79b      	b.n	800fc2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800fcf4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800fcf8:	1e65      	subs	r5, r4, #1
 800fcfa:	b2ad      	uxth	r5, r5
 800fcfc:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800fd00:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800fd04:	42b5      	cmp	r5, r6
 800fd06:	d044      	beq.n	800fd92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 800fd08:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800fd0c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800fd10:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800fd14:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800fd18:	4282      	cmp	r2, r0
 800fd1a:	d11f      	bne.n	800fd5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800fd1c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800fd20:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800fd24:	459c      	cmp	ip, r3
 800fd26:	d119      	bne.n	800fd5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800fd28:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800fd2c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800fd30:	19d8      	adds	r0, r3, r7
 800fd32:	b200      	sxth	r0, r0
 800fd34:	4288      	cmp	r0, r1
 800fd36:	d109      	bne.n	800fd4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800fd38:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800fd3c:	4413      	add	r3, r2
 800fd3e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800fd42:	4629      	mov	r1, r5
 800fd44:	9801      	ldr	r0, [sp, #4]
 800fd46:	f7ff fd23 	bl	800f790 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fd4a:	e003      	b.n	800fd54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd4c:	4411      	add	r1, r2
 800fd4e:	b209      	sxth	r1, r1
 800fd50:	42b9      	cmp	r1, r7
 800fd52:	d0f3      	beq.n	800fd3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800fd54:	3d01      	subs	r5, #1
 800fd56:	b2ad      	uxth	r5, r5
 800fd58:	3c08      	subs	r4, #8
 800fd5a:	e7d3      	b.n	800fd04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 800fd5c:	42b9      	cmp	r1, r7
 800fd5e:	d1f9      	bne.n	800fd54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd60:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800fd64:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fd68:	4299      	cmp	r1, r3
 800fd6a:	d1f3      	bne.n	800fd54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd6c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fd70:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800fd74:	181f      	adds	r7, r3, r0
 800fd76:	b23f      	sxth	r7, r7
 800fd78:	42ba      	cmp	r2, r7
 800fd7a:	d105      	bne.n	800fd88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 800fd7c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800fd80:	440b      	add	r3, r1
 800fd82:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fd86:	e7dc      	b.n	800fd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 800fd88:	440a      	add	r2, r1
 800fd8a:	b212      	sxth	r2, r2
 800fd8c:	4290      	cmp	r0, r2
 800fd8e:	d1e1      	bne.n	800fd54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd90:	e7f6      	b.n	800fd80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 800fd92:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800fd96:	2e07      	cmp	r6, #7
 800fd98:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800fd9c:	d812      	bhi.n	800fdc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 800fd9e:	1c75      	adds	r5, r6, #1
 800fda0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800fda4:	9d01      	ldr	r5, [sp, #4]
 800fda6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fdaa:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800fdae:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800fdb2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800fdb6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800fdba:	442c      	add	r4, r5
 800fdbc:	8061      	strh	r1, [r4, #2]
 800fdbe:	80a2      	strh	r2, [r4, #4]
 800fdc0:	80e3      	strh	r3, [r4, #6]
 800fdc2:	e57f      	b.n	800f8c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fdc4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800fdc8:	3e01      	subs	r6, #1
 800fdca:	445c      	add	r4, fp
 800fdcc:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800fdd0:	f04f 37ff 	mov.w	r7, #4294967295
 800fdd4:	2500      	movs	r5, #0
 800fdd6:	9305      	str	r3, [sp, #20]
 800fdd8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fddc:	9302      	str	r3, [sp, #8]
 800fdde:	1e72      	subs	r2, r6, #1
 800fde0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800fde4:	9304      	str	r3, [sp, #16]
 800fde6:	4691      	mov	r9, r2
 800fde8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800fdec:	f1b9 3fff 	cmp.w	r9, #4294967295
 800fdf0:	bf14      	ite	ne
 800fdf2:	9905      	ldrne	r1, [sp, #20]
 800fdf4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800fdf8:	6818      	ldr	r0, [r3, #0]
 800fdfa:	9207      	str	r2, [sp, #28]
 800fdfc:	bf18      	it	ne
 800fdfe:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800fe02:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800fe06:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800fe0a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800fe0e:	9306      	str	r3, [sp, #24]
 800fe10:	fb18 f801 	smulbb	r8, r8, r1
 800fe14:	6859      	ldr	r1, [r3, #4]
 800fe16:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fe1a:	4671      	mov	r1, lr
 800fe1c:	a80c      	add	r0, sp, #48	@ 0x30
 800fe1e:	f7ff fb65 	bl	800f4ec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fe22:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800fe26:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800fe2a:	9b04      	ldr	r3, [sp, #16]
 800fe2c:	9a02      	ldr	r2, [sp, #8]
 800fe2e:	fb10 f001 	smulbb	r0, r0, r1
 800fe32:	fb02 8803 	mla	r8, r2, r3, r8
 800fe36:	eba0 0108 	sub.w	r1, r0, r8
 800fe3a:	f04f 0c08 	mov.w	ip, #8
 800fe3e:	fb90 f0fc 	sdiv	r0, r0, ip
 800fe42:	4288      	cmp	r0, r1
 800fe44:	dc20      	bgt.n	800fe88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800fe46:	4551      	cmp	r1, sl
 800fe48:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fe4c:	da03      	bge.n	800fe56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 800fe4e:	b1d9      	cbz	r1, 800fe88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800fe50:	468a      	mov	sl, r1
 800fe52:	464f      	mov	r7, r9
 800fe54:	4635      	mov	r5, r6
 800fe56:	f109 39ff 	add.w	r9, r9, #4294967295
 800fe5a:	f119 0f02 	cmn.w	r9, #2
 800fe5e:	d1c5      	bne.n	800fdec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 800fe60:	4616      	mov	r6, r2
 800fe62:	3201      	adds	r2, #1
 800fe64:	f1a4 0408 	sub.w	r4, r4, #8
 800fe68:	d1b6      	bne.n	800fdd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 800fe6a:	9b01      	ldr	r3, [sp, #4]
 800fe6c:	b2ac      	uxth	r4, r5
 800fe6e:	00ed      	lsls	r5, r5, #3
 800fe70:	1958      	adds	r0, r3, r5
 800fe72:	1c7b      	adds	r3, r7, #1
 800fe74:	d10b      	bne.n	800fe8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 800fe76:	4601      	mov	r1, r0
 800fe78:	9803      	ldr	r0, [sp, #12]
 800fe7a:	f7ff fb37 	bl	800f4ec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fe7e:	4621      	mov	r1, r4
 800fe80:	9801      	ldr	r0, [sp, #4]
 800fe82:	f7ff fc85 	bl	800f790 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fe86:	e4b3      	b.n	800f7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe88:	464f      	mov	r7, r9
 800fe8a:	4635      	mov	r5, r6
 800fe8c:	e7ed      	b.n	800fe6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 800fe8e:	9b01      	ldr	r3, [sp, #4]
 800fe90:	00ff      	lsls	r7, r7, #3
 800fe92:	19d9      	adds	r1, r3, r7
 800fe94:	f7ff fb2a 	bl	800f4ec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fe98:	9b03      	ldr	r3, [sp, #12]
 800fe9a:	cb03      	ldmia	r3!, {r0, r1}
 800fe9c:	445f      	add	r7, fp
 800fe9e:	445d      	add	r5, fp
 800fea0:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800fea4:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800fea8:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800feac:	9b03      	ldr	r3, [sp, #12]
 800feae:	6869      	ldr	r1, [r5, #4]
 800feb0:	c303      	stmia	r3!, {r0, r1}
 800feb2:	e7e4      	b.n	800fe7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0800feb4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800feb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feb8:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800febc:	b0a1      	sub	sp, #132	@ 0x84
 800febe:	4604      	mov	r4, r0
 800fec0:	4630      	mov	r0, r6
 800fec2:	f7fa fa94 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800fec6:	4605      	mov	r5, r0
 800fec8:	b948      	cbnz	r0, 800fede <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800feca:	6823      	ldr	r3, [r4, #0]
 800fecc:	e896 0006 	ldmia.w	r6, {r1, r2}
 800fed0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fed2:	4620      	mov	r0, r4
 800fed4:	4798      	blx	r3
 800fed6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800feda:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800fede:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800fee2:	2b00      	cmp	r3, #0
 800fee4:	d149      	bne.n	800ff7a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 800fee6:	4bb1      	ldr	r3, [pc, #708]	@ (80101ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800fee8:	681b      	ldr	r3, [r3, #0]
 800feea:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 800feee:	1ebb      	subs	r3, r7, #2
 800fef0:	425f      	negs	r7, r3
 800fef2:	415f      	adcs	r7, r3
 800fef4:	4bae      	ldr	r3, [pc, #696]	@ (80101b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 800fef6:	681b      	ldr	r3, [r3, #0]
 800fef8:	2b00      	cmp	r3, #0
 800fefa:	d040      	beq.n	800ff7e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800fefc:	4dad      	ldr	r5, [pc, #692]	@ (80101b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 800fefe:	4628      	mov	r0, r5
 800ff00:	f7fa fa75 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff04:	4606      	mov	r6, r0
 800ff06:	2800      	cmp	r0, #0
 800ff08:	d139      	bne.n	800ff7e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800ff0a:	4628      	mov	r0, r5
 800ff0c:	f7ff f982 	bl	800f214 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ff10:	6823      	ldr	r3, [r4, #0]
 800ff12:	6829      	ldr	r1, [r5, #0]
 800ff14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ff16:	686a      	ldr	r2, [r5, #4]
 800ff18:	4620      	mov	r0, r4
 800ff1a:	4798      	blx	r3
 800ff1c:	802e      	strh	r6, [r5, #0]
 800ff1e:	806e      	strh	r6, [r5, #2]
 800ff20:	80ae      	strh	r6, [r5, #4]
 800ff22:	80ee      	strh	r6, [r5, #6]
 800ff24:	af0f      	add	r7, sp, #60	@ 0x3c
 800ff26:	4ea4      	ldr	r6, [pc, #656]	@ (80101b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 800ff28:	4638      	mov	r0, r7
 800ff2a:	f7ff fbd9 	bl	800f6e0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ff2e:	8835      	ldrh	r5, [r6, #0]
 800ff30:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 800ff34:	462b      	mov	r3, r5
 800ff36:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800ff3a:	4563      	cmp	r3, ip
 800ff3c:	d224      	bcs.n	800ff88 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800ff3e:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 800ff42:	2907      	cmp	r1, #7
 800ff44:	d816      	bhi.n	800ff74 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ff46:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800ff4a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800ff4e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800ff52:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 800ff56:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 800ff5a:	1c4a      	adds	r2, r1, #1
 800ff5c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 800ff60:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 800ff64:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 800ff68:	f8a2 a002 	strh.w	sl, [r2, #2]
 800ff6c:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ff70:	f8a2 e006 	strh.w	lr, [r2, #6]
 800ff74:	3301      	adds	r3, #1
 800ff76:	b29b      	uxth	r3, r3
 800ff78:	e7df      	b.n	800ff3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800ff7a:	2701      	movs	r7, #1
 800ff7c:	e7ba      	b.n	800fef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 800ff7e:	2f00      	cmp	r7, #0
 800ff80:	d1d0      	bne.n	800ff24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 800ff82:	b021      	add	sp, #132	@ 0x84
 800ff84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff88:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800ff8c:	42ab      	cmp	r3, r5
 800ff8e:	d90c      	bls.n	800ffaa <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 800ff90:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800ff94:	6822      	ldr	r2, [r4, #0]
 800ff96:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800ff9a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800ff9c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800ffa0:	4620      	mov	r0, r4
 800ffa2:	3501      	adds	r5, #1
 800ffa4:	47b8      	blx	r7
 800ffa6:	b2ad      	uxth	r5, r5
 800ffa8:	e7ee      	b.n	800ff88 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800ffaa:	4d80      	ldr	r5, [pc, #512]	@ (80101ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800ffac:	6828      	ldr	r0, [r5, #0]
 800ffae:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ffb2:	2b01      	cmp	r3, #1
 800ffb4:	f040 813b 	bne.w	801022e <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 800ffb8:	4a80      	ldr	r2, [pc, #512]	@ (80101bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 800ffba:	8833      	ldrh	r3, [r6, #0]
 800ffbc:	7812      	ldrb	r2, [r2, #0]
 800ffbe:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 800ffc2:	2a01      	cmp	r2, #1
 800ffc4:	d014      	beq.n	800fff0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800ffc6:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 800ffca:	32ae      	adds	r2, #174	@ 0xae
 800ffcc:	f04f 0900 	mov.w	r9, #0
 800ffd0:	4283      	cmp	r3, r0
 800ffd2:	f102 0208 	add.w	r2, r2, #8
 800ffd6:	f280 8082 	bge.w	80100de <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800ffda:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 800ffde:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 800ffe2:	4439      	add	r1, r7
 800ffe4:	b209      	sxth	r1, r1
 800ffe6:	4589      	cmp	r9, r1
 800ffe8:	bfb8      	it	lt
 800ffea:	4689      	movlt	r9, r1
 800ffec:	3301      	adds	r3, #1
 800ffee:	e7ef      	b.n	800ffd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 800fff0:	4f73      	ldr	r7, [pc, #460]	@ (80101c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 800fff2:	883a      	ldrh	r2, [r7, #0]
 800fff4:	4693      	mov	fp, r2
 800fff6:	4283      	cmp	r3, r0
 800fff8:	da08      	bge.n	801000c <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 800fffa:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 800fffe:	3301      	adds	r3, #1
 8010000:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 8010004:	458b      	cmp	fp, r1
 8010006:	bfa8      	it	ge
 8010008:	468b      	movge	fp, r1
 801000a:	e7f4      	b.n	800fff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 801000c:	2300      	movs	r3, #0
 801000e:	2a0f      	cmp	r2, #15
 8010010:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 80101c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 8010014:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010018:	bf8c      	ite	hi
 801001a:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 801001e:	f04f 0801 	movls.w	r8, #1
 8010022:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010026:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801002a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801002e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8010032:	6828      	ldr	r0, [r5, #0]
 8010034:	455b      	cmp	r3, fp
 8010036:	f340 80c7 	ble.w	80101c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801003a:	6803      	ldr	r3, [r0, #0]
 801003c:	f8b7 a000 	ldrh.w	sl, [r7]
 8010040:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010044:	4798      	blx	r3
 8010046:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801004a:	682b      	ldr	r3, [r5, #0]
 801004c:	ebaa 0000 	sub.w	r0, sl, r0
 8010050:	b280      	uxth	r0, r0
 8010052:	ebac 0e08 	sub.w	lr, ip, r8
 8010056:	4570      	cmp	r0, lr
 8010058:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 801005c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8010060:	dd05      	ble.n	801006e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010062:	4558      	cmp	r0, fp
 8010064:	dd03      	ble.n	801006e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010066:	b901      	cbnz	r1, 801006a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010068:	b392      	cbz	r2, 80100d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 801006a:	4658      	mov	r0, fp
 801006c:	e006      	b.n	801007c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801006e:	2900      	cmp	r1, #0
 8010070:	d1fb      	bne.n	801006a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010072:	2a00      	cmp	r2, #0
 8010074:	d1f9      	bne.n	801006a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010076:	4558      	cmp	r0, fp
 8010078:	bfb8      	it	lt
 801007a:	4658      	movlt	r0, fp
 801007c:	f9b9 3000 	ldrsh.w	r3, [r9]
 8010080:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8010084:	2200      	movs	r2, #0
 8010086:	ebac 0000 	sub.w	r0, ip, r0
 801008a:	f8b6 a000 	ldrh.w	sl, [r6]
 801008e:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010092:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8010096:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801009a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801009e:	4553      	cmp	r3, sl
 80100a0:	ddc5      	ble.n	801002e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80100a2:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80100a6:	ab0d      	add	r3, sp, #52	@ 0x34
 80100a8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80100ac:	6851      	ldr	r1, [r2, #4]
 80100ae:	c303      	stmia	r3!, {r0, r1}
 80100b0:	a80d      	add	r0, sp, #52	@ 0x34
 80100b2:	a90b      	add	r1, sp, #44	@ 0x2c
 80100b4:	f7fa f958 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 80100b8:	a80d      	add	r0, sp, #52	@ 0x34
 80100ba:	f7fa f998 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 80100be:	b920      	cbnz	r0, 80100ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 80100c0:	6823      	ldr	r3, [r4, #0]
 80100c2:	a90d      	add	r1, sp, #52	@ 0x34
 80100c4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80100c6:	4620      	mov	r0, r4
 80100c8:	4798      	blx	r3
 80100ca:	f10a 0a01 	add.w	sl, sl, #1
 80100ce:	e7e4      	b.n	801009a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 80100d0:	681a      	ldr	r2, [r3, #0]
 80100d2:	2101      	movs	r1, #1
 80100d4:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 80100d8:	4618      	mov	r0, r3
 80100da:	4790      	blx	r2
 80100dc:	e7a7      	b.n	801002e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80100de:	4b39      	ldr	r3, [pc, #228]	@ (80101c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 80100e0:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 80101c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 80100e4:	881f      	ldrh	r7, [r3, #0]
 80100e6:	2300      	movs	r3, #0
 80100e8:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 80100ec:	2f0f      	cmp	r7, #15
 80100ee:	bf8c      	ite	hi
 80100f0:	08ff      	lsrhi	r7, r7, #3
 80100f2:	2701      	movls	r7, #1
 80100f4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80100f8:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 80100fc:	6828      	ldr	r0, [r5, #0]
 80100fe:	4413      	add	r3, r2
 8010100:	b21b      	sxth	r3, r3
 8010102:	454b      	cmp	r3, r9
 8010104:	da60      	bge.n	80101c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8010106:	6803      	ldr	r3, [r0, #0]
 8010108:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801010c:	4798      	blx	r3
 801010e:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 8010112:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010116:	682a      	ldr	r2, [r5, #0]
 8010118:	4473      	add	r3, lr
 801011a:	b21b      	sxth	r3, r3
 801011c:	eb03 0e07 	add.w	lr, r3, r7
 8010120:	4570      	cmp	r0, lr
 8010122:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8010126:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 801012a:	da0d      	bge.n	8010148 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801012c:	4548      	cmp	r0, r9
 801012e:	da0b      	bge.n	8010148 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8010130:	f1bc 0f00 	cmp.w	ip, #0
 8010134:	d138      	bne.n	80101a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010136:	2900      	cmp	r1, #0
 8010138:	d136      	bne.n	80101a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801013a:	6813      	ldr	r3, [r2, #0]
 801013c:	2101      	movs	r1, #1
 801013e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8010142:	4610      	mov	r0, r2
 8010144:	4798      	blx	r3
 8010146:	e7d5      	b.n	80100f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010148:	f1bc 0f00 	cmp.w	ip, #0
 801014c:	d12c      	bne.n	80101a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801014e:	bb59      	cbnz	r1, 80101a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010150:	4548      	cmp	r0, r9
 8010152:	bfa8      	it	ge
 8010154:	4648      	movge	r0, r9
 8010156:	f9b8 2000 	ldrsh.w	r2, [r8]
 801015a:	f8b6 a000 	ldrh.w	sl, [r6]
 801015e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010162:	2100      	movs	r1, #0
 8010164:	1ac0      	subs	r0, r0, r3
 8010166:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801016a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801016e:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8010172:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010176:	4553      	cmp	r3, sl
 8010178:	ddbc      	ble.n	80100f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801017a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801017e:	ab0d      	add	r3, sp, #52	@ 0x34
 8010180:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010184:	6851      	ldr	r1, [r2, #4]
 8010186:	c303      	stmia	r3!, {r0, r1}
 8010188:	a80d      	add	r0, sp, #52	@ 0x34
 801018a:	a90b      	add	r1, sp, #44	@ 0x2c
 801018c:	f7fa f8ec 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 8010190:	a80d      	add	r0, sp, #52	@ 0x34
 8010192:	f7fa f92c 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 8010196:	b920      	cbnz	r0, 80101a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8010198:	6823      	ldr	r3, [r4, #0]
 801019a:	a90d      	add	r1, sp, #52	@ 0x34
 801019c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801019e:	4620      	mov	r0, r4
 80101a0:	4798      	blx	r3
 80101a2:	f10a 0a01 	add.w	sl, sl, #1
 80101a6:	e7e4      	b.n	8010172 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 80101a8:	4648      	mov	r0, r9
 80101aa:	e7d4      	b.n	8010156 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 80101ac:	20013ff8 	.word	0x20013ff8
 80101b0:	20014038 	.word	0x20014038
 80101b4:	20014044 	.word	0x20014044
 80101b8:	200001a0 	.word	0x200001a0
 80101bc:	20013fee 	.word	0x20013fee
 80101c0:	20013fea 	.word	0x20013fea
 80101c4:	20013fec 	.word	0x20013fec
 80101c8:	6828      	ldr	r0, [r5, #0]
 80101ca:	6803      	ldr	r3, [r0, #0]
 80101cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80101ce:	4798      	blx	r3
 80101d0:	4ba5      	ldr	r3, [pc, #660]	@ (8010468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 80101d2:	781b      	ldrb	r3, [r3, #0]
 80101d4:	2b00      	cmp	r3, #0
 80101d6:	f43f aed4 	beq.w	800ff82 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 80101da:	2300      	movs	r3, #0
 80101dc:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80101e0:	4ba2      	ldr	r3, [pc, #648]	@ (801046c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 80101e2:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 80101e6:	881b      	ldrh	r3, [r3, #0]
 80101e8:	a80f      	add	r0, sp, #60	@ 0x3c
 80101ea:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 80101ee:	42b3      	cmp	r3, r6
 80101f0:	f4bf aec7 	bcs.w	800ff82 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 80101f4:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 80101f8:	2907      	cmp	r1, #7
 80101fa:	d815      	bhi.n	8010228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 80101fc:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010200:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8010204:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8010208:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801020c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8010210:	1c4a      	adds	r2, r1, #1
 8010212:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8010216:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 801021a:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 801021e:	f8a2 e002 	strh.w	lr, [r2, #2]
 8010222:	f8a2 c004 	strh.w	ip, [r2, #4]
 8010226:	80d7      	strh	r7, [r2, #6]
 8010228:	3301      	adds	r3, #1
 801022a:	b29b      	uxth	r3, r3
 801022c:	e7df      	b.n	80101ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801022e:	2b02      	cmp	r3, #2
 8010230:	f040 80d1 	bne.w	80103d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8010234:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010238:	9308      	str	r3, [sp, #32]
 801023a:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 801023e:	9307      	str	r3, [sp, #28]
 8010240:	6803      	ldr	r3, [r0, #0]
 8010242:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8010246:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801024a:	4798      	blx	r3
 801024c:	4b88      	ldr	r3, [pc, #544]	@ (8010470 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 801024e:	881b      	ldrh	r3, [r3, #0]
 8010250:	9302      	str	r3, [sp, #8]
 8010252:	4b88      	ldr	r3, [pc, #544]	@ (8010474 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8010254:	881e      	ldrh	r6, [r3, #0]
 8010256:	4b88      	ldr	r3, [pc, #544]	@ (8010478 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010258:	781b      	ldrb	r3, [r3, #0]
 801025a:	f10b 37ff 	add.w	r7, fp, #4294967295
 801025e:	2b01      	cmp	r3, #1
 8010260:	bf1c      	itt	ne
 8010262:	9b02      	ldrne	r3, [sp, #8]
 8010264:	9602      	strne	r6, [sp, #8]
 8010266:	b2bf      	uxth	r7, r7
 8010268:	fa0f f887 	sxth.w	r8, r7
 801026c:	4682      	mov	sl, r0
 801026e:	f04f 0000 	mov.w	r0, #0
 8010272:	bf18      	it	ne
 8010274:	461e      	movne	r6, r3
 8010276:	f7f0 faef 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801027a:	fb96 fbfb 	sdiv	fp, r6, fp
 801027e:	fb0b f808 	mul.w	r8, fp, r8
 8010282:	45c2      	cmp	sl, r8
 8010284:	da0c      	bge.n	80102a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8010286:	6828      	ldr	r0, [r5, #0]
 8010288:	6803      	ldr	r3, [r0, #0]
 801028a:	210a      	movs	r1, #10
 801028c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010290:	4798      	blx	r3
 8010292:	6828      	ldr	r0, [r5, #0]
 8010294:	6803      	ldr	r3, [r0, #0]
 8010296:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801029a:	4798      	blx	r3
 801029c:	4682      	mov	sl, r0
 801029e:	e7f0      	b.n	8010282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 80102a0:	2000      	movs	r0, #0
 80102a2:	f7f0 fb03 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80102a6:	fa1f f38b 	uxth.w	r3, fp
 80102aa:	fb17 f703 	smulbb	r7, r7, r3
 80102ae:	9304      	str	r3, [sp, #16]
 80102b0:	b2bb      	uxth	r3, r7
 80102b2:	9305      	str	r3, [sp, #20]
 80102b4:	f04f 0800 	mov.w	r8, #0
 80102b8:	0973      	lsrs	r3, r6, #5
 80102ba:	4f70      	ldr	r7, [pc, #448]	@ (801047c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 80102bc:	9306      	str	r3, [sp, #24]
 80102be:	4645      	mov	r5, r8
 80102c0:	42b5      	cmp	r5, r6
 80102c2:	d085      	beq.n	80101d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80102c4:	6838      	ldr	r0, [r7, #0]
 80102c6:	6803      	ldr	r3, [r0, #0]
 80102c8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80102cc:	4798      	blx	r3
 80102ce:	4582      	cmp	sl, r0
 80102d0:	4681      	mov	r9, r0
 80102d2:	d907      	bls.n	80102e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 80102d4:	f1b8 0f00 	cmp.w	r8, #0
 80102d8:	d007      	beq.n	80102ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 80102da:	6838      	ldr	r0, [r7, #0]
 80102dc:	6803      	ldr	r3, [r0, #0]
 80102de:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 80102e2:	e774      	b.n	80101ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 80102e4:	f1b8 0f00 	cmp.w	r8, #0
 80102e8:	d003      	beq.n	80102f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 80102ea:	454d      	cmp	r5, r9
 80102ec:	d3f5      	bcc.n	80102da <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 80102ee:	f04f 0801 	mov.w	r8, #1
 80102f2:	9a04      	ldr	r2, [sp, #16]
 80102f4:	fb95 f3fb 	sdiv	r3, r5, fp
 80102f8:	9303      	str	r3, [sp, #12]
 80102fa:	3301      	adds	r3, #1
 80102fc:	fb13 f302 	smulbb	r3, r3, r2
 8010300:	b299      	uxth	r1, r3
 8010302:	f1b8 0f00 	cmp.w	r8, #0
 8010306:	d04e      	beq.n	80103a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8010308:	eb09 030b 	add.w	r3, r9, fp
 801030c:	42b3      	cmp	r3, r6
 801030e:	bfa8      	it	ge
 8010310:	4633      	movge	r3, r6
 8010312:	9807      	ldr	r0, [sp, #28]
 8010314:	b29b      	uxth	r3, r3
 8010316:	428b      	cmp	r3, r1
 8010318:	bf94      	ite	ls
 801031a:	ebc5 0203 	rsbls	r2, r5, r3
 801031e:	ebc5 0201 	rsbhi	r2, r5, r1
 8010322:	4282      	cmp	r2, r0
 8010324:	bfa8      	it	ge
 8010326:	4602      	movge	r2, r0
 8010328:	9808      	ldr	r0, [sp, #32]
 801032a:	fa1f fa82 	uxth.w	sl, r2
 801032e:	4582      	cmp	sl, r0
 8010330:	d205      	bcs.n	801033e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010332:	fa15 f082 	uxtah	r0, r5, r2
 8010336:	4286      	cmp	r6, r0
 8010338:	d001      	beq.n	801033e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801033a:	4299      	cmp	r1, r3
 801033c:	d240      	bcs.n	80103c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 801033e:	2001      	movs	r0, #1
 8010340:	9209      	str	r2, [sp, #36]	@ 0x24
 8010342:	f7f0 fa89 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010346:	6838      	ldr	r0, [r7, #0]
 8010348:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 801034c:	6803      	ldr	r3, [r0, #0]
 801034e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010352:	4798      	blx	r3
 8010354:	4b48      	ldr	r3, [pc, #288]	@ (8010478 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010356:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010358:	781b      	ldrb	r3, [r3, #0]
 801035a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801035e:	2b01      	cmp	r3, #1
 8010360:	b212      	sxth	r2, r2
 8010362:	f04f 0000 	mov.w	r0, #0
 8010366:	d122      	bne.n	80103ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8010368:	1b73      	subs	r3, r6, r5
 801036a:	eba3 030a 	sub.w	r3, r3, sl
 801036e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8010372:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8010376:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801037a:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 801037e:	6823      	ldr	r3, [r4, #0]
 8010380:	a90d      	add	r1, sp, #52	@ 0x34
 8010382:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010384:	4620      	mov	r0, r4
 8010386:	4798      	blx	r3
 8010388:	6838      	ldr	r0, [r7, #0]
 801038a:	9b03      	ldr	r3, [sp, #12]
 801038c:	4259      	negs	r1, r3
 801038e:	6803      	ldr	r3, [r0, #0]
 8010390:	b209      	sxth	r1, r1
 8010392:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010396:	4798      	blx	r3
 8010398:	4455      	add	r5, sl
 801039a:	2001      	movs	r0, #1
 801039c:	b2ad      	uxth	r5, r5
 801039e:	f7f0 fa85 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80103a2:	46ca      	mov	sl, r9
 80103a4:	e78c      	b.n	80102c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 80103a6:	9b05      	ldr	r3, [sp, #20]
 80103a8:	eba9 0303 	sub.w	r3, r9, r3
 80103ac:	e7b1      	b.n	8010312 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80103ae:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 80103b2:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 80103b6:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 80103ba:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 80103be:	e7de      	b.n	801037e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 80103c0:	6838      	ldr	r0, [r7, #0]
 80103c2:	6803      	ldr	r3, [r0, #0]
 80103c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80103c6:	4798      	blx	r3
 80103c8:	6838      	ldr	r0, [r7, #0]
 80103ca:	9906      	ldr	r1, [sp, #24]
 80103cc:	6803      	ldr	r3, [r0, #0]
 80103ce:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80103d2:	4798      	blx	r3
 80103d4:	e7e5      	b.n	80103a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 80103d6:	2b03      	cmp	r3, #3
 80103d8:	f040 8130 	bne.w	801063c <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 80103dc:	4b26      	ldr	r3, [pc, #152]	@ (8010478 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80103de:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 80103e2:	781b      	ldrb	r3, [r3, #0]
 80103e4:	2b01      	cmp	r3, #1
 80103e6:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 80103ea:	f000 8093 	beq.w	8010514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80103ee:	8832      	ldrh	r2, [r6, #0]
 80103f0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 80103f4:	3201      	adds	r2, #1
 80103f6:	b292      	uxth	r2, r2
 80103f8:	2900      	cmp	r1, #0
 80103fa:	f43f aee9 	beq.w	80101d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80103fe:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8010402:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8010406:	441d      	add	r5, r3
 8010408:	b22d      	sxth	r5, r5
 801040a:	4694      	mov	ip, r2
 801040c:	f04f 0800 	mov.w	r8, #0
 8010410:	fa1f f38c 	uxth.w	r3, ip
 8010414:	4299      	cmp	r1, r3
 8010416:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801041a:	f240 80ba 	bls.w	8010592 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 801041e:	4427      	add	r7, r4
 8010420:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010424:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8010428:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 801042c:	4283      	cmp	r3, r0
 801042e:	f340 809c 	ble.w	801056a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8010432:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 8010436:	4405      	add	r5, r0
 8010438:	b22d      	sxth	r5, r5
 801043a:	429d      	cmp	r5, r3
 801043c:	bfa8      	it	ge
 801043e:	461d      	movge	r5, r3
 8010440:	46e0      	mov	r8, ip
 8010442:	f10c 0c01 	add.w	ip, ip, #1
 8010446:	e7e3      	b.n	8010410 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8010448:	d10a      	bne.n	8010460 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801044a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 801044e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8010452:	4562      	cmp	r2, ip
 8010454:	bfb8      	it	lt
 8010456:	4662      	movlt	r2, ip
 8010458:	4288      	cmp	r0, r1
 801045a:	bfb8      	it	lt
 801045c:	4698      	movlt	r8, r3
 801045e:	e082      	b.n	8010566 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010460:	428a      	cmp	r2, r1
 8010462:	bfb8      	it	lt
 8010464:	460a      	movlt	r2, r1
 8010466:	e07e      	b.n	8010566 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010468:	20013ff4 	.word	0x20013ff4
 801046c:	200001a0 	.word	0x200001a0
 8010470:	20013fec 	.word	0x20013fec
 8010474:	20013fea 	.word	0x20013fea
 8010478:	20013fee 	.word	0x20013fee
 801047c:	20013ff8 	.word	0x20013ff8
 8010480:	19e1      	adds	r1, r4, r7
 8010482:	ab0d      	add	r3, sp, #52	@ 0x34
 8010484:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8010488:	6849      	ldr	r1, [r1, #4]
 801048a:	c303      	stmia	r3!, {r0, r1}
 801048c:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8010490:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010494:	454b      	cmp	r3, r9
 8010496:	bfb8      	it	lt
 8010498:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 801049c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80104a0:	440b      	add	r3, r1
 80104a2:	1a9b      	subs	r3, r3, r2
 80104a4:	a80d      	add	r0, sp, #52	@ 0x34
 80104a6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80104aa:	f7fe fecd 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80104ae:	a80d      	add	r0, sp, #52	@ 0x34
 80104b0:	f7f9 ff9d 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 80104b4:	bb70      	cbnz	r0, 8010514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80104b6:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 80104ba:	6828      	ldr	r0, [r5, #0]
 80104bc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80104c0:	f8d0 e000 	ldr.w	lr, [r0]
 80104c4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80104c8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80104cc:	45cc      	cmp	ip, r9
 80104ce:	bfd4      	ite	le
 80104d0:	fa1f fc8c 	uxthle.w	ip, ip
 80104d4:	fa1f fc89 	uxthgt.w	ip, r9
 80104d8:	f8cd c000 	str.w	ip, [sp]
 80104dc:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 80104e0:	47d8      	blx	fp
 80104e2:	4683      	mov	fp, r0
 80104e4:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80104e8:	a80d      	add	r0, sp, #52	@ 0x34
 80104ea:	f7fe fe93 	bl	800f214 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80104ee:	6823      	ldr	r3, [r4, #0]
 80104f0:	4427      	add	r7, r4
 80104f2:	4620      	mov	r0, r4
 80104f4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80104f6:	a90d      	add	r1, sp, #52	@ 0x34
 80104f8:	4798      	blx	r3
 80104fa:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 80104fe:	eba0 000b 	sub.w	r0, r0, fp
 8010502:	b200      	sxth	r0, r0
 8010504:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8010508:	b920      	cbnz	r0, 8010514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801050a:	fa1f f188 	uxth.w	r1, r8
 801050e:	4650      	mov	r0, sl
 8010510:	f7ff f93e 	bl	800f790 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010514:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8010518:	f1bb 0f00 	cmp.w	fp, #0
 801051c:	f43f ae58 	beq.w	80101d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010520:	8833      	ldrh	r3, [r6, #0]
 8010522:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8010526:	3301      	adds	r3, #1
 8010528:	b29b      	uxth	r3, r3
 801052a:	f04f 0800 	mov.w	r8, #0
 801052e:	b299      	uxth	r1, r3
 8010530:	458b      	cmp	fp, r1
 8010532:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010536:	d9a3      	bls.n	8010480 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8010538:	4427      	add	r7, r4
 801053a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801053e:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8010542:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8010546:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801054a:	4408      	add	r0, r1
 801054c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8010550:	4461      	add	r1, ip
 8010552:	b200      	sxth	r0, r0
 8010554:	b209      	sxth	r1, r1
 8010556:	4288      	cmp	r0, r1
 8010558:	f6bf af76 	bge.w	8010448 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 801055c:	4584      	cmp	ip, r0
 801055e:	4662      	mov	r2, ip
 8010560:	4698      	mov	r8, r3
 8010562:	bfb8      	it	lt
 8010564:	4602      	movlt	r2, r0
 8010566:	3301      	adds	r3, #1
 8010568:	e7e1      	b.n	801052e <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 801056a:	d10e      	bne.n	801058a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 801056c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010570:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010574:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010578:	4473      	add	r3, lr
 801057a:	b21b      	sxth	r3, r3
 801057c:	429d      	cmp	r5, r3
 801057e:	bfa8      	it	ge
 8010580:	461d      	movge	r5, r3
 8010582:	4287      	cmp	r7, r0
 8010584:	bfb8      	it	lt
 8010586:	46e0      	movlt	r8, ip
 8010588:	e75b      	b.n	8010442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801058a:	4285      	cmp	r5, r0
 801058c:	bfa8      	it	ge
 801058e:	4605      	movge	r5, r0
 8010590:	e757      	b.n	8010442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010592:	eb0a 0007 	add.w	r0, sl, r7
 8010596:	4427      	add	r7, r4
 8010598:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801059c:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80105a0:	45cb      	cmp	fp, r9
 80105a2:	bfbe      	ittt	lt
 80105a4:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 80105a8:	445d      	addlt	r5, fp
 80105aa:	b22d      	sxthlt	r5, r5
 80105ac:	f7f9 ff1f 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 80105b0:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80105b4:	2800      	cmp	r0, #0
 80105b6:	f47f af1f 	bne.w	80103f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 80105ba:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80105be:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80105c2:	482b      	ldr	r0, [pc, #172]	@ (8010670 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 80105c4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80105c8:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80105cc:	6800      	ldr	r0, [r0, #0]
 80105ce:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 80105d2:	1aad      	subs	r5, r5, r2
 80105d4:	454d      	cmp	r5, r9
 80105d6:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 80105da:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80105de:	bfa8      	it	ge
 80105e0:	464d      	movge	r5, r9
 80105e2:	f8d0 c000 	ldr.w	ip, [r0]
 80105e6:	b2ad      	uxth	r5, r5
 80105e8:	fa1f fb8b 	uxth.w	fp, fp
 80105ec:	455d      	cmp	r5, fp
 80105ee:	bf94      	ite	ls
 80105f0:	9500      	strls	r5, [sp, #0]
 80105f2:	f8cd b000 	strhi.w	fp, [sp]
 80105f6:	b292      	uxth	r2, r2
 80105f8:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 80105fc:	b29b      	uxth	r3, r3
 80105fe:	b289      	uxth	r1, r1
 8010600:	47a8      	blx	r5
 8010602:	6823      	ldr	r3, [r4, #0]
 8010604:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010608:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801060a:	a90d      	add	r1, sp, #52	@ 0x34
 801060c:	4620      	mov	r0, r4
 801060e:	4798      	blx	r3
 8010610:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8010614:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8010618:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801061c:	1a5b      	subs	r3, r3, r1
 801061e:	440a      	add	r2, r1
 8010620:	b21b      	sxth	r3, r3
 8010622:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8010626:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801062a:	2b00      	cmp	r3, #0
 801062c:	f47f aedf 	bne.w	80103ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8010630:	fa1f f188 	uxth.w	r1, r8
 8010634:	4650      	mov	r0, sl
 8010636:	f7ff f8ab 	bl	800f790 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801063a:	e6d8      	b.n	80103ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801063c:	8835      	ldrh	r5, [r6, #0]
 801063e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010642:	42ab      	cmp	r3, r5
 8010644:	f67f adc4 	bls.w	80101d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010648:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801064c:	ab0d      	add	r3, sp, #52	@ 0x34
 801064e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010652:	6851      	ldr	r1, [r2, #4]
 8010654:	c303      	stmia	r3!, {r0, r1}
 8010656:	a80d      	add	r0, sp, #52	@ 0x34
 8010658:	f7f9 fec9 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 801065c:	b920      	cbnz	r0, 8010668 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 801065e:	6823      	ldr	r3, [r4, #0]
 8010660:	a90d      	add	r1, sp, #52	@ 0x34
 8010662:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010664:	4620      	mov	r0, r4
 8010666:	4798      	blx	r3
 8010668:	3501      	adds	r5, #1
 801066a:	b2ad      	uxth	r5, r5
 801066c:	e7e7      	b.n	801063e <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 801066e:	bf00      	nop
 8010670:	20013ff8 	.word	0x20013ff8

08010674 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010674:	4b03      	ldr	r3, [pc, #12]	@ (8010684 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010676:	2200      	movs	r2, #0
 8010678:	801a      	strh	r2, [r3, #0]
 801067a:	805a      	strh	r2, [r3, #2]
 801067c:	809a      	strh	r2, [r3, #4]
 801067e:	80da      	strh	r2, [r3, #6]
 8010680:	4770      	bx	lr
 8010682:	bf00      	nop
 8010684:	20014044 	.word	0x20014044

08010688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801068c:	4606      	mov	r6, r0
 801068e:	b09d      	sub	sp, #116	@ 0x74
 8010690:	a803      	add	r0, sp, #12
 8010692:	4614      	mov	r4, r2
 8010694:	468a      	mov	sl, r1
 8010696:	461d      	mov	r5, r3
 8010698:	f001 f9b0 	bl	80119fc <_ZN8touchgfx12TextProviderC1Ev>
 801069c:	6833      	ldr	r3, [r6, #0]
 801069e:	4630      	mov	r0, r6
 80106a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80106a2:	4798      	blx	r3
 80106a4:	6833      	ldr	r3, [r6, #0]
 80106a6:	4607      	mov	r7, r0
 80106a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80106aa:	4630      	mov	r0, r6
 80106ac:	4798      	blx	r3
 80106ae:	462a      	mov	r2, r5
 80106b0:	9000      	str	r0, [sp, #0]
 80106b2:	4621      	mov	r1, r4
 80106b4:	463b      	mov	r3, r7
 80106b6:	a803      	add	r0, sp, #12
 80106b8:	f001 f9f3 	bl	8011aa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80106bc:	2500      	movs	r5, #0
 80106be:	462c      	mov	r4, r5
 80106c0:	46a9      	mov	r9, r5
 80106c2:	46a8      	mov	r8, r5
 80106c4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80106c8:	2300      	movs	r3, #0
 80106ca:	9302      	str	r3, [sp, #8]
 80106cc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80106d0:	429c      	cmp	r4, r3
 80106d2:	d002      	beq.n	80106da <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80106d4:	455c      	cmp	r4, fp
 80106d6:	bf18      	it	ne
 80106d8:	4625      	movne	r5, r4
 80106da:	ab02      	add	r3, sp, #8
 80106dc:	4632      	mov	r2, r6
 80106de:	4651      	mov	r1, sl
 80106e0:	a803      	add	r0, sp, #12
 80106e2:	f001 fcf9 	bl	80120d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80106e6:	4604      	mov	r4, r0
 80106e8:	b108      	cbz	r0, 80106ee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80106ea:	280a      	cmp	r0, #10
 80106ec:	d10a      	bne.n	8010704 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80106ee:	45c1      	cmp	r9, r8
 80106f0:	bf38      	it	cc
 80106f2:	46c1      	movcc	r9, r8
 80106f4:	f04f 0800 	mov.w	r8, #0
 80106f8:	2c00      	cmp	r4, #0
 80106fa:	d1e5      	bne.n	80106c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80106fc:	4648      	mov	r0, r9
 80106fe:	b01d      	add	sp, #116	@ 0x74
 8010700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010704:	9a02      	ldr	r2, [sp, #8]
 8010706:	2a00      	cmp	r2, #0
 8010708:	d0de      	beq.n	80106c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801070a:	7b57      	ldrb	r7, [r2, #13]
 801070c:	6833      	ldr	r3, [r6, #0]
 801070e:	8894      	ldrh	r4, [r2, #4]
 8010710:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010712:	007f      	lsls	r7, r7, #1
 8010714:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010718:	7a97      	ldrb	r7, [r2, #10]
 801071a:	4629      	mov	r1, r5
 801071c:	4307      	orrs	r7, r0
 801071e:	4630      	mov	r0, r6
 8010720:	4798      	blx	r3
 8010722:	4438      	add	r0, r7
 8010724:	4480      	add	r8, r0
 8010726:	fa1f f888 	uxth.w	r8, r8
 801072a:	e7e5      	b.n	80106f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801072c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801072c:	b508      	push	{r3, lr}
 801072e:	6803      	ldr	r3, [r0, #0]
 8010730:	68db      	ldr	r3, [r3, #12]
 8010732:	4798      	blx	r3
 8010734:	b128      	cbz	r0, 8010742 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010736:	7b43      	ldrb	r3, [r0, #13]
 8010738:	7a80      	ldrb	r0, [r0, #10]
 801073a:	005b      	lsls	r3, r3, #1
 801073c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010740:	4318      	orrs	r0, r3
 8010742:	bd08      	pop	{r3, pc}

08010744 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010744:	b40e      	push	{r1, r2, r3}
 8010746:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010748:	b09e      	sub	sp, #120	@ 0x78
 801074a:	ab23      	add	r3, sp, #140	@ 0x8c
 801074c:	4605      	mov	r5, r0
 801074e:	f853 4b04 	ldr.w	r4, [r3], #4
 8010752:	9303      	str	r3, [sp, #12]
 8010754:	a805      	add	r0, sp, #20
 8010756:	f001 f951 	bl	80119fc <_ZN8touchgfx12TextProviderC1Ev>
 801075a:	682b      	ldr	r3, [r5, #0]
 801075c:	4628      	mov	r0, r5
 801075e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010760:	4798      	blx	r3
 8010762:	682b      	ldr	r3, [r5, #0]
 8010764:	4606      	mov	r6, r0
 8010766:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010768:	4628      	mov	r0, r5
 801076a:	4798      	blx	r3
 801076c:	4633      	mov	r3, r6
 801076e:	ae1e      	add	r6, sp, #120	@ 0x78
 8010770:	4621      	mov	r1, r4
 8010772:	9000      	str	r0, [sp, #0]
 8010774:	9a03      	ldr	r2, [sp, #12]
 8010776:	2400      	movs	r4, #0
 8010778:	a805      	add	r0, sp, #20
 801077a:	f001 f992 	bl	8011aa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801077e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010782:	462a      	mov	r2, r5
 8010784:	4633      	mov	r3, r6
 8010786:	4621      	mov	r1, r4
 8010788:	a805      	add	r0, sp, #20
 801078a:	f001 fca5 	bl	80120d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801078e:	b1f0      	cbz	r0, 80107ce <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8010790:	280a      	cmp	r0, #10
 8010792:	d018      	beq.n	80107c6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010794:	9f04      	ldr	r7, [sp, #16]
 8010796:	b1b7      	cbz	r7, 80107c6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010798:	7b78      	ldrb	r0, [r7, #13]
 801079a:	7a3b      	ldrb	r3, [r7, #8]
 801079c:	88ea      	ldrh	r2, [r5, #6]
 801079e:	00c1      	lsls	r1, r0, #3
 80107a0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80107a4:	4319      	orrs	r1, r3
 80107a6:	0643      	lsls	r3, r0, #25
 80107a8:	bf44      	itt	mi
 80107aa:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80107ae:	b219      	sxthmi	r1, r3
 80107b0:	0100      	lsls	r0, r0, #4
 80107b2:	79fb      	ldrb	r3, [r7, #7]
 80107b4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80107b8:	4303      	orrs	r3, r0
 80107ba:	4413      	add	r3, r2
 80107bc:	1a5b      	subs	r3, r3, r1
 80107be:	b21b      	sxth	r3, r3
 80107c0:	429c      	cmp	r4, r3
 80107c2:	bfb8      	it	lt
 80107c4:	461c      	movlt	r4, r3
 80107c6:	4633      	mov	r3, r6
 80107c8:	462a      	mov	r2, r5
 80107ca:	2100      	movs	r1, #0
 80107cc:	e7dc      	b.n	8010788 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80107ce:	b2a0      	uxth	r0, r4
 80107d0:	b01e      	add	sp, #120	@ 0x78
 80107d2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80107d6:	b003      	add	sp, #12
 80107d8:	4770      	bx	lr

080107da <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80107da:	7a43      	ldrb	r3, [r0, #9]
 80107dc:	8880      	ldrh	r0, [r0, #4]
 80107de:	4418      	add	r0, r3
 80107e0:	b280      	uxth	r0, r0
 80107e2:	4770      	bx	lr

080107e4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80107e4:	6803      	ldr	r3, [r0, #0]
 80107e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80107e8:	4718      	bx	r3

080107ea <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80107ea:	b40e      	push	{r1, r2, r3}
 80107ec:	b570      	push	{r4, r5, r6, lr}
 80107ee:	b09d      	sub	sp, #116	@ 0x74
 80107f0:	ab21      	add	r3, sp, #132	@ 0x84
 80107f2:	4604      	mov	r4, r0
 80107f4:	f853 5b04 	ldr.w	r5, [r3], #4
 80107f8:	9302      	str	r3, [sp, #8]
 80107fa:	a803      	add	r0, sp, #12
 80107fc:	f001 f8fe 	bl	80119fc <_ZN8touchgfx12TextProviderC1Ev>
 8010800:	6823      	ldr	r3, [r4, #0]
 8010802:	4620      	mov	r0, r4
 8010804:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010806:	4798      	blx	r3
 8010808:	6823      	ldr	r3, [r4, #0]
 801080a:	4606      	mov	r6, r0
 801080c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801080e:	4620      	mov	r0, r4
 8010810:	4798      	blx	r3
 8010812:	4633      	mov	r3, r6
 8010814:	9000      	str	r0, [sp, #0]
 8010816:	9a02      	ldr	r2, [sp, #8]
 8010818:	4629      	mov	r1, r5
 801081a:	a803      	add	r0, sp, #12
 801081c:	f001 f941 	bl	8011aa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010820:	a803      	add	r0, sp, #12
 8010822:	f001 fcdb 	bl	80121dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010826:	2401      	movs	r4, #1
 8010828:	b2a3      	uxth	r3, r4
 801082a:	b140      	cbz	r0, 801083e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801082c:	280a      	cmp	r0, #10
 801082e:	bf08      	it	eq
 8010830:	3301      	addeq	r3, #1
 8010832:	a803      	add	r0, sp, #12
 8010834:	bf08      	it	eq
 8010836:	b21c      	sxtheq	r4, r3
 8010838:	f001 fcd0 	bl	80121dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801083c:	e7f4      	b.n	8010828 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801083e:	4618      	mov	r0, r3
 8010840:	b01d      	add	sp, #116	@ 0x74
 8010842:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010846:	b003      	add	sp, #12
 8010848:	4770      	bx	lr

0801084a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801084a:	b40e      	push	{r1, r2, r3}
 801084c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801084e:	b09e      	sub	sp, #120	@ 0x78
 8010850:	ab23      	add	r3, sp, #140	@ 0x8c
 8010852:	4604      	mov	r4, r0
 8010854:	f853 5b04 	ldr.w	r5, [r3], #4
 8010858:	9303      	str	r3, [sp, #12]
 801085a:	a805      	add	r0, sp, #20
 801085c:	f001 f8ce 	bl	80119fc <_ZN8touchgfx12TextProviderC1Ev>
 8010860:	6823      	ldr	r3, [r4, #0]
 8010862:	4620      	mov	r0, r4
 8010864:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010866:	4798      	blx	r3
 8010868:	6823      	ldr	r3, [r4, #0]
 801086a:	4606      	mov	r6, r0
 801086c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801086e:	4620      	mov	r0, r4
 8010870:	4798      	blx	r3
 8010872:	4633      	mov	r3, r6
 8010874:	4629      	mov	r1, r5
 8010876:	9000      	str	r0, [sp, #0]
 8010878:	9a03      	ldr	r2, [sp, #12]
 801087a:	a805      	add	r0, sp, #20
 801087c:	ad1e      	add	r5, sp, #120	@ 0x78
 801087e:	f001 f910 	bl	8011aa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010882:	2100      	movs	r1, #0
 8010884:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010888:	4622      	mov	r2, r4
 801088a:	462b      	mov	r3, r5
 801088c:	a805      	add	r0, sp, #20
 801088e:	f001 fc23 	bl	80120d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010892:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8010896:	b1d8      	cbz	r0, 80108d0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010898:	280a      	cmp	r0, #10
 801089a:	d012      	beq.n	80108c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801089c:	9804      	ldr	r0, [sp, #16]
 801089e:	b180      	cbz	r0, 80108c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80108a0:	7b47      	ldrb	r7, [r0, #13]
 80108a2:	88e2      	ldrh	r2, [r4, #6]
 80108a4:	00fb      	lsls	r3, r7, #3
 80108a6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80108aa:	7a03      	ldrb	r3, [r0, #8]
 80108ac:	430b      	orrs	r3, r1
 80108ae:	0679      	lsls	r1, r7, #25
 80108b0:	bf44      	itt	mi
 80108b2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80108b6:	b21b      	sxthmi	r3, r3
 80108b8:	1ad3      	subs	r3, r2, r3
 80108ba:	b21b      	sxth	r3, r3
 80108bc:	429e      	cmp	r6, r3
 80108be:	bfa8      	it	ge
 80108c0:	461e      	movge	r6, r3
 80108c2:	462b      	mov	r3, r5
 80108c4:	4622      	mov	r2, r4
 80108c6:	2100      	movs	r1, #0
 80108c8:	a805      	add	r0, sp, #20
 80108ca:	f001 fc05 	bl	80120d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80108ce:	e7e2      	b.n	8010896 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80108d0:	4630      	mov	r0, r6
 80108d2:	b01e      	add	sp, #120	@ 0x78
 80108d4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80108d8:	b003      	add	sp, #12
 80108da:	4770      	bx	lr

080108dc <_ZNK8touchgfx8Drawable10invalidateEv>:
 80108dc:	b513      	push	{r0, r1, r4, lr}
 80108de:	6803      	ldr	r3, [r0, #0]
 80108e0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80108e4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80108e8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80108ec:	2400      	movs	r4, #0
 80108ee:	9400      	str	r4, [sp, #0]
 80108f0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80108f4:	691b      	ldr	r3, [r3, #16]
 80108f6:	4669      	mov	r1, sp
 80108f8:	4798      	blx	r3
 80108fa:	b002      	add	sp, #8
 80108fc:	bd10      	pop	{r4, pc}

080108fe <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80108fe:	b538      	push	{r3, r4, r5, lr}
 8010900:	680b      	ldr	r3, [r1, #0]
 8010902:	460c      	mov	r4, r1
 8010904:	68db      	ldr	r3, [r3, #12]
 8010906:	4605      	mov	r5, r0
 8010908:	4798      	blx	r3
 801090a:	6823      	ldr	r3, [r4, #0]
 801090c:	4620      	mov	r0, r4
 801090e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010910:	4629      	mov	r1, r5
 8010912:	4798      	blx	r3
 8010914:	4628      	mov	r0, r5
 8010916:	bd38      	pop	{r3, r4, r5, pc}

08010918 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010918:	b410      	push	{r4}
 801091a:	880a      	ldrh	r2, [r1, #0]
 801091c:	8884      	ldrh	r4, [r0, #4]
 801091e:	4422      	add	r2, r4
 8010920:	800a      	strh	r2, [r1, #0]
 8010922:	88c4      	ldrh	r4, [r0, #6]
 8010924:	884a      	ldrh	r2, [r1, #2]
 8010926:	4422      	add	r2, r4
 8010928:	804a      	strh	r2, [r1, #2]
 801092a:	6940      	ldr	r0, [r0, #20]
 801092c:	b120      	cbz	r0, 8010938 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801092e:	6803      	ldr	r3, [r0, #0]
 8010930:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010934:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010936:	4718      	bx	r3
 8010938:	f85d 4b04 	ldr.w	r4, [sp], #4
 801093c:	4770      	bx	lr

0801093e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801093e:	b570      	push	{r4, r5, r6, lr}
 8010940:	8882      	ldrh	r2, [r0, #4]
 8010942:	880b      	ldrh	r3, [r1, #0]
 8010944:	4413      	add	r3, r2
 8010946:	800b      	strh	r3, [r1, #0]
 8010948:	88c2      	ldrh	r2, [r0, #6]
 801094a:	884b      	ldrh	r3, [r1, #2]
 801094c:	460c      	mov	r4, r1
 801094e:	4413      	add	r3, r2
 8010950:	804b      	strh	r3, [r1, #2]
 8010952:	4605      	mov	r5, r0
 8010954:	1d01      	adds	r1, r0, #4
 8010956:	4620      	mov	r0, r4
 8010958:	f7f9 fd06 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 801095c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010960:	2b00      	cmp	r3, #0
 8010962:	dd0b      	ble.n	801097c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010964:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010968:	2b00      	cmp	r3, #0
 801096a:	dd07      	ble.n	801097c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801096c:	6968      	ldr	r0, [r5, #20]
 801096e:	b128      	cbz	r0, 801097c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010970:	6803      	ldr	r3, [r0, #0]
 8010972:	4621      	mov	r1, r4
 8010974:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010976:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801097a:	4718      	bx	r3
 801097c:	bd70      	pop	{r4, r5, r6, pc}
	...

08010980 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010980:	b570      	push	{r4, r5, r6, lr}
 8010982:	8882      	ldrh	r2, [r0, #4]
 8010984:	880b      	ldrh	r3, [r1, #0]
 8010986:	4413      	add	r3, r2
 8010988:	800b      	strh	r3, [r1, #0]
 801098a:	88c2      	ldrh	r2, [r0, #6]
 801098c:	884b      	ldrh	r3, [r1, #2]
 801098e:	460c      	mov	r4, r1
 8010990:	4413      	add	r3, r2
 8010992:	804b      	strh	r3, [r1, #2]
 8010994:	4605      	mov	r5, r0
 8010996:	1d01      	adds	r1, r0, #4
 8010998:	4620      	mov	r0, r4
 801099a:	f7f9 fce5 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 801099e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80109a2:	2b00      	cmp	r3, #0
 80109a4:	dd19      	ble.n	80109da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80109a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80109aa:	2b00      	cmp	r3, #0
 80109ac:	dd15      	ble.n	80109da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80109ae:	6968      	ldr	r0, [r5, #20]
 80109b0:	b128      	cbz	r0, 80109be <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80109b2:	6803      	ldr	r3, [r0, #0]
 80109b4:	4621      	mov	r1, r4
 80109b6:	691b      	ldr	r3, [r3, #16]
 80109b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109bc:	4718      	bx	r3
 80109be:	4b07      	ldr	r3, [pc, #28]	@ (80109dc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80109c0:	681b      	ldr	r3, [r3, #0]
 80109c2:	3304      	adds	r3, #4
 80109c4:	429d      	cmp	r5, r3
 80109c6:	d108      	bne.n	80109da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80109c8:	f7fe fdd6 	bl	800f578 <_ZN8touchgfx11Application11getInstanceEv>
 80109cc:	6803      	ldr	r3, [r0, #0]
 80109ce:	6821      	ldr	r1, [r4, #0]
 80109d0:	6862      	ldr	r2, [r4, #4]
 80109d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80109d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109d8:	4718      	bx	r3
 80109da:	bd70      	pop	{r4, r5, r6, pc}
 80109dc:	2001403c 	.word	0x2001403c

080109e0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80109e0:	b570      	push	{r4, r5, r6, lr}
 80109e2:	4604      	mov	r4, r0
 80109e4:	4616      	mov	r6, r2
 80109e6:	460d      	mov	r5, r1
 80109e8:	b901      	cbnz	r1, 80109ec <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80109ea:	b192      	cbz	r2, 8010a12 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80109ec:	6823      	ldr	r3, [r4, #0]
 80109ee:	4620      	mov	r0, r4
 80109f0:	699b      	ldr	r3, [r3, #24]
 80109f2:	4798      	blx	r3
 80109f4:	88e2      	ldrh	r2, [r4, #6]
 80109f6:	88a1      	ldrh	r1, [r4, #4]
 80109f8:	4432      	add	r2, r6
 80109fa:	4429      	add	r1, r5
 80109fc:	4620      	mov	r0, r4
 80109fe:	b212      	sxth	r2, r2
 8010a00:	b209      	sxth	r1, r1
 8010a02:	f7f9 ff95 	bl	800a930 <_ZN8touchgfx8Drawable5setXYEss>
 8010a06:	6823      	ldr	r3, [r4, #0]
 8010a08:	4620      	mov	r0, r4
 8010a0a:	699b      	ldr	r3, [r3, #24]
 8010a0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a10:	4718      	bx	r3
 8010a12:	bd70      	pop	{r4, r5, r6, pc}

08010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010a14:	b510      	push	{r4, lr}
 8010a16:	4604      	mov	r4, r0
 8010a18:	4608      	mov	r0, r1
 8010a1a:	2300      	movs	r3, #0
 8010a1c:	8023      	strh	r3, [r4, #0]
 8010a1e:	8063      	strh	r3, [r4, #2]
 8010a20:	6803      	ldr	r3, [r0, #0]
 8010a22:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010a26:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010a2a:	80a1      	strh	r1, [r4, #4]
 8010a2c:	80e2      	strh	r2, [r4, #6]
 8010a2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010a30:	4621      	mov	r1, r4
 8010a32:	4798      	blx	r3
 8010a34:	4620      	mov	r0, r4
 8010a36:	bd10      	pop	{r4, pc}

08010a38 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8010a38:	4770      	bx	lr

08010a3a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8010a3a:	b510      	push	{r4, lr}
 8010a3c:	211c      	movs	r1, #28
 8010a3e:	4604      	mov	r4, r0
 8010a40:	f011 f82f 	bl	8021aa2 <_ZdlPvj>
 8010a44:	4620      	mov	r0, r4
 8010a46:	bd10      	pop	{r4, pc}

08010a48 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8010a48:	4a04      	ldr	r2, [pc, #16]	@ (8010a5c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8010a4a:	6002      	str	r2, [r0, #0]
 8010a4c:	2200      	movs	r2, #0
 8010a4e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8010a52:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010a56:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010a5a:	4770      	bx	lr
 8010a5c:	08025260 	.word	0x08025260

08010a60 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8010a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a64:	4604      	mov	r4, r0
 8010a66:	b087      	sub	sp, #28
 8010a68:	8b45      	ldrh	r5, [r0, #26]
 8010a6a:	f8b2 c000 	ldrh.w	ip, [r2]
 8010a6e:	9105      	str	r1, [sp, #20]
 8010a70:	68e1      	ldr	r1, [r4, #12]
 8010a72:	9203      	str	r2, [sp, #12]
 8010a74:	1c68      	adds	r0, r5, #1
 8010a76:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010a7a:	f01c 0501 	ands.w	r5, ip, #1
 8010a7e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010a82:	9502      	str	r5, [sp, #8]
 8010a84:	b280      	uxth	r0, r0
 8010a86:	d07d      	beq.n	8010b84 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8010a88:	ee07 2a90 	vmov	s15, r2
 8010a8c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8010a90:	8360      	strh	r0, [r4, #26]
 8010a92:	edc1 6a00 	vstr	s13, [r1]
 8010a96:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8010a9a:	8b61      	ldrh	r1, [r4, #26]
 8010a9c:	ee07 2a10 	vmov	s14, r2
 8010aa0:	68e2      	ldr	r2, [r4, #12]
 8010aa2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010aa6:	f04f 0e00 	mov.w	lr, #0
 8010aaa:	1c48      	adds	r0, r1, #1
 8010aac:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010ab0:	ee06 ea10 	vmov	s12, lr
 8010ab4:	8360      	strh	r0, [r4, #26]
 8010ab6:	ed82 7a00 	vstr	s14, [r2]
 8010aba:	8b21      	ldrh	r1, [r4, #24]
 8010abc:	68a2      	ldr	r2, [r4, #8]
 8010abe:	2501      	movs	r5, #1
 8010ac0:	1c48      	adds	r0, r1, #1
 8010ac2:	8320      	strh	r0, [r4, #24]
 8010ac4:	5455      	strb	r5, [r2, r1]
 8010ac6:	2200      	movs	r2, #0
 8010ac8:	3304      	adds	r3, #4
 8010aca:	ee07 2a90 	vmov	s15, r2
 8010ace:	9300      	str	r3, [sp, #0]
 8010ad0:	46aa      	mov	sl, r5
 8010ad2:	4613      	mov	r3, r2
 8010ad4:	4611      	mov	r1, r2
 8010ad6:	462e      	mov	r6, r5
 8010ad8:	9201      	str	r2, [sp, #4]
 8010ada:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010ade:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8010ae2:	9805      	ldr	r0, [sp, #20]
 8010ae4:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8010ae8:	f108 0701 	add.w	r7, r8, #1
 8010aec:	42a8      	cmp	r0, r5
 8010aee:	b2bf      	uxth	r7, r7
 8010af0:	eb0b 0908 	add.w	r9, fp, r8
 8010af4:	f340 80db 	ble.w	8010cae <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8010af8:	fa4c f906 	asr.w	r9, ip, r6
 8010afc:	f009 0901 	and.w	r9, r9, #1
 8010b00:	fa5f f389 	uxtb.w	r3, r9
 8010b04:	9304      	str	r3, [sp, #16]
 8010b06:	9b00      	ldr	r3, [sp, #0]
 8010b08:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010b0c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010b10:	f1b9 0f00 	cmp.w	r9, #0
 8010b14:	d07d      	beq.n	8010c12 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8010b16:	ee05 1a10 	vmov	s10, r1
 8010b1a:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 8010b1e:	ee05 3a10 	vmov	s10, r3
 8010b22:	8327      	strh	r7, [r4, #24]
 8010b24:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010b28:	f1ba 0f00 	cmp.w	sl, #0
 8010b2c:	d050      	beq.n	8010bd0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8010b2e:	f04f 0002 	mov.w	r0, #2
 8010b32:	f80b 0008 	strb.w	r0, [fp, r8]
 8010b36:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010b3a:	68e7      	ldr	r7, [r4, #12]
 8010b3c:	f108 0901 	add.w	r9, r8, #1
 8010b40:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010b44:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010b48:	edc7 4a00 	vstr	s9, [r7]
 8010b4c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010b50:	68e7      	ldr	r7, [r4, #12]
 8010b52:	f108 0901 	add.w	r9, r8, #1
 8010b56:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010b5a:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010b5e:	ed87 5a00 	vstr	s10, [r7]
 8010b62:	3601      	adds	r6, #1
 8010b64:	2e10      	cmp	r6, #16
 8010b66:	d106      	bne.n	8010b76 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8010b68:	9e01      	ldr	r6, [sp, #4]
 8010b6a:	9803      	ldr	r0, [sp, #12]
 8010b6c:	3601      	adds	r6, #1
 8010b6e:	9601      	str	r6, [sp, #4]
 8010b70:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8010b74:	2600      	movs	r6, #0
 8010b76:	9800      	ldr	r0, [sp, #0]
 8010b78:	f8dd a010 	ldr.w	sl, [sp, #16]
 8010b7c:	3004      	adds	r0, #4
 8010b7e:	3501      	adds	r5, #1
 8010b80:	9000      	str	r0, [sp, #0]
 8010b82:	e7ac      	b.n	8010ade <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8010b84:	ee06 2a10 	vmov	s12, r2
 8010b88:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8010b8c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8010b90:	ee16 5a10 	vmov	r5, s12
 8010b94:	442a      	add	r2, r5
 8010b96:	ee06 2a90 	vmov	s13, r2
 8010b9a:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8010b9e:	8360      	strh	r0, [r4, #26]
 8010ba0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010ba4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8010ba8:	4472      	add	r2, lr
 8010baa:	ee07 2a10 	vmov	s14, r2
 8010bae:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8010bb2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010bb6:	edc1 6a00 	vstr	s13, [r1]
 8010bba:	8b61      	ldrh	r1, [r4, #26]
 8010bbc:	68e2      	ldr	r2, [r4, #12]
 8010bbe:	ee27 7a27 	vmul.f32	s14, s14, s15
 8010bc2:	1c48      	adds	r0, r1, #1
 8010bc4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010bc8:	8360      	strh	r0, [r4, #26]
 8010bca:	ed82 7a00 	vstr	s14, [r2]
 8010bce:	e774      	b.n	8010aba <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 8010bd0:	f04f 0005 	mov.w	r0, #5
 8010bd4:	f80b 0008 	strb.w	r0, [fp, r8]
 8010bd8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010bdc:	68e7      	ldr	r7, [r4, #12]
 8010bde:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 8010be2:	f108 0901 	add.w	r9, r8, #1
 8010be6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010bea:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010bee:	ed87 4a00 	vstr	s8, [r7]
 8010bf2:	ee04 2a10 	vmov	s8, r2
 8010bf6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010bfa:	68e7      	ldr	r7, [r4, #12]
 8010bfc:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8010c00:	f108 0901 	add.w	r9, r8, #1
 8010c04:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c08:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c0c:	ed87 4a00 	vstr	s8, [r7]
 8010c10:	e791      	b.n	8010b36 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8010c12:	f1ba 0f00 	cmp.w	sl, #0
 8010c16:	d146      	bne.n	8010ca6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8010c18:	f04f 0005 	mov.w	r0, #5
 8010c1c:	8327      	strh	r7, [r4, #24]
 8010c1e:	f80b 0008 	strb.w	r0, [fp, r8]
 8010c22:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c26:	68e7      	ldr	r7, [r4, #12]
 8010c28:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010c2c:	f108 0901 	add.w	r9, r8, #1
 8010c30:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c34:	ee17 0a90 	vmov	r0, s15
 8010c38:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c3c:	ed87 5a00 	vstr	s10, [r7]
 8010c40:	ee05 2a10 	vmov	s10, r2
 8010c44:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c48:	68e7      	ldr	r7, [r4, #12]
 8010c4a:	4408      	add	r0, r1
 8010c4c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010c50:	ee07 0a90 	vmov	s15, r0
 8010c54:	f108 0901 	add.w	r9, r8, #1
 8010c58:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c5c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010c64:	ed87 5a00 	vstr	s10, [r7]
 8010c68:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c6c:	68e7      	ldr	r7, [r4, #12]
 8010c6e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010c72:	f108 0901 	add.w	r9, r8, #1
 8010c76:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c7a:	441a      	add	r2, r3
 8010c7c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c80:	edc7 7a00 	vstr	s15, [r7]
 8010c84:	ee07 2a90 	vmov	s15, r2
 8010c88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010c8c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c90:	68e7      	ldr	r7, [r4, #12]
 8010c92:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010c96:	f108 0901 	add.w	r9, r8, #1
 8010c9a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c9e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010ca2:	edc7 7a00 	vstr	s15, [r7]
 8010ca6:	461a      	mov	r2, r3
 8010ca8:	ee07 1a90 	vmov	s15, r1
 8010cac:	e759      	b.n	8010b62 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8010cae:	f1ba 0f00 	cmp.w	sl, #0
 8010cb2:	d045      	beq.n	8010d40 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010cb4:	ee05 1a90 	vmov	s11, r1
 8010cb8:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010cbc:	eef4 5a66 	vcmp.f32	s11, s13
 8010cc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cc4:	d108      	bne.n	8010cd8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 8010cc6:	ee05 3a90 	vmov	s11, r3
 8010cca:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010cce:	eef4 5a47 	vcmp.f32	s11, s14
 8010cd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cd6:	d033      	beq.n	8010d40 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010cd8:	9b02      	ldr	r3, [sp, #8]
 8010cda:	8327      	strh	r7, [r4, #24]
 8010cdc:	b1b3      	cbz	r3, 8010d0c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 8010cde:	2302      	movs	r3, #2
 8010ce0:	f889 3000 	strb.w	r3, [r9]
 8010ce4:	8b62      	ldrh	r2, [r4, #26]
 8010ce6:	68e3      	ldr	r3, [r4, #12]
 8010ce8:	1c51      	adds	r1, r2, #1
 8010cea:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010cee:	8361      	strh	r1, [r4, #26]
 8010cf0:	edc3 6a00 	vstr	s13, [r3]
 8010cf4:	8b62      	ldrh	r2, [r4, #26]
 8010cf6:	68e3      	ldr	r3, [r4, #12]
 8010cf8:	1c51      	adds	r1, r2, #1
 8010cfa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010cfe:	8361      	strh	r1, [r4, #26]
 8010d00:	ed83 7a00 	vstr	s14, [r3]
 8010d04:	9800      	ldr	r0, [sp, #0]
 8010d06:	b007      	add	sp, #28
 8010d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d0c:	2305      	movs	r3, #5
 8010d0e:	f889 3000 	strb.w	r3, [r9]
 8010d12:	8b62      	ldrh	r2, [r4, #26]
 8010d14:	68e3      	ldr	r3, [r4, #12]
 8010d16:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8010d1a:	1c51      	adds	r1, r2, #1
 8010d1c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010d20:	8361      	strh	r1, [r4, #26]
 8010d22:	ee07 ea90 	vmov	s15, lr
 8010d26:	ed83 6a00 	vstr	s12, [r3]
 8010d2a:	8b62      	ldrh	r2, [r4, #26]
 8010d2c:	68e3      	ldr	r3, [r4, #12]
 8010d2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010d32:	1c51      	adds	r1, r2, #1
 8010d34:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010d38:	8361      	strh	r1, [r4, #26]
 8010d3a:	edc3 7a00 	vstr	s15, [r3]
 8010d3e:	e7d1      	b.n	8010ce4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010d40:	ee05 2a90 	vmov	s11, r2
 8010d44:	9902      	ldr	r1, [sp, #8]
 8010d46:	8327      	strh	r7, [r4, #24]
 8010d48:	2305      	movs	r3, #5
 8010d4a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010d4e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010d52:	f889 3000 	strb.w	r3, [r9]
 8010d56:	b181      	cbz	r1, 8010d7a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8010d58:	8b62      	ldrh	r2, [r4, #26]
 8010d5a:	68e3      	ldr	r3, [r4, #12]
 8010d5c:	1c51      	adds	r1, r2, #1
 8010d5e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010d62:	8361      	strh	r1, [r4, #26]
 8010d64:	ed83 5a00 	vstr	s10, [r3]
 8010d68:	8b62      	ldrh	r2, [r4, #26]
 8010d6a:	68e3      	ldr	r3, [r4, #12]
 8010d6c:	1c51      	adds	r1, r2, #1
 8010d6e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010d72:	8361      	strh	r1, [r4, #26]
 8010d74:	edc3 5a00 	vstr	s11, [r3]
 8010d78:	e7b4      	b.n	8010ce4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010d7a:	8b65      	ldrh	r5, [r4, #26]
 8010d7c:	68e1      	ldr	r1, [r4, #12]
 8010d7e:	1c6e      	adds	r6, r5, #1
 8010d80:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d84:	8366      	strh	r6, [r4, #26]
 8010d86:	ed81 5a00 	vstr	s10, [r1]
 8010d8a:	8b65      	ldrh	r5, [r4, #26]
 8010d8c:	68e1      	ldr	r1, [r4, #12]
 8010d8e:	1c6e      	adds	r6, r5, #1
 8010d90:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d94:	8366      	strh	r6, [r4, #26]
 8010d96:	edc1 5a00 	vstr	s11, [r1]
 8010d9a:	8b65      	ldrh	r5, [r4, #26]
 8010d9c:	68e1      	ldr	r1, [r4, #12]
 8010d9e:	1c6e      	adds	r6, r5, #1
 8010da0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010da4:	ee17 0a90 	vmov	r0, s15
 8010da8:	ee16 5a10 	vmov	r5, s12
 8010dac:	4428      	add	r0, r5
 8010dae:	ee07 0a90 	vmov	s15, r0
 8010db2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010db6:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010dba:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010dbe:	4472      	add	r2, lr
 8010dc0:	8366      	strh	r6, [r4, #26]
 8010dc2:	edc1 7a00 	vstr	s15, [r1]
 8010dc6:	ee07 2a90 	vmov	s15, r2
 8010dca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010dce:	8b61      	ldrh	r1, [r4, #26]
 8010dd0:	68e5      	ldr	r5, [r4, #12]
 8010dd2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010dd6:	1c4e      	adds	r6, r1, #1
 8010dd8:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8010ddc:	8366      	strh	r6, [r4, #26]
 8010dde:	edc1 7a00 	vstr	s15, [r1]
 8010de2:	8b22      	ldrh	r2, [r4, #24]
 8010de4:	68a1      	ldr	r1, [r4, #8]
 8010de6:	1c55      	adds	r5, r2, #1
 8010de8:	8325      	strh	r5, [r4, #24]
 8010dea:	548b      	strb	r3, [r1, r2]
 8010dec:	e791      	b.n	8010d12 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

08010df0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8010df0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010df4:	b08e      	sub	sp, #56	@ 0x38
 8010df6:	4604      	mov	r4, r0
 8010df8:	4688      	mov	r8, r1
 8010dfa:	4615      	mov	r5, r2
 8010dfc:	4699      	mov	r9, r3
 8010dfe:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8010e00:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8010e04:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8010e06:	f7f0 fbb3 	bl	8001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8010e0a:	6060      	str	r0, [r4, #4]
 8010e0c:	f1b9 0f00 	cmp.w	r9, #0
 8010e10:	f000 80e8 	beq.w	8010fe4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8010e14:	2800      	cmp	r0, #0
 8010e16:	f000 80e5 	beq.w	8010fe4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8010e1a:	a805      	add	r0, sp, #20
 8010e1c:	f000 f8f9 	bl	8011012 <_ZN8touchgfx9Matrix3x3C1Ev>
 8010e20:	6833      	ldr	r3, [r6, #0]
 8010e22:	4630      	mov	r0, r6
 8010e24:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8010e26:	4798      	blx	r3
 8010e28:	a805      	add	r0, sp, #20
 8010e2a:	eef0 0a40 	vmov.f32	s1, s0
 8010e2e:	f000 f8f4 	bl	801101a <_ZN8touchgfx9Matrix3x35scaleEff>
 8010e32:	6860      	ldr	r0, [r4, #4]
 8010e34:	f1ba 0f03 	cmp.w	sl, #3
 8010e38:	d83b      	bhi.n	8010eb2 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8010e3a:	e8df f00a 	tbb	[pc, sl]
 8010e3e:	1002      	.short	0x1002
 8010e40:	9f71      	.short	0x9f71
 8010e42:	6803      	ldr	r3, [r0, #0]
 8010e44:	462a      	mov	r2, r5
 8010e46:	689b      	ldr	r3, [r3, #8]
 8010e48:	4641      	mov	r1, r8
 8010e4a:	4798      	blx	r3
 8010e4c:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8010e50:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8010e54:	ee07 7a90 	vmov	s15, r7
 8010e58:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8010e5c:	e026      	b.n	8010eac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8010e5e:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8010e62:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8010e66:	8869      	ldrh	r1, [r5, #2]
 8010e68:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010e6c:	1a9b      	subs	r3, r3, r2
 8010e6e:	1a5b      	subs	r3, r3, r1
 8010e70:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010e74:	882b      	ldrh	r3, [r5, #0]
 8010e76:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010e7a:	88ab      	ldrh	r3, [r5, #4]
 8010e7c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010e80:	6803      	ldr	r3, [r0, #0]
 8010e82:	aa03      	add	r2, sp, #12
 8010e84:	689b      	ldr	r3, [r3, #8]
 8010e86:	4641      	mov	r1, r8
 8010e88:	4798      	blx	r3
 8010e8a:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8010fec <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8010e8e:	a805      	add	r0, sp, #20
 8010e90:	f000 f8e8 	bl	8011064 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010e94:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8010e98:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8010e9a:	ee07 7a90 	vmov	s15, r7
 8010e9e:	1a9b      	subs	r3, r3, r2
 8010ea0:	ee00 3a10 	vmov	s0, r3
 8010ea4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8010ea8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8010eac:	a805      	add	r0, sp, #20
 8010eae:	f000 f927 	bl	8011100 <_ZN8touchgfx9Matrix3x39translateEff>
 8010eb2:	6860      	ldr	r0, [r4, #4]
 8010eb4:	6803      	ldr	r3, [r0, #0]
 8010eb6:	a905      	add	r1, sp, #20
 8010eb8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010eba:	4798      	blx	r3
 8010ebc:	6860      	ldr	r0, [r4, #4]
 8010ebe:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8010ec0:	6803      	ldr	r3, [r0, #0]
 8010ec2:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8010ec6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010ec8:	4798      	blx	r3
 8010eca:	6860      	ldr	r0, [r4, #4]
 8010ecc:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8010ed0:	6803      	ldr	r3, [r0, #0]
 8010ed2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010ed4:	4798      	blx	r3
 8010ed6:	6860      	ldr	r0, [r4, #4]
 8010ed8:	6803      	ldr	r3, [r0, #0]
 8010eda:	2101      	movs	r1, #1
 8010edc:	68db      	ldr	r3, [r3, #12]
 8010ede:	2500      	movs	r5, #0
 8010ee0:	4798      	blx	r3
 8010ee2:	f8b9 7000 	ldrh.w	r7, [r9]
 8010ee6:	61a5      	str	r5, [r4, #24]
 8010ee8:	f104 0310 	add.w	r3, r4, #16
 8010eec:	f104 0208 	add.w	r2, r4, #8
 8010ef0:	f104 0114 	add.w	r1, r4, #20
 8010ef4:	f104 000c 	add.w	r0, r4, #12
 8010ef8:	f109 0602 	add.w	r6, r9, #2
 8010efc:	f7f2 f82c 	bl	8002f58 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8010f00:	42af      	cmp	r7, r5
 8010f02:	dd60      	ble.n	8010fc6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8010f04:	8831      	ldrh	r1, [r6, #0]
 8010f06:	f101 030f 	add.w	r3, r1, #15
 8010f0a:	1cb2      	adds	r2, r6, #2
 8010f0c:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8010f10:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010f14:	4620      	mov	r0, r4
 8010f16:	f7ff fda3 	bl	8010a60 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8010f1a:	3501      	adds	r5, #1
 8010f1c:	4606      	mov	r6, r0
 8010f1e:	e7ef      	b.n	8010f00 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8010f20:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010f24:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8010f28:	8829      	ldrh	r1, [r5, #0]
 8010f2a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010f2e:	1a9b      	subs	r3, r3, r2
 8010f30:	1a5b      	subs	r3, r3, r1
 8010f32:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f36:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010f3a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010f3e:	886d      	ldrh	r5, [r5, #2]
 8010f40:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010f44:	1a5b      	subs	r3, r3, r1
 8010f46:	1b5b      	subs	r3, r3, r5
 8010f48:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010f4c:	6803      	ldr	r3, [r0, #0]
 8010f4e:	aa03      	add	r2, sp, #12
 8010f50:	689b      	ldr	r3, [r3, #8]
 8010f52:	4641      	mov	r1, r8
 8010f54:	4798      	blx	r3
 8010f56:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8010ff0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8010f5a:	a805      	add	r0, sp, #20
 8010f5c:	f000 f882 	bl	8011064 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010f60:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010f64:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8010f66:	1a9b      	subs	r3, r3, r2
 8010f68:	ee00 3a90 	vmov	s1, r3
 8010f6c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8010f70:	1bdb      	subs	r3, r3, r7
 8010f72:	ee00 3a10 	vmov	s0, r3
 8010f76:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8010f7a:	e795      	b.n	8010ea8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8010f7c:	886b      	ldrh	r3, [r5, #2]
 8010f7e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f82:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010f86:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010f8a:	8829      	ldrh	r1, [r5, #0]
 8010f8c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010f90:	1a9b      	subs	r3, r3, r2
 8010f92:	1a5b      	subs	r3, r3, r1
 8010f94:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010f98:	88eb      	ldrh	r3, [r5, #6]
 8010f9a:	f8ad 3010 	strh.w	r3, [sp, #16]
 8010f9e:	6803      	ldr	r3, [r0, #0]
 8010fa0:	aa03      	add	r2, sp, #12
 8010fa2:	689b      	ldr	r3, [r3, #8]
 8010fa4:	4641      	mov	r1, r8
 8010fa6:	4798      	blx	r3
 8010fa8:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8010ff4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8010fac:	a805      	add	r0, sp, #20
 8010fae:	f000 f859 	bl	8011064 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010fb2:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010fb6:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8010fba:	1bdb      	subs	r3, r3, r7
 8010fbc:	ee00 3a90 	vmov	s1, r3
 8010fc0:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8010fc4:	e748      	b.n	8010e58 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8010fc6:	6860      	ldr	r0, [r4, #4]
 8010fc8:	8b22      	ldrh	r2, [r4, #24]
 8010fca:	6803      	ldr	r3, [r0, #0]
 8010fcc:	2100      	movs	r1, #0
 8010fce:	9101      	str	r1, [sp, #4]
 8010fd0:	8b61      	ldrh	r1, [r4, #26]
 8010fd2:	9100      	str	r1, [sp, #0]
 8010fd4:	6a1d      	ldr	r5, [r3, #32]
 8010fd6:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8010fda:	47a8      	blx	r5
 8010fdc:	6860      	ldr	r0, [r4, #4]
 8010fde:	6803      	ldr	r3, [r0, #0]
 8010fe0:	69db      	ldr	r3, [r3, #28]
 8010fe2:	4798      	blx	r3
 8010fe4:	b00e      	add	sp, #56	@ 0x38
 8010fe6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010fea:	bf00      	nop
 8010fec:	42b40000 	.word	0x42b40000
 8010ff0:	43340000 	.word	0x43340000
 8010ff4:	43870000 	.word	0x43870000

08010ff8 <_ZN8touchgfx9Matrix3x35resetEv>:
 8010ff8:	2300      	movs	r3, #0
 8010ffa:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8010ffe:	6002      	str	r2, [r0, #0]
 8011000:	6043      	str	r3, [r0, #4]
 8011002:	6083      	str	r3, [r0, #8]
 8011004:	60c3      	str	r3, [r0, #12]
 8011006:	6102      	str	r2, [r0, #16]
 8011008:	6143      	str	r3, [r0, #20]
 801100a:	6183      	str	r3, [r0, #24]
 801100c:	61c3      	str	r3, [r0, #28]
 801100e:	6202      	str	r2, [r0, #32]
 8011010:	4770      	bx	lr

08011012 <_ZN8touchgfx9Matrix3x3C1Ev>:
 8011012:	b508      	push	{r3, lr}
 8011014:	f7ff fff0 	bl	8010ff8 <_ZN8touchgfx9Matrix3x35resetEv>
 8011018:	bd08      	pop	{r3, pc}

0801101a <_ZN8touchgfx9Matrix3x35scaleEff>:
 801101a:	edd0 7a00 	vldr	s15, [r0]
 801101e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8011022:	edc0 7a00 	vstr	s15, [r0]
 8011026:	edd0 7a01 	vldr	s15, [r0, #4]
 801102a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801102e:	edc0 7a01 	vstr	s15, [r0, #4]
 8011032:	edd0 7a02 	vldr	s15, [r0, #8]
 8011036:	ee27 0a80 	vmul.f32	s0, s15, s0
 801103a:	edd0 7a03 	vldr	s15, [r0, #12]
 801103e:	ed80 0a02 	vstr	s0, [r0, #8]
 8011042:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011046:	edc0 7a03 	vstr	s15, [r0, #12]
 801104a:	edd0 7a04 	vldr	s15, [r0, #16]
 801104e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011052:	edc0 7a04 	vstr	s15, [r0, #16]
 8011056:	edd0 7a05 	vldr	s15, [r0, #20]
 801105a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801105e:	edc0 0a05 	vstr	s1, [r0, #20]
 8011062:	4770      	bx	lr

08011064 <_ZN8touchgfx9Matrix3x36rotateEf>:
 8011064:	b510      	push	{r4, lr}
 8011066:	eddf 7a24 	vldr	s15, [pc, #144]	@ 80110f8 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 801106a:	ee20 0a27 	vmul.f32	s0, s0, s15
 801106e:	eddf 7a23 	vldr	s15, [pc, #140]	@ 80110fc <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8011072:	ed2d 8b02 	vpush	{d8}
 8011076:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801107a:	4604      	mov	r4, r0
 801107c:	eeb0 0a68 	vmov.f32	s0, s17
 8011080:	f010 fd58 	bl	8021b34 <cosf>
 8011084:	eeb0 8a40 	vmov.f32	s16, s0
 8011088:	eeb0 0a68 	vmov.f32	s0, s17
 801108c:	f010 fd96 	bl	8021bbc <sinf>
 8011090:	edd4 6a03 	vldr	s13, [r4, #12]
 8011094:	edd4 4a00 	vldr	s9, [r4]
 8011098:	ed94 7a04 	vldr	s14, [r4, #16]
 801109c:	ed94 5a01 	vldr	s10, [r4, #4]
 80110a0:	edd4 5a02 	vldr	s11, [r4, #8]
 80110a4:	ee60 7a66 	vnmul.f32	s15, s0, s13
 80110a8:	ee66 6a88 	vmul.f32	s13, s13, s16
 80110ac:	eee8 7a24 	vfma.f32	s15, s16, s9
 80110b0:	eee0 6a24 	vfma.f32	s13, s0, s9
 80110b4:	edc4 7a00 	vstr	s15, [r4]
 80110b8:	ee60 7a47 	vnmul.f32	s15, s0, s14
 80110bc:	ee27 7a08 	vmul.f32	s14, s14, s16
 80110c0:	eee8 7a05 	vfma.f32	s15, s16, s10
 80110c4:	eea0 7a05 	vfma.f32	s14, s0, s10
 80110c8:	edc4 7a01 	vstr	s15, [r4, #4]
 80110cc:	edd4 7a05 	vldr	s15, [r4, #20]
 80110d0:	edc4 6a03 	vstr	s13, [r4, #12]
 80110d4:	ee20 6a67 	vnmul.f32	s12, s0, s15
 80110d8:	ee67 7a88 	vmul.f32	s15, s15, s16
 80110dc:	eea8 6a25 	vfma.f32	s12, s16, s11
 80110e0:	ecbd 8b02 	vpop	{d8}
 80110e4:	eee0 7a25 	vfma.f32	s15, s0, s11
 80110e8:	ed84 6a02 	vstr	s12, [r4, #8]
 80110ec:	ed84 7a04 	vstr	s14, [r4, #16]
 80110f0:	edc4 7a05 	vstr	s15, [r4, #20]
 80110f4:	bd10      	pop	{r4, pc}
 80110f6:	bf00      	nop
 80110f8:	40490fdb 	.word	0x40490fdb
 80110fc:	43340000 	.word	0x43340000

08011100 <_ZN8touchgfx9Matrix3x39translateEff>:
 8011100:	ed90 6a06 	vldr	s12, [r0, #24]
 8011104:	edd0 7a00 	vldr	s15, [r0]
 8011108:	edd0 6a07 	vldr	s13, [r0, #28]
 801110c:	ed90 7a08 	vldr	s14, [r0, #32]
 8011110:	eee6 7a00 	vfma.f32	s15, s12, s0
 8011114:	edc0 7a00 	vstr	s15, [r0]
 8011118:	edd0 7a01 	vldr	s15, [r0, #4]
 801111c:	eee6 7a80 	vfma.f32	s15, s13, s0
 8011120:	edc0 7a01 	vstr	s15, [r0, #4]
 8011124:	edd0 7a02 	vldr	s15, [r0, #8]
 8011128:	eee7 7a00 	vfma.f32	s15, s14, s0
 801112c:	edc0 7a02 	vstr	s15, [r0, #8]
 8011130:	edd0 7a03 	vldr	s15, [r0, #12]
 8011134:	eee6 7a20 	vfma.f32	s15, s12, s1
 8011138:	edc0 7a03 	vstr	s15, [r0, #12]
 801113c:	edd0 7a04 	vldr	s15, [r0, #16]
 8011140:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8011144:	edc0 7a04 	vstr	s15, [r0, #16]
 8011148:	edd0 7a05 	vldr	s15, [r0, #20]
 801114c:	eee7 7a20 	vfma.f32	s15, s14, s1
 8011150:	edc0 7a05 	vstr	s15, [r0, #20]
 8011154:	4770      	bx	lr

08011156 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8011156:	edd0 6a01 	vldr	s13, [r0, #4]
 801115a:	edd0 7a04 	vldr	s15, [r0, #16]
 801115e:	ed90 7a03 	vldr	s14, [r0, #12]
 8011162:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8011166:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801116a:	edd0 6a00 	vldr	s13, [r0]
 801116e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011172:	b084      	sub	sp, #16
 8011174:	eee6 0a80 	vfma.f32	s1, s13, s0
 8011178:	ed90 7a05 	vldr	s14, [r0, #20]
 801117c:	ed90 0a02 	vldr	s0, [r0, #8]
 8011180:	ee30 0a80 	vadd.f32	s0, s1, s0
 8011184:	ee77 0a87 	vadd.f32	s1, s15, s14
 8011188:	b004      	add	sp, #16
 801118a:	4770      	bx	lr

0801118c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801118c:	b530      	push	{r4, r5, lr}
 801118e:	8083      	strh	r3, [r0, #4]
 8011190:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011194:	80c3      	strh	r3, [r0, #6]
 8011196:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801119a:	7203      	strb	r3, [r0, #8]
 801119c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80111a0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80111a4:	7243      	strb	r3, [r0, #9]
 80111a6:	7a83      	ldrb	r3, [r0, #10]
 80111a8:	6141      	str	r1, [r0, #20]
 80111aa:	f365 0306 	bfi	r3, r5, #0, #7
 80111ae:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80111b2:	8302      	strh	r2, [r0, #24]
 80111b4:	f365 13c7 	bfi	r3, r5, #7, #1
 80111b8:	7283      	strb	r3, [r0, #10]
 80111ba:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80111be:	72c3      	strb	r3, [r0, #11]
 80111c0:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 80111c4:	7303      	strb	r3, [r0, #12]
 80111c6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80111ca:	81c3      	strh	r3, [r0, #14]
 80111cc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80111d0:	8203      	strh	r3, [r0, #16]
 80111d2:	4b01      	ldr	r3, [pc, #4]	@ (80111d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80111d4:	6003      	str	r3, [r0, #0]
 80111d6:	bd30      	pop	{r4, r5, pc}
 80111d8:	08025274 	.word	0x08025274

080111dc <_ZNK8touchgfx9ConstFont4findEt>:
 80111dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111de:	6944      	ldr	r4, [r0, #20]
 80111e0:	b3bc      	cbz	r4, 8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111e2:	88a3      	ldrh	r3, [r4, #4]
 80111e4:	8b02      	ldrh	r2, [r0, #24]
 80111e6:	1acb      	subs	r3, r1, r3
 80111e8:	f102 32ff 	add.w	r2, r2, #4294967295
 80111ec:	d431      	bmi.n	8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111ee:	4293      	cmp	r3, r2
 80111f0:	dd0c      	ble.n	801120c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80111f2:	230e      	movs	r3, #14
 80111f4:	fb03 4302 	mla	r3, r3, r2, r4
 80111f8:	889b      	ldrh	r3, [r3, #4]
 80111fa:	1a5b      	subs	r3, r3, r1
 80111fc:	1ad3      	subs	r3, r2, r3
 80111fe:	429a      	cmp	r2, r3
 8011200:	db27      	blt.n	8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011202:	2b00      	cmp	r3, #0
 8011204:	bfbc      	itt	lt
 8011206:	2302      	movlt	r3, #2
 8011208:	fb92 f3f3 	sdivlt	r3, r2, r3
 801120c:	2500      	movs	r5, #0
 801120e:	260e      	movs	r6, #14
 8011210:	4295      	cmp	r5, r2
 8011212:	dc1e      	bgt.n	8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011214:	fb06 4003 	mla	r0, r6, r3, r4
 8011218:	8887      	ldrh	r7, [r0, #4]
 801121a:	42b9      	cmp	r1, r7
 801121c:	d01a      	beq.n	8011254 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801121e:	d20d      	bcs.n	801123c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011220:	1e5a      	subs	r2, r3, #1
 8011222:	4295      	cmp	r5, r2
 8011224:	dc15      	bgt.n	8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011226:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801122a:	1a5b      	subs	r3, r3, r1
 801122c:	1ad3      	subs	r3, r2, r3
 801122e:	429a      	cmp	r2, r3
 8011230:	db0f      	blt.n	8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011232:	429d      	cmp	r5, r3
 8011234:	ddec      	ble.n	8011210 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011236:	1953      	adds	r3, r2, r5
 8011238:	105b      	asrs	r3, r3, #1
 801123a:	e7e9      	b.n	8011210 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801123c:	1c5d      	adds	r5, r3, #1
 801123e:	42aa      	cmp	r2, r5
 8011240:	db07      	blt.n	8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011242:	8a43      	ldrh	r3, [r0, #18]
 8011244:	1acb      	subs	r3, r1, r3
 8011246:	442b      	add	r3, r5
 8011248:	429d      	cmp	r5, r3
 801124a:	dc02      	bgt.n	8011252 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801124c:	429a      	cmp	r2, r3
 801124e:	dadf      	bge.n	8011210 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011250:	e7f1      	b.n	8011236 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011252:	2000      	movs	r0, #0
 8011254:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011256 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011256:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011258:	4604      	mov	r4, r0
 801125a:	4617      	mov	r7, r2
 801125c:	461e      	mov	r6, r3
 801125e:	b911      	cbnz	r1, 8011266 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011260:	2500      	movs	r5, #0
 8011262:	4628      	mov	r0, r5
 8011264:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011266:	290a      	cmp	r1, #10
 8011268:	d0fa      	beq.n	8011260 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801126a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801126e:	4291      	cmp	r1, r2
 8011270:	d0f6      	beq.n	8011260 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011272:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011276:	4291      	cmp	r1, r2
 8011278:	d0f2      	beq.n	8011260 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801127a:	f7ff ffaf 	bl	80111dc <_ZNK8touchgfx9ConstFont4findEt>
 801127e:	4605      	mov	r5, r0
 8011280:	b950      	cbnz	r0, 8011298 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011282:	6823      	ldr	r3, [r4, #0]
 8011284:	4620      	mov	r0, r4
 8011286:	691b      	ldr	r3, [r3, #16]
 8011288:	4798      	blx	r3
 801128a:	4601      	mov	r1, r0
 801128c:	4620      	mov	r0, r4
 801128e:	f7ff ffa5 	bl	80111dc <_ZNK8touchgfx9ConstFont4findEt>
 8011292:	4605      	mov	r5, r0
 8011294:	2800      	cmp	r0, #0
 8011296:	d0e3      	beq.n	8011260 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011298:	6823      	ldr	r3, [r4, #0]
 801129a:	4629      	mov	r1, r5
 801129c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801129e:	4620      	mov	r0, r4
 80112a0:	4798      	blx	r3
 80112a2:	6038      	str	r0, [r7, #0]
 80112a4:	6823      	ldr	r3, [r4, #0]
 80112a6:	4620      	mov	r0, r4
 80112a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80112aa:	4798      	blx	r3
 80112ac:	7030      	strb	r0, [r6, #0]
 80112ae:	e7d8      	b.n	8011262 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080112b0 <_ZN8touchgfx4clzuEm>:
 80112b0:	4603      	mov	r3, r0
 80112b2:	b1c8      	cbz	r0, 80112e8 <_ZN8touchgfx4clzuEm+0x38>
 80112b4:	0c02      	lsrs	r2, r0, #16
 80112b6:	0412      	lsls	r2, r2, #16
 80112b8:	b9a2      	cbnz	r2, 80112e4 <_ZN8touchgfx4clzuEm+0x34>
 80112ba:	0403      	lsls	r3, r0, #16
 80112bc:	2010      	movs	r0, #16
 80112be:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80112c2:	bf04      	itt	eq
 80112c4:	021b      	lsleq	r3, r3, #8
 80112c6:	3008      	addeq	r0, #8
 80112c8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80112cc:	bf04      	itt	eq
 80112ce:	011b      	lsleq	r3, r3, #4
 80112d0:	3004      	addeq	r0, #4
 80112d2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80112d6:	bf04      	itt	eq
 80112d8:	009b      	lsleq	r3, r3, #2
 80112da:	3002      	addeq	r0, #2
 80112dc:	2b00      	cmp	r3, #0
 80112de:	db04      	blt.n	80112ea <_ZN8touchgfx4clzuEm+0x3a>
 80112e0:	3001      	adds	r0, #1
 80112e2:	4770      	bx	lr
 80112e4:	2000      	movs	r0, #0
 80112e6:	e7ea      	b.n	80112be <_ZN8touchgfx4clzuEm+0xe>
 80112e8:	2020      	movs	r0, #32
 80112ea:	4770      	bx	lr

080112ec <_ZN8touchgfx7muldivuEmmmRm>:
 80112ec:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80112f0:	460f      	mov	r7, r1
 80112f2:	4615      	mov	r5, r2
 80112f4:	461e      	mov	r6, r3
 80112f6:	4601      	mov	r1, r0
 80112f8:	b100      	cbz	r0, 80112fc <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80112fa:	b927      	cbnz	r7, 8011306 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80112fc:	2000      	movs	r0, #0
 80112fe:	6030      	str	r0, [r6, #0]
 8011300:	b002      	add	sp, #8
 8011302:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011306:	f7ff ffd3 	bl	80112b0 <_ZN8touchgfx4clzuEm>
 801130a:	b980      	cbnz	r0, 801132e <_ZN8touchgfx7muldivuEmmmRm+0x42>
 801130c:	4638      	mov	r0, r7
 801130e:	f7ff ffcf 	bl	80112b0 <_ZN8touchgfx4clzuEm>
 8011312:	2800      	cmp	r0, #0
 8011314:	dd05      	ble.n	8011322 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8011316:	4633      	mov	r3, r6
 8011318:	462a      	mov	r2, r5
 801131a:	4638      	mov	r0, r7
 801131c:	f7ff ffe6 	bl	80112ec <_ZN8touchgfx7muldivuEmmmRm>
 8011320:	e7ee      	b.n	8011300 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011322:	f04f 33ff 	mov.w	r3, #4294967295
 8011326:	6033      	str	r3, [r6, #0]
 8011328:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801132c:	e7e8      	b.n	8011300 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801132e:	fa37 f800 	lsrs.w	r8, r7, r0
 8011332:	fb07 f301 	mul.w	r3, r7, r1
 8011336:	d105      	bne.n	8011344 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8011338:	fbb3 f0f5 	udiv	r0, r3, r5
 801133c:	fb05 3510 	mls	r5, r5, r0, r3
 8011340:	6035      	str	r5, [r6, #0]
 8011342:	e7dd      	b.n	8011300 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011344:	2301      	movs	r3, #1
 8011346:	fa01 fa00 	lsl.w	sl, r1, r0
 801134a:	fa03 f000 	lsl.w	r0, r3, r0
 801134e:	3801      	subs	r0, #1
 8011350:	462a      	mov	r2, r5
 8011352:	4633      	mov	r3, r6
 8011354:	4038      	ands	r0, r7
 8011356:	f7ff ffc9 	bl	80112ec <_ZN8touchgfx7muldivuEmmmRm>
 801135a:	fbba f9f5 	udiv	r9, sl, r5
 801135e:	462a      	mov	r2, r5
 8011360:	4607      	mov	r7, r0
 8011362:	ab01      	add	r3, sp, #4
 8011364:	fb05 a119 	mls	r1, r5, r9, sl
 8011368:	4640      	mov	r0, r8
 801136a:	f7ff ffbf 	bl	80112ec <_ZN8touchgfx7muldivuEmmmRm>
 801136e:	9b01      	ldr	r3, [sp, #4]
 8011370:	6832      	ldr	r2, [r6, #0]
 8011372:	fb08 f409 	mul.w	r4, r8, r9
 8011376:	441a      	add	r2, r3
 8011378:	fbb2 f3f5 	udiv	r3, r2, r5
 801137c:	441c      	add	r4, r3
 801137e:	443c      	add	r4, r7
 8011380:	4420      	add	r0, r4
 8011382:	fb05 2513 	mls	r5, r5, r3, r2
 8011386:	e7db      	b.n	8011340 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011388 <_ZN8touchgfx6muldivElllRl>:
 8011388:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801138a:	2800      	cmp	r0, #0
 801138c:	bfba      	itte	lt
 801138e:	4240      	neglt	r0, r0
 8011390:	f04f 34ff 	movlt.w	r4, #4294967295
 8011394:	2401      	movge	r4, #1
 8011396:	2900      	cmp	r1, #0
 8011398:	bfbc      	itt	lt
 801139a:	4249      	neglt	r1, r1
 801139c:	4264      	neglt	r4, r4
 801139e:	2a00      	cmp	r2, #0
 80113a0:	bfb6      	itet	lt
 80113a2:	4265      	neglt	r5, r4
 80113a4:	4625      	movge	r5, r4
 80113a6:	4252      	neglt	r2, r2
 80113a8:	4288      	cmp	r0, r1
 80113aa:	461e      	mov	r6, r3
 80113ac:	bfc2      	ittt	gt
 80113ae:	4603      	movgt	r3, r0
 80113b0:	4608      	movgt	r0, r1
 80113b2:	4619      	movgt	r1, r3
 80113b4:	ab01      	add	r3, sp, #4
 80113b6:	f7ff ff99 	bl	80112ec <_ZN8touchgfx7muldivuEmmmRm>
 80113ba:	9b01      	ldr	r3, [sp, #4]
 80113bc:	4368      	muls	r0, r5
 80113be:	435c      	muls	r4, r3
 80113c0:	6034      	str	r4, [r6, #0]
 80113c2:	b002      	add	sp, #8
 80113c4:	bd70      	pop	{r4, r5, r6, pc}

080113c6 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80113c6:	2000      	movs	r0, #0
 80113c8:	4770      	bx	lr

080113ca <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80113ca:	2001      	movs	r0, #1
 80113cc:	4770      	bx	lr

080113ce <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80113ce:	2002      	movs	r0, #2
 80113d0:	4770      	bx	lr

080113d2 <_ZN8touchgfx6ScreenD1Ev>:
 80113d2:	4770      	bx	lr

080113d4 <_ZN8touchgfx12GestureEventD1Ev>:
 80113d4:	4770      	bx	lr

080113d6 <_ZN8touchgfx9DragEventD1Ev>:
 80113d6:	4770      	bx	lr

080113d8 <_ZN8touchgfx10ClickEventD1Ev>:
 80113d8:	4770      	bx	lr

080113da <_ZN8touchgfx10ClickEventD0Ev>:
 80113da:	b510      	push	{r4, lr}
 80113dc:	210c      	movs	r1, #12
 80113de:	4604      	mov	r4, r0
 80113e0:	f010 fb5f 	bl	8021aa2 <_ZdlPvj>
 80113e4:	4620      	mov	r0, r4
 80113e6:	bd10      	pop	{r4, pc}

080113e8 <_ZN8touchgfx9DragEventD0Ev>:
 80113e8:	b510      	push	{r4, lr}
 80113ea:	2110      	movs	r1, #16
 80113ec:	4604      	mov	r4, r0
 80113ee:	f010 fb58 	bl	8021aa2 <_ZdlPvj>
 80113f2:	4620      	mov	r0, r4
 80113f4:	bd10      	pop	{r4, pc}

080113f6 <_ZN8touchgfx12GestureEventD0Ev>:
 80113f6:	b510      	push	{r4, lr}
 80113f8:	210c      	movs	r1, #12
 80113fa:	4604      	mov	r4, r0
 80113fc:	f010 fb51 	bl	8021aa2 <_ZdlPvj>
 8011400:	4620      	mov	r0, r4
 8011402:	bd10      	pop	{r4, pc}

08011404 <_ZN8touchgfx6ScreenD0Ev>:
 8011404:	b510      	push	{r4, lr}
 8011406:	213c      	movs	r1, #60	@ 0x3c
 8011408:	4604      	mov	r4, r0
 801140a:	f010 fb4a 	bl	8021aa2 <_ZdlPvj>
 801140e:	4620      	mov	r0, r4
 8011410:	bd10      	pop	{r4, pc}
	...

08011414 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011414:	b530      	push	{r4, r5, lr}
 8011416:	460d      	mov	r5, r1
 8011418:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801141a:	b087      	sub	sp, #28
 801141c:	4604      	mov	r4, r0
 801141e:	b301      	cbz	r1, 8011462 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011420:	a801      	add	r0, sp, #4
 8011422:	f7ff faf7 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011426:	892a      	ldrh	r2, [r5, #8]
 8011428:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801142c:	7928      	ldrb	r0, [r5, #4]
 801142e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011432:	f88d 0010 	strb.w	r0, [sp, #16]
 8011436:	1ad2      	subs	r2, r2, r3
 8011438:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801143a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801143c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011440:	441a      	add	r2, r3
 8011442:	896b      	ldrh	r3, [r5, #10]
 8011444:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011448:	f8ad 2014 	strh.w	r2, [sp, #20]
 801144c:	1b5b      	subs	r3, r3, r5
 801144e:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011450:	442b      	add	r3, r5
 8011452:	4d05      	ldr	r5, [pc, #20]	@ (8011468 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011454:	9503      	str	r5, [sp, #12]
 8011456:	f8ad 3016 	strh.w	r3, [sp, #22]
 801145a:	6803      	ldr	r3, [r0, #0]
 801145c:	a903      	add	r1, sp, #12
 801145e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011460:	4798      	blx	r3
 8011462:	b007      	add	sp, #28
 8011464:	bd30      	pop	{r4, r5, pc}
 8011466:	bf00      	nop
 8011468:	08025304 	.word	0x08025304

0801146c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801146c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011470:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011472:	b08a      	sub	sp, #40	@ 0x28
 8011474:	4604      	mov	r4, r0
 8011476:	460d      	mov	r5, r1
 8011478:	b113      	cbz	r3, 8011480 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801147a:	790b      	ldrb	r3, [r1, #4]
 801147c:	2b00      	cmp	r3, #0
 801147e:	d044      	beq.n	801150a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011480:	f104 0804 	add.w	r8, r4, #4
 8011484:	4641      	mov	r1, r8
 8011486:	a803      	add	r0, sp, #12
 8011488:	f7ff fac4 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801148c:	792b      	ldrb	r3, [r5, #4]
 801148e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011492:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011496:	b983      	cbnz	r3, 80114ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011498:	892a      	ldrh	r2, [r5, #8]
 801149a:	88e9      	ldrh	r1, [r5, #6]
 801149c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80114a0:	1b92      	subs	r2, r2, r6
 80114a2:	1bc9      	subs	r1, r1, r7
 80114a4:	9301      	str	r3, [sp, #4]
 80114a6:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 80114aa:	9300      	str	r3, [sp, #0]
 80114ac:	b212      	sxth	r2, r2
 80114ae:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80114b2:	b209      	sxth	r1, r1
 80114b4:	4640      	mov	r0, r8
 80114b6:	f7f8 fe73 	bl	800a1a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80114ba:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80114bc:	b329      	cbz	r1, 801150a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80114be:	a805      	add	r0, sp, #20
 80114c0:	f7ff faa8 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114c4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80114c8:	792b      	ldrb	r3, [r5, #4]
 80114ca:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80114cc:	f88d 3020 	strb.w	r3, [sp, #32]
 80114d0:	1abf      	subs	r7, r7, r2
 80114d2:	88ea      	ldrh	r2, [r5, #6]
 80114d4:	4417      	add	r7, r2
 80114d6:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80114d8:	4417      	add	r7, r2
 80114da:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80114de:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80114e2:	1ab6      	subs	r6, r6, r2
 80114e4:	892a      	ldrh	r2, [r5, #8]
 80114e6:	4416      	add	r6, r2
 80114e8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80114ea:	4416      	add	r6, r2
 80114ec:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80114f0:	4a07      	ldr	r2, [pc, #28]	@ (8011510 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80114f2:	9207      	str	r2, [sp, #28]
 80114f4:	2600      	movs	r6, #0
 80114f6:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80114fa:	6803      	ldr	r3, [r0, #0]
 80114fc:	a907      	add	r1, sp, #28
 80114fe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011500:	4798      	blx	r3
 8011502:	792b      	ldrb	r3, [r5, #4]
 8011504:	b10b      	cbz	r3, 801150a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011506:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801150a:	b00a      	add	sp, #40	@ 0x28
 801150c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011510:	080252dc 	.word	0x080252dc

08011514 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011514:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011518:	460c      	mov	r4, r1
 801151a:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801151c:	b088      	sub	sp, #32
 801151e:	4605      	mov	r5, r0
 8011520:	2900      	cmp	r1, #0
 8011522:	d06d      	beq.n	8011600 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011524:	4668      	mov	r0, sp
 8011526:	f7ff fa75 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801152a:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 801152c:	88e3      	ldrh	r3, [r4, #6]
 801152e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011532:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011536:	440b      	add	r3, r1
 8011538:	b21b      	sxth	r3, r3
 801153a:	4543      	cmp	r3, r8
 801153c:	db31      	blt.n	80115a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801153e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011542:	44c4      	add	ip, r8
 8011544:	fa0f fc8c 	sxth.w	ip, ip
 8011548:	4563      	cmp	r3, ip
 801154a:	da2a      	bge.n	80115a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801154c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801154e:	8926      	ldrh	r6, [r4, #8]
 8011550:	4416      	add	r6, r2
 8011552:	b236      	sxth	r6, r6
 8011554:	42be      	cmp	r6, r7
 8011556:	db24      	blt.n	80115a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011558:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801155c:	4438      	add	r0, r7
 801155e:	b200      	sxth	r0, r0
 8011560:	4286      	cmp	r6, r0
 8011562:	da1e      	bge.n	80115a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011564:	8963      	ldrh	r3, [r4, #10]
 8011566:	4419      	add	r1, r3
 8011568:	b209      	sxth	r1, r1
 801156a:	4541      	cmp	r1, r8
 801156c:	db08      	blt.n	8011580 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801156e:	4561      	cmp	r1, ip
 8011570:	da06      	bge.n	8011580 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011572:	89a3      	ldrh	r3, [r4, #12]
 8011574:	441a      	add	r2, r3
 8011576:	b212      	sxth	r2, r2
 8011578:	42ba      	cmp	r2, r7
 801157a:	db01      	blt.n	8011580 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801157c:	4282      	cmp	r2, r0
 801157e:	db10      	blt.n	80115a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011580:	4b21      	ldr	r3, [pc, #132]	@ (8011608 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011582:	9304      	str	r3, [sp, #16]
 8011584:	2302      	movs	r3, #2
 8011586:	f88d 3014 	strb.w	r3, [sp, #20]
 801158a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801158c:	2300      	movs	r3, #0
 801158e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011592:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011596:	f8ad 301a 	strh.w	r3, [sp, #26]
 801159a:	6803      	ldr	r3, [r0, #0]
 801159c:	a904      	add	r1, sp, #16
 801159e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80115a0:	4798      	blx	r3
 80115a2:	1d29      	adds	r1, r5, #4
 80115a4:	a802      	add	r0, sp, #8
 80115a6:	f7ff fa35 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80115aa:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80115ae:	88e0      	ldrh	r0, [r4, #6]
 80115b0:	7921      	ldrb	r1, [r4, #4]
 80115b2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80115b6:	8922      	ldrh	r2, [r4, #8]
 80115b8:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80115ba:	f88d 1014 	strb.w	r1, [sp, #20]
 80115be:	eba3 0808 	sub.w	r8, r3, r8
 80115c2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80115c6:	1bdf      	subs	r7, r3, r7
 80115c8:	b2bb      	uxth	r3, r7
 80115ca:	fa1f f888 	uxth.w	r8, r8
 80115ce:	8967      	ldrh	r7, [r4, #10]
 80115d0:	89a4      	ldrh	r4, [r4, #12]
 80115d2:	4440      	add	r0, r8
 80115d4:	4460      	add	r0, ip
 80115d6:	441a      	add	r2, r3
 80115d8:	44b8      	add	r8, r7
 80115da:	4423      	add	r3, r4
 80115dc:	f8ad 0016 	strh.w	r0, [sp, #22]
 80115e0:	4433      	add	r3, r6
 80115e2:	4432      	add	r2, r6
 80115e4:	44e0      	add	r8, ip
 80115e6:	4c09      	ldr	r4, [pc, #36]	@ (801160c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80115e8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80115ea:	9404      	str	r4, [sp, #16]
 80115ec:	f8ad 2018 	strh.w	r2, [sp, #24]
 80115f0:	f8ad 801a 	strh.w	r8, [sp, #26]
 80115f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115f8:	6803      	ldr	r3, [r0, #0]
 80115fa:	a904      	add	r1, sp, #16
 80115fc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80115fe:	4798      	blx	r3
 8011600:	b008      	add	sp, #32
 8011602:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011606:	bf00      	nop
 8011608:	080252dc 	.word	0x080252dc
 801160c:	080252f0 	.word	0x080252f0

08011610 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011610:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011612:	4604      	mov	r4, r0
 8011614:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011618:	3201      	adds	r2, #1
 801161a:	d112      	bne.n	8011642 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801161c:	6803      	ldr	r3, [r0, #0]
 801161e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011622:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011626:	f8ad 1004 	strh.w	r1, [sp, #4]
 801162a:	2500      	movs	r5, #0
 801162c:	9500      	str	r5, [sp, #0]
 801162e:	466d      	mov	r5, sp
 8011630:	4629      	mov	r1, r5
 8011632:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011636:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011638:	4798      	blx	r3
 801163a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801163e:	e884 0003 	stmia.w	r4, {r0, r1}
 8011642:	4620      	mov	r0, r4
 8011644:	b003      	add	sp, #12
 8011646:	bd30      	pop	{r4, r5, pc}

08011648 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011648:	b513      	push	{r0, r1, r4, lr}
 801164a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801164e:	3301      	adds	r3, #1
 8011650:	4604      	mov	r4, r0
 8011652:	d109      	bne.n	8011668 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011654:	4601      	mov	r1, r0
 8011656:	4668      	mov	r0, sp
 8011658:	f7ff f9dc 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801165c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011660:	8423      	strh	r3, [r4, #32]
 8011662:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011666:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011668:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801166c:	b002      	add	sp, #8
 801166e:	bd10      	pop	{r4, pc}

08011670 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011670:	b513      	push	{r0, r1, r4, lr}
 8011672:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8011676:	3301      	adds	r3, #1
 8011678:	4604      	mov	r4, r0
 801167a:	d109      	bne.n	8011690 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801167c:	4601      	mov	r1, r0
 801167e:	4668      	mov	r0, sp
 8011680:	f7ff f9c8 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011684:	f8bd 3000 	ldrh.w	r3, [sp]
 8011688:	8423      	strh	r3, [r4, #32]
 801168a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801168e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011690:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011694:	b002      	add	sp, #8
 8011696:	bd10      	pop	{r4, pc}

08011698 <_ZN8touchgfx6ScreenC1Ev>:
 8011698:	b570      	push	{r4, r5, r6, lr}
 801169a:	4605      	mov	r5, r0
 801169c:	4b16      	ldr	r3, [pc, #88]	@ (80116f8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801169e:	f845 3b04 	str.w	r3, [r5], #4
 80116a2:	2300      	movs	r3, #0
 80116a4:	8103      	strh	r3, [r0, #8]
 80116a6:	8143      	strh	r3, [r0, #10]
 80116a8:	8183      	strh	r3, [r0, #12]
 80116aa:	81c3      	strh	r3, [r0, #14]
 80116ac:	8203      	strh	r3, [r0, #16]
 80116ae:	8243      	strh	r3, [r0, #18]
 80116b0:	8283      	strh	r3, [r0, #20]
 80116b2:	82c3      	strh	r3, [r0, #22]
 80116b4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80116b8:	6203      	str	r3, [r0, #32]
 80116ba:	8483      	strh	r3, [r0, #36]	@ 0x24
 80116bc:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80116be:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80116c2:	4a0e      	ldr	r2, [pc, #56]	@ (80116fc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80116c4:	6343      	str	r3, [r0, #52]	@ 0x34
 80116c6:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80116ca:	4b0d      	ldr	r3, [pc, #52]	@ (8011700 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80116cc:	6042      	str	r2, [r0, #4]
 80116ce:	f9b3 6000 	ldrsh.w	r6, [r3]
 80116d2:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80116d4:	4a0b      	ldr	r2, [pc, #44]	@ (8011704 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80116d6:	4604      	mov	r4, r0
 80116d8:	2101      	movs	r1, #1
 80116da:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80116de:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80116e2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80116e6:	4628      	mov	r0, r5
 80116e8:	4798      	blx	r3
 80116ea:	6863      	ldr	r3, [r4, #4]
 80116ec:	4628      	mov	r0, r5
 80116ee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80116f0:	4631      	mov	r1, r6
 80116f2:	4798      	blx	r3
 80116f4:	4620      	mov	r0, r4
 80116f6:	bd70      	pop	{r4, r5, r6, pc}
 80116f8:	08025318 	.word	0x08025318
 80116fc:	08024e74 	.word	0x08024e74
 8011700:	20013fec 	.word	0x20013fec
 8011704:	20013fea 	.word	0x20013fea

08011708 <_ZN8touchgfx6Screen4drawEv>:
 8011708:	b507      	push	{r0, r1, r2, lr}
 801170a:	4b09      	ldr	r3, [pc, #36]	@ (8011730 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801170c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011710:	4b08      	ldr	r3, [pc, #32]	@ (8011734 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011712:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011716:	f9b3 3000 	ldrsh.w	r3, [r3]
 801171a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801171e:	6803      	ldr	r3, [r0, #0]
 8011720:	2100      	movs	r1, #0
 8011722:	9100      	str	r1, [sp, #0]
 8011724:	689b      	ldr	r3, [r3, #8]
 8011726:	4669      	mov	r1, sp
 8011728:	4798      	blx	r3
 801172a:	b003      	add	sp, #12
 801172c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011730:	20013fea 	.word	0x20013fea
 8011734:	20013fec 	.word	0x20013fec

08011738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801173c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011740:	2b00      	cmp	r3, #0
 8011742:	b089      	sub	sp, #36	@ 0x24
 8011744:	4680      	mov	r8, r0
 8011746:	460c      	mov	r4, r1
 8011748:	4615      	mov	r5, r2
 801174a:	dd0e      	ble.n	801176a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801174c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011750:	2b00      	cmp	r3, #0
 8011752:	dd0a      	ble.n	801176a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011754:	4628      	mov	r0, r5
 8011756:	f7ff ff5b 	bl	8011610 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801175a:	4621      	mov	r1, r4
 801175c:	f7fd fe2d 	bl	800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011760:	69eb      	ldr	r3, [r5, #28]
 8011762:	b928      	cbnz	r0, 8011770 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011764:	461d      	mov	r5, r3
 8011766:	2b00      	cmp	r3, #0
 8011768:	d1f4      	bne.n	8011754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801176a:	b009      	add	sp, #36	@ 0x24
 801176c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011770:	ae04      	add	r6, sp, #16
 8011772:	2b00      	cmp	r3, #0
 8011774:	f000 80b5 	beq.w	80118e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011778:	682b      	ldr	r3, [r5, #0]
 801177a:	4629      	mov	r1, r5
 801177c:	68db      	ldr	r3, [r3, #12]
 801177e:	a802      	add	r0, sp, #8
 8011780:	4798      	blx	r3
 8011782:	4628      	mov	r0, r5
 8011784:	f7ff ff60 	bl	8011648 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011788:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801178c:	4407      	add	r7, r0
 801178e:	4628      	mov	r0, r5
 8011790:	f7ff ff6e 	bl	8011670 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011794:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011798:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801179c:	f8ad 2014 	strh.w	r2, [sp, #20]
 80117a0:	4418      	add	r0, r3
 80117a2:	4621      	mov	r1, r4
 80117a4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80117a8:	f8ad 0012 	strh.w	r0, [sp, #18]
 80117ac:	b23f      	sxth	r7, r7
 80117ae:	4630      	mov	r0, r6
 80117b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80117b4:	f8ad 7010 	strh.w	r7, [sp, #16]
 80117b8:	f7f8 fdd6 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 80117bc:	4628      	mov	r0, r5
 80117be:	f7ff ff27 	bl	8011610 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80117c2:	4602      	mov	r2, r0
 80117c4:	e896 0003 	ldmia.w	r6, {r0, r1}
 80117c8:	ab06      	add	r3, sp, #24
 80117ca:	e883 0003 	stmia.w	r3, {r0, r1}
 80117ce:	4611      	mov	r1, r2
 80117d0:	4618      	mov	r0, r3
 80117d2:	f7f8 fdc9 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 80117d6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80117da:	f9b4 1000 	ldrsh.w	r1, [r4]
 80117de:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80117e2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80117e6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80117ea:	4299      	cmp	r1, r3
 80117ec:	d10b      	bne.n	8011806 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80117ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80117f2:	4552      	cmp	r2, sl
 80117f4:	d107      	bne.n	8011806 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80117f6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80117fa:	455a      	cmp	r2, fp
 80117fc:	d103      	bne.n	8011806 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80117fe:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011802:	454a      	cmp	r2, r9
 8011804:	d06d      	beq.n	80118e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011806:	f1bb 0f00 	cmp.w	fp, #0
 801180a:	dd65      	ble.n	80118d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801180c:	f1b9 0f00 	cmp.w	r9, #0
 8011810:	dd62      	ble.n	80118d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011812:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011816:	fa1f f08a 	uxth.w	r0, sl
 801181a:	4552      	cmp	r2, sl
 801181c:	9000      	str	r0, [sp, #0]
 801181e:	da12      	bge.n	8011846 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011820:	9301      	str	r3, [sp, #4]
 8011822:	9b00      	ldr	r3, [sp, #0]
 8011824:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011828:	f8ad 2012 	strh.w	r2, [sp, #18]
 801182c:	1a9a      	subs	r2, r3, r2
 801182e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011832:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011836:	f8ad 2016 	strh.w	r2, [sp, #22]
 801183a:	69ea      	ldr	r2, [r5, #28]
 801183c:	4631      	mov	r1, r6
 801183e:	4640      	mov	r0, r8
 8011840:	f7ff ff7a 	bl	8011738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011844:	9b01      	ldr	r3, [sp, #4]
 8011846:	f9b4 2000 	ldrsh.w	r2, [r4]
 801184a:	429a      	cmp	r2, r3
 801184c:	b29f      	uxth	r7, r3
 801184e:	da0d      	bge.n	801186c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011850:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011854:	1aba      	subs	r2, r7, r2
 8011856:	f8ad a012 	strh.w	sl, [sp, #18]
 801185a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801185e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011862:	69ea      	ldr	r2, [r5, #28]
 8011864:	4631      	mov	r1, r6
 8011866:	4640      	mov	r0, r8
 8011868:	f7ff ff66 	bl	8011738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801186c:	8822      	ldrh	r2, [r4, #0]
 801186e:	88a3      	ldrh	r3, [r4, #4]
 8011870:	445f      	add	r7, fp
 8011872:	4413      	add	r3, r2
 8011874:	b29b      	uxth	r3, r3
 8011876:	b2bf      	uxth	r7, r7
 8011878:	b23a      	sxth	r2, r7
 801187a:	b219      	sxth	r1, r3
 801187c:	4291      	cmp	r1, r2
 801187e:	dd0d      	ble.n	801189c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011880:	1bdb      	subs	r3, r3, r7
 8011882:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011886:	f8ad a012 	strh.w	sl, [sp, #18]
 801188a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801188e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011892:	69ea      	ldr	r2, [r5, #28]
 8011894:	4631      	mov	r1, r6
 8011896:	4640      	mov	r0, r8
 8011898:	f7ff ff4e 	bl	8011738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801189c:	88e2      	ldrh	r2, [r4, #6]
 801189e:	8863      	ldrh	r3, [r4, #2]
 80118a0:	4413      	add	r3, r2
 80118a2:	9a00      	ldr	r2, [sp, #0]
 80118a4:	444a      	add	r2, r9
 80118a6:	b29b      	uxth	r3, r3
 80118a8:	fa1f f982 	uxth.w	r9, r2
 80118ac:	fa0f f289 	sxth.w	r2, r9
 80118b0:	b219      	sxth	r1, r3
 80118b2:	428a      	cmp	r2, r1
 80118b4:	da15      	bge.n	80118e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80118b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80118ba:	f9b4 0000 	ldrsh.w	r0, [r4]
 80118be:	f8ad 1014 	strh.w	r1, [sp, #20]
 80118c2:	eba3 0309 	sub.w	r3, r3, r9
 80118c6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80118ca:	f8ad 2012 	strh.w	r2, [sp, #18]
 80118ce:	f8ad 3016 	strh.w	r3, [sp, #22]
 80118d2:	69ea      	ldr	r2, [r5, #28]
 80118d4:	4631      	mov	r1, r6
 80118d6:	e001      	b.n	80118dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80118d8:	69ea      	ldr	r2, [r5, #28]
 80118da:	4621      	mov	r1, r4
 80118dc:	4640      	mov	r0, r8
 80118de:	f7ff ff2b 	bl	8011738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80118e2:	4628      	mov	r0, r5
 80118e4:	f7ff fe94 	bl	8011610 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80118e8:	6861      	ldr	r1, [r4, #4]
 80118ea:	4602      	mov	r2, r0
 80118ec:	6820      	ldr	r0, [r4, #0]
 80118ee:	4633      	mov	r3, r6
 80118f0:	c303      	stmia	r3!, {r0, r1}
 80118f2:	4611      	mov	r1, r2
 80118f4:	4630      	mov	r0, r6
 80118f6:	f7f8 fd37 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 80118fa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80118fe:	2b00      	cmp	r3, #0
 8011900:	f77f af33 	ble.w	801176a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011904:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011908:	2b00      	cmp	r3, #0
 801190a:	f77f af2e 	ble.w	801176a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801190e:	4628      	mov	r0, r5
 8011910:	f7ff fe9a 	bl	8011648 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011914:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011918:	1a18      	subs	r0, r3, r0
 801191a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801191e:	4628      	mov	r0, r5
 8011920:	f7ff fea6 	bl	8011670 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011924:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011928:	1a18      	subs	r0, r3, r0
 801192a:	f8ad 0012 	strh.w	r0, [sp, #18]
 801192e:	682b      	ldr	r3, [r5, #0]
 8011930:	4631      	mov	r1, r6
 8011932:	689b      	ldr	r3, [r3, #8]
 8011934:	4628      	mov	r0, r5
 8011936:	4798      	blx	r3
 8011938:	e717      	b.n	801176a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801193a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801193a:	b570      	push	{r4, r5, r6, lr}
 801193c:	460c      	mov	r4, r1
 801193e:	b086      	sub	sp, #24
 8011940:	1d06      	adds	r6, r0, #4
 8011942:	2300      	movs	r3, #0
 8011944:	4631      	mov	r1, r6
 8011946:	4605      	mov	r5, r0
 8011948:	a802      	add	r0, sp, #8
 801194a:	9301      	str	r3, [sp, #4]
 801194c:	f7ff f862 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011950:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011954:	8822      	ldrh	r2, [r4, #0]
 8011956:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801195a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801195e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011962:	1ad2      	subs	r2, r2, r3
 8011964:	8863      	ldrh	r3, [r4, #2]
 8011966:	f8ad 2010 	strh.w	r2, [sp, #16]
 801196a:	1a5b      	subs	r3, r3, r1
 801196c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011970:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011974:	aa01      	add	r2, sp, #4
 8011976:	a904      	add	r1, sp, #16
 8011978:	4630      	mov	r0, r6
 801197a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801197e:	f7f8 fdcb 	bl	800a518 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011982:	9a01      	ldr	r2, [sp, #4]
 8011984:	b11a      	cbz	r2, 801198e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011986:	4621      	mov	r1, r4
 8011988:	4628      	mov	r0, r5
 801198a:	f7ff fed5 	bl	8011738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801198e:	b006      	add	sp, #24
 8011990:	bd70      	pop	{r4, r5, r6, pc}

08011992 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011992:	b530      	push	{r4, r5, lr}
 8011994:	4602      	mov	r2, r0
 8011996:	4604      	mov	r4, r0
 8011998:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801199c:	b085      	sub	sp, #20
 801199e:	460d      	mov	r5, r1
 80119a0:	6851      	ldr	r1, [r2, #4]
 80119a2:	466b      	mov	r3, sp
 80119a4:	c303      	stmia	r3!, {r0, r1}
 80119a6:	4629      	mov	r1, r5
 80119a8:	4668      	mov	r0, sp
 80119aa:	f7f8 fcdd 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 80119ae:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80119b2:	b12b      	cbz	r3, 80119c0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80119b4:	4669      	mov	r1, sp
 80119b6:	4620      	mov	r0, r4
 80119b8:	f7ff ffbf 	bl	801193a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80119bc:	b005      	add	sp, #20
 80119be:	bd30      	pop	{r4, r5, pc}
 80119c0:	3404      	adds	r4, #4
 80119c2:	4621      	mov	r1, r4
 80119c4:	a802      	add	r0, sp, #8
 80119c6:	f7ff f825 	bl	8010a14 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80119ca:	f8bd 3000 	ldrh.w	r3, [sp]
 80119ce:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80119d2:	1a9b      	subs	r3, r3, r2
 80119d4:	f8ad 3000 	strh.w	r3, [sp]
 80119d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80119dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80119e0:	4669      	mov	r1, sp
 80119e2:	1a9b      	subs	r3, r3, r2
 80119e4:	4620      	mov	r0, r4
 80119e6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80119ea:	f7f8 fd5c 	bl	800a4a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80119ee:	e7e5      	b.n	80119bc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080119f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80119f0:	680a      	ldr	r2, [r1, #0]
 80119f2:	460b      	mov	r3, r1
 80119f4:	6992      	ldr	r2, [r2, #24]
 80119f6:	1d01      	adds	r1, r0, #4
 80119f8:	4618      	mov	r0, r3
 80119fa:	4710      	bx	r2

080119fc <_ZN8touchgfx12TextProviderC1Ev>:
 80119fc:	b538      	push	{r3, r4, r5, lr}
 80119fe:	2500      	movs	r5, #0
 8011a00:	2302      	movs	r3, #2
 8011a02:	4604      	mov	r4, r0
 8011a04:	e9c0 5500 	strd	r5, r5, [r0]
 8011a08:	7403      	strb	r3, [r0, #16]
 8011a0a:	6145      	str	r5, [r0, #20]
 8011a0c:	7605      	strb	r5, [r0, #24]
 8011a0e:	83c5      	strh	r5, [r0, #30]
 8011a10:	8405      	strh	r5, [r0, #32]
 8011a12:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011a14:	8705      	strh	r5, [r0, #56]	@ 0x38
 8011a16:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8011a18:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8011a1c:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8011a20:	220e      	movs	r2, #14
 8011a22:	4629      	mov	r1, r5
 8011a24:	304c      	adds	r0, #76	@ 0x4c
 8011a26:	f011 f9b6 	bl	8022d96 <memset>
 8011a2a:	2301      	movs	r3, #1
 8011a2c:	4620      	mov	r0, r4
 8011a2e:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8011a32:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011a36:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8011a3a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8011a3e:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8011a42:	f7f1 fa37 	bl	8002eb4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011a46:	4620      	mov	r0, r4
 8011a48:	bd38      	pop	{r3, r4, r5, pc}

08011a4a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011a4a:	b530      	push	{r4, r5, lr}
 8011a4c:	2500      	movs	r5, #0
 8011a4e:	2401      	movs	r4, #1
 8011a50:	6843      	ldr	r3, [r0, #4]
 8011a52:	b913      	cbnz	r3, 8011a5a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011a54:	6803      	ldr	r3, [r0, #0]
 8011a56:	b313      	cbz	r3, 8011a9e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011a58:	6043      	str	r3, [r0, #4]
 8011a5a:	7e03      	ldrb	r3, [r0, #24]
 8011a5c:	b143      	cbz	r3, 8011a70 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011a5e:	6943      	ldr	r3, [r0, #20]
 8011a60:	b12b      	cbz	r3, 8011a6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011a62:	881a      	ldrh	r2, [r3, #0]
 8011a64:	b11a      	cbz	r2, 8011a6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011a66:	1c9a      	adds	r2, r3, #2
 8011a68:	6142      	str	r2, [r0, #20]
 8011a6a:	8818      	ldrh	r0, [r3, #0]
 8011a6c:	bd30      	pop	{r4, r5, pc}
 8011a6e:	7605      	strb	r5, [r0, #24]
 8011a70:	6843      	ldr	r3, [r0, #4]
 8011a72:	8819      	ldrh	r1, [r3, #0]
 8011a74:	b199      	cbz	r1, 8011a9e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011a76:	1c9a      	adds	r2, r3, #2
 8011a78:	2902      	cmp	r1, #2
 8011a7a:	6042      	str	r2, [r0, #4]
 8011a7c:	d1f5      	bne.n	8011a6a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011a7e:	7c03      	ldrb	r3, [r0, #16]
 8011a80:	2b01      	cmp	r3, #1
 8011a82:	d8e5      	bhi.n	8011a50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a84:	1c5a      	adds	r2, r3, #1
 8011a86:	3302      	adds	r3, #2
 8011a88:	7402      	strb	r2, [r0, #16]
 8011a8a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011a8e:	6143      	str	r3, [r0, #20]
 8011a90:	2b00      	cmp	r3, #0
 8011a92:	d0dd      	beq.n	8011a50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a94:	881b      	ldrh	r3, [r3, #0]
 8011a96:	2b00      	cmp	r3, #0
 8011a98:	d0da      	beq.n	8011a50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a9a:	7604      	strb	r4, [r0, #24]
 8011a9c:	e7d8      	b.n	8011a50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a9e:	2000      	movs	r0, #0
 8011aa0:	e7e4      	b.n	8011a6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011aa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011aa2:	b430      	push	{r4, r5}
 8011aa4:	6001      	str	r1, [r0, #0]
 8011aa6:	2100      	movs	r1, #0
 8011aa8:	6041      	str	r1, [r0, #4]
 8011aaa:	6815      	ldr	r5, [r2, #0]
 8011aac:	6085      	str	r5, [r0, #8]
 8011aae:	6852      	ldr	r2, [r2, #4]
 8011ab0:	6443      	str	r3, [r0, #68]	@ 0x44
 8011ab2:	9b02      	ldr	r3, [sp, #8]
 8011ab4:	60c2      	str	r2, [r0, #12]
 8011ab6:	7401      	strb	r1, [r0, #16]
 8011ab8:	6141      	str	r1, [r0, #20]
 8011aba:	7601      	strb	r1, [r0, #24]
 8011abc:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011abe:	8401      	strh	r1, [r0, #32]
 8011ac0:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011ac4:	6483      	str	r3, [r0, #72]	@ 0x48
 8011ac6:	bc30      	pop	{r4, r5}
 8011ac8:	f7f1 b9f4 	b.w	8002eb4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011acc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011acc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ace:	4605      	mov	r5, r0
 8011ad0:	4608      	mov	r0, r1
 8011ad2:	b1e9      	cbz	r1, 8011b10 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011ad4:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8011ad8:	460b      	mov	r3, r1
 8011ada:	f101 0708 	add.w	r7, r1, #8
 8011ade:	4622      	mov	r2, r4
 8011ae0:	6818      	ldr	r0, [r3, #0]
 8011ae2:	6859      	ldr	r1, [r3, #4]
 8011ae4:	4626      	mov	r6, r4
 8011ae6:	c603      	stmia	r6!, {r0, r1}
 8011ae8:	3308      	adds	r3, #8
 8011aea:	42bb      	cmp	r3, r7
 8011aec:	4634      	mov	r4, r6
 8011aee:	d1f7      	bne.n	8011ae0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011af0:	6818      	ldr	r0, [r3, #0]
 8011af2:	6030      	str	r0, [r6, #0]
 8011af4:	889b      	ldrh	r3, [r3, #4]
 8011af6:	80b3      	strh	r3, [r6, #4]
 8011af8:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011afc:	015b      	lsls	r3, r3, #5
 8011afe:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011b02:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011b06:	430b      	orrs	r3, r1
 8011b08:	425b      	negs	r3, r3
 8011b0a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011b0e:	4610      	mov	r0, r2
 8011b10:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011b12 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011b12:	b538      	push	{r3, r4, r5, lr}
 8011b14:	460c      	mov	r4, r1
 8011b16:	6811      	ldr	r1, [r2, #0]
 8011b18:	4610      	mov	r0, r2
 8011b1a:	68cd      	ldr	r5, [r1, #12]
 8011b1c:	4619      	mov	r1, r3
 8011b1e:	47a8      	blx	r5
 8011b20:	2800      	cmp	r0, #0
 8011b22:	bf08      	it	eq
 8011b24:	4620      	moveq	r0, r4
 8011b26:	bd38      	pop	{r3, r4, r5, pc}

08011b28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011b28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b2c:	468c      	mov	ip, r1
 8011b2e:	4605      	mov	r5, r0
 8011b30:	4614      	mov	r4, r2
 8011b32:	b942      	cbnz	r2, 8011b46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8011b34:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011b38:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8011b3c:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8011b40:	4620      	mov	r0, r4
 8011b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b46:	7b50      	ldrb	r0, [r2, #13]
 8011b48:	8893      	ldrh	r3, [r2, #4]
 8011b4a:	0106      	lsls	r6, r0, #4
 8011b4c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011b50:	79e6      	ldrb	r6, [r4, #7]
 8011b52:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011b56:	4316      	orrs	r6, r2
 8011b58:	185a      	adds	r2, r3, r1
 8011b5a:	b291      	uxth	r1, r2
 8011b5c:	291d      	cmp	r1, #29
 8011b5e:	b2b7      	uxth	r7, r6
 8011b60:	d87e      	bhi.n	8011c60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011b62:	2201      	movs	r2, #1
 8011b64:	408a      	lsls	r2, r1
 8011b66:	498a      	ldr	r1, [pc, #552]	@ (8011d90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8011b68:	420a      	tst	r2, r1
 8011b6a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011b6e:	d12d      	bne.n	8011bcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011b70:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011b74:	d074      	beq.n	8011c60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011b76:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011b7a:	4623      	mov	r3, r4
 8011b7c:	f104 0e08 	add.w	lr, r4, #8
 8011b80:	4614      	mov	r4, r2
 8011b82:	6818      	ldr	r0, [r3, #0]
 8011b84:	6859      	ldr	r1, [r3, #4]
 8011b86:	4694      	mov	ip, r2
 8011b88:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011b8c:	3308      	adds	r3, #8
 8011b8e:	4573      	cmp	r3, lr
 8011b90:	4662      	mov	r2, ip
 8011b92:	d1f6      	bne.n	8011b82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8011b94:	6818      	ldr	r0, [r3, #0]
 8011b96:	f8cc 0000 	str.w	r0, [ip]
 8011b9a:	889b      	ldrh	r3, [r3, #4]
 8011b9c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011ba0:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8011ba4:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8011ba8:	b2b3      	uxth	r3, r6
 8011baa:	1aca      	subs	r2, r1, r3
 8011bac:	b292      	uxth	r2, r2
 8011bae:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8011bb2:	10d2      	asrs	r2, r2, #3
 8011bb4:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8011bb8:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011bbc:	4302      	orrs	r2, r0
 8011bbe:	1bcf      	subs	r7, r1, r7
 8011bc0:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8011bc4:	1afb      	subs	r3, r7, r3
 8011bc6:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8011bca:	e7b9      	b.n	8011b40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011bcc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011bd0:	4623      	mov	r3, r4
 8011bd2:	f104 0808 	add.w	r8, r4, #8
 8011bd6:	4614      	mov	r4, r2
 8011bd8:	6818      	ldr	r0, [r3, #0]
 8011bda:	6859      	ldr	r1, [r3, #4]
 8011bdc:	4696      	mov	lr, r2
 8011bde:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011be2:	3308      	adds	r3, #8
 8011be4:	4543      	cmp	r3, r8
 8011be6:	4672      	mov	r2, lr
 8011be8:	d1f6      	bne.n	8011bd8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8011bea:	6818      	ldr	r0, [r3, #0]
 8011bec:	f8ce 0000 	str.w	r0, [lr]
 8011bf0:	889b      	ldrh	r3, [r3, #4]
 8011bf2:	f8ae 3004 	strh.w	r3, [lr, #4]
 8011bf6:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8011bf8:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8011bfc:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011bfe:	f640 6333 	movw	r3, #3635	@ 0xe33
 8011c02:	4299      	cmp	r1, r3
 8011c04:	d111      	bne.n	8011c2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8011c06:	f8dc 3000 	ldr.w	r3, [ip]
 8011c0a:	4660      	mov	r0, ip
 8011c0c:	68db      	ldr	r3, [r3, #12]
 8011c0e:	4798      	blx	r3
 8011c10:	7b41      	ldrb	r1, [r0, #13]
 8011c12:	00cb      	lsls	r3, r1, #3
 8011c14:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011c18:	7a03      	ldrb	r3, [r0, #8]
 8011c1a:	4313      	orrs	r3, r2
 8011c1c:	064a      	lsls	r2, r1, #25
 8011c1e:	bf44      	itt	mi
 8011c20:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011c24:	b21b      	sxthmi	r3, r3
 8011c26:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011c2a:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8011c2e:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8011c32:	443b      	add	r3, r7
 8011c34:	4433      	add	r3, r6
 8011c36:	b29b      	uxth	r3, r3
 8011c38:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011c3c:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8011c40:	10db      	asrs	r3, r3, #3
 8011c42:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011c46:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011c4a:	4313      	orrs	r3, r2
 8011c4c:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8011c50:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8011c54:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011c58:	1a9b      	subs	r3, r3, r2
 8011c5a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011c5e:	e76f      	b.n	8011b40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011c60:	f023 0204 	bic.w	r2, r3, #4
 8011c64:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011c68:	428a      	cmp	r2, r1
 8011c6a:	d003      	beq.n	8011c74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8011c6c:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8011c70:	4293      	cmp	r3, r2
 8011c72:	d137      	bne.n	8011ce4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8011c74:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011c78:	4622      	mov	r2, r4
 8011c7a:	f104 0808 	add.w	r8, r4, #8
 8011c7e:	4634      	mov	r4, r6
 8011c80:	6810      	ldr	r0, [r2, #0]
 8011c82:	6851      	ldr	r1, [r2, #4]
 8011c84:	46b6      	mov	lr, r6
 8011c86:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011c8a:	3208      	adds	r2, #8
 8011c8c:	4542      	cmp	r2, r8
 8011c8e:	4676      	mov	r6, lr
 8011c90:	d1f6      	bne.n	8011c80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8011c92:	6810      	ldr	r0, [r2, #0]
 8011c94:	f8ce 0000 	str.w	r0, [lr]
 8011c98:	8892      	ldrh	r2, [r2, #4]
 8011c9a:	f8ae 2004 	strh.w	r2, [lr, #4]
 8011c9e:	3b01      	subs	r3, #1
 8011ca0:	b29b      	uxth	r3, r3
 8011ca2:	4662      	mov	r2, ip
 8011ca4:	4621      	mov	r1, r4
 8011ca6:	4628      	mov	r0, r5
 8011ca8:	f7ff ff33 	bl	8011b12 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011cac:	7b41      	ldrb	r1, [r0, #13]
 8011cae:	00cb      	lsls	r3, r1, #3
 8011cb0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011cb4:	7a03      	ldrb	r3, [r0, #8]
 8011cb6:	0648      	lsls	r0, r1, #25
 8011cb8:	ea43 0302 	orr.w	r3, r3, r2
 8011cbc:	bf44      	itt	mi
 8011cbe:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011cc2:	b21b      	sxthmi	r3, r3
 8011cc4:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011cc8:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011ccc:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8011cd0:	005b      	lsls	r3, r3, #1
 8011cd2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011cd6:	4313      	orrs	r3, r2
 8011cd8:	115a      	asrs	r2, r3, #5
 8011cda:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011cde:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8011ce2:	e046      	b.n	8011d72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8011ce4:	00c2      	lsls	r2, r0, #3
 8011ce6:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8011cea:	7a22      	ldrb	r2, [r4, #8]
 8011cec:	430a      	orrs	r2, r1
 8011cee:	0641      	lsls	r1, r0, #25
 8011cf0:	bf44      	itt	mi
 8011cf2:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8011cf6:	b212      	sxthmi	r2, r2
 8011cf8:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011cfc:	f640 6109 	movw	r1, #3593	@ 0xe09
 8011d00:	f023 0210 	bic.w	r2, r3, #16
 8011d04:	428a      	cmp	r2, r1
 8011d06:	d003      	beq.n	8011d10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8011d08:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011d0c:	4293      	cmp	r3, r2
 8011d0e:	d13d      	bne.n	8011d8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8011d10:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011d14:	f104 0808 	add.w	r8, r4, #8
 8011d18:	4696      	mov	lr, r2
 8011d1a:	6820      	ldr	r0, [r4, #0]
 8011d1c:	6861      	ldr	r1, [r4, #4]
 8011d1e:	4616      	mov	r6, r2
 8011d20:	c603      	stmia	r6!, {r0, r1}
 8011d22:	3408      	adds	r4, #8
 8011d24:	4544      	cmp	r4, r8
 8011d26:	4632      	mov	r2, r6
 8011d28:	d1f7      	bne.n	8011d1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8011d2a:	6820      	ldr	r0, [r4, #0]
 8011d2c:	6030      	str	r0, [r6, #0]
 8011d2e:	88a1      	ldrh	r1, [r4, #4]
 8011d30:	80b1      	strh	r1, [r6, #4]
 8011d32:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8011d36:	0076      	lsls	r6, r6, #1
 8011d38:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011d3c:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8011d40:	4316      	orrs	r6, r2
 8011d42:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011d46:	4293      	cmp	r3, r2
 8011d48:	bf1a      	itte	ne
 8011d4a:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011d4e:	b29b      	uxthne	r3, r3
 8011d50:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011d54:	4662      	mov	r2, ip
 8011d56:	4671      	mov	r1, lr
 8011d58:	4628      	mov	r0, r5
 8011d5a:	4674      	mov	r4, lr
 8011d5c:	f7ff fed9 	bl	8011b12 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011d60:	7b43      	ldrb	r3, [r0, #13]
 8011d62:	7a82      	ldrb	r2, [r0, #10]
 8011d64:	005b      	lsls	r3, r3, #1
 8011d66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011d6a:	4313      	orrs	r3, r2
 8011d6c:	1af6      	subs	r6, r6, r3
 8011d6e:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8011d72:	7b61      	ldrb	r1, [r4, #13]
 8011d74:	00cb      	lsls	r3, r1, #3
 8011d76:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011d7a:	7a23      	ldrb	r3, [r4, #8]
 8011d7c:	4313      	orrs	r3, r2
 8011d7e:	064a      	lsls	r2, r1, #25
 8011d80:	bf44      	itt	mi
 8011d82:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011d86:	b21b      	sxthmi	r3, r3
 8011d88:	1bdb      	subs	r3, r3, r7
 8011d8a:	e71c      	b.n	8011bc6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011d8c:	2300      	movs	r3, #0
 8011d8e:	e7a6      	b.n	8011cde <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8011d90:	3fc00079 	.word	0x3fc00079

08011d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011d94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d98:	4604      	mov	r4, r0
 8011d9a:	b942      	cbnz	r2, 8011dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011d9c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011da0:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8011da4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8011da8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8011dac:	e047      	b.n	8011e3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011dae:	7b51      	ldrb	r1, [r2, #13]
 8011db0:	8893      	ldrh	r3, [r2, #4]
 8011db2:	010d      	lsls	r5, r1, #4
 8011db4:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8011db8:	79d5      	ldrb	r5, [r2, #7]
 8011dba:	4305      	orrs	r5, r0
 8011dbc:	2d04      	cmp	r5, #4
 8011dbe:	bfcc      	ite	gt
 8011dc0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011dc4:	f04f 0e01 	movle.w	lr, #1
 8011dc8:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8011dcc:	f200 80ab 	bhi.w	8011f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011dd0:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8011dd4:	4283      	cmp	r3, r0
 8011dd6:	d216      	bcs.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011dd8:	f240 605b 	movw	r0, #1627	@ 0x65b
 8011ddc:	4283      	cmp	r3, r0
 8011dde:	d859      	bhi.n	8011e94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011de0:	f240 6057 	movw	r0, #1623	@ 0x657
 8011de4:	4283      	cmp	r3, r0
 8011de6:	d20e      	bcs.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011de8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011dec:	d24a      	bcs.n	8011e84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011dee:	f240 604e 	movw	r0, #1614	@ 0x64e
 8011df2:	4283      	cmp	r3, r0
 8011df4:	d207      	bcs.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011df6:	f240 601a 	movw	r0, #1562	@ 0x61a
 8011dfa:	4283      	cmp	r3, r0
 8011dfc:	d02a      	beq.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011dfe:	d821      	bhi.n	8011e44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011e00:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8011e04:	d35b      	bcc.n	8011ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011e06:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8011e0a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011e0e:	f040 80d0 	bne.w	8011fb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011e12:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8011e16:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011e1a:	f040 80ca 	bne.w	8011fb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011e1e:	00cb      	lsls	r3, r1, #3
 8011e20:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011e24:	7a13      	ldrb	r3, [r2, #8]
 8011e26:	0649      	lsls	r1, r1, #25
 8011e28:	ea43 0300 	orr.w	r3, r3, r0
 8011e2c:	bf44      	itt	mi
 8011e2e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e32:	b21b      	sxthmi	r3, r3
 8011e34:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011e38:	1b5d      	subs	r5, r3, r5
 8011e3a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011e3e:	4610      	mov	r0, r2
 8011e40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e44:	f240 604b 	movw	r0, #1611	@ 0x64b
 8011e48:	4283      	cmp	r3, r0
 8011e4a:	d338      	bcc.n	8011ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011e4c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8011e50:	4283      	cmp	r3, r0
 8011e52:	d9d8      	bls.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e54:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8011e58:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8011e5c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011e60:	f040 80f2 	bne.w	8012048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011e64:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011e68:	f040 80ee 	bne.w	8012048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011e6c:	00cb      	lsls	r3, r1, #3
 8011e6e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011e72:	7a13      	ldrb	r3, [r2, #8]
 8011e74:	064e      	lsls	r6, r1, #25
 8011e76:	ea43 0300 	orr.w	r3, r3, r0
 8011e7a:	bf44      	itt	mi
 8011e7c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e80:	b21b      	sxthmi	r3, r3
 8011e82:	e7d9      	b.n	8011e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011e84:	f240 6054 	movw	r0, #1620	@ 0x654
 8011e88:	4283      	cmp	r3, r0
 8011e8a:	d8e3      	bhi.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e8c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011e90:	d9e0      	bls.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e92:	e7b8      	b.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e94:	f240 6074 	movw	r0, #1652	@ 0x674
 8011e98:	4283      	cmp	r3, r0
 8011e9a:	d0b4      	beq.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e9c:	d82d      	bhi.n	8011efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8011e9e:	f240 605e 	movw	r0, #1630	@ 0x65e
 8011ea2:	4283      	cmp	r3, r0
 8011ea4:	d804      	bhi.n	8011eb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011ea6:	f240 605d 	movw	r0, #1629	@ 0x65d
 8011eaa:	4283      	cmp	r3, r0
 8011eac:	d3d2      	bcc.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011eae:	e7aa      	b.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011eb0:	f240 605f 	movw	r0, #1631	@ 0x65f
 8011eb4:	4283      	cmp	r3, r0
 8011eb6:	d0cd      	beq.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011eb8:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8011ebc:	d0a3      	beq.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ebe:	00cb      	lsls	r3, r1, #3
 8011ec0:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011ec4:	7a13      	ldrb	r3, [r2, #8]
 8011ec6:	0649      	lsls	r1, r1, #25
 8011ec8:	ea43 0300 	orr.w	r3, r3, r0
 8011ecc:	bf44      	itt	mi
 8011ece:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011ed2:	b21b      	sxthmi	r3, r3
 8011ed4:	1b5d      	subs	r5, r3, r5
 8011ed6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011eda:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011ede:	7b53      	ldrb	r3, [r2, #13]
 8011ee0:	015b      	lsls	r3, r3, #5
 8011ee2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011ee6:	7993      	ldrb	r3, [r2, #6]
 8011ee8:	430b      	orrs	r3, r1
 8011eea:	005b      	lsls	r3, r3, #1
 8011eec:	2105      	movs	r1, #5
 8011eee:	fb93 f3f1 	sdiv	r3, r3, r1
 8011ef2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011ef6:	440b      	add	r3, r1
 8011ef8:	e756      	b.n	8011da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011efa:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8011efe:	4283      	cmp	r3, r0
 8011f00:	d809      	bhi.n	8011f16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011f02:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011f06:	4283      	cmp	r3, r0
 8011f08:	f4bf af7d 	bcs.w	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f0c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8011f10:	2b05      	cmp	r3, #5
 8011f12:	d8d4      	bhi.n	8011ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011f14:	e777      	b.n	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f16:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8011f1a:	4283      	cmp	r3, r0
 8011f1c:	d09a      	beq.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f1e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8011f22:	4283      	cmp	r3, r0
 8011f24:	e7ca      	b.n	8011ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011f26:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011f2a:	d22b      	bcs.n	8011f84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011f2c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8011f30:	4283      	cmp	r3, r0
 8011f32:	d28f      	bcs.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f34:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011f38:	4283      	cmp	r3, r0
 8011f3a:	d816      	bhi.n	8011f6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011f3c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8011f40:	4283      	cmp	r3, r0
 8011f42:	f4bf af60 	bcs.w	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f46:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8011f4a:	4283      	cmp	r3, r0
 8011f4c:	d80a      	bhi.n	8011f64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011f4e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8011f52:	4283      	cmp	r3, r0
 8011f54:	f4bf af57 	bcs.w	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f58:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8011f5c:	4283      	cmp	r3, r0
 8011f5e:	f43f af79 	beq.w	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f62:	e7ac      	b.n	8011ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011f64:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8011f68:	e7f8      	b.n	8011f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011f6a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8011f6e:	4283      	cmp	r3, r0
 8011f70:	d802      	bhi.n	8011f78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011f72:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8011f76:	e798      	b.n	8011eaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011f78:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8011f7c:	4283      	cmp	r3, r0
 8011f7e:	f47f af42 	bne.w	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f82:	e767      	b.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f84:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011f88:	4283      	cmp	r3, r0
 8011f8a:	f43f af63 	beq.w	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f8e:	d802      	bhi.n	8011f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011f90:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8011f94:	e7f2      	b.n	8011f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011f96:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8011f9a:	4283      	cmp	r3, r0
 8011f9c:	d805      	bhi.n	8011faa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011f9e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8011fa2:	4283      	cmp	r3, r0
 8011fa4:	f4ff af2f 	bcc.w	8011e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011fa8:	e754      	b.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011faa:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8011fae:	4283      	cmp	r3, r0
 8011fb0:	e7af      	b.n	8011f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011fb2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011fb6:	4617      	mov	r7, r2
 8011fb8:	f102 0808 	add.w	r8, r2, #8
 8011fbc:	4666      	mov	r6, ip
 8011fbe:	6838      	ldr	r0, [r7, #0]
 8011fc0:	6879      	ldr	r1, [r7, #4]
 8011fc2:	46e6      	mov	lr, ip
 8011fc4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011fc8:	3708      	adds	r7, #8
 8011fca:	4547      	cmp	r7, r8
 8011fcc:	46f4      	mov	ip, lr
 8011fce:	d1f6      	bne.n	8011fbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011fd0:	6838      	ldr	r0, [r7, #0]
 8011fd2:	f8ce 0000 	str.w	r0, [lr]
 8011fd6:	88b9      	ldrh	r1, [r7, #4]
 8011fd8:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011fdc:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011fe0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011fe4:	d009      	beq.n	8011ffa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8011fe6:	7b51      	ldrb	r1, [r2, #13]
 8011fe8:	7992      	ldrb	r2, [r2, #6]
 8011fea:	0149      	lsls	r1, r1, #5
 8011fec:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011ff0:	4311      	orrs	r1, r2
 8011ff2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011ff6:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011ffa:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011ffe:	b2ad      	uxth	r5, r5
 8012000:	d00d      	beq.n	801201e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8012002:	442b      	add	r3, r5
 8012004:	b29b      	uxth	r3, r3
 8012006:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801200a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801200e:	10db      	asrs	r3, r3, #3
 8012010:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012014:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012018:	4313      	orrs	r3, r2
 801201a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801201e:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012022:	00cb      	lsls	r3, r1, #3
 8012024:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012028:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801202c:	064f      	lsls	r7, r1, #25
 801202e:	ea43 0302 	orr.w	r3, r3, r2
 8012032:	bf44      	itt	mi
 8012034:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012038:	b21b      	sxthmi	r3, r3
 801203a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801203e:	1b5b      	subs	r3, r3, r5
 8012040:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012044:	4632      	mov	r2, r6
 8012046:	e6fa      	b.n	8011e3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012048:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801204c:	4617      	mov	r7, r2
 801204e:	f102 0908 	add.w	r9, r2, #8
 8012052:	4666      	mov	r6, ip
 8012054:	6838      	ldr	r0, [r7, #0]
 8012056:	6879      	ldr	r1, [r7, #4]
 8012058:	46e0      	mov	r8, ip
 801205a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801205e:	3708      	adds	r7, #8
 8012060:	454f      	cmp	r7, r9
 8012062:	46c4      	mov	ip, r8
 8012064:	d1f6      	bne.n	8012054 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012066:	6838      	ldr	r0, [r7, #0]
 8012068:	f8c8 0000 	str.w	r0, [r8]
 801206c:	88b9      	ldrh	r1, [r7, #4]
 801206e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012072:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012076:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801207a:	d009      	beq.n	8012090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801207c:	7b51      	ldrb	r1, [r2, #13]
 801207e:	7992      	ldrb	r2, [r2, #6]
 8012080:	0149      	lsls	r1, r1, #5
 8012082:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012086:	4311      	orrs	r1, r2
 8012088:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801208c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012090:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012094:	d00e      	beq.n	80120b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012096:	eba3 030e 	sub.w	r3, r3, lr
 801209a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801209e:	b29b      	uxth	r3, r3
 80120a0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80120a4:	10db      	asrs	r3, r3, #3
 80120a6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80120aa:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80120ae:	4313      	orrs	r3, r2
 80120b0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80120b4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80120b8:	00cb      	lsls	r3, r1, #3
 80120ba:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80120be:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80120c2:	0648      	lsls	r0, r1, #25
 80120c4:	ea43 0302 	orr.w	r3, r3, r2
 80120c8:	bf44      	itt	mi
 80120ca:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80120ce:	b21b      	sxthmi	r3, r3
 80120d0:	1b5d      	subs	r5, r3, r5
 80120d2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80120d6:	e7b5      	b.n	8012044 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080120d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80120d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120dc:	461e      	mov	r6, r3
 80120de:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80120e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80120e4:	4604      	mov	r4, r0
 80120e6:	4617      	mov	r7, r2
 80120e8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80120ec:	f7f0 fea0 	bl	8002e30 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80120f0:	4605      	mov	r5, r0
 80120f2:	b918      	cbnz	r0, 80120fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80120f4:	6030      	str	r0, [r6, #0]
 80120f6:	4628      	mov	r0, r5
 80120f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80120fc:	683b      	ldr	r3, [r7, #0]
 80120fe:	4601      	mov	r1, r0
 8012100:	68db      	ldr	r3, [r3, #12]
 8012102:	4638      	mov	r0, r7
 8012104:	4798      	blx	r3
 8012106:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801210a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801210e:	4602      	mov	r2, r0
 8012110:	6030      	str	r0, [r6, #0]
 8012112:	d213      	bcs.n	801213c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012114:	4643      	mov	r3, r8
 8012116:	4639      	mov	r1, r7
 8012118:	4620      	mov	r0, r4
 801211a:	f7ff fe3b 	bl	8011d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801211e:	6030      	str	r0, [r6, #0]
 8012120:	6833      	ldr	r3, [r6, #0]
 8012122:	b143      	cbz	r3, 8012136 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012124:	7b5a      	ldrb	r2, [r3, #13]
 8012126:	7a9b      	ldrb	r3, [r3, #10]
 8012128:	0052      	lsls	r2, r2, #1
 801212a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801212e:	4313      	orrs	r3, r2
 8012130:	bf0c      	ite	eq
 8012132:	2301      	moveq	r3, #1
 8012134:	2300      	movne	r3, #0
 8012136:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801213a:	e7dc      	b.n	80120f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801213c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012140:	b29b      	uxth	r3, r3
 8012142:	2b7f      	cmp	r3, #127	@ 0x7f
 8012144:	d804      	bhi.n	8012150 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012146:	4639      	mov	r1, r7
 8012148:	4620      	mov	r0, r4
 801214a:	f7ff fced 	bl	8011b28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801214e:	e7e6      	b.n	801211e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012150:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012154:	2b00      	cmp	r3, #0
 8012156:	d0e3      	beq.n	8012120 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012158:	f640 1302 	movw	r3, #2306	@ 0x902
 801215c:	429d      	cmp	r5, r3
 801215e:	d1df      	bne.n	8012120 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012160:	4601      	mov	r1, r0
 8012162:	4620      	mov	r0, r4
 8012164:	f7ff fcb2 	bl	8011acc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012168:	e7d9      	b.n	801211e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801216a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801216a:	b510      	push	{r4, lr}
 801216c:	4604      	mov	r4, r0
 801216e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012172:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012174:	b1f1      	cbz	r1, 80121b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012176:	2b0a      	cmp	r3, #10
 8012178:	d02f      	beq.n	80121da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801217a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801217c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012180:	3901      	subs	r1, #1
 8012182:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012184:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012188:	1c51      	adds	r1, r2, #1
 801218a:	b289      	uxth	r1, r1
 801218c:	2901      	cmp	r1, #1
 801218e:	bf84      	itt	hi
 8012190:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012194:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012196:	f103 0201 	add.w	r2, r3, #1
 801219a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801219c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801219e:	bf98      	it	ls
 80121a0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80121a2:	4413      	add	r3, r2
 80121a4:	b29b      	uxth	r3, r3
 80121a6:	2b09      	cmp	r3, #9
 80121a8:	bf88      	it	hi
 80121aa:	3b0a      	subhi	r3, #10
 80121ac:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80121b0:	8458      	strh	r0, [r3, #34]	@ 0x22
 80121b2:	e7dc      	b.n	801216e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80121b4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80121b6:	2b0a      	cmp	r3, #10
 80121b8:	d00f      	beq.n	80121da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80121ba:	4620      	mov	r0, r4
 80121bc:	f7ff fc45 	bl	8011a4a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80121c0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80121c2:	1c5a      	adds	r2, r3, #1
 80121c4:	8722      	strh	r2, [r4, #56]	@ 0x38
 80121c6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80121c8:	4413      	add	r3, r2
 80121ca:	b29b      	uxth	r3, r3
 80121cc:	2b09      	cmp	r3, #9
 80121ce:	bf88      	it	hi
 80121d0:	3b0a      	subhi	r3, #10
 80121d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80121d6:	8458      	strh	r0, [r3, #34]	@ 0x22
 80121d8:	e7ec      	b.n	80121b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80121da:	bd10      	pop	{r4, pc}

080121dc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80121dc:	b538      	push	{r3, r4, r5, lr}
 80121de:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80121e0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80121e4:	4604      	mov	r4, r0
 80121e6:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 80121e8:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 80121ea:	3a01      	subs	r2, #1
 80121ec:	8702      	strh	r2, [r0, #56]	@ 0x38
 80121ee:	1c5a      	adds	r2, r3, #1
 80121f0:	b292      	uxth	r2, r2
 80121f2:	2a09      	cmp	r2, #9
 80121f4:	bf86      	itte	hi
 80121f6:	3b09      	subhi	r3, #9
 80121f8:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80121fa:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80121fc:	f7ff ffb5 	bl	801216a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012200:	8c23      	ldrh	r3, [r4, #32]
 8012202:	2b01      	cmp	r3, #1
 8012204:	bf9c      	itt	ls
 8012206:	3301      	addls	r3, #1
 8012208:	8423      	strhls	r3, [r4, #32]
 801220a:	8be3      	ldrh	r3, [r4, #30]
 801220c:	b90b      	cbnz	r3, 8012212 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801220e:	2302      	movs	r3, #2
 8012210:	83e3      	strh	r3, [r4, #30]
 8012212:	8be3      	ldrh	r3, [r4, #30]
 8012214:	3b01      	subs	r3, #1
 8012216:	b29b      	uxth	r3, r3
 8012218:	83e3      	strh	r3, [r4, #30]
 801221a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801221e:	4628      	mov	r0, r5
 8012220:	8365      	strh	r5, [r4, #26]
 8012222:	bd38      	pop	{r3, r4, r5, pc}

08012224 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012224:	428a      	cmp	r2, r1
 8012226:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801222a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801222c:	d931      	bls.n	8012292 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801222e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8012230:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8012234:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8012238:	19ee      	adds	r6, r5, r7
 801223a:	1a54      	subs	r4, r2, r1
 801223c:	3e01      	subs	r6, #1
 801223e:	fa1f fe84 	uxth.w	lr, r4
 8012242:	b2b4      	uxth	r4, r6
 8012244:	eba4 090e 	sub.w	r9, r4, lr
 8012248:	fa1f f989 	uxth.w	r9, r9
 801224c:	2c09      	cmp	r4, #9
 801224e:	4626      	mov	r6, r4
 8012250:	bf88      	it	hi
 8012252:	f1a4 060a 	subhi.w	r6, r4, #10
 8012256:	f1bc 0f00 	cmp.w	ip, #0
 801225a:	bf08      	it	eq
 801225c:	f04f 0c02 	moveq.w	ip, #2
 8012260:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012264:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012268:	fa1f fc8c 	uxth.w	ip, ip
 801226c:	3c01      	subs	r4, #1
 801226e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012272:	b2a4      	uxth	r4, r4
 8012274:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012278:	454c      	cmp	r4, r9
 801227a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801227e:	d1e5      	bne.n	801224c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012280:	eba5 050e 	sub.w	r5, r5, lr
 8012284:	eb0e 0408 	add.w	r4, lr, r8
 8012288:	8705      	strh	r5, [r0, #56]	@ 0x38
 801228a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801228e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012292:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012294:	1a64      	subs	r4, r4, r1
 8012296:	4439      	add	r1, r7
 8012298:	b289      	uxth	r1, r1
 801229a:	2909      	cmp	r1, #9
 801229c:	bf88      	it	hi
 801229e:	390a      	subhi	r1, #10
 80122a0:	8704      	strh	r4, [r0, #56]	@ 0x38
 80122a2:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80122a4:	250a      	movs	r5, #10
 80122a6:	b18a      	cbz	r2, 80122cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80122a8:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80122aa:	3a01      	subs	r2, #1
 80122ac:	b292      	uxth	r2, r2
 80122ae:	3101      	adds	r1, #1
 80122b0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80122b4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80122b6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80122b8:	b901      	cbnz	r1, 80122bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80122ba:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80122bc:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80122be:	3901      	subs	r1, #1
 80122c0:	b289      	uxth	r1, r1
 80122c2:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80122c4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80122c8:	844c      	strh	r4, [r1, #34]	@ 0x22
 80122ca:	e7ec      	b.n	80122a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80122cc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80122d0:	f7ff bf4b 	b.w	801216a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080122d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80122d4:	b570      	push	{r4, r5, r6, lr}
 80122d6:	2500      	movs	r5, #0
 80122d8:	4295      	cmp	r5, r2
 80122da:	d011      	beq.n	8012300 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80122dc:	8bc4      	ldrh	r4, [r0, #30]
 80122de:	f831 6b02 	ldrh.w	r6, [r1], #2
 80122e2:	4414      	add	r4, r2
 80122e4:	3c01      	subs	r4, #1
 80122e6:	1b64      	subs	r4, r4, r5
 80122e8:	b2a4      	uxth	r4, r4
 80122ea:	2c01      	cmp	r4, #1
 80122ec:	bf88      	it	hi
 80122ee:	3c02      	subhi	r4, #2
 80122f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80122f4:	8b64      	ldrh	r4, [r4, #26]
 80122f6:	42b4      	cmp	r4, r6
 80122f8:	d117      	bne.n	801232a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80122fa:	3501      	adds	r5, #1
 80122fc:	b2ad      	uxth	r5, r5
 80122fe:	e7eb      	b.n	80122d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012300:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012304:	2400      	movs	r4, #0
 8012306:	4413      	add	r3, r2
 8012308:	b2a2      	uxth	r2, r4
 801230a:	429a      	cmp	r2, r3
 801230c:	da0f      	bge.n	801232e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801230e:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012310:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012314:	4432      	add	r2, r6
 8012316:	b292      	uxth	r2, r2
 8012318:	2a09      	cmp	r2, #9
 801231a:	bf88      	it	hi
 801231c:	3a0a      	subhi	r2, #10
 801231e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012322:	3401      	adds	r4, #1
 8012324:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8012326:	42aa      	cmp	r2, r5
 8012328:	d0ee      	beq.n	8012308 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801232a:	2000      	movs	r0, #0
 801232c:	bd70      	pop	{r4, r5, r6, pc}
 801232e:	2001      	movs	r0, #1
 8012330:	e7fc      	b.n	801232c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012332 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012332:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012336:	4605      	mov	r5, r0
 8012338:	4616      	mov	r6, r2
 801233a:	1c8c      	adds	r4, r1, #2
 801233c:	8809      	ldrh	r1, [r1, #0]
 801233e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012342:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012346:	42b3      	cmp	r3, r6
 8012348:	d124      	bne.n	8012394 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801234a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801234e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012352:	f001 070f 	and.w	r7, r1, #15
 8012356:	f8cd 8000 	str.w	r8, [sp]
 801235a:	464b      	mov	r3, r9
 801235c:	4652      	mov	r2, sl
 801235e:	4621      	mov	r1, r4
 8012360:	4628      	mov	r0, r5
 8012362:	f7ff ffb7 	bl	80122d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012366:	4683      	mov	fp, r0
 8012368:	b168      	cbz	r0, 8012386 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801236a:	eb0a 0109 	add.w	r1, sl, r9
 801236e:	4441      	add	r1, r8
 8012370:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012374:	463a      	mov	r2, r7
 8012376:	4649      	mov	r1, r9
 8012378:	4628      	mov	r0, r5
 801237a:	f7ff ff53 	bl	8012224 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801237e:	4658      	mov	r0, fp
 8012380:	b003      	add	sp, #12
 8012382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012386:	eb07 010a 	add.w	r1, r7, sl
 801238a:	4449      	add	r1, r9
 801238c:	4441      	add	r1, r8
 801238e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012392:	e7d2      	b.n	801233a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012394:	f04f 0b00 	mov.w	fp, #0
 8012398:	e7f1      	b.n	801237e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801239a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801239a:	b570      	push	{r4, r5, r6, lr}
 801239c:	8810      	ldrh	r0, [r2, #0]
 801239e:	4298      	cmp	r0, r3
 80123a0:	d817      	bhi.n	80123d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80123a2:	1e48      	subs	r0, r1, #1
 80123a4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80123a8:	4298      	cmp	r0, r3
 80123aa:	d312      	bcc.n	80123d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80123ac:	2400      	movs	r4, #0
 80123ae:	428c      	cmp	r4, r1
 80123b0:	d20f      	bcs.n	80123d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80123b2:	1860      	adds	r0, r4, r1
 80123b4:	1040      	asrs	r0, r0, #1
 80123b6:	0085      	lsls	r5, r0, #2
 80123b8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80123bc:	42b3      	cmp	r3, r6
 80123be:	d902      	bls.n	80123c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80123c0:	3001      	adds	r0, #1
 80123c2:	b284      	uxth	r4, r0
 80123c4:	e7f3      	b.n	80123ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80123c6:	d201      	bcs.n	80123cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80123c8:	b281      	uxth	r1, r0
 80123ca:	e7f0      	b.n	80123ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80123cc:	442a      	add	r2, r5
 80123ce:	8850      	ldrh	r0, [r2, #2]
 80123d0:	bd70      	pop	{r4, r5, r6, pc}
 80123d2:	2000      	movs	r0, #0
 80123d4:	e7fc      	b.n	80123d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080123d6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80123d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123da:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80123dc:	886f      	ldrh	r7, [r5, #2]
 80123de:	4604      	mov	r4, r0
 80123e0:	087f      	lsrs	r7, r7, #1
 80123e2:	260b      	movs	r6, #11
 80123e4:	3e01      	subs	r6, #1
 80123e6:	d013      	beq.n	8012410 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80123e8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80123ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80123ee:	462a      	mov	r2, r5
 80123f0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80123f4:	4639      	mov	r1, r7
 80123f6:	4643      	mov	r3, r8
 80123f8:	4620      	mov	r0, r4
 80123fa:	f7ff ffce 	bl	801239a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80123fe:	b138      	cbz	r0, 8012410 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012400:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012404:	4642      	mov	r2, r8
 8012406:	4620      	mov	r0, r4
 8012408:	f7ff ff93 	bl	8012332 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801240c:	2800      	cmp	r0, #0
 801240e:	d1e9      	bne.n	80123e4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012414 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012414:	b570      	push	{r4, r5, r6, lr}
 8012416:	694a      	ldr	r2, [r1, #20]
 8012418:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801241a:	684b      	ldr	r3, [r1, #4]
 801241c:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801241e:	1b54      	subs	r4, r2, r5
 8012420:	f000 8106 	beq.w	8012630 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012424:	1b9b      	subs	r3, r3, r6
 8012426:	d003      	beq.n	8012430 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012428:	4363      	muls	r3, r4
 801242a:	2210      	movs	r2, #16
 801242c:	fb93 f3f2 	sdiv	r3, r3, r2
 8012430:	680c      	ldr	r4, [r1, #0]
 8012432:	698a      	ldr	r2, [r1, #24]
 8012434:	1b65      	subs	r5, r4, r5
 8012436:	f000 80fd 	beq.w	8012634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801243a:	1b92      	subs	r2, r2, r6
 801243c:	d003      	beq.n	8012446 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801243e:	436a      	muls	r2, r5
 8012440:	2410      	movs	r4, #16
 8012442:	fb92 f2f4 	sdiv	r2, r2, r4
 8012446:	1a9b      	subs	r3, r3, r2
 8012448:	ee07 3a90 	vmov	s15, r3
 801244c:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8012670 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012450:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012454:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012458:	ee67 7a84 	vmul.f32	s15, s15, s8
 801245c:	460a      	mov	r2, r1
 801245e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012462:	4603      	mov	r3, r0
 8012464:	f100 040c 	add.w	r4, r0, #12
 8012468:	eeb1 6a43 	vneg.f32	s12, s6
 801246c:	edd2 7a02 	vldr	s15, [r2, #8]
 8012470:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012474:	3214      	adds	r2, #20
 8012476:	ece3 6a01 	vstmia	r3!, {s13}
 801247a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801247e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012482:	429c      	cmp	r4, r3
 8012484:	edc3 7a02 	vstr	s15, [r3, #8]
 8012488:	ed52 7a01 	vldr	s15, [r2, #-4]
 801248c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012490:	edc3 7a05 	vstr	s15, [r3, #20]
 8012494:	d1ea      	bne.n	801246c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012496:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012498:	698b      	ldr	r3, [r1, #24]
 801249a:	edd0 4a02 	vldr	s9, [r0, #8]
 801249e:	edd0 3a00 	vldr	s7, [r0]
 80124a2:	edd0 6a01 	vldr	s13, [r0, #4]
 80124a6:	ed90 5a05 	vldr	s10, [r0, #20]
 80124aa:	ed90 2a03 	vldr	s4, [r0, #12]
 80124ae:	edd0 5a04 	vldr	s11, [r0, #16]
 80124b2:	ed90 1a07 	vldr	s2, [r0, #28]
 80124b6:	edd0 2a06 	vldr	s5, [r0, #24]
 80124ba:	1a9b      	subs	r3, r3, r2
 80124bc:	ee07 3a90 	vmov	s15, r3
 80124c0:	684b      	ldr	r3, [r1, #4]
 80124c2:	1a9b      	subs	r3, r3, r2
 80124c4:	ee07 3a10 	vmov	s14, r3
 80124c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80124cc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80124d0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80124d4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80124d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124dc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80124e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124e4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80124e8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80124ec:	ee32 5a45 	vsub.f32	s10, s4, s10
 80124f0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80124f4:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80124f8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80124fa:	694a      	ldr	r2, [r1, #20]
 80124fc:	1b13      	subs	r3, r2, r4
 80124fe:	ee07 3a10 	vmov	s14, r3
 8012502:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012506:	680b      	ldr	r3, [r1, #0]
 8012508:	ee27 7a04 	vmul.f32	s14, s14, s8
 801250c:	1b1b      	subs	r3, r3, r4
 801250e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012512:	ee07 3a10 	vmov	s14, r3
 8012516:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801251a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801251e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012522:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012526:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801252a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801252c:	698b      	ldr	r3, [r1, #24]
 801252e:	1a9b      	subs	r3, r3, r2
 8012530:	ee06 3a90 	vmov	s13, r3
 8012534:	684b      	ldr	r3, [r1, #4]
 8012536:	1a9b      	subs	r3, r3, r2
 8012538:	ee07 3a10 	vmov	s14, r3
 801253c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012540:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012544:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012548:	ee27 7a04 	vmul.f32	s14, s14, s8
 801254c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012550:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012554:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012558:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801255c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801255e:	694a      	ldr	r2, [r1, #20]
 8012560:	1b13      	subs	r3, r2, r4
 8012562:	ee07 3a10 	vmov	s14, r3
 8012566:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801256a:	680b      	ldr	r3, [r1, #0]
 801256c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012570:	1b1b      	subs	r3, r3, r4
 8012572:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012576:	ee07 3a10 	vmov	s14, r3
 801257a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801257e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012582:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012586:	edd0 5a08 	vldr	s11, [r0, #32]
 801258a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801258e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012592:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012596:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012598:	698b      	ldr	r3, [r1, #24]
 801259a:	1a9b      	subs	r3, r3, r2
 801259c:	ee07 3a10 	vmov	s14, r3
 80125a0:	684b      	ldr	r3, [r1, #4]
 80125a2:	1a9b      	subs	r3, r3, r2
 80125a4:	ee01 3a90 	vmov	s3, r3
 80125a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80125ac:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80125b0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80125b4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80125b8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80125bc:	ee61 1a84 	vmul.f32	s3, s3, s8
 80125c0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80125c4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80125c8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80125cc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80125ce:	694a      	ldr	r2, [r1, #20]
 80125d0:	1b13      	subs	r3, r2, r4
 80125d2:	ee03 3a10 	vmov	s6, r3
 80125d6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80125da:	680b      	ldr	r3, [r1, #0]
 80125dc:	ee23 3a04 	vmul.f32	s6, s6, s8
 80125e0:	1b1b      	subs	r3, r3, r4
 80125e2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80125e6:	ee03 3a10 	vmov	s6, r3
 80125ea:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80125ee:	ee23 4a04 	vmul.f32	s8, s6, s8
 80125f2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80125f6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80125fa:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80125fe:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012602:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012606:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801260a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801260e:	dd13      	ble.n	8012638 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012610:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012614:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012618:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801261a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801261e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012626:	dd15      	ble.n	8012654 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012628:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801262c:	6403      	str	r3, [r0, #64]	@ 0x40
 801262e:	bd70      	pop	{r4, r5, r6, pc}
 8012630:	4623      	mov	r3, r4
 8012632:	e6fd      	b.n	8012430 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012634:	462a      	mov	r2, r5
 8012636:	e706      	b.n	8012446 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012638:	d502      	bpl.n	8012640 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801263a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801263e:	e7e9      	b.n	8012614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012640:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012644:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012648:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801264c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012650:	dade      	bge.n	8012610 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012652:	e7f2      	b.n	801263a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012654:	d502      	bpl.n	801265c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012656:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801265a:	e7e7      	b.n	801262c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801265c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012660:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012664:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801266c:	dadc      	bge.n	8012628 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801266e:	e7f2      	b.n	8012656 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012670:	3d800000 	.word	0x3d800000

08012674 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012674:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012678:	2714      	movs	r7, #20
 801267a:	435f      	muls	r7, r3
 801267c:	eb02 0c07 	add.w	ip, r2, r7
 8012680:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012684:	f115 0e0f 	adds.w	lr, r5, #15
 8012688:	f100 80a2 	bmi.w	80127d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801268c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012690:	9c08      	ldr	r4, [sp, #32]
 8012692:	f8c0 e014 	str.w	lr, [r0, #20]
 8012696:	2614      	movs	r6, #20
 8012698:	4366      	muls	r6, r4
 801269a:	eb02 0806 	add.w	r8, r2, r6
 801269e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80126a2:	f115 040f 	adds.w	r4, r5, #15
 80126a6:	f100 809f 	bmi.w	80127e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80126aa:	1124      	asrs	r4, r4, #4
 80126ac:	eba4 040e 	sub.w	r4, r4, lr
 80126b0:	6184      	str	r4, [r0, #24]
 80126b2:	2c00      	cmp	r4, #0
 80126b4:	f000 808a 	beq.w	80127cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80126b8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80126bc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80126c0:	5995      	ldr	r5, [r2, r6]
 80126c2:	eba4 0809 	sub.w	r8, r4, r9
 80126c6:	59d4      	ldr	r4, [r2, r7]
 80126c8:	eba5 0a04 	sub.w	sl, r5, r4
 80126cc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80126d0:	fb0e fe05 	mul.w	lr, lr, r5
 80126d4:	fb0a ee19 	mls	lr, sl, r9, lr
 80126d8:	fb08 e404 	mla	r4, r8, r4, lr
 80126dc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80126e0:	3c01      	subs	r4, #1
 80126e2:	19a4      	adds	r4, r4, r6
 80126e4:	f100 808c 	bmi.w	8012800 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80126e8:	fb94 fef6 	sdiv	lr, r4, r6
 80126ec:	f8c0 e000 	str.w	lr, [r0]
 80126f0:	fb06 441e 	mls	r4, r6, lr, r4
 80126f4:	6104      	str	r4, [r0, #16]
 80126f6:	2d00      	cmp	r5, #0
 80126f8:	f2c0 8095 	blt.w	8012826 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80126fc:	fb95 f4f6 	sdiv	r4, r5, r6
 8012700:	6044      	str	r4, [r0, #4]
 8012702:	fb06 5514 	mls	r5, r6, r4, r5
 8012706:	6085      	str	r5, [r0, #8]
 8012708:	60c6      	str	r6, [r0, #12]
 801270a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801270e:	6945      	ldr	r5, [r0, #20]
 8012710:	59d2      	ldr	r2, [r2, r7]
 8012712:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8012848 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012716:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801271a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801271e:	ee07 4a10 	vmov	s14, r4
 8012722:	6804      	ldr	r4, [r0, #0]
 8012724:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012728:	ee07 2a90 	vmov	s15, r2
 801272c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012730:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012734:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012738:	ee27 7a26 	vmul.f32	s14, s14, s13
 801273c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012740:	edd3 6a00 	vldr	s13, [r3]
 8012744:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012748:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801274c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012750:	edc0 6a07 	vstr	s13, [r0, #28]
 8012754:	edd0 6a01 	vldr	s13, [r0, #4]
 8012758:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801275c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012760:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012764:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012768:	ed80 6a08 	vstr	s12, [r0, #32]
 801276c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801276e:	6242      	str	r2, [r0, #36]	@ 0x24
 8012770:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8012774:	ed93 6a03 	vldr	s12, [r3, #12]
 8012778:	eea5 6a87 	vfma.f32	s12, s11, s14
 801277c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012780:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012784:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8012788:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801278c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012790:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012794:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012798:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801279a:	6302      	str	r2, [r0, #48]	@ 0x30
 801279c:	ed93 6a06 	vldr	s12, [r3, #24]
 80127a0:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 80127a4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80127a8:	eeb0 7a46 	vmov.f32	s14, s12
 80127ac:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 80127b0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80127b4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80127b8:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80127bc:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80127c0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80127c4:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80127c8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80127ca:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80127cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80127d0:	f1c5 0501 	rsb	r5, r5, #1
 80127d4:	f015 050f 	ands.w	r5, r5, #15
 80127d8:	bf18      	it	ne
 80127da:	2501      	movne	r5, #1
 80127dc:	2410      	movs	r4, #16
 80127de:	fb9e fef4 	sdiv	lr, lr, r4
 80127e2:	ebae 0e05 	sub.w	lr, lr, r5
 80127e6:	e753      	b.n	8012690 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80127e8:	f1c5 0501 	rsb	r5, r5, #1
 80127ec:	f015 050f 	ands.w	r5, r5, #15
 80127f0:	bf18      	it	ne
 80127f2:	2501      	movne	r5, #1
 80127f4:	f04f 0910 	mov.w	r9, #16
 80127f8:	fb94 f4f9 	sdiv	r4, r4, r9
 80127fc:	1b64      	subs	r4, r4, r5
 80127fe:	e755      	b.n	80126ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012800:	4264      	negs	r4, r4
 8012802:	fb94 fef6 	sdiv	lr, r4, r6
 8012806:	f1ce 0800 	rsb	r8, lr, #0
 801280a:	fb06 441e 	mls	r4, r6, lr, r4
 801280e:	f8c0 8000 	str.w	r8, [r0]
 8012812:	6104      	str	r4, [r0, #16]
 8012814:	2c00      	cmp	r4, #0
 8012816:	f43f af6e 	beq.w	80126f6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801281a:	ea6f 0e0e 	mvn.w	lr, lr
 801281e:	f8c0 e000 	str.w	lr, [r0]
 8012822:	1b34      	subs	r4, r6, r4
 8012824:	e766      	b.n	80126f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012826:	426d      	negs	r5, r5
 8012828:	fb95 f4f6 	sdiv	r4, r5, r6
 801282c:	f1c4 0e00 	rsb	lr, r4, #0
 8012830:	fb06 5514 	mls	r5, r6, r4, r5
 8012834:	f8c0 e004 	str.w	lr, [r0, #4]
 8012838:	6085      	str	r5, [r0, #8]
 801283a:	2d00      	cmp	r5, #0
 801283c:	f43f af64 	beq.w	8012708 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012840:	43e4      	mvns	r4, r4
 8012842:	6044      	str	r4, [r0, #4]
 8012844:	1b75      	subs	r5, r6, r5
 8012846:	e75e      	b.n	8012706 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012848:	3d800000 	.word	0x3d800000

0801284c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801284c:	4b01      	ldr	r3, [pc, #4]	@ (8012854 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801284e:	6018      	str	r0, [r3, #0]
 8012850:	4770      	bx	lr
 8012852:	bf00      	nop
 8012854:	20014060 	.word	0x20014060

08012858 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012858:	4b06      	ldr	r3, [pc, #24]	@ (8012874 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801285a:	881a      	ldrh	r2, [r3, #0]
 801285c:	4282      	cmp	r2, r0
 801285e:	d807      	bhi.n	8012870 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012860:	4b05      	ldr	r3, [pc, #20]	@ (8012878 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012862:	881b      	ldrh	r3, [r3, #0]
 8012864:	4413      	add	r3, r2
 8012866:	4298      	cmp	r0, r3
 8012868:	bfac      	ite	ge
 801286a:	2000      	movge	r0, #0
 801286c:	2001      	movlt	r0, #1
 801286e:	4770      	bx	lr
 8012870:	2000      	movs	r0, #0
 8012872:	4770      	bx	lr
 8012874:	20014080 	.word	0x20014080
 8012878:	20014084 	.word	0x20014084

0801287c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801287c:	b508      	push	{r3, lr}
 801287e:	4601      	mov	r1, r0
 8012880:	f7ff ffea 	bl	8012858 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012884:	b118      	cbz	r0, 801288e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012886:	4b02      	ldr	r3, [pc, #8]	@ (8012890 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012888:	681b      	ldr	r3, [r3, #0]
 801288a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801288e:	bd08      	pop	{r3, pc}
 8012890:	20014064 	.word	0x20014064

08012894 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012896:	4c24      	ldr	r4, [pc, #144]	@ (8012928 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012898:	6823      	ldr	r3, [r4, #0]
 801289a:	2b00      	cmp	r3, #0
 801289c:	d042      	beq.n	8012924 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801289e:	4a23      	ldr	r2, [pc, #140]	@ (801292c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80128a0:	4d23      	ldr	r5, [pc, #140]	@ (8012930 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80128a2:	8811      	ldrh	r1, [r2, #0]
 80128a4:	f8b5 c000 	ldrh.w	ip, [r5]
 80128a8:	4822      	ldr	r0, [pc, #136]	@ (8012934 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80128aa:	4461      	add	r1, ip
 80128ac:	1c4a      	adds	r2, r1, #1
 80128ae:	f022 0201 	bic.w	r2, r2, #1
 80128b2:	008f      	lsls	r7, r1, #2
 80128b4:	0412      	lsls	r2, r2, #16
 80128b6:	19de      	adds	r6, r3, r7
 80128b8:	0c12      	lsrs	r2, r2, #16
 80128ba:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80128be:	6006      	str	r6, [r0, #0]
 80128c0:	4e1d      	ldr	r6, [pc, #116]	@ (8012938 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80128c2:	19da      	adds	r2, r3, r7
 80128c4:	6032      	str	r2, [r6, #0]
 80128c6:	220e      	movs	r2, #14
 80128c8:	fb02 f20c 	mul.w	r2, r2, ip
 80128cc:	3203      	adds	r2, #3
 80128ce:	f022 0203 	bic.w	r2, r2, #3
 80128d2:	443a      	add	r2, r7
 80128d4:	4f19      	ldr	r7, [pc, #100]	@ (801293c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80128d6:	4413      	add	r3, r2
 80128d8:	603b      	str	r3, [r7, #0]
 80128da:	4f19      	ldr	r7, [pc, #100]	@ (8012940 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80128dc:	2300      	movs	r3, #0
 80128de:	803b      	strh	r3, [r7, #0]
 80128e0:	4f18      	ldr	r7, [pc, #96]	@ (8012944 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80128e2:	683f      	ldr	r7, [r7, #0]
 80128e4:	1aba      	subs	r2, r7, r2
 80128e6:	4f18      	ldr	r7, [pc, #96]	@ (8012948 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80128e8:	603a      	str	r2, [r7, #0]
 80128ea:	4a18      	ldr	r2, [pc, #96]	@ (801294c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80128ec:	469c      	mov	ip, r3
 80128ee:	8013      	strh	r3, [r2, #0]
 80128f0:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80128f4:	428b      	cmp	r3, r1
 80128f6:	d10d      	bne.n	8012914 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80128f8:	882d      	ldrh	r5, [r5, #0]
 80128fa:	6830      	ldr	r0, [r6, #0]
 80128fc:	2300      	movs	r3, #0
 80128fe:	240e      	movs	r4, #14
 8012900:	429d      	cmp	r5, r3
 8012902:	d90f      	bls.n	8012924 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012904:	fb04 0203 	mla	r2, r4, r3, r0
 8012908:	3301      	adds	r3, #1
 801290a:	7b11      	ldrb	r1, [r2, #12]
 801290c:	f36f 1145 	bfc	r1, #5, #1
 8012910:	7311      	strb	r1, [r2, #12]
 8012912:	e7f5      	b.n	8012900 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012914:	6822      	ldr	r2, [r4, #0]
 8012916:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801291a:	6802      	ldr	r2, [r0, #0]
 801291c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012920:	3301      	adds	r3, #1
 8012922:	e7e7      	b.n	80128f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012924:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012926:	bf00      	nop
 8012928:	20014064 	.word	0x20014064
 801292c:	20014080 	.word	0x20014080
 8012930:	20014084 	.word	0x20014084
 8012934:	20014078 	.word	0x20014078
 8012938:	20014068 	.word	0x20014068
 801293c:	20014070 	.word	0x20014070
 8012940:	20014082 	.word	0x20014082
 8012944:	2001406c 	.word	0x2001406c
 8012948:	2001407c 	.word	0x2001407c
 801294c:	20014074 	.word	0x20014074

08012950 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012950:	4b06      	ldr	r3, [pc, #24]	@ (801296c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012952:	681b      	ldr	r3, [r3, #0]
 8012954:	b943      	cbnz	r3, 8012968 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012956:	b139      	cbz	r1, 8012968 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012958:	4b05      	ldr	r3, [pc, #20]	@ (8012970 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801295a:	801a      	strh	r2, [r3, #0]
 801295c:	4b05      	ldr	r3, [pc, #20]	@ (8012974 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801295e:	6019      	str	r1, [r3, #0]
 8012960:	4b05      	ldr	r3, [pc, #20]	@ (8012978 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012962:	6018      	str	r0, [r3, #0]
 8012964:	f7ff bf96 	b.w	8012894 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012968:	4770      	bx	lr
 801296a:	bf00      	nop
 801296c:	20014070 	.word	0x20014070
 8012970:	20014084 	.word	0x20014084
 8012974:	2001406c 	.word	0x2001406c
 8012978:	20014064 	.word	0x20014064

0801297c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801297c:	b470      	push	{r4, r5, r6}
 801297e:	4c07      	ldr	r4, [pc, #28]	@ (801299c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012980:	6826      	ldr	r6, [r4, #0]
 8012982:	4605      	mov	r5, r0
 8012984:	4610      	mov	r0, r2
 8012986:	9a03      	ldr	r2, [sp, #12]
 8012988:	b936      	cbnz	r6, 8012998 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801298a:	6025      	str	r5, [r4, #0]
 801298c:	4c04      	ldr	r4, [pc, #16]	@ (80129a0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801298e:	8021      	strh	r1, [r4, #0]
 8012990:	bc70      	pop	{r4, r5, r6}
 8012992:	4619      	mov	r1, r3
 8012994:	f7ff bfdc 	b.w	8012950 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012998:	bc70      	pop	{r4, r5, r6}
 801299a:	4770      	bx	lr
 801299c:	20014088 	.word	0x20014088
 80129a0:	20014080 	.word	0x20014080

080129a4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80129a4:	4a12      	ldr	r2, [pc, #72]	@ (80129f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80129a6:	8803      	ldrh	r3, [r0, #0]
 80129a8:	8812      	ldrh	r2, [r2, #0]
 80129aa:	4293      	cmp	r3, r2
 80129ac:	d207      	bcs.n	80129be <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80129ae:	4a11      	ldr	r2, [pc, #68]	@ (80129f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80129b0:	6812      	ldr	r2, [r2, #0]
 80129b2:	2114      	movs	r1, #20
 80129b4:	fb01 2303 	mla	r3, r1, r3, r2
 80129b8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80129bc:	4770      	bx	lr
 80129be:	490e      	ldr	r1, [pc, #56]	@ (80129f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80129c0:	8809      	ldrh	r1, [r1, #0]
 80129c2:	4411      	add	r1, r2
 80129c4:	428b      	cmp	r3, r1
 80129c6:	da04      	bge.n	80129d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80129c8:	1a9b      	subs	r3, r3, r2
 80129ca:	4a0c      	ldr	r2, [pc, #48]	@ (80129fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80129cc:	210e      	movs	r1, #14
 80129ce:	6812      	ldr	r2, [r2, #0]
 80129d0:	e7f0      	b.n	80129b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80129d2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80129d6:	4293      	cmp	r3, r2
 80129d8:	d108      	bne.n	80129ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80129da:	4b09      	ldr	r3, [pc, #36]	@ (8012a00 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80129dc:	781b      	ldrb	r3, [r3, #0]
 80129de:	b91b      	cbnz	r3, 80129e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80129e0:	4b08      	ldr	r3, [pc, #32]	@ (8012a04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80129e2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80129e6:	4770      	bx	lr
 80129e8:	4b07      	ldr	r3, [pc, #28]	@ (8012a08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80129ea:	e7fa      	b.n	80129e2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80129ec:	2000      	movs	r0, #0
 80129ee:	4770      	bx	lr
 80129f0:	20014080 	.word	0x20014080
 80129f4:	20014088 	.word	0x20014088
 80129f8:	20014084 	.word	0x20014084
 80129fc:	20014068 	.word	0x20014068
 8012a00:	20013fee 	.word	0x20013fee
 8012a04:	20013ff0 	.word	0x20013ff0
 8012a08:	20013ff2 	.word	0x20013ff2

08012a0c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012a0c:	4a12      	ldr	r2, [pc, #72]	@ (8012a58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012a0e:	8803      	ldrh	r3, [r0, #0]
 8012a10:	8812      	ldrh	r2, [r2, #0]
 8012a12:	4293      	cmp	r3, r2
 8012a14:	d207      	bcs.n	8012a26 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012a16:	4a11      	ldr	r2, [pc, #68]	@ (8012a5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012a18:	6812      	ldr	r2, [r2, #0]
 8012a1a:	2114      	movs	r1, #20
 8012a1c:	fb01 2303 	mla	r3, r1, r3, r2
 8012a20:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012a24:	4770      	bx	lr
 8012a26:	490e      	ldr	r1, [pc, #56]	@ (8012a60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012a28:	8809      	ldrh	r1, [r1, #0]
 8012a2a:	4411      	add	r1, r2
 8012a2c:	428b      	cmp	r3, r1
 8012a2e:	da04      	bge.n	8012a3a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012a30:	1a9b      	subs	r3, r3, r2
 8012a32:	4a0c      	ldr	r2, [pc, #48]	@ (8012a64 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012a34:	210e      	movs	r1, #14
 8012a36:	6812      	ldr	r2, [r2, #0]
 8012a38:	e7f0      	b.n	8012a1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012a3a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012a3e:	4293      	cmp	r3, r2
 8012a40:	d108      	bne.n	8012a54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012a42:	4b09      	ldr	r3, [pc, #36]	@ (8012a68 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012a44:	781b      	ldrb	r3, [r3, #0]
 8012a46:	b91b      	cbnz	r3, 8012a50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012a48:	4b08      	ldr	r3, [pc, #32]	@ (8012a6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012a4a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012a4e:	4770      	bx	lr
 8012a50:	4b07      	ldr	r3, [pc, #28]	@ (8012a70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012a52:	e7fa      	b.n	8012a4a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012a54:	2000      	movs	r0, #0
 8012a56:	4770      	bx	lr
 8012a58:	20014080 	.word	0x20014080
 8012a5c:	20014088 	.word	0x20014088
 8012a60:	20014084 	.word	0x20014084
 8012a64:	20014068 	.word	0x20014068
 8012a68:	20013fee 	.word	0x20013fee
 8012a6c:	20013ff2 	.word	0x20013ff2
 8012a70:	20013ff0 	.word	0x20013ff0

08012a74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012a74:	b530      	push	{r4, r5, lr}
 8012a76:	4a22      	ldr	r2, [pc, #136]	@ (8012b00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012a78:	880b      	ldrh	r3, [r1, #0]
 8012a7a:	8812      	ldrh	r2, [r2, #0]
 8012a7c:	4293      	cmp	r3, r2
 8012a7e:	d213      	bcs.n	8012aa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012a80:	4a20      	ldr	r2, [pc, #128]	@ (8012b04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012a82:	6812      	ldr	r2, [r2, #0]
 8012a84:	2114      	movs	r1, #20
 8012a86:	fb01 2303 	mla	r3, r1, r3, r2
 8012a8a:	8a1a      	ldrh	r2, [r3, #16]
 8012a8c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012a90:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012a94:	8a5b      	ldrh	r3, [r3, #18]
 8012a96:	8004      	strh	r4, [r0, #0]
 8012a98:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012a9c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012aa0:	8041      	strh	r1, [r0, #2]
 8012aa2:	8082      	strh	r2, [r0, #4]
 8012aa4:	80c3      	strh	r3, [r0, #6]
 8012aa6:	e024      	b.n	8012af2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8012aa8:	4917      	ldr	r1, [pc, #92]	@ (8012b08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012aaa:	8809      	ldrh	r1, [r1, #0]
 8012aac:	4411      	add	r1, r2
 8012aae:	428b      	cmp	r3, r1
 8012ab0:	da10      	bge.n	8012ad4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8012ab2:	1a9b      	subs	r3, r3, r2
 8012ab4:	220e      	movs	r2, #14
 8012ab6:	4353      	muls	r3, r2
 8012ab8:	4a14      	ldr	r2, [pc, #80]	@ (8012b0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8012aba:	6811      	ldr	r1, [r2, #0]
 8012abc:	18ca      	adds	r2, r1, r3
 8012abe:	5ecd      	ldrsh	r5, [r1, r3]
 8012ac0:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8012ac4:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8012ac8:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012acc:	8005      	strh	r5, [r0, #0]
 8012ace:	8044      	strh	r4, [r0, #2]
 8012ad0:	8081      	strh	r1, [r0, #4]
 8012ad2:	e7e7      	b.n	8012aa4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012ad4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012ad8:	4293      	cmp	r3, r2
 8012ada:	d10b      	bne.n	8012af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8012adc:	4b0c      	ldr	r3, [pc, #48]	@ (8012b10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8012ade:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012ae2:	4b0c      	ldr	r3, [pc, #48]	@ (8012b14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8012ae4:	8081      	strh	r1, [r0, #4]
 8012ae6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012aea:	80c2      	strh	r2, [r0, #6]
 8012aec:	2300      	movs	r3, #0
 8012aee:	8003      	strh	r3, [r0, #0]
 8012af0:	8043      	strh	r3, [r0, #2]
 8012af2:	bd30      	pop	{r4, r5, pc}
 8012af4:	2300      	movs	r3, #0
 8012af6:	8003      	strh	r3, [r0, #0]
 8012af8:	8043      	strh	r3, [r0, #2]
 8012afa:	8083      	strh	r3, [r0, #4]
 8012afc:	e7d2      	b.n	8012aa4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012afe:	bf00      	nop
 8012b00:	20014080 	.word	0x20014080
 8012b04:	20014088 	.word	0x20014088
 8012b08:	20014084 	.word	0x20014084
 8012b0c:	20014068 	.word	0x20014068
 8012b10:	20013fea 	.word	0x20013fea
 8012b14:	20013fec 	.word	0x20013fec

08012b18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012b18:	4a17      	ldr	r2, [pc, #92]	@ (8012b78 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012b1a:	8803      	ldrh	r3, [r0, #0]
 8012b1c:	8812      	ldrh	r2, [r2, #0]
 8012b1e:	4293      	cmp	r3, r2
 8012b20:	d213      	bcs.n	8012b4a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012b22:	4a16      	ldr	r2, [pc, #88]	@ (8012b7c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012b24:	6812      	ldr	r2, [r2, #0]
 8012b26:	2114      	movs	r1, #20
 8012b28:	fb01 2303 	mla	r3, r1, r3, r2
 8012b2c:	8a1a      	ldrh	r2, [r3, #16]
 8012b2e:	8919      	ldrh	r1, [r3, #8]
 8012b30:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012b34:	428a      	cmp	r2, r1
 8012b36:	db1d      	blt.n	8012b74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012b38:	8a58      	ldrh	r0, [r3, #18]
 8012b3a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012b3e:	895b      	ldrh	r3, [r3, #10]
 8012b40:	4298      	cmp	r0, r3
 8012b42:	bfac      	ite	ge
 8012b44:	2000      	movge	r0, #0
 8012b46:	2001      	movlt	r0, #1
 8012b48:	4770      	bx	lr
 8012b4a:	490d      	ldr	r1, [pc, #52]	@ (8012b80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012b4c:	8809      	ldrh	r1, [r1, #0]
 8012b4e:	4411      	add	r1, r2
 8012b50:	428b      	cmp	r3, r1
 8012b52:	da0d      	bge.n	8012b70 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012b54:	1a9b      	subs	r3, r3, r2
 8012b56:	4a0b      	ldr	r2, [pc, #44]	@ (8012b84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012b58:	6812      	ldr	r2, [r2, #0]
 8012b5a:	210e      	movs	r1, #14
 8012b5c:	fb01 2303 	mla	r3, r1, r3, r2
 8012b60:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012b64:	891a      	ldrh	r2, [r3, #8]
 8012b66:	4291      	cmp	r1, r2
 8012b68:	db04      	blt.n	8012b74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012b6a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012b6e:	e7e6      	b.n	8012b3e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012b70:	2000      	movs	r0, #0
 8012b72:	4770      	bx	lr
 8012b74:	2001      	movs	r0, #1
 8012b76:	4770      	bx	lr
 8012b78:	20014080 	.word	0x20014080
 8012b7c:	20014088 	.word	0x20014088
 8012b80:	20014084 	.word	0x20014084
 8012b84:	20014068 	.word	0x20014068

08012b88 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012b88:	4a12      	ldr	r2, [pc, #72]	@ (8012bd4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012b8a:	8803      	ldrh	r3, [r0, #0]
 8012b8c:	8811      	ldrh	r1, [r2, #0]
 8012b8e:	428b      	cmp	r3, r1
 8012b90:	d20b      	bcs.n	8012baa <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012b92:	4a11      	ldr	r2, [pc, #68]	@ (8012bd8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012b94:	6812      	ldr	r2, [r2, #0]
 8012b96:	b112      	cbz	r2, 8012b9e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012b98:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012b9c:	b9c0      	cbnz	r0, 8012bd0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012b9e:	4a0f      	ldr	r2, [pc, #60]	@ (8012bdc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012ba0:	6811      	ldr	r1, [r2, #0]
 8012ba2:	2214      	movs	r2, #20
 8012ba4:	4353      	muls	r3, r2
 8012ba6:	58c8      	ldr	r0, [r1, r3]
 8012ba8:	4770      	bx	lr
 8012baa:	4a0d      	ldr	r2, [pc, #52]	@ (8012be0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012bac:	8812      	ldrh	r2, [r2, #0]
 8012bae:	440a      	add	r2, r1
 8012bb0:	4293      	cmp	r3, r2
 8012bb2:	da04      	bge.n	8012bbe <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012bb4:	4a08      	ldr	r2, [pc, #32]	@ (8012bd8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012bb6:	6812      	ldr	r2, [r2, #0]
 8012bb8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012bbc:	4770      	bx	lr
 8012bbe:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012bc2:	4293      	cmp	r3, r2
 8012bc4:	d103      	bne.n	8012bce <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012bc6:	4b07      	ldr	r3, [pc, #28]	@ (8012be4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012bc8:	681b      	ldr	r3, [r3, #0]
 8012bca:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012bcc:	4770      	bx	lr
 8012bce:	2000      	movs	r0, #0
 8012bd0:	4770      	bx	lr
 8012bd2:	bf00      	nop
 8012bd4:	20014080 	.word	0x20014080
 8012bd8:	20014064 	.word	0x20014064
 8012bdc:	20014088 	.word	0x20014088
 8012be0:	20014084 	.word	0x20014084
 8012be4:	20013ff8 	.word	0x20013ff8

08012be8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012be8:	4b24      	ldr	r3, [pc, #144]	@ (8012c7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012bea:	8802      	ldrh	r2, [r0, #0]
 8012bec:	8818      	ldrh	r0, [r3, #0]
 8012bee:	4282      	cmp	r2, r0
 8012bf0:	d221      	bcs.n	8012c36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012bf2:	4b23      	ldr	r3, [pc, #140]	@ (8012c80 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012bf4:	6819      	ldr	r1, [r3, #0]
 8012bf6:	2314      	movs	r3, #20
 8012bf8:	fb03 1302 	mla	r3, r3, r2, r1
 8012bfc:	6858      	ldr	r0, [r3, #4]
 8012bfe:	2800      	cmp	r0, #0
 8012c00:	d03a      	beq.n	8012c78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012c02:	4920      	ldr	r1, [pc, #128]	@ (8012c84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012c04:	6809      	ldr	r1, [r1, #0]
 8012c06:	2900      	cmp	r1, #0
 8012c08:	d036      	beq.n	8012c78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012c0a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012c0e:	2900      	cmp	r1, #0
 8012c10:	d032      	beq.n	8012c78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012c12:	891a      	ldrh	r2, [r3, #8]
 8012c14:	8958      	ldrh	r0, [r3, #10]
 8012c16:	4350      	muls	r0, r2
 8012c18:	7c5a      	ldrb	r2, [r3, #17]
 8012c1a:	7cdb      	ldrb	r3, [r3, #19]
 8012c1c:	0952      	lsrs	r2, r2, #5
 8012c1e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012c22:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012c26:	2b0b      	cmp	r3, #11
 8012c28:	bf18      	it	ne
 8012c2a:	0040      	lslne	r0, r0, #1
 8012c2c:	3003      	adds	r0, #3
 8012c2e:	f020 0003 	bic.w	r0, r0, #3
 8012c32:	4408      	add	r0, r1
 8012c34:	4770      	bx	lr
 8012c36:	4b14      	ldr	r3, [pc, #80]	@ (8012c88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8012c38:	881b      	ldrh	r3, [r3, #0]
 8012c3a:	4403      	add	r3, r0
 8012c3c:	429a      	cmp	r2, r3
 8012c3e:	da1a      	bge.n	8012c76 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012c40:	4b12      	ldr	r3, [pc, #72]	@ (8012c8c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012c42:	681b      	ldr	r3, [r3, #0]
 8012c44:	1a10      	subs	r0, r2, r0
 8012c46:	210e      	movs	r1, #14
 8012c48:	fb01 3000 	mla	r0, r1, r0, r3
 8012c4c:	7b03      	ldrb	r3, [r0, #12]
 8012c4e:	f003 031f 	and.w	r3, r3, #31
 8012c52:	2b0b      	cmp	r3, #11
 8012c54:	d10b      	bne.n	8012c6e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8012c56:	8903      	ldrh	r3, [r0, #8]
 8012c58:	8940      	ldrh	r0, [r0, #10]
 8012c5a:	4358      	muls	r0, r3
 8012c5c:	4b09      	ldr	r3, [pc, #36]	@ (8012c84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012c5e:	6819      	ldr	r1, [r3, #0]
 8012c60:	3003      	adds	r0, #3
 8012c62:	f020 0303 	bic.w	r3, r0, #3
 8012c66:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012c6a:	4418      	add	r0, r3
 8012c6c:	4770      	bx	lr
 8012c6e:	2b0d      	cmp	r3, #13
 8012c70:	d101      	bne.n	8012c76 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012c72:	300d      	adds	r0, #13
 8012c74:	4770      	bx	lr
 8012c76:	2000      	movs	r0, #0
 8012c78:	4770      	bx	lr
 8012c7a:	bf00      	nop
 8012c7c:	20014080 	.word	0x20014080
 8012c80:	20014088 	.word	0x20014088
 8012c84:	20014064 	.word	0x20014064
 8012c88:	20014084 	.word	0x20014084
 8012c8c:	20014068 	.word	0x20014068

08012c90 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012c90:	b510      	push	{r4, lr}
 8012c92:	4b1f      	ldr	r3, [pc, #124]	@ (8012d10 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8012c94:	8802      	ldrh	r2, [r0, #0]
 8012c96:	881b      	ldrh	r3, [r3, #0]
 8012c98:	429a      	cmp	r2, r3
 8012c9a:	d21a      	bcs.n	8012cd2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012c9c:	4b1d      	ldr	r3, [pc, #116]	@ (8012d14 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012c9e:	681b      	ldr	r3, [r3, #0]
 8012ca0:	2114      	movs	r1, #20
 8012ca2:	fb01 3102 	mla	r1, r1, r2, r3
 8012ca6:	7c4b      	ldrb	r3, [r1, #17]
 8012ca8:	0958      	lsrs	r0, r3, #5
 8012caa:	7ccb      	ldrb	r3, [r1, #19]
 8012cac:	491a      	ldr	r1, [pc, #104]	@ (8012d18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012cae:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012cb2:	6809      	ldr	r1, [r1, #0]
 8012cb4:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8012cb8:	b2d8      	uxtb	r0, r3
 8012cba:	b149      	cbz	r1, 8012cd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012cbc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012cc0:	b132      	cbz	r2, 8012cd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012cc2:	2b0e      	cmp	r3, #14
 8012cc4:	d021      	beq.n	8012d0a <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012cc6:	280f      	cmp	r0, #15
 8012cc8:	d01d      	beq.n	8012d06 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8012cca:	2810      	cmp	r0, #16
 8012ccc:	bf08      	it	eq
 8012cce:	2002      	moveq	r0, #2
 8012cd0:	bd10      	pop	{r4, pc}
 8012cd2:	4912      	ldr	r1, [pc, #72]	@ (8012d1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8012cd4:	8809      	ldrh	r1, [r1, #0]
 8012cd6:	4419      	add	r1, r3
 8012cd8:	428a      	cmp	r2, r1
 8012cda:	da09      	bge.n	8012cf0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8012cdc:	1ad3      	subs	r3, r2, r3
 8012cde:	4a10      	ldr	r2, [pc, #64]	@ (8012d20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8012ce0:	6812      	ldr	r2, [r2, #0]
 8012ce2:	210e      	movs	r1, #14
 8012ce4:	fb01 2303 	mla	r3, r1, r3, r2
 8012ce8:	7b18      	ldrb	r0, [r3, #12]
 8012cea:	f000 001f 	and.w	r0, r0, #31
 8012cee:	e7ef      	b.n	8012cd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012cf0:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8012cf4:	429a      	cmp	r2, r3
 8012cf6:	d108      	bne.n	8012d0a <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012cf8:	f7ef fed4 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8012cfc:	6803      	ldr	r3, [r0, #0]
 8012cfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012d04:	4718      	bx	r3
 8012d06:	2001      	movs	r0, #1
 8012d08:	e7e2      	b.n	8012cd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012d0a:	2000      	movs	r0, #0
 8012d0c:	e7e0      	b.n	8012cd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012d0e:	bf00      	nop
 8012d10:	20014080 	.word	0x20014080
 8012d14:	20014088 	.word	0x20014088
 8012d18:	20014064 	.word	0x20014064
 8012d1c:	20014084 	.word	0x20014084
 8012d20:	20014068 	.word	0x20014068

08012d24 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012d24:	2010      	movs	r0, #16
 8012d26:	4770      	bx	lr

08012d28 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012d28:	2000      	movs	r0, #0
 8012d2a:	4770      	bx	lr

08012d2c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012d2c:	4b02      	ldr	r3, [pc, #8]	@ (8012d38 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012d2e:	8818      	ldrh	r0, [r3, #0]
 8012d30:	0040      	lsls	r0, r0, #1
 8012d32:	b280      	uxth	r0, r0
 8012d34:	4770      	bx	lr
 8012d36:	bf00      	nop
 8012d38:	20013ff0 	.word	0x20013ff0

08012d3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012d3c:	2bff      	cmp	r3, #255	@ 0xff
 8012d3e:	d05e      	beq.n	8012dfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8012d40:	2a0b      	cmp	r2, #11
 8012d42:	d058      	beq.n	8012df6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012d44:	d80e      	bhi.n	8012d64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012d46:	2a03      	cmp	r2, #3
 8012d48:	d04d      	beq.n	8012de6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8012d4a:	d804      	bhi.n	8012d56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012d4c:	2a01      	cmp	r2, #1
 8012d4e:	d04c      	beq.n	8012dea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8012d50:	d94d      	bls.n	8012dee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8012d52:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012d54:	e031      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d56:	2a09      	cmp	r2, #9
 8012d58:	d04d      	beq.n	8012df6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012d5a:	d84a      	bhi.n	8012df2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012d5c:	2a08      	cmp	r2, #8
 8012d5e:	d048      	beq.n	8012df2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012d60:	2300      	movs	r3, #0
 8012d62:	e02a      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d64:	2a2f      	cmp	r2, #47	@ 0x2f
 8012d66:	d02c      	beq.n	8012dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8012d68:	d811      	bhi.n	8012d8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8012d6a:	2a2d      	cmp	r2, #45	@ 0x2d
 8012d6c:	d018      	beq.n	8012da0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8012d6e:	d831      	bhi.n	8012dd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8012d70:	2a2c      	cmp	r2, #44	@ 0x2c
 8012d72:	d1f5      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d74:	684a      	ldr	r2, [r1, #4]
 8012d76:	7813      	ldrb	r3, [r2, #0]
 8012d78:	7852      	ldrb	r2, [r2, #1]
 8012d7a:	2a00      	cmp	r2, #0
 8012d7c:	d1f0      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d7e:	2b01      	cmp	r3, #1
 8012d80:	d01d      	beq.n	8012dbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012d82:	2b00      	cmp	r3, #0
 8012d84:	d02d      	beq.n	8012de2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012d86:	2b02      	cmp	r3, #2
 8012d88:	d1ea      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d8a:	68c3      	ldr	r3, [r0, #12]
 8012d8c:	e015      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d8e:	2a31      	cmp	r2, #49	@ 0x31
 8012d90:	d004      	beq.n	8012d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8012d92:	d332      	bcc.n	8012dfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012d94:	2a32      	cmp	r2, #50	@ 0x32
 8012d96:	d030      	beq.n	8012dfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012d98:	2a33      	cmp	r2, #51	@ 0x33
 8012d9a:	d1e1      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d9c:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8012d9e:	e00c      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012da0:	684a      	ldr	r2, [r1, #4]
 8012da2:	7813      	ldrb	r3, [r2, #0]
 8012da4:	7852      	ldrb	r2, [r2, #1]
 8012da6:	2a00      	cmp	r2, #0
 8012da8:	d1da      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012daa:	2b01      	cmp	r3, #1
 8012dac:	d004      	beq.n	8012db8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8012dae:	d30f      	bcc.n	8012dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8012db0:	2b02      	cmp	r3, #2
 8012db2:	d1d5      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012db4:	6943      	ldr	r3, [r0, #20]
 8012db6:	e000      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012db8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012dba:	4618      	mov	r0, r3
 8012dbc:	4770      	bx	lr
 8012dbe:	69c3      	ldr	r3, [r0, #28]
 8012dc0:	e7fb      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dc2:	684b      	ldr	r3, [r1, #4]
 8012dc4:	781a      	ldrb	r2, [r3, #0]
 8012dc6:	785b      	ldrb	r3, [r3, #1]
 8012dc8:	2b00      	cmp	r3, #0
 8012dca:	d1c9      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dcc:	2a00      	cmp	r2, #0
 8012dce:	d1f4      	bne.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dd0:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8012dd2:	e7f2      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dd4:	684b      	ldr	r3, [r1, #4]
 8012dd6:	781a      	ldrb	r2, [r3, #0]
 8012dd8:	785b      	ldrb	r3, [r3, #1]
 8012dda:	2b00      	cmp	r3, #0
 8012ddc:	d1c0      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dde:	2a00      	cmp	r2, #0
 8012de0:	d1eb      	bne.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012de2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012de4:	e7e9      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012de6:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8012de8:	e7e7      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dea:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8012dec:	e7e5      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dee:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8012df0:	e7e3      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012df2:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8012df4:	e7e1      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012df6:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8012df8:	e7df      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dfa:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8012dfc:	e7dd      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dfe:	2a0b      	cmp	r2, #11
 8012e00:	d059      	beq.n	8012eb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012e02:	d80e      	bhi.n	8012e22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8012e04:	2a03      	cmp	r2, #3
 8012e06:	d050      	beq.n	8012eaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8012e08:	d804      	bhi.n	8012e14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8012e0a:	2a01      	cmp	r2, #1
 8012e0c:	d04f      	beq.n	8012eae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8012e0e:	d950      	bls.n	8012eb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8012e10:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8012e12:	e7d2      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e14:	2a09      	cmp	r2, #9
 8012e16:	d04e      	beq.n	8012eb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012e18:	d801      	bhi.n	8012e1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8012e1a:	2a08      	cmp	r2, #8
 8012e1c:	d1a0      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e1e:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8012e20:	e7cb      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e22:	2a2f      	cmp	r2, #47	@ 0x2f
 8012e24:	d02d      	beq.n	8012e82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8012e26:	d811      	bhi.n	8012e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012e28:	2a2d      	cmp	r2, #45	@ 0x2d
 8012e2a:	d018      	beq.n	8012e5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8012e2c:	d833      	bhi.n	8012e96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8012e2e:	2a2c      	cmp	r2, #44	@ 0x2c
 8012e30:	d196      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e32:	684a      	ldr	r2, [r1, #4]
 8012e34:	7813      	ldrb	r3, [r2, #0]
 8012e36:	7852      	ldrb	r2, [r2, #1]
 8012e38:	2a00      	cmp	r2, #0
 8012e3a:	d191      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e3c:	2b01      	cmp	r3, #1
 8012e3e:	d01e      	beq.n	8012e7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012e40:	2b00      	cmp	r3, #0
 8012e42:	d030      	beq.n	8012ea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8012e44:	2b02      	cmp	r3, #2
 8012e46:	d18b      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e48:	6903      	ldr	r3, [r0, #16]
 8012e4a:	e7b6      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e4c:	2a31      	cmp	r2, #49	@ 0x31
 8012e4e:	d004      	beq.n	8012e5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8012e50:	d333      	bcc.n	8012eba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012e52:	2a32      	cmp	r2, #50	@ 0x32
 8012e54:	d031      	beq.n	8012eba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012e56:	2a33      	cmp	r2, #51	@ 0x33
 8012e58:	d182      	bne.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e5a:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8012e5c:	e7ad      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e5e:	684a      	ldr	r2, [r1, #4]
 8012e60:	7813      	ldrb	r3, [r2, #0]
 8012e62:	7852      	ldrb	r2, [r2, #1]
 8012e64:	2a00      	cmp	r2, #0
 8012e66:	f47f af7b 	bne.w	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e6a:	2b01      	cmp	r3, #1
 8012e6c:	d005      	beq.n	8012e7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8012e6e:	d310      	bcc.n	8012e92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8012e70:	2b02      	cmp	r3, #2
 8012e72:	f47f af75 	bne.w	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e76:	6983      	ldr	r3, [r0, #24]
 8012e78:	e79f      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e7a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012e7c:	e79d      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e7e:	6a03      	ldr	r3, [r0, #32]
 8012e80:	e79b      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e82:	684b      	ldr	r3, [r1, #4]
 8012e84:	781a      	ldrb	r2, [r3, #0]
 8012e86:	785b      	ldrb	r3, [r3, #1]
 8012e88:	2b00      	cmp	r3, #0
 8012e8a:	f47f af69 	bne.w	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e8e:	2a00      	cmp	r2, #0
 8012e90:	d193      	bne.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e92:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012e94:	e791      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e96:	684b      	ldr	r3, [r1, #4]
 8012e98:	781a      	ldrb	r2, [r3, #0]
 8012e9a:	785b      	ldrb	r3, [r3, #1]
 8012e9c:	2b00      	cmp	r3, #0
 8012e9e:	f47f af5f 	bne.w	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ea2:	2a00      	cmp	r2, #0
 8012ea4:	d189      	bne.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ea6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012ea8:	e787      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012eaa:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8012eac:	e785      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012eae:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8012eb0:	e783      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012eb2:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8012eb4:	e781      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012eb6:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8012eb8:	e77f      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012eba:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8012ebc:	e77d      	b.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08012ebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012ebe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ec2:	b087      	sub	sp, #28
 8012ec4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012ec6:	9205      	str	r2, [sp, #20]
 8012ec8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012ecc:	9202      	str	r2, [sp, #8]
 8012ece:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8012ed2:	9101      	str	r1, [sp, #4]
 8012ed4:	6841      	ldr	r1, [r0, #4]
 8012ed6:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012eda:	fb01 2404 	mla	r4, r1, r4, r2
 8012ede:	6802      	ldr	r2, [r0, #0]
 8012ee0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012ee4:	f8de 2000 	ldr.w	r2, [lr]
 8012ee8:	9203      	str	r2, [sp, #12]
 8012eea:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012eee:	3204      	adds	r2, #4
 8012ef0:	9204      	str	r2, [sp, #16]
 8012ef2:	9a02      	ldr	r2, [sp, #8]
 8012ef4:	43d6      	mvns	r6, r2
 8012ef6:	b2f6      	uxtb	r6, r6
 8012ef8:	9a01      	ldr	r2, [sp, #4]
 8012efa:	2a00      	cmp	r2, #0
 8012efc:	dc03      	bgt.n	8012f06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012efe:	9a05      	ldr	r2, [sp, #20]
 8012f00:	2a00      	cmp	r2, #0
 8012f02:	f340 8129 	ble.w	8013158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012f06:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012f08:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012f0c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012f10:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012f14:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012f16:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012f1a:	2b00      	cmp	r3, #0
 8012f1c:	dd0e      	ble.n	8012f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012f1e:	1408      	asrs	r0, r1, #16
 8012f20:	d405      	bmi.n	8012f2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012f22:	4560      	cmp	r0, ip
 8012f24:	da03      	bge.n	8012f2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012f26:	1410      	asrs	r0, r2, #16
 8012f28:	d401      	bmi.n	8012f2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012f2a:	42b8      	cmp	r0, r7
 8012f2c:	db07      	blt.n	8012f3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012f2e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012f30:	4401      	add	r1, r0
 8012f32:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012f34:	3b01      	subs	r3, #1
 8012f36:	4402      	add	r2, r0
 8012f38:	3402      	adds	r4, #2
 8012f3a:	e7ee      	b.n	8012f1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012f3c:	d071      	beq.n	8013022 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012f3e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012f40:	1e58      	subs	r0, r3, #1
 8012f42:	fb05 1500 	mla	r5, r5, r0, r1
 8012f46:	142d      	asrs	r5, r5, #16
 8012f48:	d45f      	bmi.n	801300a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f4a:	4565      	cmp	r5, ip
 8012f4c:	da5d      	bge.n	801300a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f4e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012f50:	fb05 2000 	mla	r0, r5, r0, r2
 8012f54:	1400      	asrs	r0, r0, #16
 8012f56:	d458      	bmi.n	801300a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f58:	42b8      	cmp	r0, r7
 8012f5a:	da56      	bge.n	801300a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f5c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8012f60:	4699      	mov	r9, r3
 8012f62:	46a2      	mov	sl, r4
 8012f64:	f1b9 0f00 	cmp.w	r9, #0
 8012f68:	dd57      	ble.n	801301a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8012f6a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012f6e:	9803      	ldr	r0, [sp, #12]
 8012f70:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8012f74:	140d      	asrs	r5, r1, #16
 8012f76:	fb07 000c 	mla	r0, r7, ip, r0
 8012f7a:	f109 39ff 	add.w	r9, r9, #4294967295
 8012f7e:	5d40      	ldrb	r0, [r0, r5]
 8012f80:	9d04      	ldr	r5, [sp, #16]
 8012f82:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012f86:	f8ba 5000 	ldrh.w	r5, [sl]
 8012f8a:	122f      	asrs	r7, r5, #8
 8012f8c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012f90:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012f94:	fb17 f706 	smulbb	r7, r7, r6
 8012f98:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012f9c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012fa0:	00ed      	lsls	r5, r5, #3
 8012fa2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012fa6:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012faa:	10c7      	asrs	r7, r0, #3
 8012fac:	b2ed      	uxtb	r5, r5
 8012fae:	00c0      	lsls	r0, r0, #3
 8012fb0:	fb18 f806 	smulbb	r8, r8, r6
 8012fb4:	fb15 f506 	smulbb	r5, r5, r6
 8012fb8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012fbc:	b2c0      	uxtb	r0, r0
 8012fbe:	fa1f fc8c 	uxth.w	ip, ip
 8012fc2:	fb07 870b 	mla	r7, r7, fp, r8
 8012fc6:	fb00 500b 	mla	r0, r0, fp, r5
 8012fca:	b280      	uxth	r0, r0
 8012fcc:	b2bf      	uxth	r7, r7
 8012fce:	f10c 0501 	add.w	r5, ip, #1
 8012fd2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012fd6:	f107 0801 	add.w	r8, r7, #1
 8012fda:	1c45      	adds	r5, r0, #1
 8012fdc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012fe0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012fe4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012fe6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012fea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012fee:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012ff2:	ea45 0c0c 	orr.w	ip, r5, ip
 8012ff6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012ffa:	4401      	add	r1, r0
 8012ffc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012ffe:	ea4c 0c08 	orr.w	ip, ip, r8
 8013002:	f82a cb02 	strh.w	ip, [sl], #2
 8013006:	4402      	add	r2, r0
 8013008:	e7ac      	b.n	8012f64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801300a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801300e:	f04f 0800 	mov.w	r8, #0
 8013012:	eb03 0008 	add.w	r0, r3, r8
 8013016:	2800      	cmp	r0, #0
 8013018:	dc41      	bgt.n	801309e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801301a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801301e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013022:	9b01      	ldr	r3, [sp, #4]
 8013024:	2b00      	cmp	r3, #0
 8013026:	f340 8097 	ble.w	8013158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801302a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801302e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013032:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013036:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013038:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801303c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013040:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013044:	eef0 6a62 	vmov.f32	s13, s5
 8013048:	ee61 7a27 	vmul.f32	s15, s2, s15
 801304c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013050:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013054:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013058:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801305c:	eef0 6a43 	vmov.f32	s13, s6
 8013060:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013064:	ee12 2a90 	vmov	r2, s5
 8013068:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801306c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013070:	ee13 2a10 	vmov	r2, s6
 8013074:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013076:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013078:	fb92 f3f3 	sdiv	r3, r2, r3
 801307c:	9314      	str	r3, [sp, #80]	@ 0x50
 801307e:	9b01      	ldr	r3, [sp, #4]
 8013080:	9a05      	ldr	r2, [sp, #20]
 8013082:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013086:	3b01      	subs	r3, #1
 8013088:	9301      	str	r3, [sp, #4]
 801308a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801308e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013090:	eeb0 3a67 	vmov.f32	s6, s15
 8013094:	bf08      	it	eq
 8013096:	4613      	moveq	r3, r2
 8013098:	eef0 2a47 	vmov.f32	s5, s14
 801309c:	e72c      	b.n	8012ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801309e:	140f      	asrs	r7, r1, #16
 80130a0:	d453      	bmi.n	801314a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80130a2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80130a6:	42bd      	cmp	r5, r7
 80130a8:	dd4f      	ble.n	801314a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80130aa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80130ae:	d44c      	bmi.n	801314a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80130b0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80130b4:	4560      	cmp	r0, ip
 80130b6:	dd48      	ble.n	801314a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80130b8:	9803      	ldr	r0, [sp, #12]
 80130ba:	b22d      	sxth	r5, r5
 80130bc:	fb0c 0505 	mla	r5, ip, r5, r0
 80130c0:	5de8      	ldrb	r0, [r5, r7]
 80130c2:	9d04      	ldr	r5, [sp, #16]
 80130c4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80130c8:	f06f 0501 	mvn.w	r5, #1
 80130cc:	fb05 fb08 	mul.w	fp, r5, r8
 80130d0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80130d4:	f834 500b 	ldrh.w	r5, [r4, fp]
 80130d8:	122f      	asrs	r7, r5, #8
 80130da:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80130de:	fb17 f706 	smulbb	r7, r7, r6
 80130e2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80130e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80130ea:	00ed      	lsls	r5, r5, #3
 80130ec:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80130f0:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80130f4:	10c7      	asrs	r7, r0, #3
 80130f6:	b2ed      	uxtb	r5, r5
 80130f8:	00c0      	lsls	r0, r0, #3
 80130fa:	fb19 f906 	smulbb	r9, r9, r6
 80130fe:	fb15 f506 	smulbb	r5, r5, r6
 8013102:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013106:	b2c0      	uxtb	r0, r0
 8013108:	fa1f fc8c 	uxth.w	ip, ip
 801310c:	fb07 970a 	mla	r7, r7, sl, r9
 8013110:	fb00 500a 	mla	r0, r0, sl, r5
 8013114:	b2bf      	uxth	r7, r7
 8013116:	b280      	uxth	r0, r0
 8013118:	f10c 0501 	add.w	r5, ip, #1
 801311c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013120:	f107 0901 	add.w	r9, r7, #1
 8013124:	1c45      	adds	r5, r0, #1
 8013126:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801312a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801312e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013132:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013136:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801313a:	ea45 0c0c 	orr.w	ip, r5, ip
 801313e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013142:	ea4c 0c09 	orr.w	ip, ip, r9
 8013146:	f824 c00b 	strh.w	ip, [r4, fp]
 801314a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801314c:	4401      	add	r1, r0
 801314e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013150:	f108 38ff 	add.w	r8, r8, #4294967295
 8013154:	4402      	add	r2, r0
 8013156:	e75c      	b.n	8013012 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013158:	b007      	add	sp, #28
 801315a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801315e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801315e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013162:	b085      	sub	sp, #20
 8013164:	4693      	mov	fp, r2
 8013166:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013168:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801316a:	6870      	ldr	r0, [r6, #4]
 801316c:	9100      	str	r1, [sp, #0]
 801316e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013172:	fb00 2404 	mla	r4, r0, r4, r2
 8013176:	6832      	ldr	r2, [r6, #0]
 8013178:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801317c:	682a      	ldr	r2, [r5, #0]
 801317e:	9201      	str	r2, [sp, #4]
 8013180:	686a      	ldr	r2, [r5, #4]
 8013182:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8013186:	3204      	adds	r2, #4
 8013188:	9202      	str	r2, [sp, #8]
 801318a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801318e:	9a00      	ldr	r2, [sp, #0]
 8013190:	2a00      	cmp	r2, #0
 8013192:	dc03      	bgt.n	801319c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013194:	f1bb 0f00 	cmp.w	fp, #0
 8013198:	f340 80a0 	ble.w	80132dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801319c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801319e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80131a2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80131a6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80131aa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80131ac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80131b0:	2b00      	cmp	r3, #0
 80131b2:	dd0c      	ble.n	80131ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80131b4:	1406      	asrs	r6, r0, #16
 80131b6:	d405      	bmi.n	80131c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80131b8:	454e      	cmp	r6, r9
 80131ba:	da03      	bge.n	80131c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80131bc:	1416      	asrs	r6, r2, #16
 80131be:	d401      	bmi.n	80131c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80131c0:	4546      	cmp	r6, r8
 80131c2:	db05      	blt.n	80131d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80131c4:	4470      	add	r0, lr
 80131c6:	4462      	add	r2, ip
 80131c8:	3b01      	subs	r3, #1
 80131ca:	3402      	adds	r4, #2
 80131cc:	e7f0      	b.n	80131b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80131ce:	d00f      	beq.n	80131f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80131d0:	1e5e      	subs	r6, r3, #1
 80131d2:	fb0e 0706 	mla	r7, lr, r6, r0
 80131d6:	143f      	asrs	r7, r7, #16
 80131d8:	d541      	bpl.n	801325e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80131da:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80131de:	4698      	mov	r8, r3
 80131e0:	9603      	str	r6, [sp, #12]
 80131e2:	f1b8 0f00 	cmp.w	r8, #0
 80131e6:	dc59      	bgt.n	801329c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80131e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80131ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80131f0:	9b00      	ldr	r3, [sp, #0]
 80131f2:	2b00      	cmp	r3, #0
 80131f4:	dd72      	ble.n	80132dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80131f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80131fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80131fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013202:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013204:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013208:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801320c:	eeb0 6a62 	vmov.f32	s12, s5
 8013210:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013214:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013218:	ee77 2a62 	vsub.f32	s5, s14, s5
 801321c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013220:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013224:	eeb0 6a43 	vmov.f32	s12, s6
 8013228:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801322c:	ee12 2a90 	vmov	r2, s5
 8013230:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013234:	fb92 fef3 	sdiv	lr, r2, r3
 8013238:	ee13 2a10 	vmov	r2, s6
 801323c:	fb92 fcf3 	sdiv	ip, r2, r3
 8013240:	9b00      	ldr	r3, [sp, #0]
 8013242:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013246:	3b01      	subs	r3, #1
 8013248:	9300      	str	r3, [sp, #0]
 801324a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801324e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013250:	eeb0 3a67 	vmov.f32	s6, s15
 8013254:	bf08      	it	eq
 8013256:	465b      	moveq	r3, fp
 8013258:	eef0 2a47 	vmov.f32	s5, s14
 801325c:	e797      	b.n	801318e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801325e:	454f      	cmp	r7, r9
 8013260:	dabb      	bge.n	80131da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013262:	fb0c 2606 	mla	r6, ip, r6, r2
 8013266:	1436      	asrs	r6, r6, #16
 8013268:	d4b7      	bmi.n	80131da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801326a:	4546      	cmp	r6, r8
 801326c:	dab5      	bge.n	80131da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801326e:	461e      	mov	r6, r3
 8013270:	46a0      	mov	r8, r4
 8013272:	2e00      	cmp	r6, #0
 8013274:	ddb8      	ble.n	80131e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013276:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801327a:	9901      	ldr	r1, [sp, #4]
 801327c:	1417      	asrs	r7, r2, #16
 801327e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013282:	fb0a 1707 	mla	r7, sl, r7, r1
 8013286:	9902      	ldr	r1, [sp, #8]
 8013288:	f817 7009 	ldrb.w	r7, [r7, r9]
 801328c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013290:	f828 7b02 	strh.w	r7, [r8], #2
 8013294:	4470      	add	r0, lr
 8013296:	4462      	add	r2, ip
 8013298:	3e01      	subs	r6, #1
 801329a:	e7ea      	b.n	8013272 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801329c:	ea5f 4920 	movs.w	r9, r0, asr #16
 80132a0:	d417      	bmi.n	80132d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80132a2:	68ae      	ldr	r6, [r5, #8]
 80132a4:	454e      	cmp	r6, r9
 80132a6:	dd14      	ble.n	80132d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80132a8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80132ac:	d411      	bmi.n	80132d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80132ae:	68ef      	ldr	r7, [r5, #12]
 80132b0:	4557      	cmp	r7, sl
 80132b2:	dd0e      	ble.n	80132d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80132b4:	9f01      	ldr	r7, [sp, #4]
 80132b6:	b236      	sxth	r6, r6
 80132b8:	fb0a 7606 	mla	r6, sl, r6, r7
 80132bc:	9f02      	ldr	r7, [sp, #8]
 80132be:	f816 6009 	ldrb.w	r6, [r6, r9]
 80132c2:	f06f 0101 	mvn.w	r1, #1
 80132c6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80132ca:	fb01 f608 	mul.w	r6, r1, r8
 80132ce:	9903      	ldr	r1, [sp, #12]
 80132d0:	538f      	strh	r7, [r1, r6]
 80132d2:	4470      	add	r0, lr
 80132d4:	4462      	add	r2, ip
 80132d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80132da:	e782      	b.n	80131e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80132dc:	b005      	add	sp, #20
 80132de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80132e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132e6:	b087      	sub	sp, #28
 80132e8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80132ea:	9205      	str	r2, [sp, #20]
 80132ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80132f0:	9203      	str	r2, [sp, #12]
 80132f2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80132f6:	9102      	str	r1, [sp, #8]
 80132f8:	6861      	ldr	r1, [r4, #4]
 80132fa:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80132fe:	fb01 2000 	mla	r0, r1, r0, r2
 8013302:	6822      	ldr	r2, [r4, #0]
 8013304:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013308:	9200      	str	r2, [sp, #0]
 801330a:	f8dc 2000 	ldr.w	r2, [ip]
 801330e:	9204      	str	r2, [sp, #16]
 8013310:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013314:	3204      	adds	r2, #4
 8013316:	9201      	str	r2, [sp, #4]
 8013318:	9a03      	ldr	r2, [sp, #12]
 801331a:	43d5      	mvns	r5, r2
 801331c:	b2ed      	uxtb	r5, r5
 801331e:	9a02      	ldr	r2, [sp, #8]
 8013320:	2a00      	cmp	r2, #0
 8013322:	dc03      	bgt.n	801332c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013324:	9a05      	ldr	r2, [sp, #20]
 8013326:	2a00      	cmp	r2, #0
 8013328:	f340 812c 	ble.w	8013584 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801332c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801332e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8013332:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013336:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801333a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801333c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013340:	2b00      	cmp	r3, #0
 8013342:	dd10      	ble.n	8013366 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013344:	140c      	asrs	r4, r1, #16
 8013346:	d405      	bmi.n	8013354 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013348:	4574      	cmp	r4, lr
 801334a:	da03      	bge.n	8013354 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801334c:	1414      	asrs	r4, r2, #16
 801334e:	d401      	bmi.n	8013354 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013350:	42bc      	cmp	r4, r7
 8013352:	db09      	blt.n	8013368 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013354:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013356:	9800      	ldr	r0, [sp, #0]
 8013358:	4421      	add	r1, r4
 801335a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801335c:	3002      	adds	r0, #2
 801335e:	4422      	add	r2, r4
 8013360:	3b01      	subs	r3, #1
 8013362:	9000      	str	r0, [sp, #0]
 8013364:	e7ec      	b.n	8013340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013366:	d071      	beq.n	801344c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013368:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801336a:	1e5c      	subs	r4, r3, #1
 801336c:	fb06 1604 	mla	r6, r6, r4, r1
 8013370:	1436      	asrs	r6, r6, #16
 8013372:	d45d      	bmi.n	8013430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013374:	4576      	cmp	r6, lr
 8013376:	da5b      	bge.n	8013430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013378:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801337a:	fb06 2404 	mla	r4, r6, r4, r2
 801337e:	1424      	asrs	r4, r4, #16
 8013380:	d456      	bmi.n	8013430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013382:	42bc      	cmp	r4, r7
 8013384:	da54      	bge.n	8013430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013386:	f8dd 9000 	ldr.w	r9, [sp]
 801338a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801338e:	4698      	mov	r8, r3
 8013390:	f1b8 0f00 	cmp.w	r8, #0
 8013394:	dd54      	ble.n	8013440 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013396:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801339a:	9804      	ldr	r0, [sp, #16]
 801339c:	1414      	asrs	r4, r2, #16
 801339e:	fb07 0404 	mla	r4, r7, r4, r0
 80133a2:	140e      	asrs	r6, r1, #16
 80133a4:	9801      	ldr	r0, [sp, #4]
 80133a6:	f814 e006 	ldrb.w	lr, [r4, r6]
 80133aa:	f8b9 4000 	ldrh.w	r4, [r9]
 80133ae:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80133b2:	eb00 0b0e 	add.w	fp, r0, lr
 80133b6:	1227      	asrs	r7, r4, #8
 80133b8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80133bc:	f89b b001 	ldrb.w	fp, [fp, #1]
 80133c0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80133c4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80133c6:	fb16 f60a 	smulbb	r6, r6, sl
 80133ca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80133ce:	fb07 6705 	mla	r7, r7, r5, r6
 80133d2:	10e6      	asrs	r6, r4, #3
 80133d4:	00e4      	lsls	r4, r4, #3
 80133d6:	b2e4      	uxtb	r4, r4
 80133d8:	fb1b fb0a 	smulbb	fp, fp, sl
 80133dc:	fb14 f405 	smulbb	r4, r4, r5
 80133e0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80133e4:	b2bf      	uxth	r7, r7
 80133e6:	fb06 b605 	mla	r6, r6, r5, fp
 80133ea:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80133ee:	b2b6      	uxth	r6, r6
 80133f0:	fa1f fe8e 	uxth.w	lr, lr
 80133f4:	1c7c      	adds	r4, r7, #1
 80133f6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80133fa:	f106 0b01 	add.w	fp, r6, #1
 80133fe:	f10e 0401 	add.w	r4, lr, #1
 8013402:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013406:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801340a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801340e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013412:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013416:	4327      	orrs	r7, r4
 8013418:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801341c:	4401      	add	r1, r0
 801341e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013420:	ea47 070b 	orr.w	r7, r7, fp
 8013424:	f829 7b02 	strh.w	r7, [r9], #2
 8013428:	4402      	add	r2, r0
 801342a:	f108 38ff 	add.w	r8, r8, #4294967295
 801342e:	e7af      	b.n	8013390 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013430:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013434:	f04f 0e00 	mov.w	lr, #0
 8013438:	eb03 040e 	add.w	r4, r3, lr
 801343c:	2c00      	cmp	r4, #0
 801343e:	dc43      	bgt.n	80134c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013440:	9a00      	ldr	r2, [sp, #0]
 8013442:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013446:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801344a:	9300      	str	r3, [sp, #0]
 801344c:	9b02      	ldr	r3, [sp, #8]
 801344e:	2b00      	cmp	r3, #0
 8013450:	f340 8098 	ble.w	8013584 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013454:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013458:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801345c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013460:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013462:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013466:	ee31 1a05 	vadd.f32	s2, s2, s10
 801346a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801346e:	eef0 6a62 	vmov.f32	s13, s5
 8013472:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013476:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801347a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801347e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013482:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013486:	eef0 6a43 	vmov.f32	s13, s6
 801348a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801348e:	ee12 2a90 	vmov	r2, s5
 8013492:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013496:	fb92 f3f3 	sdiv	r3, r2, r3
 801349a:	ee13 2a10 	vmov	r2, s6
 801349e:	9313      	str	r3, [sp, #76]	@ 0x4c
 80134a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80134a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80134a6:	9314      	str	r3, [sp, #80]	@ 0x50
 80134a8:	9b02      	ldr	r3, [sp, #8]
 80134aa:	9a05      	ldr	r2, [sp, #20]
 80134ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80134b0:	3b01      	subs	r3, #1
 80134b2:	9302      	str	r3, [sp, #8]
 80134b4:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80134b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80134ba:	eeb0 3a67 	vmov.f32	s6, s15
 80134be:	bf08      	it	eq
 80134c0:	4613      	moveq	r3, r2
 80134c2:	eef0 2a47 	vmov.f32	s5, s14
 80134c6:	e72a      	b.n	801331e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80134c8:	140f      	asrs	r7, r1, #16
 80134ca:	d454      	bmi.n	8013576 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80134cc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80134d0:	42be      	cmp	r6, r7
 80134d2:	dd50      	ble.n	8013576 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80134d4:	ea5f 4822 	movs.w	r8, r2, asr #16
 80134d8:	d44d      	bmi.n	8013576 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80134da:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80134de:	4544      	cmp	r4, r8
 80134e0:	dd49      	ble.n	8013576 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80134e2:	9c04      	ldr	r4, [sp, #16]
 80134e4:	b236      	sxth	r6, r6
 80134e6:	fb08 4606 	mla	r6, r8, r6, r4
 80134ea:	f06f 0001 	mvn.w	r0, #1
 80134ee:	f816 8007 	ldrb.w	r8, [r6, r7]
 80134f2:	9c01      	ldr	r4, [sp, #4]
 80134f4:	fb00 fa0e 	mul.w	sl, r0, lr
 80134f8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80134fc:	9800      	ldr	r0, [sp, #0]
 80134fe:	eb04 0b08 	add.w	fp, r4, r8
 8013502:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013506:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801350a:	9801      	ldr	r0, [sp, #4]
 801350c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013510:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013514:	9800      	ldr	r0, [sp, #0]
 8013516:	1227      	asrs	r7, r4, #8
 8013518:	fb16 f609 	smulbb	r6, r6, r9
 801351c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013520:	fb07 6705 	mla	r7, r7, r5, r6
 8013524:	10e6      	asrs	r6, r4, #3
 8013526:	00e4      	lsls	r4, r4, #3
 8013528:	b2e4      	uxtb	r4, r4
 801352a:	fb1b fb09 	smulbb	fp, fp, r9
 801352e:	fb14 f405 	smulbb	r4, r4, r5
 8013532:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013536:	b2bf      	uxth	r7, r7
 8013538:	fb06 b605 	mla	r6, r6, r5, fp
 801353c:	fb08 4809 	mla	r8, r8, r9, r4
 8013540:	b2b6      	uxth	r6, r6
 8013542:	fa1f f888 	uxth.w	r8, r8
 8013546:	1c7c      	adds	r4, r7, #1
 8013548:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801354c:	f106 0b01 	add.w	fp, r6, #1
 8013550:	f108 0401 	add.w	r4, r8, #1
 8013554:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013558:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801355c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013560:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013564:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013568:	4327      	orrs	r7, r4
 801356a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801356e:	ea47 070b 	orr.w	r7, r7, fp
 8013572:	f820 700a 	strh.w	r7, [r0, sl]
 8013576:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013578:	4401      	add	r1, r0
 801357a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801357c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013580:	4402      	add	r2, r0
 8013582:	e759      	b.n	8013438 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013584:	b007      	add	sp, #28
 8013586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801358c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801358c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013590:	b085      	sub	sp, #20
 8013592:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013596:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013598:	9203      	str	r2, [sp, #12]
 801359a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801359e:	6870      	ldr	r0, [r6, #4]
 80135a0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80135a2:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80135a6:	686f      	ldr	r7, [r5, #4]
 80135a8:	9101      	str	r1, [sp, #4]
 80135aa:	fb00 2404 	mla	r4, r0, r4, r2
 80135ae:	6832      	ldr	r2, [r6, #0]
 80135b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80135b4:	682a      	ldr	r2, [r5, #0]
 80135b6:	9202      	str	r2, [sp, #8]
 80135b8:	3704      	adds	r7, #4
 80135ba:	9a01      	ldr	r2, [sp, #4]
 80135bc:	2a00      	cmp	r2, #0
 80135be:	dc03      	bgt.n	80135c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80135c0:	9a03      	ldr	r2, [sp, #12]
 80135c2:	2a00      	cmp	r2, #0
 80135c4:	f340 80cc 	ble.w	8013760 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80135c8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80135ca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80135ce:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80135d2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80135d6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80135d8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80135dc:	2b00      	cmp	r3, #0
 80135de:	dd0d      	ble.n	80135fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80135e0:	1406      	asrs	r6, r0, #16
 80135e2:	d405      	bmi.n	80135f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80135e4:	454e      	cmp	r6, r9
 80135e6:	da03      	bge.n	80135f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80135e8:	1416      	asrs	r6, r2, #16
 80135ea:	d401      	bmi.n	80135f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80135ec:	4546      	cmp	r6, r8
 80135ee:	db06      	blt.n	80135fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135f0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80135f2:	4460      	add	r0, ip
 80135f4:	4432      	add	r2, r6
 80135f6:	3b01      	subs	r3, #1
 80135f8:	3402      	adds	r4, #2
 80135fa:	e7ef      	b.n	80135dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80135fc:	d00f      	beq.n	801361e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80135fe:	1e5e      	subs	r6, r3, #1
 8013600:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013604:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013608:	d543      	bpl.n	8013692 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801360a:	4698      	mov	r8, r3
 801360c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013610:	f1b8 0f00 	cmp.w	r8, #0
 8013614:	dc71      	bgt.n	80136fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013616:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801361a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801361e:	9b01      	ldr	r3, [sp, #4]
 8013620:	2b00      	cmp	r3, #0
 8013622:	f340 809d 	ble.w	8013760 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013626:	ee30 0a04 	vadd.f32	s0, s0, s8
 801362a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801362e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013632:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013634:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013638:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801363c:	eeb0 6a62 	vmov.f32	s12, s5
 8013640:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013644:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013648:	ee77 2a62 	vsub.f32	s5, s14, s5
 801364c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013650:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013654:	eeb0 6a43 	vmov.f32	s12, s6
 8013658:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801365c:	ee12 2a90 	vmov	r2, s5
 8013660:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013664:	fb92 fcf3 	sdiv	ip, r2, r3
 8013668:	ee13 2a10 	vmov	r2, s6
 801366c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013670:	9312      	str	r3, [sp, #72]	@ 0x48
 8013672:	9b01      	ldr	r3, [sp, #4]
 8013674:	9a03      	ldr	r2, [sp, #12]
 8013676:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801367a:	3b01      	subs	r3, #1
 801367c:	9301      	str	r3, [sp, #4]
 801367e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013682:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013684:	eeb0 3a67 	vmov.f32	s6, s15
 8013688:	bf08      	it	eq
 801368a:	4613      	moveq	r3, r2
 801368c:	eef0 2a47 	vmov.f32	s5, s14
 8013690:	e793      	b.n	80135ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013692:	45ce      	cmp	lr, r9
 8013694:	dab9      	bge.n	801360a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013696:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013698:	fb01 2606 	mla	r6, r1, r6, r2
 801369c:	1436      	asrs	r6, r6, #16
 801369e:	d4b4      	bmi.n	801360a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80136a0:	4546      	cmp	r6, r8
 80136a2:	dab2      	bge.n	801360a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80136a4:	4698      	mov	r8, r3
 80136a6:	46a2      	mov	sl, r4
 80136a8:	f1b8 0f00 	cmp.w	r8, #0
 80136ac:	ddb3      	ble.n	8013616 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80136ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80136b2:	9902      	ldr	r1, [sp, #8]
 80136b4:	1416      	asrs	r6, r2, #16
 80136b6:	fb09 1606 	mla	r6, r9, r6, r1
 80136ba:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80136be:	492a      	ldr	r1, [pc, #168]	@ (8013768 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80136c0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80136c4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80136c8:	eb07 0b0e 	add.w	fp, r7, lr
 80136cc:	4460      	add	r0, ip
 80136ce:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80136d2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80136d6:	00f6      	lsls	r6, r6, #3
 80136d8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80136dc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80136e0:	ea49 0606 	orr.w	r6, r9, r6
 80136e4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80136e8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80136ea:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80136ee:	f82a 6b02 	strh.w	r6, [sl], #2
 80136f2:	440a      	add	r2, r1
 80136f4:	f108 38ff 	add.w	r8, r8, #4294967295
 80136f8:	e7d6      	b.n	80136a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80136fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80136fe:	d429      	bmi.n	8013754 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013700:	68ae      	ldr	r6, [r5, #8]
 8013702:	454e      	cmp	r6, r9
 8013704:	dd26      	ble.n	8013754 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013706:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801370a:	d423      	bmi.n	8013754 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801370c:	68e9      	ldr	r1, [r5, #12]
 801370e:	4559      	cmp	r1, fp
 8013710:	dd20      	ble.n	8013754 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013712:	9902      	ldr	r1, [sp, #8]
 8013714:	fa0f fe86 	sxth.w	lr, r6
 8013718:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801371c:	f06f 0101 	mvn.w	r1, #1
 8013720:	f81e e009 	ldrb.w	lr, [lr, r9]
 8013724:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013728:	eb07 060e 	add.w	r6, r7, lr
 801372c:	fb01 f908 	mul.w	r9, r1, r8
 8013730:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013734:	7876      	ldrb	r6, [r6, #1]
 8013736:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801373a:	00f6      	lsls	r6, r6, #3
 801373c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8013740:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013744:	ea4b 0606 	orr.w	r6, fp, r6
 8013748:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801374c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013750:	f82a 6009 	strh.w	r6, [sl, r9]
 8013754:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013756:	4460      	add	r0, ip
 8013758:	440a      	add	r2, r1
 801375a:	f108 38ff 	add.w	r8, r8, #4294967295
 801375e:	e757      	b.n	8013610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013760:	b005      	add	sp, #20
 8013762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013766:	bf00      	nop
 8013768:	fffff800 	.word	0xfffff800

0801376c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801376c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013770:	b087      	sub	sp, #28
 8013772:	468b      	mov	fp, r1
 8013774:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013776:	9204      	str	r2, [sp, #16]
 8013778:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801377c:	9205      	str	r2, [sp, #20]
 801377e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013782:	6841      	ldr	r1, [r0, #4]
 8013784:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013788:	fb01 2404 	mla	r4, r1, r4, r2
 801378c:	6802      	ldr	r2, [r0, #0]
 801378e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013792:	f8dc 2000 	ldr.w	r2, [ip]
 8013796:	9201      	str	r2, [sp, #4]
 8013798:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801379c:	3204      	adds	r2, #4
 801379e:	9202      	str	r2, [sp, #8]
 80137a0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80137a4:	f1bb 0f00 	cmp.w	fp, #0
 80137a8:	dc03      	bgt.n	80137b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80137aa:	9a04      	ldr	r2, [sp, #16]
 80137ac:	2a00      	cmp	r2, #0
 80137ae:	f340 8138 	ble.w	8013a22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80137b2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80137b4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80137b8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80137bc:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80137c0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80137c2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80137c6:	2b00      	cmp	r3, #0
 80137c8:	dd0e      	ble.n	80137e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80137ca:	1402      	asrs	r2, r0, #16
 80137cc:	d405      	bmi.n	80137da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80137ce:	42ba      	cmp	r2, r7
 80137d0:	da03      	bge.n	80137da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80137d2:	140a      	asrs	r2, r1, #16
 80137d4:	d401      	bmi.n	80137da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80137d6:	42b2      	cmp	r2, r6
 80137d8:	db07      	blt.n	80137ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80137da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80137dc:	4410      	add	r0, r2
 80137de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80137e0:	3b01      	subs	r3, #1
 80137e2:	4411      	add	r1, r2
 80137e4:	3402      	adds	r4, #2
 80137e6:	e7ee      	b.n	80137c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80137e8:	d019      	beq.n	801381e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80137ea:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80137ec:	1e5a      	subs	r2, r3, #1
 80137ee:	fb05 0502 	mla	r5, r5, r2, r0
 80137f2:	142d      	asrs	r5, r5, #16
 80137f4:	d409      	bmi.n	801380a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80137f6:	42bd      	cmp	r5, r7
 80137f8:	da07      	bge.n	801380a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80137fa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80137fc:	fb05 1202 	mla	r2, r5, r2, r1
 8013800:	1412      	asrs	r2, r2, #16
 8013802:	d402      	bmi.n	801380a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013804:	42b2      	cmp	r2, r6
 8013806:	f2c0 80ac 	blt.w	8013962 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801380a:	f04f 0e00 	mov.w	lr, #0
 801380e:	eb03 020e 	add.w	r2, r3, lr
 8013812:	2a00      	cmp	r2, #0
 8013814:	dc3e      	bgt.n	8013894 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013816:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801381a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801381e:	f1bb 0f00 	cmp.w	fp, #0
 8013822:	f340 80fe 	ble.w	8013a22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013826:	ee30 0a04 	vadd.f32	s0, s0, s8
 801382a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801382e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013832:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013834:	f1bb 0b01 	subs.w	fp, fp, #1
 8013838:	ee31 1a05 	vadd.f32	s2, s2, s10
 801383c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013840:	eeb0 6a62 	vmov.f32	s12, s5
 8013844:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013848:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801384c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013850:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013854:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013858:	eeb0 6a43 	vmov.f32	s12, s6
 801385c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013860:	ee12 2a90 	vmov	r2, s5
 8013864:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013868:	fb92 f3f3 	sdiv	r3, r2, r3
 801386c:	ee13 2a10 	vmov	r2, s6
 8013870:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013874:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013876:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013878:	fb92 f3f3 	sdiv	r3, r2, r3
 801387c:	9a04      	ldr	r2, [sp, #16]
 801387e:	9314      	str	r3, [sp, #80]	@ 0x50
 8013880:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013884:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013886:	eeb0 3a67 	vmov.f32	s6, s15
 801388a:	bf08      	it	eq
 801388c:	4613      	moveq	r3, r2
 801388e:	eef0 2a47 	vmov.f32	s5, s14
 8013892:	e787      	b.n	80137a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013894:	1406      	asrs	r6, r0, #16
 8013896:	d45d      	bmi.n	8013954 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013898:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801389c:	42b5      	cmp	r5, r6
 801389e:	dd59      	ble.n	8013954 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80138a0:	140f      	asrs	r7, r1, #16
 80138a2:	d457      	bmi.n	8013954 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80138a4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80138a8:	42ba      	cmp	r2, r7
 80138aa:	dd53      	ble.n	8013954 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80138ac:	9a01      	ldr	r2, [sp, #4]
 80138ae:	b22d      	sxth	r5, r5
 80138b0:	fb07 2505 	mla	r5, r7, r5, r2
 80138b4:	5daa      	ldrb	r2, [r5, r6]
 80138b6:	9d02      	ldr	r5, [sp, #8]
 80138b8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80138bc:	0e2e      	lsrs	r6, r5, #24
 80138be:	d049      	beq.n	8013954 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80138c0:	f06f 0201 	mvn.w	r2, #1
 80138c4:	fb02 f20e 	mul.w	r2, r2, lr
 80138c8:	9203      	str	r2, [sp, #12]
 80138ca:	f834 8002 	ldrh.w	r8, [r4, r2]
 80138ce:	9a05      	ldr	r2, [sp, #20]
 80138d0:	4356      	muls	r6, r2
 80138d2:	1c72      	adds	r2, r6, #1
 80138d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80138d8:	1212      	asrs	r2, r2, #8
 80138da:	fa1f f982 	uxth.w	r9, r2
 80138de:	ea4f 2728 	mov.w	r7, r8, asr #8
 80138e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80138e6:	43d2      	mvns	r2, r2
 80138e8:	b2d2      	uxtb	r2, r2
 80138ea:	fb16 f609 	smulbb	r6, r6, r9
 80138ee:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80138f2:	fb07 6702 	mla	r7, r7, r2, r6
 80138f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80138fa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80138fe:	b2ed      	uxtb	r5, r5
 8013900:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013904:	fa5f f888 	uxtb.w	r8, r8
 8013908:	fb15 f509 	smulbb	r5, r5, r9
 801390c:	fb08 5502 	mla	r5, r8, r2, r5
 8013910:	b2bf      	uxth	r7, r7
 8013912:	fb1a fa09 	smulbb	sl, sl, r9
 8013916:	b2ad      	uxth	r5, r5
 8013918:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801391c:	fb06 a602 	mla	r6, r6, r2, sl
 8013920:	1c7a      	adds	r2, r7, #1
 8013922:	f105 0a01 	add.w	sl, r5, #1
 8013926:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801392a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801392e:	b2b6      	uxth	r6, r6
 8013930:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013934:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013938:	ea4a 0707 	orr.w	r7, sl, r7
 801393c:	f106 0a01 	add.w	sl, r6, #1
 8013940:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013944:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013948:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801394c:	9a03      	ldr	r2, [sp, #12]
 801394e:	ea47 070a 	orr.w	r7, r7, sl
 8013952:	52a7      	strh	r7, [r4, r2]
 8013954:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013956:	4410      	add	r0, r2
 8013958:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801395a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801395e:	4411      	add	r1, r2
 8013960:	e755      	b.n	801380e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013962:	f04f 0800 	mov.w	r8, #0
 8013966:	eba3 0208 	sub.w	r2, r3, r8
 801396a:	2a00      	cmp	r2, #0
 801396c:	f77f af53 	ble.w	8013816 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013970:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013974:	9f01      	ldr	r7, [sp, #4]
 8013976:	140a      	asrs	r2, r1, #16
 8013978:	1405      	asrs	r5, r0, #16
 801397a:	fb06 7202 	mla	r2, r6, r2, r7
 801397e:	5d52      	ldrb	r2, [r2, r5]
 8013980:	9d02      	ldr	r5, [sp, #8]
 8013982:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013986:	0e2e      	lsrs	r6, r5, #24
 8013988:	d044      	beq.n	8013a14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801398a:	9a05      	ldr	r2, [sp, #20]
 801398c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013990:	4356      	muls	r6, r2
 8013992:	1c72      	adds	r2, r6, #1
 8013994:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013998:	1212      	asrs	r2, r2, #8
 801399a:	fa1f f982 	uxth.w	r9, r2
 801399e:	ea4f 272e 	mov.w	r7, lr, asr #8
 80139a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80139a6:	43d2      	mvns	r2, r2
 80139a8:	b2d2      	uxtb	r2, r2
 80139aa:	fb16 f609 	smulbb	r6, r6, r9
 80139ae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80139b2:	fb07 6702 	mla	r7, r7, r2, r6
 80139b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80139ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80139be:	b2ed      	uxtb	r5, r5
 80139c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80139c4:	fa5f fe8e 	uxtb.w	lr, lr
 80139c8:	fb15 f509 	smulbb	r5, r5, r9
 80139cc:	fb0e 5502 	mla	r5, lr, r2, r5
 80139d0:	b2bf      	uxth	r7, r7
 80139d2:	fb1a fa09 	smulbb	sl, sl, r9
 80139d6:	b2ad      	uxth	r5, r5
 80139d8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80139dc:	fb06 a602 	mla	r6, r6, r2, sl
 80139e0:	1c7a      	adds	r2, r7, #1
 80139e2:	f105 0a01 	add.w	sl, r5, #1
 80139e6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80139ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80139ee:	b2b6      	uxth	r6, r6
 80139f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139f4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80139f8:	ea4a 0707 	orr.w	r7, sl, r7
 80139fc:	f106 0a01 	add.w	sl, r6, #1
 8013a00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013a04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013a08:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013a0c:	ea47 070a 	orr.w	r7, r7, sl
 8013a10:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013a14:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013a16:	4410      	add	r0, r2
 8013a18:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013a1a:	f108 0801 	add.w	r8, r8, #1
 8013a1e:	4411      	add	r1, r2
 8013a20:	e7a1      	b.n	8013966 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8013a22:	b007      	add	sp, #28
 8013a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013a28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a2c:	b085      	sub	sp, #20
 8013a2e:	468b      	mov	fp, r1
 8013a30:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013a32:	9203      	str	r2, [sp, #12]
 8013a34:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013a38:	6841      	ldr	r1, [r0, #4]
 8013a3a:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013a3e:	fb01 2404 	mla	r4, r1, r4, r2
 8013a42:	6802      	ldr	r2, [r0, #0]
 8013a44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013a48:	f8de 2000 	ldr.w	r2, [lr]
 8013a4c:	9200      	str	r2, [sp, #0]
 8013a4e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013a52:	3204      	adds	r2, #4
 8013a54:	9201      	str	r2, [sp, #4]
 8013a56:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013a5a:	f1bb 0f00 	cmp.w	fp, #0
 8013a5e:	dc03      	bgt.n	8013a68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013a60:	9a03      	ldr	r2, [sp, #12]
 8013a62:	2a00      	cmp	r2, #0
 8013a64:	f340 8153 	ble.w	8013d0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013a68:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013a6a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013a6e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013a72:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013a76:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013a78:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013a7c:	2b00      	cmp	r3, #0
 8013a7e:	dd0e      	ble.n	8013a9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013a80:	1408      	asrs	r0, r1, #16
 8013a82:	d405      	bmi.n	8013a90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a84:	42b8      	cmp	r0, r7
 8013a86:	da03      	bge.n	8013a90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a88:	1410      	asrs	r0, r2, #16
 8013a8a:	d401      	bmi.n	8013a90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a8c:	42b0      	cmp	r0, r6
 8013a8e:	db07      	blt.n	8013aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013a90:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013a92:	4401      	add	r1, r0
 8013a94:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013a96:	3b01      	subs	r3, #1
 8013a98:	4402      	add	r2, r0
 8013a9a:	3402      	adds	r4, #2
 8013a9c:	e7ee      	b.n	8013a7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013a9e:	d017      	beq.n	8013ad0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013aa0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013aa2:	1e58      	subs	r0, r3, #1
 8013aa4:	fb05 1500 	mla	r5, r5, r0, r1
 8013aa8:	142d      	asrs	r5, r5, #16
 8013aaa:	d409      	bmi.n	8013ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013aac:	42bd      	cmp	r5, r7
 8013aae:	da07      	bge.n	8013ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013ab0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013ab2:	fb05 2000 	mla	r0, r5, r0, r2
 8013ab6:	1400      	asrs	r0, r0, #16
 8013ab8:	d402      	bmi.n	8013ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013aba:	42b0      	cmp	r0, r6
 8013abc:	f2c0 80bc 	blt.w	8013c38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013ac0:	2600      	movs	r6, #0
 8013ac2:	1998      	adds	r0, r3, r6
 8013ac4:	2800      	cmp	r0, #0
 8013ac6:	dc3e      	bgt.n	8013b46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013ac8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013acc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013ad0:	f1bb 0f00 	cmp.w	fp, #0
 8013ad4:	f340 811b 	ble.w	8013d0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013ad8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013adc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ae0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ae4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013ae6:	f1bb 0b01 	subs.w	fp, fp, #1
 8013aea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013aee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013af2:	eeb0 6a62 	vmov.f32	s12, s5
 8013af6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013afa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013afe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b02:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013b06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b0a:	eeb0 6a43 	vmov.f32	s12, s6
 8013b0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013b12:	ee12 2a90 	vmov	r2, s5
 8013b16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013b1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b1e:	ee13 2a10 	vmov	r2, s6
 8013b22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b26:	9311      	str	r3, [sp, #68]	@ 0x44
 8013b28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013b2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b2e:	9a03      	ldr	r2, [sp, #12]
 8013b30:	9312      	str	r3, [sp, #72]	@ 0x48
 8013b32:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013b36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013b38:	eeb0 3a67 	vmov.f32	s6, s15
 8013b3c:	bf08      	it	eq
 8013b3e:	4613      	moveq	r3, r2
 8013b40:	eef0 2a47 	vmov.f32	s5, s14
 8013b44:	e789      	b.n	8013a5a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013b46:	140f      	asrs	r7, r1, #16
 8013b48:	d426      	bmi.n	8013b98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b4a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013b4e:	42bd      	cmp	r5, r7
 8013b50:	dd22      	ble.n	8013b98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b52:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013b56:	d41f      	bmi.n	8013b98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b58:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013b5c:	4560      	cmp	r0, ip
 8013b5e:	dd1b      	ble.n	8013b98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b60:	9800      	ldr	r0, [sp, #0]
 8013b62:	b22d      	sxth	r5, r5
 8013b64:	fb0c 0505 	mla	r5, ip, r5, r0
 8013b68:	5de8      	ldrb	r0, [r5, r7]
 8013b6a:	9d01      	ldr	r5, [sp, #4]
 8013b6c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013b70:	0e07      	lsrs	r7, r0, #24
 8013b72:	2fff      	cmp	r7, #255	@ 0xff
 8013b74:	d116      	bne.n	8013ba4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013b76:	f06f 0501 	mvn.w	r5, #1
 8013b7a:	fb05 f706 	mul.w	r7, r5, r6
 8013b7e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013b82:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013b86:	0945      	lsrs	r5, r0, #5
 8013b88:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013b8c:	ea4c 0505 	orr.w	r5, ip, r5
 8013b90:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013b94:	4305      	orrs	r5, r0
 8013b96:	53e5      	strh	r5, [r4, r7]
 8013b98:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013b9a:	4401      	add	r1, r0
 8013b9c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013b9e:	3e01      	subs	r6, #1
 8013ba0:	4402      	add	r2, r0
 8013ba2:	e78e      	b.n	8013ac2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013ba4:	b2fd      	uxtb	r5, r7
 8013ba6:	2f00      	cmp	r7, #0
 8013ba8:	d0f6      	beq.n	8013b98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013baa:	f06f 0701 	mvn.w	r7, #1
 8013bae:	4377      	muls	r7, r6
 8013bb0:	fa1f f985 	uxth.w	r9, r5
 8013bb4:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013bb8:	9702      	str	r7, [sp, #8]
 8013bba:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013bbe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013bc2:	43ed      	mvns	r5, r5
 8013bc4:	b2ed      	uxtb	r5, r5
 8013bc6:	fb17 f709 	smulbb	r7, r7, r9
 8013bca:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013bce:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013bd2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013bd6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013bda:	b2c0      	uxtb	r0, r0
 8013bdc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013be0:	fa5f f888 	uxtb.w	r8, r8
 8013be4:	fb10 f009 	smulbb	r0, r0, r9
 8013be8:	fb08 0005 	mla	r0, r8, r5, r0
 8013bec:	b280      	uxth	r0, r0
 8013bee:	fa1f fc8c 	uxth.w	ip, ip
 8013bf2:	fb1a fa09 	smulbb	sl, sl, r9
 8013bf6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013bfa:	fb07 a705 	mla	r7, r7, r5, sl
 8013bfe:	f100 0a01 	add.w	sl, r0, #1
 8013c02:	f10c 0501 	add.w	r5, ip, #1
 8013c06:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013c0a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013c0e:	b2bf      	uxth	r7, r7
 8013c10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013c14:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013c18:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013c1c:	f107 0a01 	add.w	sl, r7, #1
 8013c20:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013c24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013c28:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013c2c:	9802      	ldr	r0, [sp, #8]
 8013c2e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013c32:	f824 c000 	strh.w	ip, [r4, r0]
 8013c36:	e7af      	b.n	8013b98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013c38:	f04f 0800 	mov.w	r8, #0
 8013c3c:	eba3 0008 	sub.w	r0, r3, r8
 8013c40:	2800      	cmp	r0, #0
 8013c42:	f77f af41 	ble.w	8013ac8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013c46:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013c4a:	9f00      	ldr	r7, [sp, #0]
 8013c4c:	1410      	asrs	r0, r2, #16
 8013c4e:	140d      	asrs	r5, r1, #16
 8013c50:	fb06 7000 	mla	r0, r6, r0, r7
 8013c54:	5d40      	ldrb	r0, [r0, r5]
 8013c56:	9d01      	ldr	r5, [sp, #4]
 8013c58:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013c5c:	0e2e      	lsrs	r6, r5, #24
 8013c5e:	2eff      	cmp	r6, #255	@ 0xff
 8013c60:	d112      	bne.n	8013c88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013c62:	482c      	ldr	r0, [pc, #176]	@ (8013d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013c64:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013c68:	0968      	lsrs	r0, r5, #5
 8013c6a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013c6e:	4330      	orrs	r0, r6
 8013c70:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013c74:	4328      	orrs	r0, r5
 8013c76:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8013c7a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013c7c:	4401      	add	r1, r0
 8013c7e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013c80:	f108 0801 	add.w	r8, r8, #1
 8013c84:	4402      	add	r2, r0
 8013c86:	e7d9      	b.n	8013c3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013c88:	b2f0      	uxtb	r0, r6
 8013c8a:	2e00      	cmp	r6, #0
 8013c8c:	d0f5      	beq.n	8013c7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013c8e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013c92:	fa1f f980 	uxth.w	r9, r0
 8013c96:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013c9a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013c9e:	43c0      	mvns	r0, r0
 8013ca0:	b2c0      	uxtb	r0, r0
 8013ca2:	fb16 f609 	smulbb	r6, r6, r9
 8013ca6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013caa:	fb07 6700 	mla	r7, r7, r0, r6
 8013cae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013cb2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013cb6:	b2ed      	uxtb	r5, r5
 8013cb8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013cbc:	fa5f fc8c 	uxtb.w	ip, ip
 8013cc0:	fb15 f509 	smulbb	r5, r5, r9
 8013cc4:	fb0c 5500 	mla	r5, ip, r0, r5
 8013cc8:	b2bf      	uxth	r7, r7
 8013cca:	fb1a fa09 	smulbb	sl, sl, r9
 8013cce:	b2ad      	uxth	r5, r5
 8013cd0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013cd4:	fb06 a600 	mla	r6, r6, r0, sl
 8013cd8:	1c78      	adds	r0, r7, #1
 8013cda:	f105 0a01 	add.w	sl, r5, #1
 8013cde:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013ce2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013ce6:	b2b6      	uxth	r6, r6
 8013ce8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013cec:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013cf0:	ea4a 0707 	orr.w	r7, sl, r7
 8013cf4:	f106 0a01 	add.w	sl, r6, #1
 8013cf8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013cfc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013d00:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013d04:	ea47 070a 	orr.w	r7, r7, sl
 8013d08:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013d0c:	e7b5      	b.n	8013c7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013d0e:	b005      	add	sp, #20
 8013d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d14:	fffff800 	.word	0xfffff800

08013d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d1c:	b087      	sub	sp, #28
 8013d1e:	468b      	mov	fp, r1
 8013d20:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013d22:	9204      	str	r2, [sp, #16]
 8013d24:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013d28:	9205      	str	r2, [sp, #20]
 8013d2a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013d2e:	6861      	ldr	r1, [r4, #4]
 8013d30:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013d34:	fb01 2000 	mla	r0, r1, r0, r2
 8013d38:	6822      	ldr	r2, [r4, #0]
 8013d3a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013d3e:	f8de 2000 	ldr.w	r2, [lr]
 8013d42:	9201      	str	r2, [sp, #4]
 8013d44:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013d48:	9202      	str	r2, [sp, #8]
 8013d4a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013d4e:	f1bb 0f00 	cmp.w	fp, #0
 8013d52:	dc03      	bgt.n	8013d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013d54:	9a04      	ldr	r2, [sp, #16]
 8013d56:	2a00      	cmp	r2, #0
 8013d58:	f340 8142 	ble.w	8013fe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013d5c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013d5e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013d62:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013d66:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013d6a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013d6c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013d70:	2b00      	cmp	r3, #0
 8013d72:	dd0e      	ble.n	8013d92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013d74:	140c      	asrs	r4, r1, #16
 8013d76:	d405      	bmi.n	8013d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d78:	42bc      	cmp	r4, r7
 8013d7a:	da03      	bge.n	8013d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d7c:	1414      	asrs	r4, r2, #16
 8013d7e:	d401      	bmi.n	8013d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d80:	42b4      	cmp	r4, r6
 8013d82:	db07      	blt.n	8013d94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013d84:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013d86:	4421      	add	r1, r4
 8013d88:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013d8a:	3b01      	subs	r3, #1
 8013d8c:	4422      	add	r2, r4
 8013d8e:	3002      	adds	r0, #2
 8013d90:	e7ee      	b.n	8013d70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013d92:	d019      	beq.n	8013dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013d94:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013d96:	1e5c      	subs	r4, r3, #1
 8013d98:	fb05 1504 	mla	r5, r5, r4, r1
 8013d9c:	142d      	asrs	r5, r5, #16
 8013d9e:	d409      	bmi.n	8013db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013da0:	42bd      	cmp	r5, r7
 8013da2:	da07      	bge.n	8013db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013da4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013da6:	fb05 2404 	mla	r4, r5, r4, r2
 8013daa:	1424      	asrs	r4, r4, #16
 8013dac:	d402      	bmi.n	8013db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013dae:	42b4      	cmp	r4, r6
 8013db0:	f2c0 80b1 	blt.w	8013f16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013db4:	f04f 0800 	mov.w	r8, #0
 8013db8:	eb03 0408 	add.w	r4, r3, r8
 8013dbc:	2c00      	cmp	r4, #0
 8013dbe:	dc3e      	bgt.n	8013e3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013dc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013dc4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013dc8:	f1bb 0f00 	cmp.w	fp, #0
 8013dcc:	f340 8108 	ble.w	8013fe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013dd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013dd4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013dd8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ddc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013dde:	f1bb 0b01 	subs.w	fp, fp, #1
 8013de2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013de6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013dea:	eeb0 6a62 	vmov.f32	s12, s5
 8013dee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013df2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013df6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013dfa:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013dfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e02:	eeb0 6a43 	vmov.f32	s12, s6
 8013e06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013e0a:	ee12 2a90 	vmov	r2, s5
 8013e0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013e12:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e16:	ee13 2a10 	vmov	r2, s6
 8013e1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e1e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013e20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e22:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e26:	9a04      	ldr	r2, [sp, #16]
 8013e28:	9314      	str	r3, [sp, #80]	@ 0x50
 8013e2a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013e2e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e30:	eeb0 3a67 	vmov.f32	s6, s15
 8013e34:	bf08      	it	eq
 8013e36:	4613      	moveq	r3, r2
 8013e38:	eef0 2a47 	vmov.f32	s5, s14
 8013e3c:	e787      	b.n	8013d4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013e3e:	140e      	asrs	r6, r1, #16
 8013e40:	d462      	bmi.n	8013f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e42:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013e46:	42b5      	cmp	r5, r6
 8013e48:	dd5e      	ble.n	8013f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e4a:	1417      	asrs	r7, r2, #16
 8013e4c:	d45c      	bmi.n	8013f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e4e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013e52:	42bc      	cmp	r4, r7
 8013e54:	dd58      	ble.n	8013f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e56:	b22d      	sxth	r5, r5
 8013e58:	fb07 6505 	mla	r5, r7, r5, r6
 8013e5c:	9c02      	ldr	r4, [sp, #8]
 8013e5e:	5d66      	ldrb	r6, [r4, r5]
 8013e60:	2e00      	cmp	r6, #0
 8013e62:	d051      	beq.n	8013f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e64:	9c01      	ldr	r4, [sp, #4]
 8013e66:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8013e6a:	f06f 0401 	mvn.w	r4, #1
 8013e6e:	fb04 f408 	mul.w	r4, r4, r8
 8013e72:	9403      	str	r4, [sp, #12]
 8013e74:	5b05      	ldrh	r5, [r0, r4]
 8013e76:	9c05      	ldr	r4, [sp, #20]
 8013e78:	4366      	muls	r6, r4
 8013e7a:	1c74      	adds	r4, r6, #1
 8013e7c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013e80:	1224      	asrs	r4, r4, #8
 8013e82:	b2a7      	uxth	r7, r4
 8013e84:	122e      	asrs	r6, r5, #8
 8013e86:	43e4      	mvns	r4, r4
 8013e88:	b2e4      	uxtb	r4, r4
 8013e8a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8013e8e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013e92:	fb16 f604 	smulbb	r6, r6, r4
 8013e96:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013e9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013e9e:	00ed      	lsls	r5, r5, #3
 8013ea0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013ea4:	b2ed      	uxtb	r5, r5
 8013ea6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8013eaa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013eae:	fb15 f504 	smulbb	r5, r5, r4
 8013eb2:	fa5f f989 	uxtb.w	r9, r9
 8013eb6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013eba:	fb09 5507 	mla	r5, r9, r7, r5
 8013ebe:	fb1a fa04 	smulbb	sl, sl, r4
 8013ec2:	fa1f fc8c 	uxth.w	ip, ip
 8013ec6:	b2ad      	uxth	r5, r5
 8013ec8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013ecc:	fb06 a607 	mla	r6, r6, r7, sl
 8013ed0:	f10c 0401 	add.w	r4, ip, #1
 8013ed4:	f105 0a01 	add.w	sl, r5, #1
 8013ed8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013edc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013ee0:	b2b6      	uxth	r6, r6
 8013ee2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013ee6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013eea:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013eee:	f106 0a01 	add.w	sl, r6, #1
 8013ef2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013ef6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013efa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013efe:	9c03      	ldr	r4, [sp, #12]
 8013f00:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013f04:	f820 c004 	strh.w	ip, [r0, r4]
 8013f08:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013f0a:	4421      	add	r1, r4
 8013f0c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013f0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013f12:	4422      	add	r2, r4
 8013f14:	e750      	b.n	8013db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013f16:	f04f 0900 	mov.w	r9, #0
 8013f1a:	eba3 0409 	sub.w	r4, r3, r9
 8013f1e:	2c00      	cmp	r4, #0
 8013f20:	f77f af4e 	ble.w	8013dc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013f24:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013f28:	140d      	asrs	r5, r1, #16
 8013f2a:	1414      	asrs	r4, r2, #16
 8013f2c:	fb06 5404 	mla	r4, r6, r4, r5
 8013f30:	9d02      	ldr	r5, [sp, #8]
 8013f32:	5d2e      	ldrb	r6, [r5, r4]
 8013f34:	2e00      	cmp	r6, #0
 8013f36:	d04c      	beq.n	8013fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8013f38:	9d01      	ldr	r5, [sp, #4]
 8013f3a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8013f3e:	9c05      	ldr	r4, [sp, #20]
 8013f40:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013f44:	4366      	muls	r6, r4
 8013f46:	1c74      	adds	r4, r6, #1
 8013f48:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013f4c:	1224      	asrs	r4, r4, #8
 8013f4e:	b2a7      	uxth	r7, r4
 8013f50:	122e      	asrs	r6, r5, #8
 8013f52:	43e4      	mvns	r4, r4
 8013f54:	b2e4      	uxtb	r4, r4
 8013f56:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013f5a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013f5e:	fb16 f604 	smulbb	r6, r6, r4
 8013f62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013f66:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013f6a:	00ed      	lsls	r5, r5, #3
 8013f6c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013f70:	b2ed      	uxtb	r5, r5
 8013f72:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013f76:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013f7a:	fb15 f504 	smulbb	r5, r5, r4
 8013f7e:	fa5f f888 	uxtb.w	r8, r8
 8013f82:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013f86:	fb08 5507 	mla	r5, r8, r7, r5
 8013f8a:	fb1a fa04 	smulbb	sl, sl, r4
 8013f8e:	fa1f fc8c 	uxth.w	ip, ip
 8013f92:	b2ad      	uxth	r5, r5
 8013f94:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f98:	fb06 a607 	mla	r6, r6, r7, sl
 8013f9c:	f10c 0401 	add.w	r4, ip, #1
 8013fa0:	f105 0a01 	add.w	sl, r5, #1
 8013fa4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013fa8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013fac:	b2b6      	uxth	r6, r6
 8013fae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013fb2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013fb6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013fba:	f106 0a01 	add.w	sl, r6, #1
 8013fbe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013fc2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013fc6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013fca:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013fce:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013fd2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013fd4:	4421      	add	r1, r4
 8013fd6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013fd8:	f109 0901 	add.w	r9, r9, #1
 8013fdc:	4422      	add	r2, r4
 8013fde:	e79c      	b.n	8013f1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8013fe0:	b007      	add	sp, #28
 8013fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013fe6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fea:	b085      	sub	sp, #20
 8013fec:	468b      	mov	fp, r1
 8013fee:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013ff0:	9203      	str	r2, [sp, #12]
 8013ff2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8013ff6:	6861      	ldr	r1, [r4, #4]
 8013ff8:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8013ffc:	fb01 2000 	mla	r0, r1, r0, r2
 8014000:	6822      	ldr	r2, [r4, #0]
 8014002:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014006:	f8d8 2000 	ldr.w	r2, [r8]
 801400a:	9200      	str	r2, [sp, #0]
 801400c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014010:	9201      	str	r2, [sp, #4]
 8014012:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014016:	f1bb 0f00 	cmp.w	fp, #0
 801401a:	dc03      	bgt.n	8014024 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801401c:	9a03      	ldr	r2, [sp, #12]
 801401e:	2a00      	cmp	r2, #0
 8014020:	f340 8146 	ble.w	80142b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014024:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014026:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801402a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801402e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014032:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014034:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014038:	2b00      	cmp	r3, #0
 801403a:	dd0e      	ble.n	801405a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801403c:	140c      	asrs	r4, r1, #16
 801403e:	d405      	bmi.n	801404c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014040:	42bc      	cmp	r4, r7
 8014042:	da03      	bge.n	801404c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014044:	1414      	asrs	r4, r2, #16
 8014046:	d401      	bmi.n	801404c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014048:	42b4      	cmp	r4, r6
 801404a:	db07      	blt.n	801405c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801404c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801404e:	4421      	add	r1, r4
 8014050:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014052:	3b01      	subs	r3, #1
 8014054:	4422      	add	r2, r4
 8014056:	3002      	adds	r0, #2
 8014058:	e7ee      	b.n	8014038 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801405a:	d017      	beq.n	801408c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801405c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801405e:	1e5c      	subs	r4, r3, #1
 8014060:	fb05 1504 	mla	r5, r5, r4, r1
 8014064:	142d      	asrs	r5, r5, #16
 8014066:	d409      	bmi.n	801407c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014068:	42bd      	cmp	r5, r7
 801406a:	da07      	bge.n	801407c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801406c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801406e:	fb05 2404 	mla	r4, r5, r4, r2
 8014072:	1424      	asrs	r4, r4, #16
 8014074:	d402      	bmi.n	801407c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014076:	42b4      	cmp	r4, r6
 8014078:	f2c0 80b3 	blt.w	80141e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801407c:	2600      	movs	r6, #0
 801407e:	199c      	adds	r4, r3, r6
 8014080:	2c00      	cmp	r4, #0
 8014082:	dc3e      	bgt.n	8014102 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014084:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014088:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801408c:	f1bb 0f00 	cmp.w	fp, #0
 8014090:	f340 810e 	ble.w	80142b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014094:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014098:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801409c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80140a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80140a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80140a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80140aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80140ae:	eeb0 6a62 	vmov.f32	s12, s5
 80140b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80140b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80140ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80140be:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80140c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80140c6:	eeb0 6a43 	vmov.f32	s12, s6
 80140ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80140ce:	ee12 2a90 	vmov	r2, s5
 80140d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80140d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80140da:	ee13 2a10 	vmov	r2, s6
 80140de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80140e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80140e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80140e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80140ea:	9a03      	ldr	r2, [sp, #12]
 80140ec:	9312      	str	r3, [sp, #72]	@ 0x48
 80140ee:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80140f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80140f4:	eeb0 3a67 	vmov.f32	s6, s15
 80140f8:	bf08      	it	eq
 80140fa:	4613      	moveq	r3, r2
 80140fc:	eef0 2a47 	vmov.f32	s5, s14
 8014100:	e789      	b.n	8014016 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014102:	140f      	asrs	r7, r1, #16
 8014104:	d418      	bmi.n	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014106:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801410a:	42bd      	cmp	r5, r7
 801410c:	dd14      	ble.n	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801410e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014112:	d411      	bmi.n	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014114:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014118:	4564      	cmp	r4, ip
 801411a:	dd0d      	ble.n	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801411c:	b22d      	sxth	r5, r5
 801411e:	fb0c 7505 	mla	r5, ip, r5, r7
 8014122:	9c01      	ldr	r4, [sp, #4]
 8014124:	5d64      	ldrb	r4, [r4, r5]
 8014126:	2cff      	cmp	r4, #255	@ 0xff
 8014128:	d10c      	bne.n	8014144 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801412a:	9c00      	ldr	r4, [sp, #0]
 801412c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014130:	f06f 0401 	mvn.w	r4, #1
 8014134:	4374      	muls	r4, r6
 8014136:	5305      	strh	r5, [r0, r4]
 8014138:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801413a:	4421      	add	r1, r4
 801413c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801413e:	3e01      	subs	r6, #1
 8014140:	4422      	add	r2, r4
 8014142:	e79c      	b.n	801407e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014144:	2c00      	cmp	r4, #0
 8014146:	d0f7      	beq.n	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014148:	9f00      	ldr	r7, [sp, #0]
 801414a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801414e:	f06f 0501 	mvn.w	r5, #1
 8014152:	4375      	muls	r5, r6
 8014154:	9502      	str	r5, [sp, #8]
 8014156:	5b45      	ldrh	r5, [r0, r5]
 8014158:	fa1f fc84 	uxth.w	ip, r4
 801415c:	122f      	asrs	r7, r5, #8
 801415e:	43e4      	mvns	r4, r4
 8014160:	b2e4      	uxtb	r4, r4
 8014162:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014166:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801416a:	fb17 f704 	smulbb	r7, r7, r4
 801416e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014172:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014176:	00ed      	lsls	r5, r5, #3
 8014178:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801417c:	b2ed      	uxtb	r5, r5
 801417e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014182:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014186:	fb15 f504 	smulbb	r5, r5, r4
 801418a:	fa5f f989 	uxtb.w	r9, r9
 801418e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014192:	fb09 550c 	mla	r5, r9, ip, r5
 8014196:	fb1a fa04 	smulbb	sl, sl, r4
 801419a:	fa1f fe8e 	uxth.w	lr, lr
 801419e:	b2ad      	uxth	r5, r5
 80141a0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80141a4:	fb07 a70c 	mla	r7, r7, ip, sl
 80141a8:	f10e 0401 	add.w	r4, lr, #1
 80141ac:	f105 0a01 	add.w	sl, r5, #1
 80141b0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80141b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80141b8:	b2bf      	uxth	r7, r7
 80141ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80141be:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80141c2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80141c6:	f107 0a01 	add.w	sl, r7, #1
 80141ca:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80141ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80141d2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80141d6:	9c02      	ldr	r4, [sp, #8]
 80141d8:	ea4e 0e0a 	orr.w	lr, lr, sl
 80141dc:	f820 e004 	strh.w	lr, [r0, r4]
 80141e0:	e7aa      	b.n	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80141e2:	f04f 0900 	mov.w	r9, #0
 80141e6:	eba3 0409 	sub.w	r4, r3, r9
 80141ea:	2c00      	cmp	r4, #0
 80141ec:	f77f af4a 	ble.w	8014084 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141f0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80141f4:	1414      	asrs	r4, r2, #16
 80141f6:	140d      	asrs	r5, r1, #16
 80141f8:	fb06 5504 	mla	r5, r6, r4, r5
 80141fc:	9c01      	ldr	r4, [sp, #4]
 80141fe:	5d64      	ldrb	r4, [r4, r5]
 8014200:	2cff      	cmp	r4, #255	@ 0xff
 8014202:	d10b      	bne.n	801421c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014204:	9c00      	ldr	r4, [sp, #0]
 8014206:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801420a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801420e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014210:	4421      	add	r1, r4
 8014212:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014214:	f109 0901 	add.w	r9, r9, #1
 8014218:	4422      	add	r2, r4
 801421a:	e7e4      	b.n	80141e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801421c:	2c00      	cmp	r4, #0
 801421e:	d0f6      	beq.n	801420e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014220:	9e00      	ldr	r6, [sp, #0]
 8014222:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014226:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801422a:	b2a7      	uxth	r7, r4
 801422c:	122e      	asrs	r6, r5, #8
 801422e:	43e4      	mvns	r4, r4
 8014230:	b2e4      	uxtb	r4, r4
 8014232:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014236:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801423a:	fb16 f604 	smulbb	r6, r6, r4
 801423e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014242:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014246:	00ed      	lsls	r5, r5, #3
 8014248:	fb0c 6c07 	mla	ip, ip, r7, r6
 801424c:	b2ed      	uxtb	r5, r5
 801424e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014252:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014256:	fb15 f504 	smulbb	r5, r5, r4
 801425a:	fa5f fe8e 	uxtb.w	lr, lr
 801425e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014262:	fb0e 5507 	mla	r5, lr, r7, r5
 8014266:	fb1a fa04 	smulbb	sl, sl, r4
 801426a:	fa1f fc8c 	uxth.w	ip, ip
 801426e:	b2ad      	uxth	r5, r5
 8014270:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014274:	fb06 a607 	mla	r6, r6, r7, sl
 8014278:	f10c 0401 	add.w	r4, ip, #1
 801427c:	f105 0a01 	add.w	sl, r5, #1
 8014280:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014284:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014288:	b2b6      	uxth	r6, r6
 801428a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801428e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014292:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014296:	f106 0a01 	add.w	sl, r6, #1
 801429a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801429e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80142a2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80142a6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80142aa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80142ae:	e7ae      	b.n	801420e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80142b0:	b005      	add	sp, #20
 80142b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080142b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80142b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142ba:	b085      	sub	sp, #20
 80142bc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80142be:	9203      	str	r2, [sp, #12]
 80142c0:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80142c4:	9201      	str	r2, [sp, #4]
 80142c6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80142ca:	9100      	str	r1, [sp, #0]
 80142cc:	6841      	ldr	r1, [r0, #4]
 80142ce:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80142d2:	fb01 2404 	mla	r4, r1, r4, r2
 80142d6:	6802      	ldr	r2, [r0, #0]
 80142d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80142dc:	f8de 2000 	ldr.w	r2, [lr]
 80142e0:	9202      	str	r2, [sp, #8]
 80142e2:	9a01      	ldr	r2, [sp, #4]
 80142e4:	43d6      	mvns	r6, r2
 80142e6:	b2f6      	uxtb	r6, r6
 80142e8:	9a00      	ldr	r2, [sp, #0]
 80142ea:	2a00      	cmp	r2, #0
 80142ec:	dc03      	bgt.n	80142f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80142ee:	9a03      	ldr	r2, [sp, #12]
 80142f0:	2a00      	cmp	r2, #0
 80142f2:	f340 8124 	ble.w	801453e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80142f6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80142f8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80142fc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014300:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014304:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014306:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801430a:	2b00      	cmp	r3, #0
 801430c:	dd0e      	ble.n	801432c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801430e:	1408      	asrs	r0, r1, #16
 8014310:	d405      	bmi.n	801431e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014312:	4560      	cmp	r0, ip
 8014314:	da03      	bge.n	801431e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014316:	1410      	asrs	r0, r2, #16
 8014318:	d401      	bmi.n	801431e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801431a:	42b8      	cmp	r0, r7
 801431c:	db07      	blt.n	801432e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801431e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014320:	4401      	add	r1, r0
 8014322:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014324:	3b01      	subs	r3, #1
 8014326:	4402      	add	r2, r0
 8014328:	3402      	adds	r4, #2
 801432a:	e7ee      	b.n	801430a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801432c:	d06e      	beq.n	801440c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801432e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014330:	1e58      	subs	r0, r3, #1
 8014332:	fb05 1500 	mla	r5, r5, r0, r1
 8014336:	142d      	asrs	r5, r5, #16
 8014338:	d45c      	bmi.n	80143f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801433a:	4565      	cmp	r5, ip
 801433c:	da5a      	bge.n	80143f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801433e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014340:	fb05 2000 	mla	r0, r5, r0, r2
 8014344:	1400      	asrs	r0, r0, #16
 8014346:	d455      	bmi.n	80143f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014348:	42b8      	cmp	r0, r7
 801434a:	da53      	bge.n	80143f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801434c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014350:	4699      	mov	r9, r3
 8014352:	46a2      	mov	sl, r4
 8014354:	f1b9 0f00 	cmp.w	r9, #0
 8014358:	dd54      	ble.n	8014404 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801435a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801435e:	140d      	asrs	r5, r1, #16
 8014360:	1410      	asrs	r0, r2, #16
 8014362:	fb07 5000 	mla	r0, r7, r0, r5
 8014366:	9d02      	ldr	r5, [sp, #8]
 8014368:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801436c:	f8ba 5000 	ldrh.w	r5, [sl]
 8014370:	122f      	asrs	r7, r5, #8
 8014372:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014376:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801437a:	fb17 f706 	smulbb	r7, r7, r6
 801437e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014382:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014386:	00ed      	lsls	r5, r5, #3
 8014388:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801438c:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014390:	10c7      	asrs	r7, r0, #3
 8014392:	b2ed      	uxtb	r5, r5
 8014394:	00c0      	lsls	r0, r0, #3
 8014396:	fb18 f806 	smulbb	r8, r8, r6
 801439a:	fb15 f506 	smulbb	r5, r5, r6
 801439e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80143a2:	b2c0      	uxtb	r0, r0
 80143a4:	fa1f fc8c 	uxth.w	ip, ip
 80143a8:	fb07 870b 	mla	r7, r7, fp, r8
 80143ac:	fb00 500b 	mla	r0, r0, fp, r5
 80143b0:	b280      	uxth	r0, r0
 80143b2:	b2bf      	uxth	r7, r7
 80143b4:	f10c 0501 	add.w	r5, ip, #1
 80143b8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80143bc:	f107 0801 	add.w	r8, r7, #1
 80143c0:	1c45      	adds	r5, r0, #1
 80143c2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80143c6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80143ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80143cc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80143d0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80143d4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80143d8:	ea45 0c0c 	orr.w	ip, r5, ip
 80143dc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80143e0:	4401      	add	r1, r0
 80143e2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80143e4:	ea4c 0c08 	orr.w	ip, ip, r8
 80143e8:	f82a cb02 	strh.w	ip, [sl], #2
 80143ec:	4402      	add	r2, r0
 80143ee:	f109 39ff 	add.w	r9, r9, #4294967295
 80143f2:	e7af      	b.n	8014354 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80143f4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80143f8:	f04f 0800 	mov.w	r8, #0
 80143fc:	eb03 0008 	add.w	r0, r3, r8
 8014400:	2800      	cmp	r0, #0
 8014402:	dc41      	bgt.n	8014488 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014404:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014408:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801440c:	9b00      	ldr	r3, [sp, #0]
 801440e:	2b00      	cmp	r3, #0
 8014410:	f340 8095 	ble.w	801453e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014414:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014418:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801441c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014420:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014422:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014426:	ee31 1a05 	vadd.f32	s2, s2, s10
 801442a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801442e:	eef0 6a62 	vmov.f32	s13, s5
 8014432:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014436:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801443a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801443e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8014442:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014446:	eef0 6a43 	vmov.f32	s13, s6
 801444a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801444e:	ee12 2a90 	vmov	r2, s5
 8014452:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014456:	fb92 f3f3 	sdiv	r3, r2, r3
 801445a:	ee13 2a10 	vmov	r2, s6
 801445e:	9311      	str	r3, [sp, #68]	@ 0x44
 8014460:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014462:	fb92 f3f3 	sdiv	r3, r2, r3
 8014466:	9312      	str	r3, [sp, #72]	@ 0x48
 8014468:	9b00      	ldr	r3, [sp, #0]
 801446a:	9a03      	ldr	r2, [sp, #12]
 801446c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014470:	3b01      	subs	r3, #1
 8014472:	9300      	str	r3, [sp, #0]
 8014474:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014478:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801447a:	eeb0 3a67 	vmov.f32	s6, s15
 801447e:	bf08      	it	eq
 8014480:	4613      	moveq	r3, r2
 8014482:	eef0 2a47 	vmov.f32	s5, s14
 8014486:	e72f      	b.n	80142e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014488:	140f      	asrs	r7, r1, #16
 801448a:	d451      	bmi.n	8014530 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801448c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014490:	42bd      	cmp	r5, r7
 8014492:	dd4d      	ble.n	8014530 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014494:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014498:	d44a      	bmi.n	8014530 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801449a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801449e:	4560      	cmp	r0, ip
 80144a0:	dd46      	ble.n	8014530 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80144a2:	b22d      	sxth	r5, r5
 80144a4:	fb0c 7505 	mla	r5, ip, r5, r7
 80144a8:	9802      	ldr	r0, [sp, #8]
 80144aa:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80144ae:	f06f 0501 	mvn.w	r5, #1
 80144b2:	fb05 fb08 	mul.w	fp, r5, r8
 80144b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80144ba:	f834 500b 	ldrh.w	r5, [r4, fp]
 80144be:	122f      	asrs	r7, r5, #8
 80144c0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80144c4:	fb17 f706 	smulbb	r7, r7, r6
 80144c8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80144cc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80144d0:	00ed      	lsls	r5, r5, #3
 80144d2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80144d6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80144da:	10c7      	asrs	r7, r0, #3
 80144dc:	b2ed      	uxtb	r5, r5
 80144de:	00c0      	lsls	r0, r0, #3
 80144e0:	fb19 f906 	smulbb	r9, r9, r6
 80144e4:	fb15 f506 	smulbb	r5, r5, r6
 80144e8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80144ec:	b2c0      	uxtb	r0, r0
 80144ee:	fa1f fc8c 	uxth.w	ip, ip
 80144f2:	fb07 970a 	mla	r7, r7, sl, r9
 80144f6:	fb00 500a 	mla	r0, r0, sl, r5
 80144fa:	b2bf      	uxth	r7, r7
 80144fc:	b280      	uxth	r0, r0
 80144fe:	f10c 0501 	add.w	r5, ip, #1
 8014502:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014506:	f107 0901 	add.w	r9, r7, #1
 801450a:	1c45      	adds	r5, r0, #1
 801450c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014510:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014514:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014518:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801451c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014520:	ea45 0c0c 	orr.w	ip, r5, ip
 8014524:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014528:	ea4c 0c09 	orr.w	ip, ip, r9
 801452c:	f824 c00b 	strh.w	ip, [r4, fp]
 8014530:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014532:	4401      	add	r1, r0
 8014534:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014536:	f108 38ff 	add.w	r8, r8, #4294967295
 801453a:	4402      	add	r2, r0
 801453c:	e75e      	b.n	80143fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801453e:	b005      	add	sp, #20
 8014540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014544 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014548:	b085      	sub	sp, #20
 801454a:	4693      	mov	fp, r2
 801454c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801454e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014550:	6870      	ldr	r0, [r6, #4]
 8014552:	9101      	str	r1, [sp, #4]
 8014554:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014558:	fb00 2404 	mla	r4, r0, r4, r2
 801455c:	6832      	ldr	r2, [r6, #0]
 801455e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014562:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014566:	682a      	ldr	r2, [r5, #0]
 8014568:	9202      	str	r2, [sp, #8]
 801456a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801456e:	9a01      	ldr	r2, [sp, #4]
 8014570:	2a00      	cmp	r2, #0
 8014572:	dc03      	bgt.n	801457c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014574:	f1bb 0f00 	cmp.w	fp, #0
 8014578:	f340 809a 	ble.w	80146b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801457c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801457e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014582:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014586:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801458a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801458c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014590:	2b00      	cmp	r3, #0
 8014592:	dd0c      	ble.n	80145ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014594:	1406      	asrs	r6, r0, #16
 8014596:	d405      	bmi.n	80145a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014598:	454e      	cmp	r6, r9
 801459a:	da03      	bge.n	80145a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801459c:	1416      	asrs	r6, r2, #16
 801459e:	d401      	bmi.n	80145a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80145a0:	4546      	cmp	r6, r8
 80145a2:	db05      	blt.n	80145b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80145a4:	4470      	add	r0, lr
 80145a6:	4462      	add	r2, ip
 80145a8:	3b01      	subs	r3, #1
 80145aa:	3402      	adds	r4, #2
 80145ac:	e7f0      	b.n	8014590 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80145ae:	d00f      	beq.n	80145d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80145b0:	1e5e      	subs	r6, r3, #1
 80145b2:	fb0e 0706 	mla	r7, lr, r6, r0
 80145b6:	143f      	asrs	r7, r7, #16
 80145b8:	d541      	bpl.n	801463e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80145ba:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80145be:	4698      	mov	r8, r3
 80145c0:	9603      	str	r6, [sp, #12]
 80145c2:	f1b8 0f00 	cmp.w	r8, #0
 80145c6:	dc56      	bgt.n	8014676 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80145c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80145cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80145d0:	9b01      	ldr	r3, [sp, #4]
 80145d2:	2b00      	cmp	r3, #0
 80145d4:	dd6c      	ble.n	80146b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80145d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80145de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80145e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145ec:	eeb0 6a62 	vmov.f32	s12, s5
 80145f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80145f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80145fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014600:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014604:	eeb0 6a43 	vmov.f32	s12, s6
 8014608:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801460c:	ee12 2a90 	vmov	r2, s5
 8014610:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014614:	fb92 fef3 	sdiv	lr, r2, r3
 8014618:	ee13 2a10 	vmov	r2, s6
 801461c:	fb92 fcf3 	sdiv	ip, r2, r3
 8014620:	9b01      	ldr	r3, [sp, #4]
 8014622:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014626:	3b01      	subs	r3, #1
 8014628:	9301      	str	r3, [sp, #4]
 801462a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801462e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014630:	eeb0 3a67 	vmov.f32	s6, s15
 8014634:	bf08      	it	eq
 8014636:	465b      	moveq	r3, fp
 8014638:	eef0 2a47 	vmov.f32	s5, s14
 801463c:	e797      	b.n	801456e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801463e:	454f      	cmp	r7, r9
 8014640:	dabb      	bge.n	80145ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014642:	fb0c 2606 	mla	r6, ip, r6, r2
 8014646:	1436      	asrs	r6, r6, #16
 8014648:	d4b7      	bmi.n	80145ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801464a:	4546      	cmp	r6, r8
 801464c:	dab5      	bge.n	80145ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801464e:	461e      	mov	r6, r3
 8014650:	46a0      	mov	r8, r4
 8014652:	2e00      	cmp	r6, #0
 8014654:	ddb8      	ble.n	80145c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014656:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801465a:	9902      	ldr	r1, [sp, #8]
 801465c:	1417      	asrs	r7, r2, #16
 801465e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014662:	fb0a 9707 	mla	r7, sl, r7, r9
 8014666:	4470      	add	r0, lr
 8014668:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801466c:	f828 7b02 	strh.w	r7, [r8], #2
 8014670:	4462      	add	r2, ip
 8014672:	3e01      	subs	r6, #1
 8014674:	e7ed      	b.n	8014652 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014676:	ea5f 4920 	movs.w	r9, r0, asr #16
 801467a:	d414      	bmi.n	80146a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801467c:	68ae      	ldr	r6, [r5, #8]
 801467e:	454e      	cmp	r6, r9
 8014680:	dd11      	ble.n	80146a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014682:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014686:	d40e      	bmi.n	80146a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014688:	68ef      	ldr	r7, [r5, #12]
 801468a:	4557      	cmp	r7, sl
 801468c:	dd0b      	ble.n	80146a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801468e:	b236      	sxth	r6, r6
 8014690:	fb0a 9606 	mla	r6, sl, r6, r9
 8014694:	9f02      	ldr	r7, [sp, #8]
 8014696:	f06f 0101 	mvn.w	r1, #1
 801469a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801469e:	fb01 f608 	mul.w	r6, r1, r8
 80146a2:	9903      	ldr	r1, [sp, #12]
 80146a4:	538f      	strh	r7, [r1, r6]
 80146a6:	4470      	add	r0, lr
 80146a8:	4462      	add	r2, ip
 80146aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80146ae:	e788      	b.n	80145c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80146b0:	b005      	add	sp, #20
 80146b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080146b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80146b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146ba:	b087      	sub	sp, #28
 80146bc:	468b      	mov	fp, r1
 80146be:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80146c0:	9203      	str	r2, [sp, #12]
 80146c2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80146c6:	9204      	str	r2, [sp, #16]
 80146c8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 80146cc:	6841      	ldr	r1, [r0, #4]
 80146ce:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80146d2:	fb01 2505 	mla	r5, r1, r5, r2
 80146d6:	6802      	ldr	r2, [r0, #0]
 80146d8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80146dc:	f8d9 2000 	ldr.w	r2, [r9]
 80146e0:	9201      	str	r2, [sp, #4]
 80146e2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80146e6:	f1bb 0f00 	cmp.w	fp, #0
 80146ea:	dc03      	bgt.n	80146f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80146ec:	9a03      	ldr	r2, [sp, #12]
 80146ee:	2a00      	cmp	r2, #0
 80146f0:	f340 8159 	ble.w	80149a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80146f4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80146f6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80146fa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80146fe:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014702:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014704:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014708:	2b00      	cmp	r3, #0
 801470a:	dd0e      	ble.n	801472a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801470c:	1402      	asrs	r2, r0, #16
 801470e:	d405      	bmi.n	801471c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014710:	42ba      	cmp	r2, r7
 8014712:	da03      	bge.n	801471c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014714:	140a      	asrs	r2, r1, #16
 8014716:	d401      	bmi.n	801471c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014718:	42b2      	cmp	r2, r6
 801471a:	db07      	blt.n	801472c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801471c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801471e:	4410      	add	r0, r2
 8014720:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014722:	3b01      	subs	r3, #1
 8014724:	4411      	add	r1, r2
 8014726:	3502      	adds	r5, #2
 8014728:	e7ee      	b.n	8014708 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801472a:	d017      	beq.n	801475c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801472c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801472e:	1e5a      	subs	r2, r3, #1
 8014730:	fb04 0402 	mla	r4, r4, r2, r0
 8014734:	1424      	asrs	r4, r4, #16
 8014736:	d409      	bmi.n	801474c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014738:	42bc      	cmp	r4, r7
 801473a:	da07      	bge.n	801474c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801473c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801473e:	fb04 1202 	mla	r2, r4, r2, r1
 8014742:	1412      	asrs	r2, r2, #16
 8014744:	d402      	bmi.n	801474c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014746:	42b2      	cmp	r2, r6
 8014748:	f2c0 80bf 	blt.w	80148ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801474c:	2700      	movs	r7, #0
 801474e:	19da      	adds	r2, r3, r7
 8014750:	2a00      	cmp	r2, #0
 8014752:	dc3e      	bgt.n	80147d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014754:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014758:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801475c:	f1bb 0f00 	cmp.w	fp, #0
 8014760:	f340 8121 	ble.w	80149a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014764:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014768:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801476c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014770:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014772:	f1bb 0b01 	subs.w	fp, fp, #1
 8014776:	ee31 1a05 	vadd.f32	s2, s2, s10
 801477a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801477e:	eeb0 6a62 	vmov.f32	s12, s5
 8014782:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014786:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801478a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801478e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014792:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014796:	eeb0 6a43 	vmov.f32	s12, s6
 801479a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801479e:	ee12 2a90 	vmov	r2, s5
 80147a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80147a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80147aa:	ee13 2a10 	vmov	r2, s6
 80147ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80147b2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80147b4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80147b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80147ba:	9a03      	ldr	r2, [sp, #12]
 80147bc:	9314      	str	r3, [sp, #80]	@ 0x50
 80147be:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80147c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80147c4:	eeb0 3a67 	vmov.f32	s6, s15
 80147c8:	bf08      	it	eq
 80147ca:	4613      	moveq	r3, r2
 80147cc:	eef0 2a47 	vmov.f32	s5, s14
 80147d0:	e789      	b.n	80146e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80147d2:	1406      	asrs	r6, r0, #16
 80147d4:	d42d      	bmi.n	8014832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147d6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80147da:	42b4      	cmp	r4, r6
 80147dc:	dd29      	ble.n	8014832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147de:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80147e2:	d426      	bmi.n	8014832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147e4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80147e8:	4562      	cmp	r2, ip
 80147ea:	dd22      	ble.n	8014832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147ec:	b224      	sxth	r4, r4
 80147ee:	9a01      	ldr	r2, [sp, #4]
 80147f0:	fb0c 6404 	mla	r4, ip, r4, r6
 80147f4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80147f8:	0e22      	lsrs	r2, r4, #24
 80147fa:	d01a      	beq.n	8014832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147fc:	9e04      	ldr	r6, [sp, #16]
 80147fe:	4372      	muls	r2, r6
 8014800:	1c56      	adds	r6, r2, #1
 8014802:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014806:	1212      	asrs	r2, r2, #8
 8014808:	0a26      	lsrs	r6, r4, #8
 801480a:	2aff      	cmp	r2, #255	@ 0xff
 801480c:	9605      	str	r6, [sp, #20]
 801480e:	d116      	bne.n	801483e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014810:	f06f 0201 	mvn.w	r2, #1
 8014814:	fb02 fc07 	mul.w	ip, r2, r7
 8014818:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801481c:	0962      	lsrs	r2, r4, #5
 801481e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014822:	f026 0607 	bic.w	r6, r6, #7
 8014826:	4316      	orrs	r6, r2
 8014828:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801482c:	4326      	orrs	r6, r4
 801482e:	f825 600c 	strh.w	r6, [r5, ip]
 8014832:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014834:	4410      	add	r0, r2
 8014836:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014838:	3f01      	subs	r7, #1
 801483a:	4411      	add	r1, r2
 801483c:	e787      	b.n	801474e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801483e:	f06f 0601 	mvn.w	r6, #1
 8014842:	437e      	muls	r6, r7
 8014844:	fa1f fa82 	uxth.w	sl, r2
 8014848:	f835 8006 	ldrh.w	r8, [r5, r6]
 801484c:	9602      	str	r6, [sp, #8]
 801484e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014852:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8014856:	43d2      	mvns	r2, r2
 8014858:	b2d2      	uxtb	r2, r2
 801485a:	fb1c fc0a 	smulbb	ip, ip, sl
 801485e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014862:	fb0e ce02 	mla	lr, lr, r2, ip
 8014866:	b2e4      	uxtb	r4, r4
 8014868:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801486c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014870:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014874:	fa5f f888 	uxtb.w	r8, r8
 8014878:	fb14 f40a 	smulbb	r4, r4, sl
 801487c:	fb08 4402 	mla	r4, r8, r2, r4
 8014880:	fa1f fe8e 	uxth.w	lr, lr
 8014884:	fb16 f60a 	smulbb	r6, r6, sl
 8014888:	b2a4      	uxth	r4, r4
 801488a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801488e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014892:	f10e 0201 	add.w	r2, lr, #1
 8014896:	1c66      	adds	r6, r4, #1
 8014898:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801489c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80148a0:	fa1f fc8c 	uxth.w	ip, ip
 80148a4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80148a8:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80148ac:	ea46 0e0e 	orr.w	lr, r6, lr
 80148b0:	f10c 0601 	add.w	r6, ip, #1
 80148b4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80148b8:	0976      	lsrs	r6, r6, #5
 80148ba:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80148be:	9a02      	ldr	r2, [sp, #8]
 80148c0:	ea4e 0e06 	orr.w	lr, lr, r6
 80148c4:	f825 e002 	strh.w	lr, [r5, r2]
 80148c8:	e7b3      	b.n	8014832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80148ca:	f04f 0800 	mov.w	r8, #0
 80148ce:	eba3 0208 	sub.w	r2, r3, r8
 80148d2:	2a00      	cmp	r2, #0
 80148d4:	f77f af3e 	ble.w	8014754 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80148d8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80148dc:	1404      	asrs	r4, r0, #16
 80148de:	140a      	asrs	r2, r1, #16
 80148e0:	fb06 4202 	mla	r2, r6, r2, r4
 80148e4:	9c01      	ldr	r4, [sp, #4]
 80148e6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80148ea:	0e22      	lsrs	r2, r4, #24
 80148ec:	d016      	beq.n	801491c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80148ee:	9e04      	ldr	r6, [sp, #16]
 80148f0:	4372      	muls	r2, r6
 80148f2:	1c56      	adds	r6, r2, #1
 80148f4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80148f8:	1212      	asrs	r2, r2, #8
 80148fa:	2aff      	cmp	r2, #255	@ 0xff
 80148fc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8014900:	d113      	bne.n	801492a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8014902:	0962      	lsrs	r2, r4, #5
 8014904:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014908:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801490c:	f026 0607 	bic.w	r6, r6, #7
 8014910:	4316      	orrs	r6, r2
 8014912:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014916:	4326      	orrs	r6, r4
 8014918:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801491c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801491e:	4410      	add	r0, r2
 8014920:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014922:	f108 0801 	add.w	r8, r8, #1
 8014926:	4411      	add	r1, r2
 8014928:	e7d1      	b.n	80148ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801492a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801492e:	fa1f fa82 	uxth.w	sl, r2
 8014932:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014936:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801493a:	43d2      	mvns	r2, r2
 801493c:	b2d2      	uxtb	r2, r2
 801493e:	fb17 f70a 	smulbb	r7, r7, sl
 8014942:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014946:	fb0c 7c02 	mla	ip, ip, r2, r7
 801494a:	b2e4      	uxtb	r4, r4
 801494c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014950:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014954:	fa5f fe8e 	uxtb.w	lr, lr
 8014958:	fb14 f40a 	smulbb	r4, r4, sl
 801495c:	fb0e 4402 	mla	r4, lr, r2, r4
 8014960:	b2f6      	uxtb	r6, r6
 8014962:	fa1f fc8c 	uxth.w	ip, ip
 8014966:	fb16 f60a 	smulbb	r6, r6, sl
 801496a:	b2a4      	uxth	r4, r4
 801496c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014970:	fb07 6702 	mla	r7, r7, r2, r6
 8014974:	f10c 0201 	add.w	r2, ip, #1
 8014978:	1c66      	adds	r6, r4, #1
 801497a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801497e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014982:	b2bf      	uxth	r7, r7
 8014984:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014988:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801498c:	ea46 0c0c 	orr.w	ip, r6, ip
 8014990:	1c7e      	adds	r6, r7, #1
 8014992:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014996:	0976      	lsrs	r6, r6, #5
 8014998:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801499c:	ea4c 0c06 	orr.w	ip, ip, r6
 80149a0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80149a4:	e7ba      	b.n	801491c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80149a6:	b007      	add	sp, #28
 80149a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080149ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149b0:	b085      	sub	sp, #20
 80149b2:	468b      	mov	fp, r1
 80149b4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80149b6:	9203      	str	r2, [sp, #12]
 80149b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80149bc:	6841      	ldr	r1, [r0, #4]
 80149be:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80149c2:	fb01 2404 	mla	r4, r1, r4, r2
 80149c6:	6802      	ldr	r2, [r0, #0]
 80149c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80149cc:	f8d8 2000 	ldr.w	r2, [r8]
 80149d0:	9201      	str	r2, [sp, #4]
 80149d2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80149d6:	f1bb 0f00 	cmp.w	fp, #0
 80149da:	dc03      	bgt.n	80149e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80149dc:	9a03      	ldr	r2, [sp, #12]
 80149de:	2a00      	cmp	r2, #0
 80149e0:	f340 814f 	ble.w	8014c82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80149e4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80149e6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80149ea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80149ee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80149f2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80149f4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80149f8:	2b00      	cmp	r3, #0
 80149fa:	dd0e      	ble.n	8014a1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80149fc:	1408      	asrs	r0, r1, #16
 80149fe:	d405      	bmi.n	8014a0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a00:	42b8      	cmp	r0, r7
 8014a02:	da03      	bge.n	8014a0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a04:	1410      	asrs	r0, r2, #16
 8014a06:	d401      	bmi.n	8014a0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a08:	42b0      	cmp	r0, r6
 8014a0a:	db07      	blt.n	8014a1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a0c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014a0e:	4401      	add	r1, r0
 8014a10:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014a12:	3b01      	subs	r3, #1
 8014a14:	4402      	add	r2, r0
 8014a16:	3402      	adds	r4, #2
 8014a18:	e7ee      	b.n	80149f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014a1a:	d017      	beq.n	8014a4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014a1c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014a1e:	1e58      	subs	r0, r3, #1
 8014a20:	fb05 1500 	mla	r5, r5, r0, r1
 8014a24:	142d      	asrs	r5, r5, #16
 8014a26:	d409      	bmi.n	8014a3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014a28:	42bd      	cmp	r5, r7
 8014a2a:	da07      	bge.n	8014a3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014a2c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014a2e:	fb05 2000 	mla	r0, r5, r0, r2
 8014a32:	1400      	asrs	r0, r0, #16
 8014a34:	d402      	bmi.n	8014a3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014a36:	42b0      	cmp	r0, r6
 8014a38:	f2c0 80ba 	blt.w	8014bb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014a3c:	2600      	movs	r6, #0
 8014a3e:	1998      	adds	r0, r3, r6
 8014a40:	2800      	cmp	r0, #0
 8014a42:	dc3e      	bgt.n	8014ac2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014a44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a4c:	f1bb 0f00 	cmp.w	fp, #0
 8014a50:	f340 8117 	ble.w	8014c82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014a54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a62:	f1bb 0b01 	subs.w	fp, fp, #1
 8014a66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a6e:	eeb0 6a62 	vmov.f32	s12, s5
 8014a72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a7e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014a82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a86:	eeb0 6a43 	vmov.f32	s12, s6
 8014a8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a8e:	ee12 2a90 	vmov	r2, s5
 8014a92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a96:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a9a:	ee13 2a10 	vmov	r2, s6
 8014a9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014aa2:	9311      	str	r3, [sp, #68]	@ 0x44
 8014aa4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014aa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8014aaa:	9a03      	ldr	r2, [sp, #12]
 8014aac:	9312      	str	r3, [sp, #72]	@ 0x48
 8014aae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014ab2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014ab4:	eeb0 3a67 	vmov.f32	s6, s15
 8014ab8:	bf08      	it	eq
 8014aba:	4613      	moveq	r3, r2
 8014abc:	eef0 2a47 	vmov.f32	s5, s14
 8014ac0:	e789      	b.n	80149d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014ac2:	140f      	asrs	r7, r1, #16
 8014ac4:	d424      	bmi.n	8014b10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014ac6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014aca:	42bd      	cmp	r5, r7
 8014acc:	dd20      	ble.n	8014b10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014ace:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014ad2:	d41d      	bmi.n	8014b10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014ad4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014ad8:	4560      	cmp	r0, ip
 8014ada:	dd19      	ble.n	8014b10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014adc:	b22d      	sxth	r5, r5
 8014ade:	fb0c 7505 	mla	r5, ip, r5, r7
 8014ae2:	9801      	ldr	r0, [sp, #4]
 8014ae4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014ae8:	0e07      	lsrs	r7, r0, #24
 8014aea:	2fff      	cmp	r7, #255	@ 0xff
 8014aec:	d116      	bne.n	8014b1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014aee:	f06f 0501 	mvn.w	r5, #1
 8014af2:	fb05 f706 	mul.w	r7, r5, r6
 8014af6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014afa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014afe:	0945      	lsrs	r5, r0, #5
 8014b00:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014b04:	ea4c 0505 	orr.w	r5, ip, r5
 8014b08:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014b0c:	4305      	orrs	r5, r0
 8014b0e:	53e5      	strh	r5, [r4, r7]
 8014b10:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014b12:	4401      	add	r1, r0
 8014b14:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014b16:	3e01      	subs	r6, #1
 8014b18:	4402      	add	r2, r0
 8014b1a:	e790      	b.n	8014a3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014b1c:	b2fd      	uxtb	r5, r7
 8014b1e:	2f00      	cmp	r7, #0
 8014b20:	d0f6      	beq.n	8014b10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b22:	f06f 0701 	mvn.w	r7, #1
 8014b26:	4377      	muls	r7, r6
 8014b28:	fa1f f985 	uxth.w	r9, r5
 8014b2c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014b30:	9702      	str	r7, [sp, #8]
 8014b32:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014b36:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014b3a:	43ed      	mvns	r5, r5
 8014b3c:	b2ed      	uxtb	r5, r5
 8014b3e:	fb17 f709 	smulbb	r7, r7, r9
 8014b42:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014b46:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014b4a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014b4e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014b52:	b2c0      	uxtb	r0, r0
 8014b54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014b58:	fa5f fe8e 	uxtb.w	lr, lr
 8014b5c:	fb10 f009 	smulbb	r0, r0, r9
 8014b60:	fb0e 0005 	mla	r0, lr, r5, r0
 8014b64:	b280      	uxth	r0, r0
 8014b66:	fa1f fc8c 	uxth.w	ip, ip
 8014b6a:	fb1a fa09 	smulbb	sl, sl, r9
 8014b6e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b72:	fb07 a705 	mla	r7, r7, r5, sl
 8014b76:	f100 0a01 	add.w	sl, r0, #1
 8014b7a:	f10c 0501 	add.w	r5, ip, #1
 8014b7e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014b82:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014b86:	b2bf      	uxth	r7, r7
 8014b88:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b8c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014b90:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014b94:	f107 0a01 	add.w	sl, r7, #1
 8014b98:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014b9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ba0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014ba4:	9802      	ldr	r0, [sp, #8]
 8014ba6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014baa:	f824 c000 	strh.w	ip, [r4, r0]
 8014bae:	e7af      	b.n	8014b10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014bb0:	f04f 0e00 	mov.w	lr, #0
 8014bb4:	eba3 000e 	sub.w	r0, r3, lr
 8014bb8:	2800      	cmp	r0, #0
 8014bba:	f77f af43 	ble.w	8014a44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014bbe:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014bc2:	140d      	asrs	r5, r1, #16
 8014bc4:	1410      	asrs	r0, r2, #16
 8014bc6:	fb06 5000 	mla	r0, r6, r0, r5
 8014bca:	9d01      	ldr	r5, [sp, #4]
 8014bcc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014bd0:	0e2e      	lsrs	r6, r5, #24
 8014bd2:	2eff      	cmp	r6, #255	@ 0xff
 8014bd4:	d112      	bne.n	8014bfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014bd6:	482c      	ldr	r0, [pc, #176]	@ (8014c88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014bd8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014bdc:	0968      	lsrs	r0, r5, #5
 8014bde:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014be2:	4330      	orrs	r0, r6
 8014be4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014be8:	4328      	orrs	r0, r5
 8014bea:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014bee:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014bf0:	4401      	add	r1, r0
 8014bf2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014bf4:	f10e 0e01 	add.w	lr, lr, #1
 8014bf8:	4402      	add	r2, r0
 8014bfa:	e7db      	b.n	8014bb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014bfc:	b2f0      	uxtb	r0, r6
 8014bfe:	2e00      	cmp	r6, #0
 8014c00:	d0f5      	beq.n	8014bee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014c02:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014c06:	fa1f f980 	uxth.w	r9, r0
 8014c0a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014c0e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014c12:	43c0      	mvns	r0, r0
 8014c14:	b2c0      	uxtb	r0, r0
 8014c16:	fb16 f609 	smulbb	r6, r6, r9
 8014c1a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014c1e:	fb07 6700 	mla	r7, r7, r0, r6
 8014c22:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014c26:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014c2a:	b2ed      	uxtb	r5, r5
 8014c2c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014c30:	fa5f fc8c 	uxtb.w	ip, ip
 8014c34:	fb15 f509 	smulbb	r5, r5, r9
 8014c38:	fb0c 5500 	mla	r5, ip, r0, r5
 8014c3c:	b2bf      	uxth	r7, r7
 8014c3e:	fb1a fa09 	smulbb	sl, sl, r9
 8014c42:	b2ad      	uxth	r5, r5
 8014c44:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014c48:	fb06 a600 	mla	r6, r6, r0, sl
 8014c4c:	1c78      	adds	r0, r7, #1
 8014c4e:	f105 0a01 	add.w	sl, r5, #1
 8014c52:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014c56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014c5a:	b2b6      	uxth	r6, r6
 8014c5c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c60:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014c64:	ea4a 0707 	orr.w	r7, sl, r7
 8014c68:	f106 0a01 	add.w	sl, r6, #1
 8014c6c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014c70:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c74:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c78:	ea47 070a 	orr.w	r7, r7, sl
 8014c7c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014c80:	e7b5      	b.n	8014bee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014c82:	b005      	add	sp, #20
 8014c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c88:	fffff800 	.word	0xfffff800

08014c8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c90:	b087      	sub	sp, #28
 8014c92:	468b      	mov	fp, r1
 8014c94:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014c96:	9203      	str	r2, [sp, #12]
 8014c98:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014c9c:	9204      	str	r2, [sp, #16]
 8014c9e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014ca2:	6841      	ldr	r1, [r0, #4]
 8014ca4:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014ca8:	fb01 2404 	mla	r4, r1, r4, r2
 8014cac:	6802      	ldr	r2, [r0, #0]
 8014cae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014cb2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014cb6:	3201      	adds	r2, #1
 8014cb8:	f022 0201 	bic.w	r2, r2, #1
 8014cbc:	9200      	str	r2, [sp, #0]
 8014cbe:	f8d9 2000 	ldr.w	r2, [r9]
 8014cc2:	9201      	str	r2, [sp, #4]
 8014cc4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014cc8:	f1bb 0f00 	cmp.w	fp, #0
 8014ccc:	dc03      	bgt.n	8014cd6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014cce:	9a03      	ldr	r2, [sp, #12]
 8014cd0:	2a00      	cmp	r2, #0
 8014cd2:	f340 8169 	ble.w	8014fa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014cd6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014cd8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014cdc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014ce0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014ce4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014ce6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014cea:	2b00      	cmp	r3, #0
 8014cec:	dd0e      	ble.n	8014d0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014cee:	1402      	asrs	r2, r0, #16
 8014cf0:	d405      	bmi.n	8014cfe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cf2:	42ba      	cmp	r2, r7
 8014cf4:	da03      	bge.n	8014cfe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cf6:	140a      	asrs	r2, r1, #16
 8014cf8:	d401      	bmi.n	8014cfe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cfa:	42b2      	cmp	r2, r6
 8014cfc:	db07      	blt.n	8014d0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014cfe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014d00:	4410      	add	r0, r2
 8014d02:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014d04:	3b01      	subs	r3, #1
 8014d06:	4411      	add	r1, r2
 8014d08:	3402      	adds	r4, #2
 8014d0a:	e7ee      	b.n	8014cea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014d0c:	d017      	beq.n	8014d3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014d0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014d10:	1e5a      	subs	r2, r3, #1
 8014d12:	fb05 0502 	mla	r5, r5, r2, r0
 8014d16:	142d      	asrs	r5, r5, #16
 8014d18:	d409      	bmi.n	8014d2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014d1a:	42bd      	cmp	r5, r7
 8014d1c:	da07      	bge.n	8014d2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014d1e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014d20:	fb05 1202 	mla	r2, r5, r2, r1
 8014d24:	1412      	asrs	r2, r2, #16
 8014d26:	d402      	bmi.n	8014d2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014d28:	42b2      	cmp	r2, r6
 8014d2a:	f2c0 80c7 	blt.w	8014ebc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8014d2e:	2700      	movs	r7, #0
 8014d30:	19da      	adds	r2, r3, r7
 8014d32:	2a00      	cmp	r2, #0
 8014d34:	dc3e      	bgt.n	8014db4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014d36:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014d3e:	f1bb 0f00 	cmp.w	fp, #0
 8014d42:	f340 8131 	ble.w	8014fa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014d46:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d4e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014d52:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d54:	f1bb 0b01 	subs.w	fp, fp, #1
 8014d58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d5c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d60:	eeb0 6a62 	vmov.f32	s12, s5
 8014d64:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d6c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d70:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014d74:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d78:	eeb0 6a43 	vmov.f32	s12, s6
 8014d7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d80:	ee12 2a90 	vmov	r2, s5
 8014d84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d88:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d8c:	ee13 2a10 	vmov	r2, s6
 8014d90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d94:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014d96:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d98:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d9c:	9a03      	ldr	r2, [sp, #12]
 8014d9e:	9314      	str	r3, [sp, #80]	@ 0x50
 8014da0:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014da4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014da6:	eeb0 3a67 	vmov.f32	s6, s15
 8014daa:	bf08      	it	eq
 8014dac:	4613      	moveq	r3, r2
 8014dae:	eef0 2a47 	vmov.f32	s5, s14
 8014db2:	e789      	b.n	8014cc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014db4:	1405      	asrs	r5, r0, #16
 8014db6:	d435      	bmi.n	8014e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014db8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014dbc:	42aa      	cmp	r2, r5
 8014dbe:	dd31      	ble.n	8014e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014dc0:	140e      	asrs	r6, r1, #16
 8014dc2:	d42f      	bmi.n	8014e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014dc4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014dc8:	42b2      	cmp	r2, r6
 8014dca:	dd2b      	ble.n	8014e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014dcc:	9a00      	ldr	r2, [sp, #0]
 8014dce:	fb06 5502 	mla	r5, r6, r2, r5
 8014dd2:	086a      	lsrs	r2, r5, #1
 8014dd4:	9e01      	ldr	r6, [sp, #4]
 8014dd6:	5cb2      	ldrb	r2, [r6, r2]
 8014dd8:	07ee      	lsls	r6, r5, #31
 8014dda:	bf54      	ite	pl
 8014ddc:	f002 020f 	andpl.w	r2, r2, #15
 8014de0:	1112      	asrmi	r2, r2, #4
 8014de2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014de6:	b2d2      	uxtb	r2, r2
 8014de8:	b1e2      	cbz	r2, 8014e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014dea:	9d04      	ldr	r5, [sp, #16]
 8014dec:	436a      	muls	r2, r5
 8014dee:	1c55      	adds	r5, r2, #1
 8014df0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014df4:	4d6e      	ldr	r5, [pc, #440]	@ (8014fb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014df6:	682d      	ldr	r5, [r5, #0]
 8014df8:	1212      	asrs	r2, r2, #8
 8014dfa:	0a2e      	lsrs	r6, r5, #8
 8014dfc:	2aff      	cmp	r2, #255	@ 0xff
 8014dfe:	9605      	str	r6, [sp, #20]
 8014e00:	d116      	bne.n	8014e30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8014e02:	f06f 0201 	mvn.w	r2, #1
 8014e06:	fb02 fc07 	mul.w	ip, r2, r7
 8014e0a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014e0e:	096a      	lsrs	r2, r5, #5
 8014e10:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014e14:	f026 0607 	bic.w	r6, r6, #7
 8014e18:	4316      	orrs	r6, r2
 8014e1a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014e1e:	432e      	orrs	r6, r5
 8014e20:	f824 600c 	strh.w	r6, [r4, ip]
 8014e24:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014e26:	4410      	add	r0, r2
 8014e28:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014e2a:	3f01      	subs	r7, #1
 8014e2c:	4411      	add	r1, r2
 8014e2e:	e77f      	b.n	8014d30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014e30:	f06f 0601 	mvn.w	r6, #1
 8014e34:	437e      	muls	r6, r7
 8014e36:	fa1f fa82 	uxth.w	sl, r2
 8014e3a:	f834 8006 	ldrh.w	r8, [r4, r6]
 8014e3e:	9602      	str	r6, [sp, #8]
 8014e40:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014e44:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8014e48:	43d2      	mvns	r2, r2
 8014e4a:	b2d2      	uxtb	r2, r2
 8014e4c:	fb1c fc0a 	smulbb	ip, ip, sl
 8014e50:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014e54:	fb0e ce02 	mla	lr, lr, r2, ip
 8014e58:	b2ed      	uxtb	r5, r5
 8014e5a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014e5e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014e62:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014e66:	fa5f f888 	uxtb.w	r8, r8
 8014e6a:	fb15 f50a 	smulbb	r5, r5, sl
 8014e6e:	fb08 5502 	mla	r5, r8, r2, r5
 8014e72:	fa1f fe8e 	uxth.w	lr, lr
 8014e76:	fb16 f60a 	smulbb	r6, r6, sl
 8014e7a:	b2ad      	uxth	r5, r5
 8014e7c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014e80:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014e84:	f10e 0201 	add.w	r2, lr, #1
 8014e88:	1c6e      	adds	r6, r5, #1
 8014e8a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014e8e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8014e92:	fa1f fc8c 	uxth.w	ip, ip
 8014e96:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014e9a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014e9e:	ea46 0e0e 	orr.w	lr, r6, lr
 8014ea2:	f10c 0601 	add.w	r6, ip, #1
 8014ea6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014eaa:	0976      	lsrs	r6, r6, #5
 8014eac:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014eb0:	9a02      	ldr	r2, [sp, #8]
 8014eb2:	ea4e 0e06 	orr.w	lr, lr, r6
 8014eb6:	f824 e002 	strh.w	lr, [r4, r2]
 8014eba:	e7b3      	b.n	8014e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014ebc:	f04f 0800 	mov.w	r8, #0
 8014ec0:	eba3 0208 	sub.w	r2, r3, r8
 8014ec4:	2a00      	cmp	r2, #0
 8014ec6:	f77f af36 	ble.w	8014d36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014eca:	9e00      	ldr	r6, [sp, #0]
 8014ecc:	1402      	asrs	r2, r0, #16
 8014ece:	140d      	asrs	r5, r1, #16
 8014ed0:	fb06 2505 	mla	r5, r6, r5, r2
 8014ed4:	086a      	lsrs	r2, r5, #1
 8014ed6:	9e01      	ldr	r6, [sp, #4]
 8014ed8:	5cb2      	ldrb	r2, [r6, r2]
 8014eda:	07ed      	lsls	r5, r5, #31
 8014edc:	bf54      	ite	pl
 8014ede:	f002 020f 	andpl.w	r2, r2, #15
 8014ee2:	1112      	asrmi	r2, r2, #4
 8014ee4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014ee8:	b2d2      	uxtb	r2, r2
 8014eea:	b1c2      	cbz	r2, 8014f1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014eec:	9d04      	ldr	r5, [sp, #16]
 8014eee:	436a      	muls	r2, r5
 8014ef0:	1c55      	adds	r5, r2, #1
 8014ef2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014ef6:	4d2e      	ldr	r5, [pc, #184]	@ (8014fb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014ef8:	1212      	asrs	r2, r2, #8
 8014efa:	682e      	ldr	r6, [r5, #0]
 8014efc:	2aff      	cmp	r2, #255	@ 0xff
 8014efe:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8014f02:	d113      	bne.n	8014f2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014f04:	0972      	lsrs	r2, r6, #5
 8014f06:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014f0a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014f0e:	f025 0507 	bic.w	r5, r5, #7
 8014f12:	4315      	orrs	r5, r2
 8014f14:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014f18:	4335      	orrs	r5, r6
 8014f1a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014f1e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014f20:	4410      	add	r0, r2
 8014f22:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014f24:	f108 0801 	add.w	r8, r8, #1
 8014f28:	4411      	add	r1, r2
 8014f2a:	e7c9      	b.n	8014ec0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014f2c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014f30:	fa1f fa82 	uxth.w	sl, r2
 8014f34:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014f38:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8014f3c:	43d2      	mvns	r2, r2
 8014f3e:	b2d2      	uxtb	r2, r2
 8014f40:	fb17 f70a 	smulbb	r7, r7, sl
 8014f44:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014f48:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014f4c:	b2f6      	uxtb	r6, r6
 8014f4e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014f52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014f56:	fa5f fe8e 	uxtb.w	lr, lr
 8014f5a:	fb16 f60a 	smulbb	r6, r6, sl
 8014f5e:	fb0e 6602 	mla	r6, lr, r2, r6
 8014f62:	b2ed      	uxtb	r5, r5
 8014f64:	fa1f fc8c 	uxth.w	ip, ip
 8014f68:	fb15 f50a 	smulbb	r5, r5, sl
 8014f6c:	b2b6      	uxth	r6, r6
 8014f6e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014f72:	fb07 5702 	mla	r7, r7, r2, r5
 8014f76:	f10c 0201 	add.w	r2, ip, #1
 8014f7a:	1c75      	adds	r5, r6, #1
 8014f7c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014f80:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014f84:	b2bf      	uxth	r7, r7
 8014f86:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014f8a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014f8e:	ea45 0c0c 	orr.w	ip, r5, ip
 8014f92:	1c7d      	adds	r5, r7, #1
 8014f94:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8014f98:	096d      	lsrs	r5, r5, #5
 8014f9a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014f9e:	ea4c 0c05 	orr.w	ip, ip, r5
 8014fa2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8014fa6:	e7ba      	b.n	8014f1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014fa8:	b007      	add	sp, #28
 8014faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fae:	bf00      	nop
 8014fb0:	20014008 	.word	0x20014008

08014fb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fb8:	b087      	sub	sp, #28
 8014fba:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 80152c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014fbe:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014fc0:	9205      	str	r2, [sp, #20]
 8014fc2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014fc6:	9101      	str	r1, [sp, #4]
 8014fc8:	6841      	ldr	r1, [r0, #4]
 8014fca:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8014fce:	fb01 2404 	mla	r4, r1, r4, r2
 8014fd2:	6802      	ldr	r2, [r0, #0]
 8014fd4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014fd8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014fdc:	3201      	adds	r2, #1
 8014fde:	f022 0201 	bic.w	r2, r2, #1
 8014fe2:	9202      	str	r2, [sp, #8]
 8014fe4:	f8db 2000 	ldr.w	r2, [fp]
 8014fe8:	9203      	str	r2, [sp, #12]
 8014fea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014fee:	9a01      	ldr	r2, [sp, #4]
 8014ff0:	2a00      	cmp	r2, #0
 8014ff2:	dc03      	bgt.n	8014ffc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014ff4:	9a05      	ldr	r2, [sp, #20]
 8014ff6:	2a00      	cmp	r2, #0
 8014ff8:	f340 8162 	ble.w	80152c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8014ffc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014ffe:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8015002:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8015006:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801500a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801500c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015010:	2b00      	cmp	r3, #0
 8015012:	dd0e      	ble.n	8015032 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015014:	1402      	asrs	r2, r0, #16
 8015016:	d405      	bmi.n	8015024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015018:	42ba      	cmp	r2, r7
 801501a:	da03      	bge.n	8015024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801501c:	140a      	asrs	r2, r1, #16
 801501e:	d401      	bmi.n	8015024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015020:	42b2      	cmp	r2, r6
 8015022:	db07      	blt.n	8015034 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015024:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015026:	4410      	add	r0, r2
 8015028:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801502a:	3b01      	subs	r3, #1
 801502c:	4411      	add	r1, r2
 801502e:	3402      	adds	r4, #2
 8015030:	e7ee      	b.n	8015010 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015032:	d017      	beq.n	8015064 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015034:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015036:	1e5a      	subs	r2, r3, #1
 8015038:	fb05 0502 	mla	r5, r5, r2, r0
 801503c:	142d      	asrs	r5, r5, #16
 801503e:	d409      	bmi.n	8015054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015040:	42bd      	cmp	r5, r7
 8015042:	da07      	bge.n	8015054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015044:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015046:	fb05 1202 	mla	r2, r5, r2, r1
 801504a:	1412      	asrs	r2, r2, #16
 801504c:	d402      	bmi.n	8015054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801504e:	42b2      	cmp	r2, r6
 8015050:	f2c0 80c3 	blt.w	80151da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8015054:	2500      	movs	r5, #0
 8015056:	195a      	adds	r2, r3, r5
 8015058:	2a00      	cmp	r2, #0
 801505a:	dc3f      	bgt.n	80150dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801505c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015060:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015064:	9b01      	ldr	r3, [sp, #4]
 8015066:	2b00      	cmp	r3, #0
 8015068:	f340 812a 	ble.w	80152c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801506c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015070:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015074:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015078:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801507a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801507e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015082:	eeb0 6a62 	vmov.f32	s12, s5
 8015086:	ee61 7a27 	vmul.f32	s15, s2, s15
 801508a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801508e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015092:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015096:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801509a:	eeb0 6a43 	vmov.f32	s12, s6
 801509e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80150a2:	ee12 2a90 	vmov	r2, s5
 80150a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80150aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80150ae:	ee13 2a10 	vmov	r2, s6
 80150b2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80150b4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80150b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80150ba:	9314      	str	r3, [sp, #80]	@ 0x50
 80150bc:	9b01      	ldr	r3, [sp, #4]
 80150be:	9a05      	ldr	r2, [sp, #20]
 80150c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150c4:	3b01      	subs	r3, #1
 80150c6:	9301      	str	r3, [sp, #4]
 80150c8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80150cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80150ce:	eeb0 3a67 	vmov.f32	s6, s15
 80150d2:	bf08      	it	eq
 80150d4:	4613      	moveq	r3, r2
 80150d6:	eef0 2a47 	vmov.f32	s5, s14
 80150da:	e788      	b.n	8014fee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80150dc:	1406      	asrs	r6, r0, #16
 80150de:	d42c      	bmi.n	801513a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150e0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80150e4:	42b2      	cmp	r2, r6
 80150e6:	dd28      	ble.n	801513a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150e8:	140f      	asrs	r7, r1, #16
 80150ea:	d426      	bmi.n	801513a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150ec:	f8db 200c 	ldr.w	r2, [fp, #12]
 80150f0:	42ba      	cmp	r2, r7
 80150f2:	dd22      	ble.n	801513a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150f4:	9a02      	ldr	r2, [sp, #8]
 80150f6:	fb07 6602 	mla	r6, r7, r2, r6
 80150fa:	0872      	lsrs	r2, r6, #1
 80150fc:	9f03      	ldr	r7, [sp, #12]
 80150fe:	5cba      	ldrb	r2, [r7, r2]
 8015100:	07f6      	lsls	r6, r6, #31
 8015102:	bf54      	ite	pl
 8015104:	f002 020f 	andpl.w	r2, r2, #15
 8015108:	1112      	asrmi	r2, r2, #4
 801510a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801510e:	b2d2      	uxtb	r2, r2
 8015110:	2aff      	cmp	r2, #255	@ 0xff
 8015112:	d118      	bne.n	8015146 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015114:	f8d8 2000 	ldr.w	r2, [r8]
 8015118:	f06f 0601 	mvn.w	r6, #1
 801511c:	fb06 f705 	mul.w	r7, r6, r5
 8015120:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8015124:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015128:	0956      	lsrs	r6, r2, #5
 801512a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801512e:	ea4c 0606 	orr.w	r6, ip, r6
 8015132:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015136:	4316      	orrs	r6, r2
 8015138:	53e6      	strh	r6, [r4, r7]
 801513a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801513c:	4410      	add	r0, r2
 801513e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015140:	3d01      	subs	r5, #1
 8015142:	4411      	add	r1, r2
 8015144:	e787      	b.n	8015056 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015146:	2a00      	cmp	r2, #0
 8015148:	d0f7      	beq.n	801513a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801514a:	f06f 0601 	mvn.w	r6, #1
 801514e:	436e      	muls	r6, r5
 8015150:	f8d8 c000 	ldr.w	ip, [r8]
 8015154:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015158:	9604      	str	r6, [sp, #16]
 801515a:	fa1f f982 	uxth.w	r9, r2
 801515e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015162:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8015166:	43d2      	mvns	r2, r2
 8015168:	b2d2      	uxtb	r2, r2
 801516a:	fb16 f609 	smulbb	r6, r6, r9
 801516e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015172:	fb07 6702 	mla	r7, r7, r2, r6
 8015176:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801517a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801517e:	fa5f fc8c 	uxtb.w	ip, ip
 8015182:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015186:	fa5f fe8e 	uxtb.w	lr, lr
 801518a:	fb1c fc09 	smulbb	ip, ip, r9
 801518e:	fb0e cc02 	mla	ip, lr, r2, ip
 8015192:	b2bf      	uxth	r7, r7
 8015194:	fb1a fa09 	smulbb	sl, sl, r9
 8015198:	fa1f fc8c 	uxth.w	ip, ip
 801519c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80151a0:	fb06 a602 	mla	r6, r6, r2, sl
 80151a4:	1c7a      	adds	r2, r7, #1
 80151a6:	f10c 0a01 	add.w	sl, ip, #1
 80151aa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80151ae:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80151b2:	b2b6      	uxth	r6, r6
 80151b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80151b8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80151bc:	ea4a 0707 	orr.w	r7, sl, r7
 80151c0:	f106 0a01 	add.w	sl, r6, #1
 80151c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80151c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80151cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80151d0:	9a04      	ldr	r2, [sp, #16]
 80151d2:	ea47 070a 	orr.w	r7, r7, sl
 80151d6:	52a7      	strh	r7, [r4, r2]
 80151d8:	e7af      	b.n	801513a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80151da:	f04f 0e00 	mov.w	lr, #0
 80151de:	eba3 020e 	sub.w	r2, r3, lr
 80151e2:	2a00      	cmp	r2, #0
 80151e4:	f77f af3a 	ble.w	801505c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80151e8:	9e02      	ldr	r6, [sp, #8]
 80151ea:	1402      	asrs	r2, r0, #16
 80151ec:	140d      	asrs	r5, r1, #16
 80151ee:	fb06 2505 	mla	r5, r6, r5, r2
 80151f2:	086a      	lsrs	r2, r5, #1
 80151f4:	9e03      	ldr	r6, [sp, #12]
 80151f6:	5cb2      	ldrb	r2, [r6, r2]
 80151f8:	07ed      	lsls	r5, r5, #31
 80151fa:	bf54      	ite	pl
 80151fc:	f002 020f 	andpl.w	r2, r2, #15
 8015200:	1112      	asrmi	r2, r2, #4
 8015202:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015206:	b2d2      	uxtb	r2, r2
 8015208:	2aff      	cmp	r2, #255	@ 0xff
 801520a:	d115      	bne.n	8015238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801520c:	f8d8 5000 	ldr.w	r5, [r8]
 8015210:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8015214:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015218:	096a      	lsrs	r2, r5, #5
 801521a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801521e:	4332      	orrs	r2, r6
 8015220:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015224:	432a      	orrs	r2, r5
 8015226:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801522a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801522c:	4410      	add	r0, r2
 801522e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015230:	f10e 0e01 	add.w	lr, lr, #1
 8015234:	4411      	add	r1, r2
 8015236:	e7d2      	b.n	80151de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015238:	2a00      	cmp	r2, #0
 801523a:	d0f6      	beq.n	801522a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801523c:	f8d8 7000 	ldr.w	r7, [r8]
 8015240:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015244:	fa1f f982 	uxth.w	r9, r2
 8015248:	ea4f 262c 	mov.w	r6, ip, asr #8
 801524c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015250:	43d2      	mvns	r2, r2
 8015252:	b2d2      	uxtb	r2, r2
 8015254:	fb15 f509 	smulbb	r5, r5, r9
 8015258:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801525c:	fb06 5602 	mla	r6, r6, r2, r5
 8015260:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015264:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015268:	b2ff      	uxtb	r7, r7
 801526a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801526e:	fa5f fc8c 	uxtb.w	ip, ip
 8015272:	fb17 f709 	smulbb	r7, r7, r9
 8015276:	fb0c 7702 	mla	r7, ip, r2, r7
 801527a:	b2b6      	uxth	r6, r6
 801527c:	fb1a fa09 	smulbb	sl, sl, r9
 8015280:	b2bf      	uxth	r7, r7
 8015282:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015286:	fb05 a502 	mla	r5, r5, r2, sl
 801528a:	1c72      	adds	r2, r6, #1
 801528c:	f107 0a01 	add.w	sl, r7, #1
 8015290:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015294:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015298:	b2ad      	uxth	r5, r5
 801529a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801529e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80152a2:	ea4a 0606 	orr.w	r6, sl, r6
 80152a6:	f105 0a01 	add.w	sl, r5, #1
 80152aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80152ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152b2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80152b6:	ea46 060a 	orr.w	r6, r6, sl
 80152ba:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80152be:	e7b4      	b.n	801522a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80152c0:	b007      	add	sp, #28
 80152c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152c6:	bf00      	nop
 80152c8:	20014008 	.word	0x20014008

080152cc <_ZN8touchgfx8LCD16bppD1Ev>:
 80152cc:	4770      	bx	lr

080152ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 80152ce:	4770      	bx	lr

080152d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80152d0:	4770      	bx	lr

080152d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80152d2:	4770      	bx	lr

080152d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80152d4:	4770      	bx	lr

080152d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80152d6:	4770      	bx	lr

080152d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80152d8:	4770      	bx	lr

080152da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80152da:	4770      	bx	lr

080152dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80152dc:	4770      	bx	lr

080152de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80152de:	4770      	bx	lr

080152e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80152e0:	4770      	bx	lr

080152e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80152e2:	4770      	bx	lr

080152e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80152e4:	4770      	bx	lr

080152e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80152e6:	4770      	bx	lr

080152e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80152e8:	4770      	bx	lr

080152ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80152ea:	4770      	bx	lr

080152ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80152ec:	4770      	bx	lr

080152ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80152ee:	4770      	bx	lr

080152f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80152f0:	4770      	bx	lr

080152f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80152f2:	4770      	bx	lr

080152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80152f4:	4770      	bx	lr

080152f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80152f6:	4770      	bx	lr

080152f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80152f8:	4770      	bx	lr

080152fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80152fa:	4770      	bx	lr

080152fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80152fc:	4770      	bx	lr

080152fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80152fe:	4770      	bx	lr

08015300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015300:	4770      	bx	lr

08015302 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015302:	4770      	bx	lr

08015304 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015304:	4770      	bx	lr

08015306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015306:	4770      	bx	lr

08015308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015308:	4770      	bx	lr

0801530a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801530a:	4770      	bx	lr

0801530c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801530c:	4770      	bx	lr

0801530e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801530e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015312:	b088      	sub	sp, #32
 8015314:	ac08      	add	r4, sp, #32
 8015316:	4606      	mov	r6, r0
 8015318:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801531c:	4620      	mov	r0, r4
 801531e:	4688      	mov	r8, r1
 8015320:	4691      	mov	r9, r2
 8015322:	f7fd fc31 	bl	8012b88 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015326:	6833      	ldr	r3, [r6, #0]
 8015328:	4605      	mov	r5, r0
 801532a:	4620      	mov	r0, r4
 801532c:	699f      	ldr	r7, [r3, #24]
 801532e:	f7fd fb39 	bl	80129a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015332:	4682      	mov	sl, r0
 8015334:	4620      	mov	r0, r4
 8015336:	f7fd fb69 	bl	8012a0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801533a:	9500      	str	r5, [sp, #0]
 801533c:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015340:	464b      	mov	r3, r9
 8015342:	a806      	add	r0, sp, #24
 8015344:	4642      	mov	r2, r8
 8015346:	4631      	mov	r1, r6
 8015348:	47b8      	blx	r7
 801534a:	4628      	mov	r0, r5
 801534c:	b008      	add	sp, #32
 801534e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08015354 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015354:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015358:	2300      	movs	r3, #0
 801535a:	9300      	str	r3, [sp, #0]
 801535c:	4b3d      	ldr	r3, [pc, #244]	@ (8015454 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801535e:	781b      	ldrb	r3, [r3, #0]
 8015360:	2b00      	cmp	r3, #0
 8015362:	d137      	bne.n	80153d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015364:	4a3c      	ldr	r2, [pc, #240]	@ (8015458 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015366:	f9b2 2000 	ldrsh.w	r2, [r2]
 801536a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801536e:	2b00      	cmp	r3, #0
 8015370:	d132      	bne.n	80153d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015372:	4b3a      	ldr	r3, [pc, #232]	@ (801545c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015374:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015378:	6808      	ldr	r0, [r1, #0]
 801537a:	6849      	ldr	r1, [r1, #4]
 801537c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015380:	ac02      	add	r4, sp, #8
 8015382:	ab02      	add	r3, sp, #8
 8015384:	c303      	stmia	r3!, {r0, r1}
 8015386:	4669      	mov	r1, sp
 8015388:	4620      	mov	r0, r4
 801538a:	f7f9 ff85 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801538e:	4668      	mov	r0, sp
 8015390:	f7f9 ff5a 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015394:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015398:	f8bd 2000 	ldrh.w	r2, [sp]
 801539c:	4d30      	ldr	r5, [pc, #192]	@ (8015460 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801539e:	4413      	add	r3, r2
 80153a0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80153a4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80153a8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80153ac:	6828      	ldr	r0, [r5, #0]
 80153ae:	4413      	add	r3, r2
 80153b0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80153b4:	6803      	ldr	r3, [r0, #0]
 80153b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80153b8:	4798      	blx	r3
 80153ba:	f010 0f01 	tst.w	r0, #1
 80153be:	462f      	mov	r7, r5
 80153c0:	d00c      	beq.n	80153dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80153c2:	6828      	ldr	r0, [r5, #0]
 80153c4:	6803      	ldr	r3, [r0, #0]
 80153c6:	e894 0006 	ldmia.w	r4, {r1, r2}
 80153ca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80153cc:	4798      	blx	r3
 80153ce:	b004      	add	sp, #16
 80153d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80153d4:	4a21      	ldr	r2, [pc, #132]	@ (801545c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80153d6:	e7c6      	b.n	8015366 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80153d8:	4b1f      	ldr	r3, [pc, #124]	@ (8015458 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80153da:	e7cb      	b.n	8015374 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80153dc:	6838      	ldr	r0, [r7, #0]
 80153de:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80153e2:	6803      	ldr	r3, [r0, #0]
 80153e4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80153e8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80153ea:	4798      	blx	r3
 80153ec:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80153f0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80153f4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80153f8:	fb16 3602 	smlabb	r6, r6, r2, r3
 80153fc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015400:	6838      	ldr	r0, [r7, #0]
 8015402:	6803      	ldr	r3, [r0, #0]
 8015404:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015406:	4798      	blx	r3
 8015408:	4a13      	ldr	r2, [pc, #76]	@ (8015458 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801540a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801540e:	8813      	ldrh	r3, [r2, #0]
 8015410:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015414:	fb03 1404 	mla	r4, r3, r4, r1
 8015418:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801541c:	435d      	muls	r5, r3
 801541e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015422:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015426:	4691      	mov	r9, r2
 8015428:	6838      	ldr	r0, [r7, #0]
 801542a:	42ac      	cmp	r4, r5
 801542c:	6803      	ldr	r3, [r0, #0]
 801542e:	d20e      	bcs.n	801544e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015430:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8015434:	4632      	mov	r2, r6
 8015436:	4643      	mov	r3, r8
 8015438:	4621      	mov	r1, r4
 801543a:	47d0      	blx	sl
 801543c:	f8b9 3000 	ldrh.w	r3, [r9]
 8015440:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015444:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015448:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801544c:	e7ec      	b.n	8015428 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801544e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015450:	4798      	blx	r3
 8015452:	e7bc      	b.n	80153ce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015454:	20013fee 	.word	0x20013fee
 8015458:	20013ff0 	.word	0x20013ff0
 801545c:	20013ff2 	.word	0x20013ff2
 8015460:	20013ff8 	.word	0x20013ff8

08015464 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015468:	b08b      	sub	sp, #44	@ 0x2c
 801546a:	460f      	mov	r7, r1
 801546c:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015470:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015474:	4616      	mov	r6, r2
 8015476:	f1bb 0f00 	cmp.w	fp, #0
 801547a:	d04a      	beq.n	8015512 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801547c:	6810      	ldr	r0, [r2, #0]
 801547e:	6851      	ldr	r1, [r2, #4]
 8015480:	ad06      	add	r5, sp, #24
 8015482:	c503      	stmia	r5!, {r0, r1}
 8015484:	6818      	ldr	r0, [r3, #0]
 8015486:	6859      	ldr	r1, [r3, #4]
 8015488:	ad08      	add	r5, sp, #32
 801548a:	c503      	stmia	r5!, {r0, r1}
 801548c:	a806      	add	r0, sp, #24
 801548e:	f7f9 fedb 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015492:	4631      	mov	r1, r6
 8015494:	a808      	add	r0, sp, #32
 8015496:	f7f9 feff 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801549a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801549e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80154a2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80154a6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 80154aa:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 80154ae:	fb16 2103 	smlabb	r1, r6, r3, r2
 80154b2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80154b6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80154ba:	4f5f      	ldr	r7, [pc, #380]	@ (8015638 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80154bc:	440a      	add	r2, r1
 80154be:	f8ad 2020 	strh.w	r2, [sp, #32]
 80154c2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80154c6:	6838      	ldr	r0, [r7, #0]
 80154c8:	4413      	add	r3, r2
 80154ca:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80154ce:	6803      	ldr	r3, [r0, #0]
 80154d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80154d2:	4798      	blx	r3
 80154d4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80154d8:	46b9      	mov	r9, r7
 80154da:	d11d      	bne.n	8015518 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80154dc:	b9fc      	cbnz	r4, 801551e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80154de:	f010 0f01 	tst.w	r0, #1
 80154e2:	d01c      	beq.n	801551e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80154e4:	f8d9 0000 	ldr.w	r0, [r9]
 80154e8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80154ec:	6801      	ldr	r1, [r0, #0]
 80154ee:	f8cd b00c 	str.w	fp, [sp, #12]
 80154f2:	2700      	movs	r7, #0
 80154f4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80154f8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80154fc:	9402      	str	r4, [sp, #8]
 80154fe:	b2ad      	uxth	r5, r5
 8015500:	fa1f f488 	uxth.w	r4, r8
 8015504:	9501      	str	r5, [sp, #4]
 8015506:	9400      	str	r4, [sp, #0]
 8015508:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 801550a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801550e:	4631      	mov	r1, r6
 8015510:	47a0      	blx	r4
 8015512:	b00b      	add	sp, #44	@ 0x2c
 8015514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015518:	f010 0f04 	tst.w	r0, #4
 801551c:	e7e1      	b.n	80154e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801551e:	f8d9 0000 	ldr.w	r0, [r9]
 8015522:	6803      	ldr	r3, [r0, #0]
 8015524:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015526:	4798      	blx	r3
 8015528:	4b44      	ldr	r3, [pc, #272]	@ (801563c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801552a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801552e:	881a      	ldrh	r2, [r3, #0]
 8015530:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015534:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015538:	fb02 1404 	mla	r4, r2, r4, r1
 801553c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015540:	469a      	mov	sl, r3
 8015542:	fb05 f502 	mul.w	r5, r5, r2
 8015546:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801554a:	d059      	beq.n	8015600 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801554c:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8015550:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015554:	fa1f f28b 	uxth.w	r2, fp
 8015558:	fa1f f989 	uxth.w	r9, r9
 801555c:	469e      	mov	lr, r3
 801555e:	42ac      	cmp	r4, r5
 8015560:	d264      	bcs.n	801562c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015562:	eb04 0a07 	add.w	sl, r4, r7
 8015566:	4554      	cmp	r4, sl
 8015568:	d23d      	bcs.n	80155e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801556a:	8821      	ldrh	r1, [r4, #0]
 801556c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015570:	1208      	asrs	r0, r1, #8
 8015572:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015576:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801557a:	fb10 f009 	smulbb	r0, r0, r9
 801557e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015582:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015586:	00c9      	lsls	r1, r1, #3
 8015588:	fb0c 0c02 	mla	ip, ip, r2, r0
 801558c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015590:	10d8      	asrs	r0, r3, #3
 8015592:	b2c9      	uxtb	r1, r1
 8015594:	00db      	lsls	r3, r3, #3
 8015596:	fa1f fc8c 	uxth.w	ip, ip
 801559a:	fb1b fb09 	smulbb	fp, fp, r9
 801559e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80155a2:	b2db      	uxtb	r3, r3
 80155a4:	fb11 f109 	smulbb	r1, r1, r9
 80155a8:	fb00 b002 	mla	r0, r0, r2, fp
 80155ac:	fb03 1302 	mla	r3, r3, r2, r1
 80155b0:	f10c 0b01 	add.w	fp, ip, #1
 80155b4:	b29b      	uxth	r3, r3
 80155b6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80155ba:	b280      	uxth	r0, r0
 80155bc:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 80155c0:	f103 0c01 	add.w	ip, r3, #1
 80155c4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80155c8:	1c43      	adds	r3, r0, #1
 80155ca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80155ce:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80155d2:	0940      	lsrs	r0, r0, #5
 80155d4:	ea4c 0c0b 	orr.w	ip, ip, fp
 80155d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80155dc:	ea4c 0c00 	orr.w	ip, ip, r0
 80155e0:	f824 cb02 	strh.w	ip, [r4], #2
 80155e4:	e7bf      	b.n	8015566 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80155e6:	f8be 3000 	ldrh.w	r3, [lr]
 80155ea:	eba3 0308 	sub.w	r3, r3, r8
 80155ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155f2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80155f6:	eba3 0308 	sub.w	r3, r3, r8
 80155fa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80155fe:	e7ae      	b.n	801555e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015600:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015604:	f8d9 0000 	ldr.w	r0, [r9]
 8015608:	42ac      	cmp	r4, r5
 801560a:	6803      	ldr	r3, [r0, #0]
 801560c:	d20e      	bcs.n	801562c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801560e:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 8015612:	4632      	mov	r2, r6
 8015614:	463b      	mov	r3, r7
 8015616:	4621      	mov	r1, r4
 8015618:	47c0      	blx	r8
 801561a:	f8ba 3000 	ldrh.w	r3, [sl]
 801561e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015622:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015626:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801562a:	e7eb      	b.n	8015604 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801562c:	4b02      	ldr	r3, [pc, #8]	@ (8015638 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801562e:	6818      	ldr	r0, [r3, #0]
 8015630:	6803      	ldr	r3, [r0, #0]
 8015632:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015634:	4798      	blx	r3
 8015636:	e76c      	b.n	8015512 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015638:	20013ff8 	.word	0x20013ff8
 801563c:	20013ff0 	.word	0x20013ff0

08015640 <_ZN8touchgfx8LCD16bppD0Ev>:
 8015640:	b510      	push	{r4, lr}
 8015642:	218c      	movs	r1, #140	@ 0x8c
 8015644:	4604      	mov	r4, r0
 8015646:	f00c fa2c 	bl	8021aa2 <_ZdlPvj>
 801564a:	4620      	mov	r0, r4
 801564c:	bd10      	pop	{r4, pc}

0801564e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801564e:	b510      	push	{r4, lr}
 8015650:	2104      	movs	r1, #4
 8015652:	4604      	mov	r4, r0
 8015654:	f00c fa25 	bl	8021aa2 <_ZdlPvj>
 8015658:	4620      	mov	r0, r4
 801565a:	bd10      	pop	{r4, pc}

0801565c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801565c:	b510      	push	{r4, lr}
 801565e:	2104      	movs	r1, #4
 8015660:	4604      	mov	r4, r0
 8015662:	f00c fa1e 	bl	8021aa2 <_ZdlPvj>
 8015666:	4620      	mov	r0, r4
 8015668:	bd10      	pop	{r4, pc}

0801566a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801566a:	b510      	push	{r4, lr}
 801566c:	f640 0144 	movw	r1, #2116	@ 0x844
 8015670:	4604      	mov	r4, r0
 8015672:	f00c fa16 	bl	8021aa2 <_ZdlPvj>
 8015676:	4620      	mov	r0, r4
 8015678:	bd10      	pop	{r4, pc}

0801567a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801567a:	b510      	push	{r4, lr}
 801567c:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8015680:	4604      	mov	r4, r0
 8015682:	f00c fa0e 	bl	8021aa2 <_ZdlPvj>
 8015686:	4620      	mov	r0, r4
 8015688:	bd10      	pop	{r4, pc}

0801568a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801568a:	b510      	push	{r4, lr}
 801568c:	2104      	movs	r1, #4
 801568e:	4604      	mov	r4, r0
 8015690:	f00c fa07 	bl	8021aa2 <_ZdlPvj>
 8015694:	4620      	mov	r0, r4
 8015696:	bd10      	pop	{r4, pc}

08015698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015698:	b510      	push	{r4, lr}
 801569a:	2104      	movs	r1, #4
 801569c:	4604      	mov	r4, r0
 801569e:	f00c fa00 	bl	8021aa2 <_ZdlPvj>
 80156a2:	4620      	mov	r0, r4
 80156a4:	bd10      	pop	{r4, pc}

080156a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80156a6:	b510      	push	{r4, lr}
 80156a8:	2104      	movs	r1, #4
 80156aa:	4604      	mov	r4, r0
 80156ac:	f00c f9f9 	bl	8021aa2 <_ZdlPvj>
 80156b0:	4620      	mov	r0, r4
 80156b2:	bd10      	pop	{r4, pc}

080156b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80156b4:	b510      	push	{r4, lr}
 80156b6:	2104      	movs	r1, #4
 80156b8:	4604      	mov	r4, r0
 80156ba:	f00c f9f2 	bl	8021aa2 <_ZdlPvj>
 80156be:	4620      	mov	r0, r4
 80156c0:	bd10      	pop	{r4, pc}

080156c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80156c2:	b510      	push	{r4, lr}
 80156c4:	2104      	movs	r1, #4
 80156c6:	4604      	mov	r4, r0
 80156c8:	f00c f9eb 	bl	8021aa2 <_ZdlPvj>
 80156cc:	4620      	mov	r0, r4
 80156ce:	bd10      	pop	{r4, pc}

080156d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80156d0:	b510      	push	{r4, lr}
 80156d2:	2104      	movs	r1, #4
 80156d4:	4604      	mov	r4, r0
 80156d6:	f00c f9e4 	bl	8021aa2 <_ZdlPvj>
 80156da:	4620      	mov	r0, r4
 80156dc:	bd10      	pop	{r4, pc}

080156de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80156de:	b510      	push	{r4, lr}
 80156e0:	2104      	movs	r1, #4
 80156e2:	4604      	mov	r4, r0
 80156e4:	f00c f9dd 	bl	8021aa2 <_ZdlPvj>
 80156e8:	4620      	mov	r0, r4
 80156ea:	bd10      	pop	{r4, pc}

080156ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80156ec:	b510      	push	{r4, lr}
 80156ee:	2104      	movs	r1, #4
 80156f0:	4604      	mov	r4, r0
 80156f2:	f00c f9d6 	bl	8021aa2 <_ZdlPvj>
 80156f6:	4620      	mov	r0, r4
 80156f8:	bd10      	pop	{r4, pc}

080156fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80156fa:	b510      	push	{r4, lr}
 80156fc:	2104      	movs	r1, #4
 80156fe:	4604      	mov	r4, r0
 8015700:	f00c f9cf 	bl	8021aa2 <_ZdlPvj>
 8015704:	4620      	mov	r0, r4
 8015706:	bd10      	pop	{r4, pc}

08015708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015708:	b510      	push	{r4, lr}
 801570a:	2104      	movs	r1, #4
 801570c:	4604      	mov	r4, r0
 801570e:	f00c f9c8 	bl	8021aa2 <_ZdlPvj>
 8015712:	4620      	mov	r0, r4
 8015714:	bd10      	pop	{r4, pc}

08015716 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015716:	b510      	push	{r4, lr}
 8015718:	2104      	movs	r1, #4
 801571a:	4604      	mov	r4, r0
 801571c:	f00c f9c1 	bl	8021aa2 <_ZdlPvj>
 8015720:	4620      	mov	r0, r4
 8015722:	bd10      	pop	{r4, pc}

08015724 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015724:	b510      	push	{r4, lr}
 8015726:	2104      	movs	r1, #4
 8015728:	4604      	mov	r4, r0
 801572a:	f00c f9ba 	bl	8021aa2 <_ZdlPvj>
 801572e:	4620      	mov	r0, r4
 8015730:	bd10      	pop	{r4, pc}

08015732 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015732:	b510      	push	{r4, lr}
 8015734:	2104      	movs	r1, #4
 8015736:	4604      	mov	r4, r0
 8015738:	f00c f9b3 	bl	8021aa2 <_ZdlPvj>
 801573c:	4620      	mov	r0, r4
 801573e:	bd10      	pop	{r4, pc}

08015740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015740:	b510      	push	{r4, lr}
 8015742:	2104      	movs	r1, #4
 8015744:	4604      	mov	r4, r0
 8015746:	f00c f9ac 	bl	8021aa2 <_ZdlPvj>
 801574a:	4620      	mov	r0, r4
 801574c:	bd10      	pop	{r4, pc}

0801574e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801574e:	b510      	push	{r4, lr}
 8015750:	2104      	movs	r1, #4
 8015752:	4604      	mov	r4, r0
 8015754:	f00c f9a5 	bl	8021aa2 <_ZdlPvj>
 8015758:	4620      	mov	r0, r4
 801575a:	bd10      	pop	{r4, pc}

0801575c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801575c:	b510      	push	{r4, lr}
 801575e:	2104      	movs	r1, #4
 8015760:	4604      	mov	r4, r0
 8015762:	f00c f99e 	bl	8021aa2 <_ZdlPvj>
 8015766:	4620      	mov	r0, r4
 8015768:	bd10      	pop	{r4, pc}

0801576a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801576a:	b510      	push	{r4, lr}
 801576c:	2104      	movs	r1, #4
 801576e:	4604      	mov	r4, r0
 8015770:	f00c f997 	bl	8021aa2 <_ZdlPvj>
 8015774:	4620      	mov	r0, r4
 8015776:	bd10      	pop	{r4, pc}

08015778 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015778:	b510      	push	{r4, lr}
 801577a:	2104      	movs	r1, #4
 801577c:	4604      	mov	r4, r0
 801577e:	f00c f990 	bl	8021aa2 <_ZdlPvj>
 8015782:	4620      	mov	r0, r4
 8015784:	bd10      	pop	{r4, pc}

08015786 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015786:	b510      	push	{r4, lr}
 8015788:	2104      	movs	r1, #4
 801578a:	4604      	mov	r4, r0
 801578c:	f00c f989 	bl	8021aa2 <_ZdlPvj>
 8015790:	4620      	mov	r0, r4
 8015792:	bd10      	pop	{r4, pc}

08015794 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015794:	b510      	push	{r4, lr}
 8015796:	2104      	movs	r1, #4
 8015798:	4604      	mov	r4, r0
 801579a:	f00c f982 	bl	8021aa2 <_ZdlPvj>
 801579e:	4620      	mov	r0, r4
 80157a0:	bd10      	pop	{r4, pc}

080157a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80157a2:	b510      	push	{r4, lr}
 80157a4:	2104      	movs	r1, #4
 80157a6:	4604      	mov	r4, r0
 80157a8:	f00c f97b 	bl	8021aa2 <_ZdlPvj>
 80157ac:	4620      	mov	r0, r4
 80157ae:	bd10      	pop	{r4, pc}

080157b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80157b0:	b510      	push	{r4, lr}
 80157b2:	2104      	movs	r1, #4
 80157b4:	4604      	mov	r4, r0
 80157b6:	f00c f974 	bl	8021aa2 <_ZdlPvj>
 80157ba:	4620      	mov	r0, r4
 80157bc:	bd10      	pop	{r4, pc}

080157be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80157be:	b510      	push	{r4, lr}
 80157c0:	2104      	movs	r1, #4
 80157c2:	4604      	mov	r4, r0
 80157c4:	f00c f96d 	bl	8021aa2 <_ZdlPvj>
 80157c8:	4620      	mov	r0, r4
 80157ca:	bd10      	pop	{r4, pc}

080157cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80157cc:	b510      	push	{r4, lr}
 80157ce:	2104      	movs	r1, #4
 80157d0:	4604      	mov	r4, r0
 80157d2:	f00c f966 	bl	8021aa2 <_ZdlPvj>
 80157d6:	4620      	mov	r0, r4
 80157d8:	bd10      	pop	{r4, pc}

080157da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80157da:	b510      	push	{r4, lr}
 80157dc:	2104      	movs	r1, #4
 80157de:	4604      	mov	r4, r0
 80157e0:	f00c f95f 	bl	8021aa2 <_ZdlPvj>
 80157e4:	4620      	mov	r0, r4
 80157e6:	bd10      	pop	{r4, pc}

080157e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80157e8:	b510      	push	{r4, lr}
 80157ea:	2104      	movs	r1, #4
 80157ec:	4604      	mov	r4, r0
 80157ee:	f00c f958 	bl	8021aa2 <_ZdlPvj>
 80157f2:	4620      	mov	r0, r4
 80157f4:	bd10      	pop	{r4, pc}

080157f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80157f6:	b510      	push	{r4, lr}
 80157f8:	2104      	movs	r1, #4
 80157fa:	4604      	mov	r4, r0
 80157fc:	f00c f951 	bl	8021aa2 <_ZdlPvj>
 8015800:	4620      	mov	r0, r4
 8015802:	bd10      	pop	{r4, pc}

08015804 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015804:	b510      	push	{r4, lr}
 8015806:	2104      	movs	r1, #4
 8015808:	4604      	mov	r4, r0
 801580a:	f00c f94a 	bl	8021aa2 <_ZdlPvj>
 801580e:	4620      	mov	r0, r4
 8015810:	bd10      	pop	{r4, pc}
	...

08015814 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8015814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015818:	b08f      	sub	sp, #60	@ 0x3c
 801581a:	4616      	mov	r6, r2
 801581c:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 8015820:	9205      	str	r2, [sp, #20]
 8015822:	4682      	mov	sl, r0
 8015824:	460d      	mov	r5, r1
 8015826:	2a00      	cmp	r2, #0
 8015828:	f000 82b7 	beq.w	8015d9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801582c:	6830      	ldr	r0, [r6, #0]
 801582e:	6871      	ldr	r1, [r6, #4]
 8015830:	ac0a      	add	r4, sp, #40	@ 0x28
 8015832:	c403      	stmia	r4!, {r0, r1}
 8015834:	6818      	ldr	r0, [r3, #0]
 8015836:	6859      	ldr	r1, [r3, #4]
 8015838:	ac0c      	add	r4, sp, #48	@ 0x30
 801583a:	c403      	stmia	r4!, {r0, r1}
 801583c:	a80a      	add	r0, sp, #40	@ 0x28
 801583e:	f7f9 fd03 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015842:	4631      	mov	r1, r6
 8015844:	a80c      	add	r0, sp, #48	@ 0x30
 8015846:	f7f9 fd27 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801584a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801584e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8015852:	bfd7      	itett	le
 8015854:	b293      	uxthle	r3, r2
 8015856:	2301      	movgt	r3, #1
 8015858:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801585c:	fb91 f3f3 	sdivle	r3, r1, r3
 8015860:	9300      	str	r3, [sp, #0]
 8015862:	f105 0308 	add.w	r3, r5, #8
 8015866:	9900      	ldr	r1, [sp, #0]
 8015868:	9306      	str	r3, [sp, #24]
 801586a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801586e:	440b      	add	r3, r1
 8015870:	3b01      	subs	r3, #1
 8015872:	fb93 f3f1 	sdiv	r3, r3, r1
 8015876:	9906      	ldr	r1, [sp, #24]
 8015878:	3b01      	subs	r3, #1
 801587a:	b29b      	uxth	r3, r3
 801587c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015880:	9307      	str	r3, [sp, #28]
 8015882:	9900      	ldr	r1, [sp, #0]
 8015884:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015888:	fb93 f0f1 	sdiv	r0, r3, r1
 801588c:	b284      	uxth	r4, r0
 801588e:	9402      	str	r4, [sp, #8]
 8015890:	9d02      	ldr	r5, [sp, #8]
 8015892:	9c00      	ldr	r4, [sp, #0]
 8015894:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015898:	fb05 3414 	mls	r4, r5, r4, r3
 801589c:	fb14 f402 	smulbb	r4, r4, r2
 80158a0:	440c      	add	r4, r1
 80158a2:	b2a4      	uxth	r4, r4
 80158a4:	2d00      	cmp	r5, #0
 80158a6:	d06c      	beq.n	8015982 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 80158a8:	1e6a      	subs	r2, r5, #1
 80158aa:	9806      	ldr	r0, [sp, #24]
 80158ac:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 80158b0:	9a07      	ldr	r2, [sp, #28]
 80158b2:	ba36      	rev	r6, r6
 80158b4:	4416      	add	r6, r2
 80158b6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80158ba:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 80158be:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8015bf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 80158c2:	4411      	add	r1, r2
 80158c4:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80158c8:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80158cc:	4413      	add	r3, r2
 80158ce:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80158d2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80158d6:	9301      	str	r3, [sp, #4]
 80158d8:	4bc4      	ldr	r3, [pc, #784]	@ (8015bec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 80158da:	6818      	ldr	r0, [r3, #0]
 80158dc:	6803      	ldr	r3, [r0, #0]
 80158de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80158e0:	4798      	blx	r3
 80158e2:	4bc3      	ldr	r3, [pc, #780]	@ (8015bf0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 80158e4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80158e8:	881b      	ldrh	r3, [r3, #0]
 80158ea:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80158ee:	fb03 2808 	mla	r8, r3, r8, r2
 80158f2:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80158f6:	436b      	muls	r3, r5
 80158f8:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80158fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80158fe:	2500      	movs	r5, #0
 8015900:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8015904:	fb94 f3f3 	sdiv	r3, r4, r3
 8015908:	9304      	str	r3, [sp, #16]
 801590a:	f10a 0304 	add.w	r3, sl, #4
 801590e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015912:	4629      	mov	r1, r5
 8015914:	4618      	mov	r0, r3
 8015916:	9308      	str	r3, [sp, #32]
 8015918:	f00d fa3d 	bl	8022d96 <memset>
 801591c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801591e:	4543      	cmp	r3, r8
 8015920:	f240 8236 	bls.w	8015d90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8015924:	2203      	movs	r2, #3
 8015926:	2107      	movs	r1, #7
 8015928:	200b      	movs	r0, #11
 801592a:	2c00      	cmp	r4, #0
 801592c:	f000 8131 	beq.w	8015b92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8015930:	7833      	ldrb	r3, [r6, #0]
 8015932:	b2db      	uxtb	r3, r3
 8015934:	2bfe      	cmp	r3, #254	@ 0xfe
 8015936:	d126      	bne.n	8015986 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8015938:	f896 e001 	ldrb.w	lr, [r6, #1]
 801593c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8015940:	f896 b003 	ldrb.w	fp, [r6, #3]
 8015944:	fa5f fe8e 	uxtb.w	lr, lr
 8015948:	fa5f fc8c 	uxtb.w	ip, ip
 801594c:	f36e 0507 	bfi	r5, lr, #0, #8
 8015950:	f36c 250f 	bfi	r5, ip, #8, #8
 8015954:	fa5f fb8b 	uxtb.w	fp, fp
 8015958:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801595c:	f36b 4517 	bfi	r5, fp, #16, #8
 8015960:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8015964:	0e2b      	lsrs	r3, r5, #24
 8015966:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801596a:	fb10 c303 	smlabb	r3, r0, r3, ip
 801596e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015972:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015976:	3c01      	subs	r4, #1
 8015978:	1d37      	adds	r7, r6, #4
 801597a:	b2a4      	uxth	r4, r4
 801597c:	605d      	str	r5, [r3, #4]
 801597e:	463e      	mov	r6, r7
 8015980:	e7d3      	b.n	801592a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8015982:	9e07      	ldr	r6, [sp, #28]
 8015984:	e797      	b.n	80158b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8015986:	2bff      	cmp	r3, #255	@ 0xff
 8015988:	d127      	bne.n	80159da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801598a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801598e:	78b3      	ldrb	r3, [r6, #2]
 8015990:	f896 e003 	ldrb.w	lr, [r6, #3]
 8015994:	f896 b004 	ldrb.w	fp, [r6, #4]
 8015998:	fa5f fc8c 	uxtb.w	ip, ip
 801599c:	b2db      	uxtb	r3, r3
 801599e:	f36c 0507 	bfi	r5, ip, #0, #8
 80159a2:	f363 250f 	bfi	r5, r3, #8, #8
 80159a6:	fa5f fe8e 	uxtb.w	lr, lr
 80159aa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80159ae:	fb12 330e 	smlabb	r3, r2, lr, r3
 80159b2:	fa5f fb8b 	uxtb.w	fp, fp
 80159b6:	f36e 4517 	bfi	r5, lr, #16, #8
 80159ba:	fb11 330c 	smlabb	r3, r1, ip, r3
 80159be:	f36b 651f 	bfi	r5, fp, #24, #8
 80159c2:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 80159c6:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 80159ca:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 80159ce:	3c01      	subs	r4, #1
 80159d0:	1d77      	adds	r7, r6, #5
 80159d2:	b2a4      	uxth	r4, r4
 80159d4:	f8cb 5004 	str.w	r5, [fp, #4]
 80159d8:	e7d1      	b.n	801597e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80159da:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 80159de:	f106 0701 	add.w	r7, r6, #1
 80159e2:	d107      	bne.n	80159f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 80159e4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80159e8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80159ec:	685d      	ldr	r5, [r3, #4]
 80159ee:	3c01      	subs	r4, #1
 80159f0:	b2a4      	uxth	r4, r4
 80159f2:	e7c4      	b.n	801597e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80159f4:	f1bc 0f01 	cmp.w	ip, #1
 80159f8:	d12c      	bne.n	8015a54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80159fa:	f003 0e03 	and.w	lr, r3, #3
 80159fe:	f1ae 0e02 	sub.w	lr, lr, #2
 8015a02:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8015a06:	fa5f fe8e 	uxtb.w	lr, lr
 8015a0a:	f003 0c0c 	and.w	ip, r3, #12
 8015a0e:	f36e 0507 	bfi	r5, lr, #0, #8
 8015a12:	f1ac 0c08 	sub.w	ip, ip, #8
 8015a16:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015a1a:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8015a1e:	f36c 250f 	bfi	r5, ip, #8, #8
 8015a22:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015a26:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015a2a:	3b02      	subs	r3, #2
 8015a2c:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015a30:	b2db      	uxtb	r3, r3
 8015a32:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8015a36:	f363 4517 	bfi	r5, r3, #16, #8
 8015a3a:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8015a3e:	0e2e      	lsrs	r6, r5, #24
 8015a40:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015a44:	fb10 c606 	smlabb	r6, r0, r6, ip
 8015a48:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8015a4c:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8015a50:	6075      	str	r5, [r6, #4]
 8015a52:	e7cc      	b.n	80159ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8015a54:	f1bc 0f02 	cmp.w	ip, #2
 8015a58:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015a5c:	d12a      	bne.n	8015ab4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8015a5e:	1cb7      	adds	r7, r6, #2
 8015a60:	7876      	ldrb	r6, [r6, #1]
 8015a62:	b2f6      	uxtb	r6, r6
 8015a64:	f006 0c0f 	and.w	ip, r6, #15
 8015a68:	3b20      	subs	r3, #32
 8015a6a:	f1ac 0c08 	sub.w	ip, ip, #8
 8015a6e:	449c      	add	ip, r3
 8015a70:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8015a74:	fa5f fc8c 	uxtb.w	ip, ip
 8015a78:	f36c 0507 	bfi	r5, ip, #0, #8
 8015a7c:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8015a80:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8015a84:	fa5f fe8e 	uxtb.w	lr, lr
 8015a88:	1136      	asrs	r6, r6, #4
 8015a8a:	f36e 250f 	bfi	r5, lr, #8, #8
 8015a8e:	3e08      	subs	r6, #8
 8015a90:	4433      	add	r3, r6
 8015a92:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015a96:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015a9a:	b2db      	uxtb	r3, r3
 8015a9c:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8015aa0:	f363 4517 	bfi	r5, r3, #16, #8
 8015aa4:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8015aa8:	0e2e      	lsrs	r6, r5, #24
 8015aaa:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8015aae:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015ab2:	e7c9      	b.n	8015a48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015ab4:	1c5e      	adds	r6, r3, #1
 8015ab6:	42a6      	cmp	r6, r4
 8015ab8:	dd4e      	ble.n	8015b58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8015aba:	1b36      	subs	r6, r6, r4
 8015abc:	2e00      	cmp	r6, #0
 8015abe:	dc4e      	bgt.n	8015b5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015ac0:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015ac4:	2400      	movs	r4, #0
 8015ac6:	f1bb 0f00 	cmp.w	fp, #0
 8015aca:	f340 8122 	ble.w	8015d12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8015ace:	1c7b      	adds	r3, r7, #1
 8015ad0:	9303      	str	r3, [sp, #12]
 8015ad2:	783b      	ldrb	r3, [r7, #0]
 8015ad4:	b2db      	uxtb	r3, r3
 8015ad6:	2bfe      	cmp	r3, #254	@ 0xfe
 8015ad8:	d160      	bne.n	8015b9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8015ada:	7879      	ldrb	r1, [r7, #1]
 8015adc:	78ba      	ldrb	r2, [r7, #2]
 8015ade:	78f8      	ldrb	r0, [r7, #3]
 8015ae0:	b2c9      	uxtb	r1, r1
 8015ae2:	f361 0507 	bfi	r5, r1, #0, #8
 8015ae6:	b2d2      	uxtb	r2, r2
 8015ae8:	1d3b      	adds	r3, r7, #4
 8015aea:	f362 250f 	bfi	r5, r2, #8, #8
 8015aee:	b2c0      	uxtb	r0, r0
 8015af0:	9303      	str	r3, [sp, #12]
 8015af2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015af6:	2303      	movs	r3, #3
 8015af8:	fb13 2200 	smlabb	r2, r3, r0, r2
 8015afc:	f360 4517 	bfi	r5, r0, #16, #8
 8015b00:	2307      	movs	r3, #7
 8015b02:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015b06:	0e2e      	lsrs	r6, r5, #24
 8015b08:	230b      	movs	r3, #11
 8015b0a:	fb13 1306 	smlabb	r3, r3, r6, r1
 8015b0e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015b12:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015b16:	605d      	str	r5, [r3, #4]
 8015b18:	2601      	movs	r6, #1
 8015b1a:	4637      	mov	r7, r6
 8015b1c:	0e2b      	lsrs	r3, r5, #24
 8015b1e:	ebab 0b07 	sub.w	fp, fp, r7
 8015b22:	eba6 0607 	sub.w	r6, r6, r7
 8015b26:	f040 80d3 	bne.w	8015cd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8015b2a:	b18c      	cbz	r4, 8015b50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8015b2c:	4648      	mov	r0, r9
 8015b2e:	00a1      	lsls	r1, r4, #2
 8015b30:	f7eb fa0e 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015b34:	9b05      	ldr	r3, [sp, #20]
 8015b36:	4622      	mov	r2, r4
 8015b38:	4649      	mov	r1, r9
 8015b3a:	4640      	mov	r0, r8
 8015b3c:	f7eb fa56 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015b40:	4b2c      	ldr	r3, [pc, #176]	@ (8015bf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8015b42:	4a2d      	ldr	r2, [pc, #180]	@ (8015bf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8015b44:	4599      	cmp	r9, r3
 8015b46:	bf08      	it	eq
 8015b48:	4613      	moveq	r3, r2
 8015b4a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015b4e:	4699      	mov	r9, r3
 8015b50:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8015b54:	2400      	movs	r4, #0
 8015b56:	e0da      	b.n	8015d0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8015b58:	1ba6      	subs	r6, r4, r6
 8015b5a:	b2b4      	uxth	r4, r6
 8015b5c:	e70f      	b.n	801597e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015b5e:	9b01      	ldr	r3, [sp, #4]
 8015b60:	9a01      	ldr	r2, [sp, #4]
 8015b62:	42b3      	cmp	r3, r6
 8015b64:	bfa8      	it	ge
 8015b66:	4633      	movge	r3, r6
 8015b68:	0e2c      	lsrs	r4, r5, #24
 8015b6a:	eba2 0b03 	sub.w	fp, r2, r3
 8015b6e:	eba6 0603 	sub.w	r6, r6, r3
 8015b72:	d00b      	beq.n	8015b8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8015b74:	f1a9 0104 	sub.w	r1, r9, #4
 8015b78:	461a      	mov	r2, r3
 8015b7a:	2a00      	cmp	r2, #0
 8015b7c:	dc02      	bgt.n	8015b84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8015b7e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015b82:	e7a0      	b.n	8015ac6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b84:	f841 5f04 	str.w	r5, [r1, #4]!
 8015b88:	3a01      	subs	r2, #1
 8015b8a:	e7f6      	b.n	8015b7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8015b8c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015b90:	e799      	b.n	8015ac6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b92:	4637      	mov	r7, r6
 8015b94:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015b98:	4626      	mov	r6, r4
 8015b9a:	e794      	b.n	8015ac6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b9c:	2bff      	cmp	r3, #255	@ 0xff
 8015b9e:	d11d      	bne.n	8015bdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8015ba0:	7878      	ldrb	r0, [r7, #1]
 8015ba2:	78ba      	ldrb	r2, [r7, #2]
 8015ba4:	78fe      	ldrb	r6, [r7, #3]
 8015ba6:	1d7b      	adds	r3, r7, #5
 8015ba8:	b2c0      	uxtb	r0, r0
 8015baa:	9303      	str	r3, [sp, #12]
 8015bac:	793b      	ldrb	r3, [r7, #4]
 8015bae:	f360 0507 	bfi	r5, r0, #0, #8
 8015bb2:	b2d2      	uxtb	r2, r2
 8015bb4:	b2d9      	uxtb	r1, r3
 8015bb6:	f362 250f 	bfi	r5, r2, #8, #8
 8015bba:	b2f6      	uxtb	r6, r6
 8015bbc:	2303      	movs	r3, #3
 8015bbe:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015bc2:	fb13 2206 	smlabb	r2, r3, r6, r2
 8015bc6:	2307      	movs	r3, #7
 8015bc8:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015bcc:	f366 4517 	bfi	r5, r6, #16, #8
 8015bd0:	230b      	movs	r3, #11
 8015bd2:	f361 651f 	bfi	r5, r1, #24, #8
 8015bd6:	fb13 0301 	smlabb	r3, r3, r1, r0
 8015bda:	e798      	b.n	8015b0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8015bdc:	119e      	asrs	r6, r3, #6
 8015bde:	d10d      	bne.n	8015bfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015be0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015be4:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015be8:	685d      	ldr	r5, [r3, #4]
 8015bea:	e795      	b.n	8015b18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015bec:	20013ff8 	.word	0x20013ff8
 8015bf0:	20013ff0 	.word	0x20013ff0
 8015bf4:	20000280 	.word	0x20000280
 8015bf8:	20000380 	.word	0x20000380
 8015bfc:	2e01      	cmp	r6, #1
 8015bfe:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8015c02:	d12b      	bne.n	8015c5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8015c04:	f003 0003 	and.w	r0, r3, #3
 8015c08:	3802      	subs	r0, #2
 8015c0a:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8015c0e:	b2c0      	uxtb	r0, r0
 8015c10:	f003 020c 	and.w	r2, r3, #12
 8015c14:	f360 0507 	bfi	r5, r0, #0, #8
 8015c18:	3a08      	subs	r2, #8
 8015c1a:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015c1e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015c22:	f362 250f 	bfi	r5, r2, #8, #8
 8015c26:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015c2a:	1e9f      	subs	r7, r3, #2
 8015c2c:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8015c30:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015c34:	b2db      	uxtb	r3, r3
 8015c36:	2703      	movs	r7, #3
 8015c38:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015c3c:	fb17 2203 	smlabb	r2, r7, r3, r2
 8015c40:	2707      	movs	r7, #7
 8015c42:	f363 4517 	bfi	r5, r3, #16, #8
 8015c46:	fb17 2000 	smlabb	r0, r7, r0, r2
 8015c4a:	230b      	movs	r3, #11
 8015c4c:	fb13 0101 	smlabb	r1, r3, r1, r0
 8015c50:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015c54:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015c58:	604d      	str	r5, [r1, #4]
 8015c5a:	e75e      	b.n	8015b1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8015c5c:	2e02      	cmp	r6, #2
 8015c5e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015c62:	d12f      	bne.n	8015cc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8015c64:	7878      	ldrb	r0, [r7, #1]
 8015c66:	1cba      	adds	r2, r7, #2
 8015c68:	b2c0      	uxtb	r0, r0
 8015c6a:	9203      	str	r2, [sp, #12]
 8015c6c:	f000 020f 	and.w	r2, r0, #15
 8015c70:	3b20      	subs	r3, #32
 8015c72:	3a08      	subs	r2, #8
 8015c74:	441a      	add	r2, r3
 8015c76:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8015c7a:	b2d2      	uxtb	r2, r2
 8015c7c:	f362 0507 	bfi	r5, r2, #0, #8
 8015c80:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015c84:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8015c88:	b2f6      	uxtb	r6, r6
 8015c8a:	1100      	asrs	r0, r0, #4
 8015c8c:	f366 250f 	bfi	r5, r6, #8, #8
 8015c90:	3808      	subs	r0, #8
 8015c92:	4403      	add	r3, r0
 8015c94:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8015c98:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015c9c:	b2db      	uxtb	r3, r3
 8015c9e:	2003      	movs	r0, #3
 8015ca0:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8015ca4:	fb10 6603 	smlabb	r6, r0, r3, r6
 8015ca8:	2007      	movs	r0, #7
 8015caa:	f363 4517 	bfi	r5, r3, #16, #8
 8015cae:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015cb2:	230b      	movs	r3, #11
 8015cb4:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015cb8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015cbc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015cc0:	604d      	str	r5, [r1, #4]
 8015cc2:	e729      	b.n	8015b18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015cc4:	1c5e      	adds	r6, r3, #1
 8015cc6:	45b3      	cmp	fp, r6
 8015cc8:	465f      	mov	r7, fp
 8015cca:	bfa8      	it	ge
 8015ccc:	4637      	movge	r7, r6
 8015cce:	e725      	b.n	8015b1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015cd0:	193b      	adds	r3, r7, r4
 8015cd2:	2b40      	cmp	r3, #64	@ 0x40
 8015cd4:	dd13      	ble.n	8015cfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8015cd6:	4648      	mov	r0, r9
 8015cd8:	00a1      	lsls	r1, r4, #2
 8015cda:	f7eb f939 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015cde:	4649      	mov	r1, r9
 8015ce0:	9b05      	ldr	r3, [sp, #20]
 8015ce2:	4622      	mov	r2, r4
 8015ce4:	4640      	mov	r0, r8
 8015ce6:	f7eb f981 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015cea:	4b2d      	ldr	r3, [pc, #180]	@ (8015da0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8015cec:	4599      	cmp	r9, r3
 8015cee:	bf0c      	ite	eq
 8015cf0:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8015dac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8015cf4:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8015da0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8015cf8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015cfc:	2400      	movs	r4, #0
 8015cfe:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8015d02:	463b      	mov	r3, r7
 8015d04:	3b01      	subs	r3, #1
 8015d06:	f842 5b04 	str.w	r5, [r2], #4
 8015d0a:	d1fb      	bne.n	8015d04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8015d0c:	443c      	add	r4, r7
 8015d0e:	9f03      	ldr	r7, [sp, #12]
 8015d10:	e6d9      	b.n	8015ac6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015d12:	b15c      	cbz	r4, 8015d2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8015d14:	00a1      	lsls	r1, r4, #2
 8015d16:	4648      	mov	r0, r9
 8015d18:	f7eb f91a 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015d1c:	4640      	mov	r0, r8
 8015d1e:	9b05      	ldr	r3, [sp, #20]
 8015d20:	4622      	mov	r2, r4
 8015d22:	4649      	mov	r1, r9
 8015d24:	f7eb f962 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015d28:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015d2c:	4b1d      	ldr	r3, [pc, #116]	@ (8015da4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8015d2e:	9a01      	ldr	r2, [sp, #4]
 8015d30:	881b      	ldrh	r3, [r3, #0]
 8015d32:	1a9b      	subs	r3, r3, r2
 8015d34:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015d38:	9b04      	ldr	r3, [sp, #16]
 8015d3a:	3301      	adds	r3, #1
 8015d3c:	9304      	str	r3, [sp, #16]
 8015d3e:	9a04      	ldr	r2, [sp, #16]
 8015d40:	9b00      	ldr	r3, [sp, #0]
 8015d42:	4293      	cmp	r3, r2
 8015d44:	d11d      	bne.n	8015d82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8015d46:	9b02      	ldr	r3, [sp, #8]
 8015d48:	9a02      	ldr	r2, [sp, #8]
 8015d4a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8015d4e:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8015d52:	9808      	ldr	r0, [sp, #32]
 8015d54:	f103 0b01 	add.w	fp, r3, #1
 8015d58:	9b06      	ldr	r3, [sp, #24]
 8015d5a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015d5e:	9b07      	ldr	r3, [sp, #28]
 8015d60:	2500      	movs	r5, #0
 8015d62:	ba3f      	rev	r7, r7
 8015d64:	1ba4      	subs	r4, r4, r6
 8015d66:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015d6a:	4629      	mov	r1, r5
 8015d6c:	441f      	add	r7, r3
 8015d6e:	b2a4      	uxth	r4, r4
 8015d70:	f00d f811 	bl	8022d96 <memset>
 8015d74:	f8cd b008 	str.w	fp, [sp, #8]
 8015d78:	9504      	str	r5, [sp, #16]
 8015d7a:	f7eb f8df 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8015d7e:	463e      	mov	r6, r7
 8015d80:	e5cc      	b.n	801591c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8015d82:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015d86:	9b01      	ldr	r3, [sp, #4]
 8015d88:	1ae4      	subs	r4, r4, r3
 8015d8a:	1ba4      	subs	r4, r4, r6
 8015d8c:	b2a4      	uxth	r4, r4
 8015d8e:	e7f4      	b.n	8015d7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8015d90:	4b05      	ldr	r3, [pc, #20]	@ (8015da8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8015d92:	6818      	ldr	r0, [r3, #0]
 8015d94:	6803      	ldr	r3, [r0, #0]
 8015d96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015d98:	4798      	blx	r3
 8015d9a:	b00f      	add	sp, #60	@ 0x3c
 8015d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015da0:	20000280 	.word	0x20000280
 8015da4:	20013ff0 	.word	0x20013ff0
 8015da8:	20013ff8 	.word	0x20013ff8
 8015dac:	20000380 	.word	0x20000380

08015db0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015db4:	b08f      	sub	sp, #60	@ 0x3c
 8015db6:	461c      	mov	r4, r3
 8015db8:	9205      	str	r2, [sp, #20]
 8015dba:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015dbe:	9100      	str	r1, [sp, #0]
 8015dc0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015dc2:	9201      	str	r2, [sp, #4]
 8015dc4:	2a00      	cmp	r2, #0
 8015dc6:	f000 8115 	beq.w	8015ff4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8015dca:	6820      	ldr	r0, [r4, #0]
 8015dcc:	6861      	ldr	r1, [r4, #4]
 8015dce:	aa0a      	add	r2, sp, #40	@ 0x28
 8015dd0:	c203      	stmia	r2!, {r0, r1}
 8015dd2:	6818      	ldr	r0, [r3, #0]
 8015dd4:	6859      	ldr	r1, [r3, #4]
 8015dd6:	aa0c      	add	r2, sp, #48	@ 0x30
 8015dd8:	c203      	stmia	r2!, {r0, r1}
 8015dda:	a80a      	add	r0, sp, #40	@ 0x28
 8015ddc:	f7f9 fa34 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015de0:	4621      	mov	r1, r4
 8015de2:	a80c      	add	r0, sp, #48	@ 0x30
 8015de4:	f7f9 fa58 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015de8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015dec:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015df0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015df4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8015df8:	bfde      	ittt	le
 8015dfa:	b2b3      	uxthle	r3, r6
 8015dfc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015e00:	fb92 f3f3 	sdivle	r3, r2, r3
 8015e04:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015e08:	bfc8      	it	gt
 8015e0a:	2301      	movgt	r3, #1
 8015e0c:	fb92 f1f3 	sdiv	r1, r2, r3
 8015e10:	fa1f fc81 	uxth.w	ip, r1
 8015e14:	fb0c 2413 	mls	r4, ip, r3, r2
 8015e18:	fb14 f406 	smulbb	r4, r4, r6
 8015e1c:	441d      	add	r5, r3
 8015e1e:	4404      	add	r4, r0
 8015e20:	4661      	mov	r1, ip
 8015e22:	3d01      	subs	r5, #1
 8015e24:	b2a4      	uxth	r4, r4
 8015e26:	fb95 f5f3 	sdiv	r5, r5, r3
 8015e2a:	b131      	cbz	r1, 8015e3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8015e2c:	9b05      	ldr	r3, [sp, #20]
 8015e2e:	9900      	ldr	r1, [sp, #0]
 8015e30:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015e34:	ba1b      	rev	r3, r3
 8015e36:	4419      	add	r1, r3
 8015e38:	9100      	str	r1, [sp, #0]
 8015e3a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015e3e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015e42:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015e46:	4418      	add	r0, r3
 8015e48:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015e4c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8015e50:	441a      	add	r2, r3
 8015e52:	4b6a      	ldr	r3, [pc, #424]	@ (8015ffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015e54:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015e58:	6818      	ldr	r0, [r3, #0]
 8015e5a:	6803      	ldr	r3, [r0, #0]
 8015e5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015e5e:	4798      	blx	r3
 8015e60:	4967      	ldr	r1, [pc, #412]	@ (8016000 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015e62:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015e66:	880b      	ldrh	r3, [r1, #0]
 8015e68:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8015e6c:	9109      	str	r1, [sp, #36]	@ 0x24
 8015e6e:	fb03 c202 	mla	r2, r3, r2, ip
 8015e72:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015e76:	4373      	muls	r3, r6
 8015e78:	b2ad      	uxth	r5, r5
 8015e7a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015e7e:	00ad      	lsls	r5, r5, #2
 8015e80:	9306      	str	r3, [sp, #24]
 8015e82:	1d2b      	adds	r3, r5, #4
 8015e84:	9307      	str	r3, [sp, #28]
 8015e86:	9b01      	ldr	r3, [sp, #4]
 8015e88:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015e8c:	9103      	str	r1, [sp, #12]
 8015e8e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8015e92:	2c00      	cmp	r4, #0
 8015e94:	bf0c      	ite	eq
 8015e96:	46c6      	moveq	lr, r8
 8015e98:	f04f 0e00 	movne.w	lr, #0
 8015e9c:	2300      	movs	r3, #0
 8015e9e:	b292      	uxth	r2, r2
 8015ea0:	fa1f fe8e 	uxth.w	lr, lr
 8015ea4:	9302      	str	r3, [sp, #8]
 8015ea6:	9204      	str	r2, [sp, #16]
 8015ea8:	9a06      	ldr	r2, [sp, #24]
 8015eaa:	4282      	cmp	r2, r0
 8015eac:	f240 809d 	bls.w	8015fea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8015eb0:	b963      	cbnz	r3, 8015ecc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015eb2:	9b00      	ldr	r3, [sp, #0]
 8015eb4:	781a      	ldrb	r2, [r3, #0]
 8015eb6:	0993      	lsrs	r3, r2, #6
 8015eb8:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015ebc:	9202      	str	r2, [sp, #8]
 8015ebe:	1e5a      	subs	r2, r3, #1
 8015ec0:	2a02      	cmp	r2, #2
 8015ec2:	d815      	bhi.n	8015ef0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8015ec4:	9a00      	ldr	r2, [sp, #0]
 8015ec6:	3201      	adds	r2, #1
 8015ec8:	9200      	str	r2, [sp, #0]
 8015eca:	b29b      	uxth	r3, r3
 8015ecc:	b1b4      	cbz	r4, 8015efc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8015ece:	429c      	cmp	r4, r3
 8015ed0:	bf95      	itete	ls
 8015ed2:	1b1c      	subls	r4, r3, r4
 8015ed4:	1ae4      	subhi	r4, r4, r3
 8015ed6:	fa1f fa84 	uxthls.w	sl, r4
 8015eda:	b2a4      	uxthhi	r4, r4
 8015edc:	bf87      	ittee	hi
 8015ede:	4671      	movhi	r1, lr
 8015ee0:	f04f 0a00 	movhi.w	sl, #0
 8015ee4:	fa1f f188 	uxthls.w	r1, r8
 8015ee8:	2400      	movls	r4, #0
 8015eea:	4653      	mov	r3, sl
 8015eec:	468e      	mov	lr, r1
 8015eee:	e7db      	b.n	8015ea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8015ef0:	9a00      	ldr	r2, [sp, #0]
 8015ef2:	9b00      	ldr	r3, [sp, #0]
 8015ef4:	3202      	adds	r2, #2
 8015ef6:	785b      	ldrb	r3, [r3, #1]
 8015ef8:	9200      	str	r2, [sp, #0]
 8015efa:	e7e7      	b.n	8015ecc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015efc:	2202      	movs	r2, #2
 8015efe:	4615      	mov	r5, r2
 8015f00:	9907      	ldr	r1, [sp, #28]
 8015f02:	9a02      	ldr	r2, [sp, #8]
 8015f04:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015f08:	9905      	ldr	r1, [sp, #20]
 8015f0a:	4573      	cmp	r3, lr
 8015f0c:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015f10:	9a01      	ldr	r2, [sp, #4]
 8015f12:	bf2b      	itete	cs
 8015f14:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015f18:	ebae 0103 	subcc.w	r1, lr, r3
 8015f1c:	46f1      	movcs	r9, lr
 8015f1e:	4699      	movcc	r9, r3
 8015f20:	bf27      	ittee	cs
 8015f22:	fa1f fa8a 	uxthcs.w	sl, sl
 8015f26:	4621      	movcs	r1, r4
 8015f28:	b289      	uxthcc	r1, r1
 8015f2a:	46a2      	movcc	sl, r4
 8015f2c:	2aff      	cmp	r2, #255	@ 0xff
 8015f2e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015f32:	d105      	bne.n	8015f40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8015f34:	4481      	add	r9, r0
 8015f36:	4581      	cmp	r9, r0
 8015f38:	d045      	beq.n	8015fc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015f3a:	f820 cb02 	strh.w	ip, [r0], #2
 8015f3e:	e7fa      	b.n	8015f36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8015f40:	9d03      	ldr	r5, [sp, #12]
 8015f42:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015f46:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015f4a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8015f4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015f52:	436a      	muls	r2, r5
 8015f54:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015f58:	fa5f fc8c 	uxtb.w	ip, ip
 8015f5c:	9208      	str	r2, [sp, #32]
 8015f5e:	fb0b fb05 	mul.w	fp, fp, r5
 8015f62:	fb0c fc05 	mul.w	ip, ip, r5
 8015f66:	4481      	add	r9, r0
 8015f68:	4581      	cmp	r9, r0
 8015f6a:	d02c      	beq.n	8015fc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015f6c:	8802      	ldrh	r2, [r0, #0]
 8015f6e:	9d04      	ldr	r5, [sp, #16]
 8015f70:	9f04      	ldr	r7, [sp, #16]
 8015f72:	1216      	asrs	r6, r2, #8
 8015f74:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015f78:	fb16 f605 	smulbb	r6, r6, r5
 8015f7c:	9d08      	ldr	r5, [sp, #32]
 8015f7e:	442e      	add	r6, r5
 8015f80:	10d5      	asrs	r5, r2, #3
 8015f82:	00d2      	lsls	r2, r2, #3
 8015f84:	b2d2      	uxtb	r2, r2
 8015f86:	fb12 f207 	smulbb	r2, r2, r7
 8015f8a:	b2b6      	uxth	r6, r6
 8015f8c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015f90:	4462      	add	r2, ip
 8015f92:	fb15 f507 	smulbb	r5, r5, r7
 8015f96:	b292      	uxth	r2, r2
 8015f98:	1c77      	adds	r7, r6, #1
 8015f9a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015f9e:	1c57      	adds	r7, r2, #1
 8015fa0:	445d      	add	r5, fp
 8015fa2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8015fa6:	b2ad      	uxth	r5, r5
 8015fa8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015fac:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015fb0:	4316      	orrs	r6, r2
 8015fb2:	1c6a      	adds	r2, r5, #1
 8015fb4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015fb8:	096d      	lsrs	r5, r5, #5
 8015fba:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015fbe:	432e      	orrs	r6, r5
 8015fc0:	f820 6b02 	strh.w	r6, [r0], #2
 8015fc4:	e7d0      	b.n	8015f68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8015fc6:	4573      	cmp	r3, lr
 8015fc8:	d38f      	bcc.n	8015eea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015fca:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015fce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015fd0:	fa1f f188 	uxth.w	r1, r8
 8015fd4:	1a64      	subs	r4, r4, r1
 8015fd6:	881b      	ldrh	r3, [r3, #0]
 8015fd8:	b2a4      	uxth	r4, r4
 8015fda:	2c00      	cmp	r4, #0
 8015fdc:	eba3 0308 	sub.w	r3, r3, r8
 8015fe0:	bf18      	it	ne
 8015fe2:	2100      	movne	r1, #0
 8015fe4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015fe8:	e77f      	b.n	8015eea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015fea:	4b04      	ldr	r3, [pc, #16]	@ (8015ffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015fec:	6818      	ldr	r0, [r3, #0]
 8015fee:	6803      	ldr	r3, [r0, #0]
 8015ff0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015ff2:	4798      	blx	r3
 8015ff4:	b00f      	add	sp, #60	@ 0x3c
 8015ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ffa:	bf00      	nop
 8015ffc:	20013ff8 	.word	0x20013ff8
 8016000:	20013ff0 	.word	0x20013ff0

08016004 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016008:	b09f      	sub	sp, #124	@ 0x7c
 801600a:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801600e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016012:	9209      	str	r2, [sp, #36]	@ 0x24
 8016014:	461d      	mov	r5, r3
 8016016:	4604      	mov	r4, r0
 8016018:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801601a:	2a00      	cmp	r2, #0
 801601c:	f000 81eb 	beq.w	80163f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8016020:	6828      	ldr	r0, [r5, #0]
 8016022:	6869      	ldr	r1, [r5, #4]
 8016024:	aa1a      	add	r2, sp, #104	@ 0x68
 8016026:	c203      	stmia	r2!, {r0, r1}
 8016028:	6818      	ldr	r0, [r3, #0]
 801602a:	6859      	ldr	r1, [r3, #4]
 801602c:	aa1c      	add	r2, sp, #112	@ 0x70
 801602e:	c203      	stmia	r2!, {r0, r1}
 8016030:	a81a      	add	r0, sp, #104	@ 0x68
 8016032:	f7f9 f909 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016036:	4629      	mov	r1, r5
 8016038:	a81c      	add	r0, sp, #112	@ 0x70
 801603a:	f7f9 f92d 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801603e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016042:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8016046:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801604a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801604e:	bfd7      	itett	le
 8016050:	b29a      	uxthle	r2, r3
 8016052:	2201      	movgt	r2, #1
 8016054:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016058:	fb91 f2f2 	sdivle	r2, r1, r2
 801605c:	9202      	str	r2, [sp, #8]
 801605e:	9802      	ldr	r0, [sp, #8]
 8016060:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016064:	fb92 f0f0 	sdiv	r0, r2, r0
 8016068:	b280      	uxth	r0, r0
 801606a:	9010      	str	r0, [sp, #64]	@ 0x40
 801606c:	9902      	ldr	r1, [sp, #8]
 801606e:	9802      	ldr	r0, [sp, #8]
 8016070:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016072:	4488      	add	r8, r1
 8016074:	fb05 2510 	mls	r5, r5, r0, r2
 8016078:	fb15 f503 	smulbb	r5, r5, r3
 801607c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016080:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016084:	fb98 f8f1 	sdiv	r8, r8, r1
 8016088:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801608c:	440d      	add	r5, r1
 801608e:	4419      	add	r1, r3
 8016090:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016094:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016098:	441a      	add	r2, r3
 801609a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801609e:	9304      	str	r3, [sp, #16]
 80160a0:	4b95      	ldr	r3, [pc, #596]	@ (80162f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80160a2:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80160a6:	6818      	ldr	r0, [r3, #0]
 80160a8:	6803      	ldr	r3, [r0, #0]
 80160aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80160ac:	4798      	blx	r3
 80160ae:	4b93      	ldr	r3, [pc, #588]	@ (80162fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80160b0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80160b4:	881a      	ldrh	r2, [r3, #0]
 80160b6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80160ba:	9318      	str	r3, [sp, #96]	@ 0x60
 80160bc:	fb02 7101 	mla	r1, r2, r1, r7
 80160c0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80160c4:	4356      	muls	r6, r2
 80160c6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80160ca:	f108 0801 	add.w	r8, r8, #1
 80160ce:	920a      	str	r2, [sp, #40]	@ 0x28
 80160d0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80160d2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 80160d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80160d8:	fa1f f888 	uxth.w	r8, r8
 80160dc:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80160e0:	f108 0204 	add.w	r2, r8, #4
 80160e4:	9211      	str	r2, [sp, #68]	@ 0x44
 80160e6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80160e8:	4b85      	ldr	r3, [pc, #532]	@ (8016300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80160ea:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 80160ee:	b2ad      	uxth	r5, r5
 80160f0:	9215      	str	r2, [sp, #84]	@ 0x54
 80160f2:	2d00      	cmp	r5, #0
 80160f4:	9a04      	ldr	r2, [sp, #16]
 80160f6:	f04f 0100 	mov.w	r1, #0
 80160fa:	bf18      	it	ne
 80160fc:	2200      	movne	r2, #0
 80160fe:	1b1b      	subs	r3, r3, r4
 8016100:	b292      	uxth	r2, r2
 8016102:	910d      	str	r1, [sp, #52]	@ 0x34
 8016104:	9319      	str	r3, [sp, #100]	@ 0x64
 8016106:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016108:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801610a:	fa11 f383 	uxtah	r3, r1, r3
 801610e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016110:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016114:	3304      	adds	r3, #4
 8016116:	9306      	str	r3, [sp, #24]
 8016118:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801611a:	4283      	cmp	r3, r0
 801611c:	f240 8166 	bls.w	80163ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8016120:	9902      	ldr	r1, [sp, #8]
 8016122:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016126:	fbb5 f3f3 	udiv	r3, r5, r3
 801612a:	1acb      	subs	r3, r1, r3
 801612c:	b29b      	uxth	r3, r3
 801612e:	9316      	str	r3, [sp, #88]	@ 0x58
 8016130:	9b06      	ldr	r3, [sp, #24]
 8016132:	9e06      	ldr	r6, [sp, #24]
 8016134:	7859      	ldrb	r1, [r3, #1]
 8016136:	789b      	ldrb	r3, [r3, #2]
 8016138:	7836      	ldrb	r6, [r6, #0]
 801613a:	9612      	str	r6, [sp, #72]	@ 0x48
 801613c:	021b      	lsls	r3, r3, #8
 801613e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8016142:	9906      	ldr	r1, [sp, #24]
 8016144:	78c9      	ldrb	r1, [r1, #3]
 8016146:	430b      	orrs	r3, r1
 8016148:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801614a:	3601      	adds	r6, #1
 801614c:	4419      	add	r1, r3
 801614e:	9605      	str	r6, [sp, #20]
 8016150:	1c4e      	adds	r6, r1, #1
 8016152:	9603      	str	r6, [sp, #12]
 8016154:	7849      	ldrb	r1, [r1, #1]
 8016156:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016158:	0209      	lsls	r1, r1, #8
 801615a:	5cf3      	ldrb	r3, [r6, r3]
 801615c:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8016160:	4319      	orrs	r1, r3
 8016162:	b28b      	uxth	r3, r1
 8016164:	930c      	str	r3, [sp, #48]	@ 0x30
 8016166:	2300      	movs	r3, #0
 8016168:	f04f 0a01 	mov.w	sl, #1
 801616c:	9307      	str	r3, [sp, #28]
 801616e:	469c      	mov	ip, r3
 8016170:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016174:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016178:	46d3      	mov	fp, sl
 801617a:	4657      	mov	r7, sl
 801617c:	930e      	str	r3, [sp, #56]	@ 0x38
 801617e:	2d00      	cmp	r5, #0
 8016180:	d07e      	beq.n	8016280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016182:	42af      	cmp	r7, r5
 8016184:	d26e      	bcs.n	8016264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8016186:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016188:	9201      	str	r2, [sp, #4]
 801618a:	1bed      	subs	r5, r5, r7
 801618c:	4283      	cmp	r3, r0
 801618e:	b2ad      	uxth	r5, r5
 8016190:	d802      	bhi.n	8016198 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016192:	e073      	b.n	801627c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016194:	2b00      	cmp	r3, #0
 8016196:	d15f      	bne.n	8016258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8016198:	9b03      	ldr	r3, [sp, #12]
 801619a:	785b      	ldrb	r3, [r3, #1]
 801619c:	f1cb 0207 	rsb	r2, fp, #7
 80161a0:	4093      	lsls	r3, r2
 80161a2:	005b      	lsls	r3, r3, #1
 80161a4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80161a8:	9b03      	ldr	r3, [sp, #12]
 80161aa:	781b      	ldrb	r3, [r3, #0]
 80161ac:	fa43 f30b 	asr.w	r3, r3, fp
 80161b0:	b2db      	uxtb	r3, r3
 80161b2:	4313      	orrs	r3, r2
 80161b4:	f10b 0201 	add.w	r2, fp, #1
 80161b8:	fa5f fb82 	uxtb.w	fp, r2
 80161bc:	9a03      	ldr	r2, [sp, #12]
 80161be:	f1bb 0f08 	cmp.w	fp, #8
 80161c2:	bf15      	itete	ne
 80161c4:	3201      	addne	r2, #1
 80161c6:	3202      	addeq	r2, #2
 80161c8:	9203      	strne	r2, [sp, #12]
 80161ca:	9203      	streq	r2, [sp, #12]
 80161cc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80161ce:	b29f      	uxth	r7, r3
 80161d0:	bf08      	it	eq
 80161d2:	f04f 0b00 	moveq.w	fp, #0
 80161d6:	42ba      	cmp	r2, r7
 80161d8:	d309      	bcc.n	80161ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 80161da:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80161de:	2301      	movs	r3, #1
 80161e0:	9a05      	ldr	r2, [sp, #20]
 80161e2:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 80161e6:	d30e      	bcc.n	8016206 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 80161e8:	469a      	mov	sl, r3
 80161ea:	2600      	movs	r6, #0
 80161ec:	e035      	b.n	801625a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 80161ee:	9b05      	ldr	r3, [sp, #20]
 80161f0:	429f      	cmp	r7, r3
 80161f2:	d318      	bcc.n	8016226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 80161f4:	eb04 030a 	add.w	r3, r4, sl
 80161f8:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 80161fc:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016200:	f10a 0301 	add.w	r3, sl, #1
 8016204:	b29b      	uxth	r3, r3
 8016206:	9a05      	ldr	r2, [sp, #20]
 8016208:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801620c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801620e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016212:	7116      	strb	r6, [r2, #4]
 8016214:	f10a 0601 	add.w	r6, sl, #1
 8016218:	80d1      	strh	r1, [r2, #6]
 801621a:	7156      	strb	r6, [r2, #5]
 801621c:	9a05      	ldr	r2, [sp, #20]
 801621e:	3201      	adds	r2, #1
 8016220:	b292      	uxth	r2, r2
 8016222:	9205      	str	r2, [sp, #20]
 8016224:	e7e0      	b.n	80161e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8016226:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801622a:	463a      	mov	r2, r7
 801622c:	795b      	ldrb	r3, [r3, #5]
 801622e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016232:	4426      	add	r6, r4
 8016234:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8016236:	eb01 0c06 	add.w	ip, r1, r6
 801623a:	f1bc 0f00 	cmp.w	ip, #0
 801623e:	dd07      	ble.n	8016250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8016240:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016244:	f892 c004 	ldrb.w	ip, [r2, #4]
 8016248:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801624c:	88d2      	ldrh	r2, [r2, #6]
 801624e:	e7f1      	b.n	8016234 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8016250:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016254:	b29b      	uxth	r3, r3
 8016256:	e7c3      	b.n	80161e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8016258:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801625a:	970c      	str	r7, [sp, #48]	@ 0x30
 801625c:	9a01      	ldr	r2, [sp, #4]
 801625e:	46b4      	mov	ip, r6
 8016260:	461f      	mov	r7, r3
 8016262:	e78c      	b.n	801617e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8016264:	1b7b      	subs	r3, r7, r5
 8016266:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801626a:	9201      	str	r2, [sp, #4]
 801626c:	eb0c 0605 	add.w	r6, ip, r5
 8016270:	b29b      	uxth	r3, r3
 8016272:	b2b6      	uxth	r6, r6
 8016274:	2500      	movs	r5, #0
 8016276:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016278:	4282      	cmp	r2, r0
 801627a:	d88b      	bhi.n	8016194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801627c:	9a01      	ldr	r2, [sp, #4]
 801627e:	e74b      	b.n	8016118 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016280:	4297      	cmp	r7, r2
 8016282:	d332      	bcc.n	80162ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8016284:	1abb      	subs	r3, r7, r2
 8016286:	b29b      	uxth	r3, r3
 8016288:	9208      	str	r2, [sp, #32]
 801628a:	9501      	str	r5, [sp, #4]
 801628c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801628e:	29ff      	cmp	r1, #255	@ 0xff
 8016290:	9908      	ldr	r1, [sp, #32]
 8016292:	eb0c 0601 	add.w	r6, ip, r1
 8016296:	d135      	bne.n	8016304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8016298:	f1a0 0e02 	sub.w	lr, r0, #2
 801629c:	b2b6      	uxth	r6, r6
 801629e:	45b4      	cmp	ip, r6
 80162a0:	f040 808c 	bne.w	80163bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 80162a4:	9908      	ldr	r1, [sp, #32]
 80162a6:	4297      	cmp	r7, r2
 80162a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80162ac:	d3e2      	bcc.n	8016274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 80162ae:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80162b0:	9904      	ldr	r1, [sp, #16]
 80162b2:	8812      	ldrh	r2, [r2, #0]
 80162b4:	1a52      	subs	r2, r2, r1
 80162b6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80162ba:	9a07      	ldr	r2, [sp, #28]
 80162bc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80162be:	3201      	adds	r2, #1
 80162c0:	428a      	cmp	r2, r1
 80162c2:	9207      	str	r2, [sp, #28]
 80162c4:	f040 8087 	bne.w	80163d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 80162c8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80162cc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80162d0:	9b04      	ldr	r3, [sp, #16]
 80162d2:	1bed      	subs	r5, r5, r7
 80162d4:	b2ad      	uxth	r5, r5
 80162d6:	2d00      	cmp	r5, #0
 80162d8:	bf08      	it	eq
 80162da:	461a      	moveq	r2, r3
 80162dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80162de:	bf18      	it	ne
 80162e0:	2200      	movne	r2, #0
 80162e2:	3301      	adds	r3, #1
 80162e4:	930d      	str	r3, [sp, #52]	@ 0x34
 80162e6:	b292      	uxth	r2, r2
 80162e8:	e70d      	b.n	8016106 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 80162ea:	1bd1      	subs	r1, r2, r7
 80162ec:	b28b      	uxth	r3, r1
 80162ee:	9301      	str	r3, [sp, #4]
 80162f0:	9708      	str	r7, [sp, #32]
 80162f2:	462b      	mov	r3, r5
 80162f4:	e7ca      	b.n	801628c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 80162f6:	bf00      	nop
 80162f8:	20013ff8 	.word	0x20013ff8
 80162fc:	20013ff0 	.word	0x20013ff0
 8016300:	fffff7fb 	.word	0xfffff7fb
 8016304:	b2b6      	uxth	r6, r6
 8016306:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016308:	45b4      	cmp	ip, r6
 801630a:	d0cb      	beq.n	80162a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801630c:	f10c 0101 	add.w	r1, ip, #1
 8016310:	44a4      	add	ip, r4
 8016312:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016314:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016318:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801631a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801631e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016320:	f8b1 c000 	ldrh.w	ip, [r1]
 8016324:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016326:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801632a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801632e:	fb1e fe01 	smulbb	lr, lr, r1
 8016332:	ea4f 2825 	mov.w	r8, r5, asr #8
 8016336:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016338:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801633c:	fb08 e801 	mla	r8, r8, r1, lr
 8016340:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8016344:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016346:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801634a:	fb19 f901 	smulbb	r9, r9, r1
 801634e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016352:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016354:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016358:	fb0e 9e01 	mla	lr, lr, r1, r9
 801635c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016360:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016362:	fa5f fc8c 	uxtb.w	ip, ip
 8016366:	fb1c fc01 	smulbb	ip, ip, r1
 801636a:	00ed      	lsls	r5, r5, #3
 801636c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801636e:	b2ed      	uxtb	r5, r5
 8016370:	fb05 c501 	mla	r5, r5, r1, ip
 8016374:	fa1f f888 	uxth.w	r8, r8
 8016378:	fa1f fe8e 	uxth.w	lr, lr
 801637c:	b2ad      	uxth	r5, r5
 801637e:	f108 0c01 	add.w	ip, r8, #1
 8016382:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016386:	f10e 0901 	add.w	r9, lr, #1
 801638a:	f105 0c01 	add.w	ip, r5, #1
 801638e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016392:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016396:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801639a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801639e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80163a2:	ea4c 0808 	orr.w	r8, ip, r8
 80163a6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80163a8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 80163ac:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80163b0:	ea48 0809 	orr.w	r8, r8, r9
 80163b4:	f821 8b02 	strh.w	r8, [r1], #2
 80163b8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80163ba:	e7a5      	b.n	8016308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80163bc:	f10c 0801 	add.w	r8, ip, #1
 80163c0:	44a4      	add	ip, r4
 80163c2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80163c4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80163c8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80163cc:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80163d0:	fa1f fc88 	uxth.w	ip, r8
 80163d4:	e763      	b.n	801629e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 80163d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80163da:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80163de:	1aad      	subs	r5, r5, r2
 80163e0:	b2ad      	uxth	r5, r5
 80163e2:	2d00      	cmp	r5, #0
 80163e4:	bf18      	it	ne
 80163e6:	2200      	movne	r2, #0
 80163e8:	9201      	str	r2, [sp, #4]
 80163ea:	e744      	b.n	8016276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 80163ec:	4b03      	ldr	r3, [pc, #12]	@ (80163fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 80163ee:	6818      	ldr	r0, [r3, #0]
 80163f0:	6803      	ldr	r3, [r0, #0]
 80163f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80163f4:	4798      	blx	r3
 80163f6:	b01f      	add	sp, #124	@ 0x7c
 80163f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163fc:	20013ff8 	.word	0x20013ff8

08016400 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016404:	b093      	sub	sp, #76	@ 0x4c
 8016406:	4616      	mov	r6, r2
 8016408:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801640c:	9003      	str	r0, [sp, #12]
 801640e:	460d      	mov	r5, r1
 8016410:	9201      	str	r2, [sp, #4]
 8016412:	2a00      	cmp	r2, #0
 8016414:	f000 8304 	beq.w	8016a20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8016418:	6830      	ldr	r0, [r6, #0]
 801641a:	6871      	ldr	r1, [r6, #4]
 801641c:	ac0e      	add	r4, sp, #56	@ 0x38
 801641e:	c403      	stmia	r4!, {r0, r1}
 8016420:	6818      	ldr	r0, [r3, #0]
 8016422:	6859      	ldr	r1, [r3, #4]
 8016424:	ac10      	add	r4, sp, #64	@ 0x40
 8016426:	c403      	stmia	r4!, {r0, r1}
 8016428:	a80e      	add	r0, sp, #56	@ 0x38
 801642a:	f7f8 ff0d 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801642e:	4631      	mov	r1, r6
 8016430:	a810      	add	r0, sp, #64	@ 0x40
 8016432:	f7f8 ff31 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016436:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801643a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801643e:	bfd7      	itett	le
 8016440:	b293      	uxthle	r3, r2
 8016442:	2301      	movgt	r3, #1
 8016444:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016448:	fb91 f3f3 	sdivle	r3, r1, r3
 801644c:	9304      	str	r3, [sp, #16]
 801644e:	f105 0308 	add.w	r3, r5, #8
 8016452:	9904      	ldr	r1, [sp, #16]
 8016454:	9308      	str	r3, [sp, #32]
 8016456:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801645a:	440b      	add	r3, r1
 801645c:	3b01      	subs	r3, #1
 801645e:	fb93 f3f1 	sdiv	r3, r3, r1
 8016462:	9908      	ldr	r1, [sp, #32]
 8016464:	3b01      	subs	r3, #1
 8016466:	b29b      	uxth	r3, r3
 8016468:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801646c:	9309      	str	r3, [sp, #36]	@ 0x24
 801646e:	9904      	ldr	r1, [sp, #16]
 8016470:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016474:	fb93 f0f1 	sdiv	r0, r3, r1
 8016478:	b284      	uxth	r4, r0
 801647a:	9405      	str	r4, [sp, #20]
 801647c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016480:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016484:	fb05 3914 	mls	r9, r5, r4, r3
 8016488:	fb19 f902 	smulbb	r9, r9, r2
 801648c:	4489      	add	r9, r1
 801648e:	fa1f f989 	uxth.w	r9, r9
 8016492:	2d00      	cmp	r5, #0
 8016494:	d05d      	beq.n	8016552 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8016496:	1e6a      	subs	r2, r5, #1
 8016498:	9808      	ldr	r0, [sp, #32]
 801649a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801649e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80164a0:	fa9a fa8a 	rev.w	sl, sl
 80164a4:	4492      	add	sl, r2
 80164a6:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 80164aa:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80164ae:	4411      	add	r1, r2
 80164b0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80164b4:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 80164b8:	4413      	add	r3, r2
 80164ba:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80164be:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 80164c2:	9302      	str	r3, [sp, #8]
 80164c4:	4bcb      	ldr	r3, [pc, #812]	@ (80167f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 80164c6:	6818      	ldr	r0, [r3, #0]
 80164c8:	6803      	ldr	r3, [r0, #0]
 80164ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80164cc:	4798      	blx	r3
 80164ce:	4bca      	ldr	r3, [pc, #808]	@ (80167f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 80164d0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80164d4:	881b      	ldrh	r3, [r3, #0]
 80164d6:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 80164da:	fb03 2404 	mla	r4, r3, r4, r2
 80164de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80164e2:	436b      	muls	r3, r5
 80164e4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80164e8:	930d      	str	r3, [sp, #52]	@ 0x34
 80164ea:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80164ee:	fb99 f3f3 	sdiv	r3, r9, r3
 80164f2:	9306      	str	r3, [sp, #24]
 80164f4:	9b01      	ldr	r3, [sp, #4]
 80164f6:	43db      	mvns	r3, r3
 80164f8:	b2db      	uxtb	r3, r3
 80164fa:	930a      	str	r3, [sp, #40]	@ 0x28
 80164fc:	9b03      	ldr	r3, [sp, #12]
 80164fe:	3304      	adds	r3, #4
 8016500:	4618      	mov	r0, r3
 8016502:	2280      	movs	r2, #128	@ 0x80
 8016504:	2100      	movs	r1, #0
 8016506:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016508:	f00c fc45 	bl	8022d96 <memset>
 801650c:	4bbb      	ldr	r3, [pc, #748]	@ (80167fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801650e:	9300      	str	r3, [sp, #0]
 8016510:	2300      	movs	r3, #0
 8016512:	f04f 0600 	mov.w	r6, #0
 8016516:	9307      	str	r3, [sp, #28]
 8016518:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801651a:	42a3      	cmp	r3, r4
 801651c:	f240 827b 	bls.w	8016a16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8016520:	f04f 0e07 	mov.w	lr, #7
 8016524:	f1b9 0f00 	cmp.w	r9, #0
 8016528:	f000 8159 	beq.w	80167de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801652c:	f89a 5000 	ldrb.w	r5, [sl]
 8016530:	b2ed      	uxtb	r5, r5
 8016532:	11aa      	asrs	r2, r5, #6
 8016534:	f10a 0701 	add.w	r7, sl, #1
 8016538:	d10e      	bne.n	8016558 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801653a:	9b03      	ldr	r3, [sp, #12]
 801653c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016540:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016544:	88ae      	ldrh	r6, [r5, #4]
 8016546:	f109 39ff 	add.w	r9, r9, #4294967295
 801654a:	fa1f f989 	uxth.w	r9, r9
 801654e:	46ba      	mov	sl, r7
 8016550:	e7e8      	b.n	8016524 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8016552:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8016556:	e7a6      	b.n	80164a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8016558:	2a01      	cmp	r2, #1
 801655a:	d129      	bne.n	80165b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801655c:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8016560:	f005 0203 	and.w	r2, r5, #3
 8016564:	3b02      	subs	r3, #2
 8016566:	4413      	add	r3, r2
 8016568:	f003 031f 	and.w	r3, r3, #31
 801656c:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8016570:	f363 0604 	bfi	r6, r3, #0, #5
 8016574:	3a02      	subs	r2, #2
 8016576:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801657a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801657e:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016582:	f362 164a 	bfi	r6, r2, #5, #6
 8016586:	3d02      	subs	r5, #2
 8016588:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801658c:	f005 051f 	and.w	r5, r5, #31
 8016590:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016594:	2103      	movs	r1, #3
 8016596:	fb11 2205 	smlabb	r2, r1, r5, r2
 801659a:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801659e:	9a03      	ldr	r2, [sp, #12]
 80165a0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80165a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80165a8:	f365 26cf 	bfi	r6, r5, #11, #5
 80165ac:	809e      	strh	r6, [r3, #4]
 80165ae:	e7ca      	b.n	8016546 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 80165b0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80165b4:	2a02      	cmp	r2, #2
 80165b6:	b2ab      	uxth	r3, r5
 80165b8:	d136      	bne.n	8016628 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 80165ba:	2101      	movs	r1, #1
 80165bc:	fb12 1205 	smlabb	r2, r2, r5, r1
 80165c0:	4492      	add	sl, r2
 80165c2:	463a      	mov	r2, r7
 80165c4:	4552      	cmp	r2, sl
 80165c6:	d01c      	beq.n	8016602 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 80165c8:	4694      	mov	ip, r2
 80165ca:	f04f 0b03 	mov.w	fp, #3
 80165ce:	f81c 1b02 	ldrb.w	r1, [ip], #2
 80165d2:	7852      	ldrb	r2, [r2, #1]
 80165d4:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 80165d8:	f3c1 1045 	ubfx	r0, r1, #5, #6
 80165dc:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 80165e0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80165e4:	f001 021f 	and.w	r2, r1, #31
 80165e8:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80165ec:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80165f0:	9a03      	ldr	r2, [sp, #12]
 80165f2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80165f6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80165fa:	460e      	mov	r6, r1
 80165fc:	8081      	strh	r1, [r0, #4]
 80165fe:	4662      	mov	r2, ip
 8016600:	e7e0      	b.n	80165c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8016602:	4599      	cmp	r9, r3
 8016604:	d20b      	bcs.n	801661e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8016606:	eba5 0509 	sub.w	r5, r5, r9
 801660a:	2d00      	cmp	r5, #0
 801660c:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8016610:	f300 8209 	bgt.w	8016a26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8016614:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016618:	2301      	movs	r3, #1
 801661a:	9307      	str	r3, [sp, #28]
 801661c:	e00c      	b.n	8016638 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801661e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8016622:	eba9 0903 	sub.w	r9, r9, r3
 8016626:	e790      	b.n	801654a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8016628:	4599      	cmp	r9, r3
 801662a:	d2fa      	bcs.n	8016622 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801662c:	eba5 0509 	sub.w	r5, r5, r9
 8016630:	2d00      	cmp	r5, #0
 8016632:	dc1d      	bgt.n	8016670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8016634:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016638:	f04f 0b00 	mov.w	fp, #0
 801663c:	f1b8 0f00 	cmp.w	r8, #0
 8016640:	f340 81a1 	ble.w	8016986 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8016644:	783b      	ldrb	r3, [r7, #0]
 8016646:	b2db      	uxtb	r3, r3
 8016648:	119a      	asrs	r2, r3, #6
 801664a:	f107 0a01 	add.w	sl, r7, #1
 801664e:	f040 80d7 	bne.w	8016800 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8016652:	9a03      	ldr	r2, [sp, #12]
 8016654:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016658:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801665c:	889e      	ldrh	r6, [r3, #4]
 801665e:	9b01      	ldr	r3, [sp, #4]
 8016660:	2bff      	cmp	r3, #255	@ 0xff
 8016662:	f040 81e9 	bne.w	8016a38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8016666:	8026      	strh	r6, [r4, #0]
 8016668:	f108 38ff 	add.w	r8, r8, #4294967295
 801666c:	3402      	adds	r4, #2
 801666e:	e0be      	b.n	80167ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016670:	9b02      	ldr	r3, [sp, #8]
 8016672:	9a02      	ldr	r2, [sp, #8]
 8016674:	42ab      	cmp	r3, r5
 8016676:	bfa8      	it	ge
 8016678:	462b      	movge	r3, r5
 801667a:	eba2 0803 	sub.w	r8, r2, r3
 801667e:	9a07      	ldr	r2, [sp, #28]
 8016680:	1aed      	subs	r5, r5, r3
 8016682:	2a00      	cmp	r2, #0
 8016684:	d05a      	beq.n	801673c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8016686:	9a01      	ldr	r2, [sp, #4]
 8016688:	2aff      	cmp	r2, #255	@ 0xff
 801668a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801668e:	d049      	beq.n	8016724 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8016690:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8016694:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8016698:	42a3      	cmp	r3, r4
 801669a:	f240 80a5 	bls.w	80167e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801669e:	46bc      	mov	ip, r7
 80166a0:	8820      	ldrh	r0, [r4, #0]
 80166a2:	f81c 2b02 	ldrb.w	r2, [ip], #2
 80166a6:	7879      	ldrb	r1, [r7, #1]
 80166a8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80166ac:	b212      	sxth	r2, r2
 80166ae:	b291      	uxth	r1, r2
 80166b0:	ea4f 2a20 	mov.w	sl, r0, asr #8
 80166b4:	120f      	asrs	r7, r1, #8
 80166b6:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 80166ba:	fb1a fa09 	smulbb	sl, sl, r9
 80166be:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80166c2:	fb07 a70e 	mla	r7, r7, lr, sl
 80166c6:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 80166ca:	00c0      	lsls	r0, r0, #3
 80166cc:	10c9      	asrs	r1, r1, #3
 80166ce:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80166d2:	00d2      	lsls	r2, r2, #3
 80166d4:	b2c0      	uxtb	r0, r0
 80166d6:	fb1a fa09 	smulbb	sl, sl, r9
 80166da:	fb10 f009 	smulbb	r0, r0, r9
 80166de:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80166e2:	b2d2      	uxtb	r2, r2
 80166e4:	b2bf      	uxth	r7, r7
 80166e6:	fb01 a10e 	mla	r1, r1, lr, sl
 80166ea:	fb02 020e 	mla	r2, r2, lr, r0
 80166ee:	b289      	uxth	r1, r1
 80166f0:	b292      	uxth	r2, r2
 80166f2:	1c78      	adds	r0, r7, #1
 80166f4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80166f8:	f101 0a01 	add.w	sl, r1, #1
 80166fc:	1c50      	adds	r0, r2, #1
 80166fe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016702:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8016706:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801670a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801670e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016712:	4307      	orrs	r7, r0
 8016714:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016718:	ea47 070a 	orr.w	r7, r7, sl
 801671c:	f824 7b02 	strh.w	r7, [r4], #2
 8016720:	4667      	mov	r7, ip
 8016722:	e7b9      	b.n	8016698 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 8016724:	42a3      	cmp	r3, r4
 8016726:	d95f      	bls.n	80167e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8016728:	463a      	mov	r2, r7
 801672a:	f812 1b02 	ldrb.w	r1, [r2], #2
 801672e:	7878      	ldrb	r0, [r7, #1]
 8016730:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8016734:	f824 1b02 	strh.w	r1, [r4], #2
 8016738:	4617      	mov	r7, r2
 801673a:	e7f3      	b.n	8016724 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801673c:	9901      	ldr	r1, [sp, #4]
 801673e:	29ff      	cmp	r1, #255	@ 0xff
 8016740:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016744:	b2b2      	uxth	r2, r6
 8016746:	d044      	beq.n	80167d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8016748:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801674c:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8016750:	ea4f 2922 	mov.w	r9, r2, asr #8
 8016754:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8016758:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801675c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016760:	4608      	mov	r0, r1
 8016762:	fb09 f901 	mul.w	r9, r9, r1
 8016766:	fb0e fe01 	mul.w	lr, lr, r1
 801676a:	00d1      	lsls	r1, r2, #3
 801676c:	b2c9      	uxtb	r1, r1
 801676e:	4341      	muls	r1, r0
 8016770:	429c      	cmp	r4, r3
 8016772:	f4bf af61 	bcs.w	8016638 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016776:	8822      	ldrh	r2, [r4, #0]
 8016778:	1210      	asrs	r0, r2, #8
 801677a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801677e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016782:	00d2      	lsls	r2, r2, #3
 8016784:	fb00 900a 	mla	r0, r0, sl, r9
 8016788:	b2d2      	uxtb	r2, r2
 801678a:	b280      	uxth	r0, r0
 801678c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016790:	fb02 120a 	mla	r2, r2, sl, r1
 8016794:	b292      	uxth	r2, r2
 8016796:	f100 0b01 	add.w	fp, r0, #1
 801679a:	fb0c ec0a 	mla	ip, ip, sl, lr
 801679e:	fa1f fc8c 	uxth.w	ip, ip
 80167a2:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80167a6:	1c50      	adds	r0, r2, #1
 80167a8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80167ac:	f10c 0201 	add.w	r2, ip, #1
 80167b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80167b4:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 80167b8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80167bc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80167c0:	ea40 0b0b 	orr.w	fp, r0, fp
 80167c4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80167c8:	ea4b 0b0c 	orr.w	fp, fp, ip
 80167cc:	f824 bb02 	strh.w	fp, [r4], #2
 80167d0:	e7ce      	b.n	8016770 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 80167d2:	429c      	cmp	r4, r3
 80167d4:	f4bf af30 	bcs.w	8016638 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80167d8:	f824 2b02 	strh.w	r2, [r4], #2
 80167dc:	e7f9      	b.n	80167d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80167de:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80167e2:	4657      	mov	r7, sl
 80167e4:	464d      	mov	r5, r9
 80167e6:	e727      	b.n	8016638 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80167e8:	2300      	movs	r3, #0
 80167ea:	e716      	b.n	801661a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80167ec:	44bb      	add	fp, r7
 80167ee:	4657      	mov	r7, sl
 80167f0:	e724      	b.n	801663c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80167f2:	bf00      	nop
 80167f4:	20013ff8 	.word	0x20013ff8
 80167f8:	20013ff0 	.word	0x20013ff0
 80167fc:	20000280 	.word	0x20000280
 8016800:	2a01      	cmp	r2, #1
 8016802:	d12a      	bne.n	801685a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8016804:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8016808:	f003 0203 	and.w	r2, r3, #3
 801680c:	3902      	subs	r1, #2
 801680e:	4411      	add	r1, r2
 8016810:	f001 011f 	and.w	r1, r1, #31
 8016814:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8016818:	f361 0604 	bfi	r6, r1, #0, #5
 801681c:	3802      	subs	r0, #2
 801681e:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 8016822:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016826:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801682a:	f360 164a 	bfi	r6, r0, #5, #6
 801682e:	3b02      	subs	r3, #2
 8016830:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8016834:	f002 031f 	and.w	r3, r2, #31
 8016838:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801683c:	2203      	movs	r2, #3
 801683e:	f363 26cf 	bfi	r6, r3, #11, #5
 8016842:	fb12 0303 	smlabb	r3, r2, r3, r0
 8016846:	2207      	movs	r2, #7
 8016848:	fb12 3301 	smlabb	r3, r2, r1, r3
 801684c:	9a03      	ldr	r2, [sp, #12]
 801684e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016852:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016856:	809e      	strh	r6, [r3, #4]
 8016858:	e701      	b.n	801665e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801685a:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801685e:	45a8      	cmp	r8, r5
 8016860:	4647      	mov	r7, r8
 8016862:	bfa8      	it	ge
 8016864:	462f      	movge	r7, r5
 8016866:	2a02      	cmp	r2, #2
 8016868:	d154      	bne.n	8016914 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801686a:	9b01      	ldr	r3, [sp, #4]
 801686c:	2bff      	cmp	r3, #255	@ 0xff
 801686e:	d01a      	beq.n	80168a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016870:	eb0b 0307 	add.w	r3, fp, r7
 8016874:	2b40      	cmp	r3, #64	@ 0x40
 8016876:	dd16      	ble.n	80168a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016878:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801687c:	4649      	mov	r1, r9
 801687e:	9800      	ldr	r0, [sp, #0]
 8016880:	f7ea fb66 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016884:	465a      	mov	r2, fp
 8016886:	9b01      	ldr	r3, [sp, #4]
 8016888:	9900      	ldr	r1, [sp, #0]
 801688a:	4620      	mov	r0, r4
 801688c:	f7ea fb8a 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016890:	9b00      	ldr	r3, [sp, #0]
 8016892:	461a      	mov	r2, r3
 8016894:	4b6c      	ldr	r3, [pc, #432]	@ (8016a48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016896:	429a      	cmp	r2, r3
 8016898:	bf0c      	ite	eq
 801689a:	4b6c      	ldreq	r3, [pc, #432]	@ (8016a4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801689c:	4b6a      	ldrne	r3, [pc, #424]	@ (8016a48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801689e:	9300      	str	r3, [sp, #0]
 80168a0:	444c      	add	r4, r9
 80168a2:	f04f 0b00 	mov.w	fp, #0
 80168a6:	4652      	mov	r2, sl
 80168a8:	2100      	movs	r1, #0
 80168aa:	42a9      	cmp	r1, r5
 80168ac:	da2c      	bge.n	8016908 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 80168ae:	4694      	mov	ip, r2
 80168b0:	f04f 0903 	mov.w	r9, #3
 80168b4:	f81c 3b02 	ldrb.w	r3, [ip], #2
 80168b8:	7852      	ldrb	r2, [r2, #1]
 80168ba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80168be:	f3c3 1045 	ubfx	r0, r3, #5, #6
 80168c2:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 80168c6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80168ca:	f003 021f 	and.w	r2, r3, #31
 80168ce:	fb19 000e 	smlabb	r0, r9, lr, r0
 80168d2:	f04f 0e07 	mov.w	lr, #7
 80168d6:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80168da:	9a03      	ldr	r2, [sp, #12]
 80168dc:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80168e0:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80168e4:	42b9      	cmp	r1, r7
 80168e6:	461e      	mov	r6, r3
 80168e8:	8083      	strh	r3, [r0, #4]
 80168ea:	da0a      	bge.n	8016902 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80168ec:	9a01      	ldr	r2, [sp, #4]
 80168ee:	2aff      	cmp	r2, #255	@ 0xff
 80168f0:	bf15      	itete	ne
 80168f2:	9a00      	ldrne	r2, [sp, #0]
 80168f4:	8023      	strheq	r3, [r4, #0]
 80168f6:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80168fa:	3402      	addeq	r4, #2
 80168fc:	bf18      	it	ne
 80168fe:	f10b 0b01 	addne.w	fp, fp, #1
 8016902:	3101      	adds	r1, #1
 8016904:	4662      	mov	r2, ip
 8016906:	e7d0      	b.n	80168aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8016908:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801690c:	eba8 0807 	sub.w	r8, r8, r7
 8016910:	1bed      	subs	r5, r5, r7
 8016912:	e76c      	b.n	80167ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016914:	9b01      	ldr	r3, [sp, #4]
 8016916:	2bff      	cmp	r3, #255	@ 0xff
 8016918:	eba8 0807 	sub.w	r8, r8, r7
 801691c:	eba5 0507 	sub.w	r5, r5, r7
 8016920:	fa1f f986 	uxth.w	r9, r6
 8016924:	d027      	beq.n	8016976 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 8016926:	eb0b 0307 	add.w	r3, fp, r7
 801692a:	2b40      	cmp	r3, #64	@ 0x40
 801692c:	dd18      	ble.n	8016960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801692e:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8016932:	4619      	mov	r1, r3
 8016934:	9800      	ldr	r0, [sp, #0]
 8016936:	930c      	str	r3, [sp, #48]	@ 0x30
 8016938:	f7ea fb0a 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 801693c:	465a      	mov	r2, fp
 801693e:	9b01      	ldr	r3, [sp, #4]
 8016940:	9900      	ldr	r1, [sp, #0]
 8016942:	4620      	mov	r0, r4
 8016944:	f7ea fb2e 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016948:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801694a:	441c      	add	r4, r3
 801694c:	9b00      	ldr	r3, [sp, #0]
 801694e:	461a      	mov	r2, r3
 8016950:	4b3d      	ldr	r3, [pc, #244]	@ (8016a48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016952:	429a      	cmp	r2, r3
 8016954:	bf0c      	ite	eq
 8016956:	4b3d      	ldreq	r3, [pc, #244]	@ (8016a4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016958:	4b3b      	ldrne	r3, [pc, #236]	@ (8016a48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801695a:	9300      	str	r3, [sp, #0]
 801695c:	f04f 0b00 	mov.w	fp, #0
 8016960:	9b00      	ldr	r3, [sp, #0]
 8016962:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8016966:	463b      	mov	r3, r7
 8016968:	2b00      	cmp	r3, #0
 801696a:	f43f af3f 	beq.w	80167ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801696e:	f822 9b02 	strh.w	r9, [r2], #2
 8016972:	3b01      	subs	r3, #1
 8016974:	e7f8      	b.n	8016968 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 8016976:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801697a:	42a7      	cmp	r7, r4
 801697c:	f67f af37 	bls.w	80167ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016980:	f824 9b02 	strh.w	r9, [r4], #2
 8016984:	e7f9      	b.n	801697a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8016986:	f1bb 0f00 	cmp.w	fp, #0
 801698a:	d00c      	beq.n	80169a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801698c:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8016990:	4641      	mov	r1, r8
 8016992:	9800      	ldr	r0, [sp, #0]
 8016994:	f7ea fadc 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016998:	4620      	mov	r0, r4
 801699a:	9b01      	ldr	r3, [sp, #4]
 801699c:	9900      	ldr	r1, [sp, #0]
 801699e:	465a      	mov	r2, fp
 80169a0:	f7ea fb00 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80169a4:	4444      	add	r4, r8
 80169a6:	4b2a      	ldr	r3, [pc, #168]	@ (8016a50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 80169a8:	9a02      	ldr	r2, [sp, #8]
 80169aa:	881b      	ldrh	r3, [r3, #0]
 80169ac:	1a9b      	subs	r3, r3, r2
 80169ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80169b2:	9b06      	ldr	r3, [sp, #24]
 80169b4:	3301      	adds	r3, #1
 80169b6:	9306      	str	r3, [sp, #24]
 80169b8:	9a06      	ldr	r2, [sp, #24]
 80169ba:	9b04      	ldr	r3, [sp, #16]
 80169bc:	4293      	cmp	r3, r2
 80169be:	d120      	bne.n	8016a02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 80169c0:	9b05      	ldr	r3, [sp, #20]
 80169c2:	9a05      	ldr	r2, [sp, #20]
 80169c4:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 80169c8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80169cc:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80169ce:	f103 0801 	add.w	r8, r3, #1
 80169d2:	9b08      	ldr	r3, [sp, #32]
 80169d4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80169d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80169da:	ba3f      	rev	r7, r7
 80169dc:	2280      	movs	r2, #128	@ 0x80
 80169de:	2100      	movs	r1, #0
 80169e0:	441f      	add	r7, r3
 80169e2:	eba9 0905 	sub.w	r9, r9, r5
 80169e6:	f00c f9d6 	bl	8022d96 <memset>
 80169ea:	2300      	movs	r3, #0
 80169ec:	fa1f f989 	uxth.w	r9, r9
 80169f0:	f04f 0600 	mov.w	r6, #0
 80169f4:	f8cd 8014 	str.w	r8, [sp, #20]
 80169f8:	9306      	str	r3, [sp, #24]
 80169fa:	f7ea fa9f 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 80169fe:	46ba      	mov	sl, r7
 8016a00:	e58a      	b.n	8016518 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8016a02:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8016a06:	9b02      	ldr	r3, [sp, #8]
 8016a08:	eba9 0903 	sub.w	r9, r9, r3
 8016a0c:	eba9 0505 	sub.w	r5, r9, r5
 8016a10:	fa1f f985 	uxth.w	r9, r5
 8016a14:	e7f1      	b.n	80169fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8016a16:	4b0f      	ldr	r3, [pc, #60]	@ (8016a54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8016a18:	6818      	ldr	r0, [r3, #0]
 8016a1a:	6803      	ldr	r3, [r0, #0]
 8016a1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016a1e:	4798      	blx	r3
 8016a20:	b013      	add	sp, #76	@ 0x4c
 8016a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a26:	9b02      	ldr	r3, [sp, #8]
 8016a28:	9a02      	ldr	r2, [sp, #8]
 8016a2a:	42ab      	cmp	r3, r5
 8016a2c:	bfa8      	it	ge
 8016a2e:	462b      	movge	r3, r5
 8016a30:	eba2 0803 	sub.w	r8, r2, r3
 8016a34:	1aed      	subs	r5, r5, r3
 8016a36:	e626      	b.n	8016686 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8016a38:	f108 38ff 	add.w	r8, r8, #4294967295
 8016a3c:	fa1f f986 	uxth.w	r9, r6
 8016a40:	2500      	movs	r5, #0
 8016a42:	2701      	movs	r7, #1
 8016a44:	e76f      	b.n	8016926 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8016a46:	bf00      	nop
 8016a48:	20000280 	.word	0x20000280
 8016a4c:	20000380 	.word	0x20000380
 8016a50:	20013ff0 	.word	0x20013ff0
 8016a54:	20013ff8 	.word	0x20013ff8

08016a58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a5c:	b08f      	sub	sp, #60	@ 0x3c
 8016a5e:	461c      	mov	r4, r3
 8016a60:	9203      	str	r2, [sp, #12]
 8016a62:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016a66:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016a68:	9202      	str	r2, [sp, #8]
 8016a6a:	460f      	mov	r7, r1
 8016a6c:	2a00      	cmp	r2, #0
 8016a6e:	f000 8128 	beq.w	8016cc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016a72:	6820      	ldr	r0, [r4, #0]
 8016a74:	6861      	ldr	r1, [r4, #4]
 8016a76:	aa0a      	add	r2, sp, #40	@ 0x28
 8016a78:	c203      	stmia	r2!, {r0, r1}
 8016a7a:	6818      	ldr	r0, [r3, #0]
 8016a7c:	6859      	ldr	r1, [r3, #4]
 8016a7e:	aa0c      	add	r2, sp, #48	@ 0x30
 8016a80:	c203      	stmia	r2!, {r0, r1}
 8016a82:	a80a      	add	r0, sp, #40	@ 0x28
 8016a84:	f7f8 fbe0 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a88:	4621      	mov	r1, r4
 8016a8a:	a80c      	add	r0, sp, #48	@ 0x30
 8016a8c:	f7f8 fc04 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a90:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016a94:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016a98:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016a9c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016aa0:	bfde      	ittt	le
 8016aa2:	b2b3      	uxthle	r3, r6
 8016aa4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016aa8:	fb92 f3f3 	sdivle	r3, r2, r3
 8016aac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016ab0:	bfc8      	it	gt
 8016ab2:	2301      	movgt	r3, #1
 8016ab4:	fb92 f1f3 	sdiv	r1, r2, r3
 8016ab8:	fa1f fc81 	uxth.w	ip, r1
 8016abc:	fb0c 2413 	mls	r4, ip, r3, r2
 8016ac0:	fb14 f406 	smulbb	r4, r4, r6
 8016ac4:	441d      	add	r5, r3
 8016ac6:	4404      	add	r4, r0
 8016ac8:	4661      	mov	r1, ip
 8016aca:	3d01      	subs	r5, #1
 8016acc:	b2a4      	uxth	r4, r4
 8016ace:	fb95 f5f3 	sdiv	r5, r5, r3
 8016ad2:	b121      	cbz	r1, 8016ade <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8016ad4:	9b03      	ldr	r3, [sp, #12]
 8016ad6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016ada:	ba1b      	rev	r3, r3
 8016adc:	441f      	add	r7, r3
 8016ade:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016ae2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016ae6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016aea:	4418      	add	r0, r3
 8016aec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016af0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016af4:	441a      	add	r2, r3
 8016af6:	4b74      	ldr	r3, [pc, #464]	@ (8016cc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016af8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016afc:	6818      	ldr	r0, [r3, #0]
 8016afe:	6803      	ldr	r3, [r0, #0]
 8016b00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016b02:	4798      	blx	r3
 8016b04:	4a71      	ldr	r2, [pc, #452]	@ (8016ccc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016b06:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016b0a:	8813      	ldrh	r3, [r2, #0]
 8016b0c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016b10:	9209      	str	r2, [sp, #36]	@ 0x24
 8016b12:	fb03 c101 	mla	r1, r3, r1, ip
 8016b16:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016b1a:	4373      	muls	r3, r6
 8016b1c:	b2ad      	uxth	r5, r5
 8016b1e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016b22:	00ad      	lsls	r5, r5, #2
 8016b24:	2c00      	cmp	r4, #0
 8016b26:	9304      	str	r3, [sp, #16]
 8016b28:	f105 0304 	add.w	r3, r5, #4
 8016b2c:	9305      	str	r3, [sp, #20]
 8016b2e:	bf0c      	ite	eq
 8016b30:	46c8      	moveq	r8, r9
 8016b32:	f04f 0800 	movne.w	r8, #0
 8016b36:	2300      	movs	r3, #0
 8016b38:	fa1f f888 	uxth.w	r8, r8
 8016b3c:	9301      	str	r3, [sp, #4]
 8016b3e:	9a04      	ldr	r2, [sp, #16]
 8016b40:	4282      	cmp	r2, r0
 8016b42:	f240 80b9 	bls.w	8016cb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8016b46:	b95b      	cbnz	r3, 8016b60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8016b48:	783a      	ldrb	r2, [r7, #0]
 8016b4a:	0993      	lsrs	r3, r2, #6
 8016b4c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016b50:	9201      	str	r2, [sp, #4]
 8016b52:	1e5a      	subs	r2, r3, #1
 8016b54:	2a02      	cmp	r2, #2
 8016b56:	bf8d      	iteet	hi
 8016b58:	787b      	ldrbhi	r3, [r7, #1]
 8016b5a:	3701      	addls	r7, #1
 8016b5c:	b29b      	uxthls	r3, r3
 8016b5e:	3702      	addhi	r7, #2
 8016b60:	b184      	cbz	r4, 8016b84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8016b62:	429c      	cmp	r4, r3
 8016b64:	bf95      	itete	ls
 8016b66:	1b1c      	subls	r4, r3, r4
 8016b68:	1ae4      	subhi	r4, r4, r3
 8016b6a:	fa1f fa84 	uxthls.w	sl, r4
 8016b6e:	b2a4      	uxthhi	r4, r4
 8016b70:	bf87      	ittee	hi
 8016b72:	46c4      	movhi	ip, r8
 8016b74:	f04f 0a00 	movhi.w	sl, #0
 8016b78:	fa1f fc89 	uxthls.w	ip, r9
 8016b7c:	2400      	movls	r4, #0
 8016b7e:	4653      	mov	r3, sl
 8016b80:	46e0      	mov	r8, ip
 8016b82:	e7dc      	b.n	8016b3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8016b84:	2204      	movs	r2, #4
 8016b86:	4615      	mov	r5, r2
 8016b88:	9905      	ldr	r1, [sp, #20]
 8016b8a:	9a01      	ldr	r2, [sp, #4]
 8016b8c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016b90:	9903      	ldr	r1, [sp, #12]
 8016b92:	588a      	ldr	r2, [r1, r2]
 8016b94:	4543      	cmp	r3, r8
 8016b96:	bf27      	ittee	cs
 8016b98:	eba3 0a08 	subcs.w	sl, r3, r8
 8016b9c:	46c6      	movcs	lr, r8
 8016b9e:	eba8 0c03 	subcc.w	ip, r8, r3
 8016ba2:	469e      	movcc	lr, r3
 8016ba4:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016ba8:	bf27      	ittee	cs
 8016baa:	fa1f fa8a 	uxthcs.w	sl, sl
 8016bae:	46a4      	movcs	ip, r4
 8016bb0:	fa1f fc8c 	uxthcc.w	ip, ip
 8016bb4:	46a2      	movcc	sl, r4
 8016bb6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016bba:	2900      	cmp	r1, #0
 8016bbc:	d066      	beq.n	8016c8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016bbe:	29ff      	cmp	r1, #255	@ 0xff
 8016bc0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016bc4:	d114      	bne.n	8016bf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016bc6:	9d02      	ldr	r5, [sp, #8]
 8016bc8:	2dff      	cmp	r5, #255	@ 0xff
 8016bca:	d111      	bne.n	8016bf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016bcc:	0951      	lsrs	r1, r2, #5
 8016bce:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016bd2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016bd6:	f026 0607 	bic.w	r6, r6, #7
 8016bda:	430e      	orrs	r6, r1
 8016bdc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016be0:	4316      	orrs	r6, r2
 8016be2:	b2b6      	uxth	r6, r6
 8016be4:	4486      	add	lr, r0
 8016be6:	4586      	cmp	lr, r0
 8016be8:	d051      	beq.n	8016c8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016bea:	f820 6b02 	strh.w	r6, [r0], #2
 8016bee:	e7fa      	b.n	8016be6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016bf0:	9d02      	ldr	r5, [sp, #8]
 8016bf2:	4369      	muls	r1, r5
 8016bf4:	1c4d      	adds	r5, r1, #1
 8016bf6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016bfa:	122d      	asrs	r5, r5, #8
 8016bfc:	ea6f 0b05 	mvn.w	fp, r5
 8016c00:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016c04:	b2ad      	uxth	r5, r5
 8016c06:	b2f6      	uxtb	r6, r6
 8016c08:	b2d2      	uxtb	r2, r2
 8016c0a:	fb11 f105 	smulbb	r1, r1, r5
 8016c0e:	fb16 f605 	smulbb	r6, r6, r5
 8016c12:	fb12 f205 	smulbb	r2, r2, r5
 8016c16:	b289      	uxth	r1, r1
 8016c18:	b2b6      	uxth	r6, r6
 8016c1a:	b292      	uxth	r2, r2
 8016c1c:	9106      	str	r1, [sp, #24]
 8016c1e:	9607      	str	r6, [sp, #28]
 8016c20:	9208      	str	r2, [sp, #32]
 8016c22:	4486      	add	lr, r0
 8016c24:	fa5f fb8b 	uxtb.w	fp, fp
 8016c28:	4586      	cmp	lr, r0
 8016c2a:	d030      	beq.n	8016c8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016c2c:	8802      	ldrh	r2, [r0, #0]
 8016c2e:	9906      	ldr	r1, [sp, #24]
 8016c30:	1216      	asrs	r6, r2, #8
 8016c32:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016c36:	10d5      	asrs	r5, r2, #3
 8016c38:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016c3c:	fb06 160b 	mla	r6, r6, fp, r1
 8016c40:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016c44:	9907      	ldr	r1, [sp, #28]
 8016c46:	00d2      	lsls	r2, r2, #3
 8016c48:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016c4c:	fb05 150b 	mla	r5, r5, fp, r1
 8016c50:	b2d2      	uxtb	r2, r2
 8016c52:	9908      	ldr	r1, [sp, #32]
 8016c54:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016c58:	b2b6      	uxth	r6, r6
 8016c5a:	fb02 120b 	mla	r2, r2, fp, r1
 8016c5e:	b292      	uxth	r2, r2
 8016c60:	1c71      	adds	r1, r6, #1
 8016c62:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016c66:	1c51      	adds	r1, r2, #1
 8016c68:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016c6c:	b2ad      	uxth	r5, r5
 8016c6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c72:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016c76:	4316      	orrs	r6, r2
 8016c78:	1c6a      	adds	r2, r5, #1
 8016c7a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016c7e:	096d      	lsrs	r5, r5, #5
 8016c80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016c84:	432e      	orrs	r6, r5
 8016c86:	f820 6b02 	strh.w	r6, [r0], #2
 8016c8a:	e7cd      	b.n	8016c28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8016c8c:	4470      	add	r0, lr
 8016c8e:	4543      	cmp	r3, r8
 8016c90:	f4ff af75 	bcc.w	8016b7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016c94:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016c98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c9a:	fa1f fc89 	uxth.w	ip, r9
 8016c9e:	eba4 040c 	sub.w	r4, r4, ip
 8016ca2:	881b      	ldrh	r3, [r3, #0]
 8016ca4:	b2a4      	uxth	r4, r4
 8016ca6:	2c00      	cmp	r4, #0
 8016ca8:	eba3 0309 	sub.w	r3, r3, r9
 8016cac:	bf18      	it	ne
 8016cae:	f04f 0c00 	movne.w	ip, #0
 8016cb2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016cb6:	e762      	b.n	8016b7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016cb8:	4b03      	ldr	r3, [pc, #12]	@ (8016cc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016cba:	6818      	ldr	r0, [r3, #0]
 8016cbc:	6803      	ldr	r3, [r0, #0]
 8016cbe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016cc0:	4798      	blx	r3
 8016cc2:	b00f      	add	sp, #60	@ 0x3c
 8016cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016cc8:	20013ff8 	.word	0x20013ff8
 8016ccc:	20013ff0 	.word	0x20013ff0

08016cd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cd4:	b093      	sub	sp, #76	@ 0x4c
 8016cd6:	461c      	mov	r4, r3
 8016cd8:	9205      	str	r2, [sp, #20]
 8016cda:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016cde:	9101      	str	r1, [sp, #4]
 8016ce0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016ce2:	9202      	str	r2, [sp, #8]
 8016ce4:	2a00      	cmp	r2, #0
 8016ce6:	f000 812c 	beq.w	8016f42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016cea:	6820      	ldr	r0, [r4, #0]
 8016cec:	6861      	ldr	r1, [r4, #4]
 8016cee:	aa0e      	add	r2, sp, #56	@ 0x38
 8016cf0:	c203      	stmia	r2!, {r0, r1}
 8016cf2:	6818      	ldr	r0, [r3, #0]
 8016cf4:	6859      	ldr	r1, [r3, #4]
 8016cf6:	aa10      	add	r2, sp, #64	@ 0x40
 8016cf8:	c203      	stmia	r2!, {r0, r1}
 8016cfa:	a80e      	add	r0, sp, #56	@ 0x38
 8016cfc:	f7f8 faa4 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d00:	4621      	mov	r1, r4
 8016d02:	a810      	add	r0, sp, #64	@ 0x40
 8016d04:	f7f8 fac8 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d08:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016d0c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016d10:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8016d14:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016d18:	bfde      	ittt	le
 8016d1a:	b2b3      	uxthle	r3, r6
 8016d1c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016d20:	fb92 f3f3 	sdivle	r3, r2, r3
 8016d24:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016d28:	bfc8      	it	gt
 8016d2a:	2301      	movgt	r3, #1
 8016d2c:	fb92 f1f3 	sdiv	r1, r2, r3
 8016d30:	fa1f fc81 	uxth.w	ip, r1
 8016d34:	fb0c 2413 	mls	r4, ip, r3, r2
 8016d38:	fb14 f406 	smulbb	r4, r4, r6
 8016d3c:	441d      	add	r5, r3
 8016d3e:	4404      	add	r4, r0
 8016d40:	4661      	mov	r1, ip
 8016d42:	3d01      	subs	r5, #1
 8016d44:	b2a4      	uxth	r4, r4
 8016d46:	fb95 f5f3 	sdiv	r5, r5, r3
 8016d4a:	b131      	cbz	r1, 8016d5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8016d4c:	9b05      	ldr	r3, [sp, #20]
 8016d4e:	9901      	ldr	r1, [sp, #4]
 8016d50:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016d54:	ba1b      	rev	r3, r3
 8016d56:	4419      	add	r1, r3
 8016d58:	9101      	str	r1, [sp, #4]
 8016d5a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016d5e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016d62:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016d66:	4418      	add	r0, r3
 8016d68:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8016d6c:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8016d70:	441a      	add	r2, r3
 8016d72:	4b75      	ldr	r3, [pc, #468]	@ (8016f48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016d74:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8016d78:	6818      	ldr	r0, [r3, #0]
 8016d7a:	6803      	ldr	r3, [r0, #0]
 8016d7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d7e:	4798      	blx	r3
 8016d80:	4972      	ldr	r1, [pc, #456]	@ (8016f4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016d82:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8016d86:	880b      	ldrh	r3, [r1, #0]
 8016d88:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016d8c:	910d      	str	r1, [sp, #52]	@ 0x34
 8016d8e:	fb03 c202 	mla	r2, r3, r2, ip
 8016d92:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016d96:	4373      	muls	r3, r6
 8016d98:	b2ad      	uxth	r5, r5
 8016d9a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016d9e:	00ad      	lsls	r5, r5, #2
 8016da0:	9308      	str	r3, [sp, #32]
 8016da2:	1d2b      	adds	r3, r5, #4
 8016da4:	9309      	str	r3, [sp, #36]	@ 0x24
 8016da6:	9b02      	ldr	r3, [sp, #8]
 8016da8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016dac:	9106      	str	r1, [sp, #24]
 8016dae:	43da      	mvns	r2, r3
 8016db0:	2c00      	cmp	r4, #0
 8016db2:	bf0c      	ite	eq
 8016db4:	46dc      	moveq	ip, fp
 8016db6:	f04f 0c00 	movne.w	ip, #0
 8016dba:	2300      	movs	r3, #0
 8016dbc:	b2d2      	uxtb	r2, r2
 8016dbe:	fa1f fc8c 	uxth.w	ip, ip
 8016dc2:	9303      	str	r3, [sp, #12]
 8016dc4:	9207      	str	r2, [sp, #28]
 8016dc6:	9a08      	ldr	r2, [sp, #32]
 8016dc8:	4282      	cmp	r2, r0
 8016dca:	f240 80b5 	bls.w	8016f38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8016dce:	b963      	cbnz	r3, 8016dea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016dd0:	9b01      	ldr	r3, [sp, #4]
 8016dd2:	781a      	ldrb	r2, [r3, #0]
 8016dd4:	0993      	lsrs	r3, r2, #6
 8016dd6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016dda:	9203      	str	r2, [sp, #12]
 8016ddc:	1e5a      	subs	r2, r3, #1
 8016dde:	2a02      	cmp	r2, #2
 8016de0:	d815      	bhi.n	8016e0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8016de2:	9a01      	ldr	r2, [sp, #4]
 8016de4:	3201      	adds	r2, #1
 8016de6:	9201      	str	r2, [sp, #4]
 8016de8:	b29b      	uxth	r3, r3
 8016dea:	b1b4      	cbz	r4, 8016e1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8016dec:	429c      	cmp	r4, r3
 8016dee:	bf95      	itete	ls
 8016df0:	1b1c      	subls	r4, r3, r4
 8016df2:	1ae4      	subhi	r4, r4, r3
 8016df4:	fa1f f884 	uxthls.w	r8, r4
 8016df8:	b2a4      	uxthhi	r4, r4
 8016dfa:	bf87      	ittee	hi
 8016dfc:	4666      	movhi	r6, ip
 8016dfe:	f04f 0800 	movhi.w	r8, #0
 8016e02:	fa1f f68b 	uxthls.w	r6, fp
 8016e06:	2400      	movls	r4, #0
 8016e08:	4643      	mov	r3, r8
 8016e0a:	46b4      	mov	ip, r6
 8016e0c:	e7db      	b.n	8016dc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8016e0e:	9a01      	ldr	r2, [sp, #4]
 8016e10:	9b01      	ldr	r3, [sp, #4]
 8016e12:	3202      	adds	r2, #2
 8016e14:	785b      	ldrb	r3, [r3, #1]
 8016e16:	9201      	str	r2, [sp, #4]
 8016e18:	e7e7      	b.n	8016dea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016e1a:	2203      	movs	r2, #3
 8016e1c:	4615      	mov	r5, r2
 8016e1e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016e20:	9a03      	ldr	r2, [sp, #12]
 8016e22:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016e26:	9905      	ldr	r1, [sp, #20]
 8016e28:	4563      	cmp	r3, ip
 8016e2a:	eb01 0502 	add.w	r5, r1, r2
 8016e2e:	9902      	ldr	r1, [sp, #8]
 8016e30:	bf29      	itett	cs
 8016e32:	eba3 080c 	subcs.w	r8, r3, ip
 8016e36:	ebac 0603 	subcc.w	r6, ip, r3
 8016e3a:	fa1f f888 	uxthcs.w	r8, r8
 8016e3e:	46e1      	movcs	r9, ip
 8016e40:	bf2f      	iteee	cs
 8016e42:	4626      	movcs	r6, r4
 8016e44:	b2b6      	uxthcc	r6, r6
 8016e46:	4699      	movcc	r9, r3
 8016e48:	46a0      	movcc	r8, r4
 8016e4a:	29ff      	cmp	r1, #255	@ 0xff
 8016e4c:	d04a      	beq.n	8016ee4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8016e4e:	9f06      	ldr	r7, [sp, #24]
 8016e50:	78a9      	ldrb	r1, [r5, #2]
 8016e52:	9004      	str	r0, [sp, #16]
 8016e54:	4379      	muls	r1, r7
 8016e56:	910a      	str	r1, [sp, #40]	@ 0x28
 8016e58:	7869      	ldrb	r1, [r5, #1]
 8016e5a:	4379      	muls	r1, r7
 8016e5c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016e5e:	9905      	ldr	r1, [sp, #20]
 8016e60:	5c8a      	ldrb	r2, [r1, r2]
 8016e62:	437a      	muls	r2, r7
 8016e64:	920c      	str	r2, [sp, #48]	@ 0x30
 8016e66:	46ca      	mov	sl, r9
 8016e68:	f1ba 0f00 	cmp.w	sl, #0
 8016e6c:	d03d      	beq.n	8016eea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8016e6e:	9a04      	ldr	r2, [sp, #16]
 8016e70:	9f07      	ldr	r7, [sp, #28]
 8016e72:	8812      	ldrh	r2, [r2, #0]
 8016e74:	1215      	asrs	r5, r2, #8
 8016e76:	46be      	mov	lr, r7
 8016e78:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016e7c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8016e7e:	10d1      	asrs	r1, r2, #3
 8016e80:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016e84:	fb05 750e 	mla	r5, r5, lr, r7
 8016e88:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016e8c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8016e8e:	00d2      	lsls	r2, r2, #3
 8016e90:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016e94:	fb01 710e 	mla	r1, r1, lr, r7
 8016e98:	b2d2      	uxtb	r2, r2
 8016e9a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016e9c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016ea0:	b2ad      	uxth	r5, r5
 8016ea2:	fb02 720e 	mla	r2, r2, lr, r7
 8016ea6:	b292      	uxth	r2, r2
 8016ea8:	f105 0e01 	add.w	lr, r5, #1
 8016eac:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016eb0:	f102 0e01 	add.w	lr, r2, #1
 8016eb4:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8016eb8:	b289      	uxth	r1, r1
 8016eba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016ebe:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016ec2:	4315      	orrs	r5, r2
 8016ec4:	1c4a      	adds	r2, r1, #1
 8016ec6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016eca:	0949      	lsrs	r1, r1, #5
 8016ecc:	9a04      	ldr	r2, [sp, #16]
 8016ece:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016ed2:	430d      	orrs	r5, r1
 8016ed4:	f822 5b02 	strh.w	r5, [r2], #2
 8016ed8:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016edc:	9204      	str	r2, [sp, #16]
 8016ede:	fa1f fa8a 	uxth.w	sl, sl
 8016ee2:	e7c1      	b.n	8016e68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8016ee4:	4649      	mov	r1, r9
 8016ee6:	4686      	mov	lr, r0
 8016ee8:	b999      	cbnz	r1, 8016f12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8016eea:	4563      	cmp	r3, ip
 8016eec:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016ef0:	d38a      	bcc.n	8016e08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016ef2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8016ef6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016ef8:	fa1f f68b 	uxth.w	r6, fp
 8016efc:	1ba4      	subs	r4, r4, r6
 8016efe:	881b      	ldrh	r3, [r3, #0]
 8016f00:	b2a4      	uxth	r4, r4
 8016f02:	2c00      	cmp	r4, #0
 8016f04:	eba3 030b 	sub.w	r3, r3, fp
 8016f08:	bf18      	it	ne
 8016f0a:	2600      	movne	r6, #0
 8016f0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f10:	e77a      	b.n	8016e08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016f12:	78aa      	ldrb	r2, [r5, #2]
 8016f14:	4f0e      	ldr	r7, [pc, #56]	@ (8016f50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8016f16:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8016f1a:	786a      	ldrb	r2, [r5, #1]
 8016f1c:	00d2      	lsls	r2, r2, #3
 8016f1e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016f22:	ea4a 0202 	orr.w	r2, sl, r2
 8016f26:	f895 a000 	ldrb.w	sl, [r5]
 8016f2a:	3901      	subs	r1, #1
 8016f2c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8016f30:	f82e 2b02 	strh.w	r2, [lr], #2
 8016f34:	b289      	uxth	r1, r1
 8016f36:	e7d7      	b.n	8016ee8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8016f38:	4b03      	ldr	r3, [pc, #12]	@ (8016f48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016f3a:	6818      	ldr	r0, [r3, #0]
 8016f3c:	6803      	ldr	r3, [r0, #0]
 8016f3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016f40:	4798      	blx	r3
 8016f42:	b013      	add	sp, #76	@ 0x4c
 8016f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f48:	20013ff8 	.word	0x20013ff8
 8016f4c:	20013ff0 	.word	0x20013ff0
 8016f50:	fffff800 	.word	0xfffff800

08016f54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f58:	b09d      	sub	sp, #116	@ 0x74
 8016f5a:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8016f5e:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8016f62:	920e      	str	r2, [sp, #56]	@ 0x38
 8016f64:	461c      	mov	r4, r3
 8016f66:	4683      	mov	fp, r0
 8016f68:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016f6a:	2a00      	cmp	r2, #0
 8016f6c:	f000 81e0 	beq.w	8017330 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8016f70:	6820      	ldr	r0, [r4, #0]
 8016f72:	6861      	ldr	r1, [r4, #4]
 8016f74:	aa18      	add	r2, sp, #96	@ 0x60
 8016f76:	c203      	stmia	r2!, {r0, r1}
 8016f78:	6818      	ldr	r0, [r3, #0]
 8016f7a:	6859      	ldr	r1, [r3, #4]
 8016f7c:	aa1a      	add	r2, sp, #104	@ 0x68
 8016f7e:	c203      	stmia	r2!, {r0, r1}
 8016f80:	a818      	add	r0, sp, #96	@ 0x60
 8016f82:	f7f8 f961 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f86:	4621      	mov	r1, r4
 8016f88:	a81a      	add	r0, sp, #104	@ 0x68
 8016f8a:	f7f8 f985 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f8e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8016f92:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8016f96:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8016f9a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016f9e:	bfd7      	itett	le
 8016fa0:	b29a      	uxthle	r2, r3
 8016fa2:	2201      	movgt	r2, #1
 8016fa4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016fa8:	fb91 f2f2 	sdivle	r2, r1, r2
 8016fac:	9202      	str	r2, [sp, #8]
 8016fae:	9802      	ldr	r0, [sp, #8]
 8016fb0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8016fb4:	fb92 f0f0 	sdiv	r0, r2, r0
 8016fb8:	b280      	uxth	r0, r0
 8016fba:	900f      	str	r0, [sp, #60]	@ 0x3c
 8016fbc:	9902      	ldr	r1, [sp, #8]
 8016fbe:	9802      	ldr	r0, [sp, #8]
 8016fc0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8016fc2:	440c      	add	r4, r1
 8016fc4:	fb05 2510 	mls	r5, r5, r0, r2
 8016fc8:	fb15 f503 	smulbb	r5, r5, r3
 8016fcc:	3c01      	subs	r4, #1
 8016fce:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8016fd2:	fb94 f4f1 	sdiv	r4, r4, r1
 8016fd6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8016fda:	440d      	add	r5, r1
 8016fdc:	4419      	add	r1, r3
 8016fde:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8016fe2:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8016fe6:	441a      	add	r2, r3
 8016fe8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016fec:	9306      	str	r3, [sp, #24]
 8016fee:	4bb3      	ldr	r3, [pc, #716]	@ (80172bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8016ff0:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8016ff4:	6818      	ldr	r0, [r3, #0]
 8016ff6:	6803      	ldr	r3, [r0, #0]
 8016ff8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016ffa:	4798      	blx	r3
 8016ffc:	4bb0      	ldr	r3, [pc, #704]	@ (80172c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8016ffe:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8017002:	881a      	ldrh	r2, [r3, #0]
 8017004:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8017008:	9316      	str	r3, [sp, #88]	@ 0x58
 801700a:	fb02 7101 	mla	r1, r2, r1, r7
 801700e:	3401      	adds	r4, #1
 8017010:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8017014:	b2a4      	uxth	r4, r4
 8017016:	4356      	muls	r6, r2
 8017018:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801701c:	00a4      	lsls	r4, r4, #2
 801701e:	920a      	str	r2, [sp, #40]	@ 0x28
 8017020:	1d22      	adds	r2, r4, #4
 8017022:	b2ad      	uxth	r5, r5
 8017024:	9213      	str	r2, [sp, #76]	@ 0x4c
 8017026:	4ba7      	ldr	r3, [pc, #668]	@ (80172c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8017028:	9a06      	ldr	r2, [sp, #24]
 801702a:	2d00      	cmp	r5, #0
 801702c:	bf0c      	ite	eq
 801702e:	4611      	moveq	r1, r2
 8017030:	2100      	movne	r1, #0
 8017032:	2200      	movs	r2, #0
 8017034:	eba3 030b 	sub.w	r3, r3, fp
 8017038:	b289      	uxth	r1, r1
 801703a:	920d      	str	r2, [sp, #52]	@ 0x34
 801703c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801703e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017040:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017042:	fa12 f383 	uxtah	r3, r2, r3
 8017046:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017048:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801704c:	3304      	adds	r3, #4
 801704e:	9308      	str	r3, [sp, #32]
 8017050:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017052:	4543      	cmp	r3, r8
 8017054:	f240 8167 	bls.w	8017326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017058:	9a02      	ldr	r2, [sp, #8]
 801705a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801705e:	fbb5 f3f3 	udiv	r3, r5, r3
 8017062:	1ad3      	subs	r3, r2, r3
 8017064:	b29b      	uxth	r3, r3
 8017066:	9314      	str	r3, [sp, #80]	@ 0x50
 8017068:	9b08      	ldr	r3, [sp, #32]
 801706a:	9808      	ldr	r0, [sp, #32]
 801706c:	785a      	ldrb	r2, [r3, #1]
 801706e:	789b      	ldrb	r3, [r3, #2]
 8017070:	7800      	ldrb	r0, [r0, #0]
 8017072:	9010      	str	r0, [sp, #64]	@ 0x40
 8017074:	021b      	lsls	r3, r3, #8
 8017076:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801707a:	9a08      	ldr	r2, [sp, #32]
 801707c:	78d2      	ldrb	r2, [r2, #3]
 801707e:	4313      	orrs	r3, r2
 8017080:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017082:	3001      	adds	r0, #1
 8017084:	441a      	add	r2, r3
 8017086:	9007      	str	r0, [sp, #28]
 8017088:	1c50      	adds	r0, r2, #1
 801708a:	9005      	str	r0, [sp, #20]
 801708c:	7852      	ldrb	r2, [r2, #1]
 801708e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017090:	0212      	lsls	r2, r2, #8
 8017092:	5cc3      	ldrb	r3, [r0, r3]
 8017094:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017098:	431a      	orrs	r2, r3
 801709a:	b293      	uxth	r3, r2
 801709c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801709e:	2300      	movs	r3, #0
 80170a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80170a2:	2301      	movs	r3, #1
 80170a4:	9301      	str	r3, [sp, #4]
 80170a6:	9304      	str	r3, [sp, #16]
 80170a8:	2300      	movs	r3, #0
 80170aa:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 80170ae:	9303      	str	r3, [sp, #12]
 80170b0:	f04f 0e01 	mov.w	lr, #1
 80170b4:	2d00      	cmp	r5, #0
 80170b6:	d07c      	beq.n	80171b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 80170b8:	45ae      	cmp	lr, r5
 80170ba:	d26b      	bcs.n	8017194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 80170bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80170be:	eba5 050e 	sub.w	r5, r5, lr
 80170c2:	4543      	cmp	r3, r8
 80170c4:	b2ad      	uxth	r5, r5
 80170c6:	460c      	mov	r4, r1
 80170c8:	d802      	bhi.n	80170d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 80170ca:	e070      	b.n	80171ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 80170cc:	2b00      	cmp	r3, #0
 80170ce:	d15c      	bne.n	801718a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80170d0:	9b05      	ldr	r3, [sp, #20]
 80170d2:	9a04      	ldr	r2, [sp, #16]
 80170d4:	785b      	ldrb	r3, [r3, #1]
 80170d6:	9904      	ldr	r1, [sp, #16]
 80170d8:	f1c2 0207 	rsb	r2, r2, #7
 80170dc:	4093      	lsls	r3, r2
 80170de:	005b      	lsls	r3, r3, #1
 80170e0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80170e4:	9b05      	ldr	r3, [sp, #20]
 80170e6:	781b      	ldrb	r3, [r3, #0]
 80170e8:	410b      	asrs	r3, r1
 80170ea:	3101      	adds	r1, #1
 80170ec:	b2c9      	uxtb	r1, r1
 80170ee:	2908      	cmp	r1, #8
 80170f0:	9104      	str	r1, [sp, #16]
 80170f2:	9905      	ldr	r1, [sp, #20]
 80170f4:	bf0a      	itet	eq
 80170f6:	3102      	addeq	r1, #2
 80170f8:	3101      	addne	r1, #1
 80170fa:	9105      	streq	r1, [sp, #20]
 80170fc:	b2db      	uxtb	r3, r3
 80170fe:	bf0a      	itet	eq
 8017100:	2100      	moveq	r1, #0
 8017102:	9105      	strne	r1, [sp, #20]
 8017104:	9104      	streq	r1, [sp, #16]
 8017106:	4313      	orrs	r3, r2
 8017108:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801710a:	b29a      	uxth	r2, r3
 801710c:	4291      	cmp	r1, r2
 801710e:	d30a      	bcc.n	8017126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017110:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8017114:	2301      	movs	r3, #1
 8017116:	9907      	ldr	r1, [sp, #28]
 8017118:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801711c:	d30f      	bcc.n	801713e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801711e:	2100      	movs	r1, #0
 8017120:	9301      	str	r3, [sp, #4]
 8017122:	9103      	str	r1, [sp, #12]
 8017124:	e032      	b.n	801718c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8017126:	9b07      	ldr	r3, [sp, #28]
 8017128:	429a      	cmp	r2, r3
 801712a:	d318      	bcc.n	801715e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801712c:	9b01      	ldr	r3, [sp, #4]
 801712e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8017132:	445b      	add	r3, fp
 8017134:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017138:	9b01      	ldr	r3, [sp, #4]
 801713a:	3301      	adds	r3, #1
 801713c:	b29b      	uxth	r3, r3
 801713e:	9907      	ldr	r1, [sp, #28]
 8017140:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8017144:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017148:	7108      	strb	r0, [r1, #4]
 801714a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801714c:	80c8      	strh	r0, [r1, #6]
 801714e:	9801      	ldr	r0, [sp, #4]
 8017150:	3001      	adds	r0, #1
 8017152:	7148      	strb	r0, [r1, #5]
 8017154:	9907      	ldr	r1, [sp, #28]
 8017156:	3101      	adds	r1, #1
 8017158:	b289      	uxth	r1, r1
 801715a:	9107      	str	r1, [sp, #28]
 801715c:	e7df      	b.n	801711e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801715e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8017162:	4611      	mov	r1, r2
 8017164:	795b      	ldrb	r3, [r3, #5]
 8017166:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801716a:	4458      	add	r0, fp
 801716c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801716e:	4406      	add	r6, r0
 8017170:	2e00      	cmp	r6, #0
 8017172:	dd06      	ble.n	8017182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8017174:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017178:	790e      	ldrb	r6, [r1, #4]
 801717a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801717e:	88c9      	ldrh	r1, [r1, #6]
 8017180:	e7f4      	b.n	801716c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017182:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8017186:	b29b      	uxth	r3, r3
 8017188:	e7c5      	b.n	8017116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801718a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801718c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801718e:	4621      	mov	r1, r4
 8017190:	469e      	mov	lr, r3
 8017192:	e78f      	b.n	80170b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017194:	9a03      	ldr	r2, [sp, #12]
 8017196:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801719a:	442a      	add	r2, r5
 801719c:	ebae 0305 	sub.w	r3, lr, r5
 80171a0:	b292      	uxth	r2, r2
 80171a2:	b29b      	uxth	r3, r3
 80171a4:	9203      	str	r2, [sp, #12]
 80171a6:	2500      	movs	r5, #0
 80171a8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80171aa:	4542      	cmp	r2, r8
 80171ac:	d88e      	bhi.n	80170cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 80171ae:	4621      	mov	r1, r4
 80171b0:	e74e      	b.n	8017050 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 80171b2:	458e      	cmp	lr, r1
 80171b4:	bf29      	itett	cs
 80171b6:	ebae 0301 	subcs.w	r3, lr, r1
 80171ba:	eba1 040e 	subcc.w	r4, r1, lr
 80171be:	b29b      	uxthcs	r3, r3
 80171c0:	910c      	strcs	r1, [sp, #48]	@ 0x30
 80171c2:	bf2f      	iteee	cs
 80171c4:	462c      	movcs	r4, r5
 80171c6:	b2a4      	uxthcc	r4, r4
 80171c8:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 80171cc:	462b      	movcc	r3, r5
 80171ce:	f04f 0900 	mov.w	r9, #0
 80171d2:	9a03      	ldr	r2, [sp, #12]
 80171d4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80171d6:	444a      	add	r2, r9
 80171d8:	4548      	cmp	r0, r9
 80171da:	b292      	uxth	r2, r2
 80171dc:	d074      	beq.n	80172c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 80171de:	445a      	add	r2, fp
 80171e0:	2004      	movs	r0, #4
 80171e2:	4605      	mov	r5, r0
 80171e4:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 80171e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80171ea:	fb15 0202 	smlabb	r2, r5, r2, r0
 80171ee:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80171f0:	5880      	ldr	r0, [r0, r2]
 80171f2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80171f6:	d014      	beq.n	8017222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80171f8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80171fc:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017200:	d112      	bne.n	8017228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017202:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017204:	2aff      	cmp	r2, #255	@ 0xff
 8017206:	d10f      	bne.n	8017228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017208:	0942      	lsrs	r2, r0, #5
 801720a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801720e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017212:	f025 0507 	bic.w	r5, r5, #7
 8017216:	4315      	orrs	r5, r2
 8017218:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801721c:	4305      	orrs	r5, r0
 801721e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8017222:	f109 0901 	add.w	r9, r9, #1
 8017226:	e7d4      	b.n	80171d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8017228:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801722c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017230:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8017234:	9215      	str	r2, [sp, #84]	@ 0x54
 8017236:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017238:	fb02 fa0a 	mul.w	sl, r2, sl
 801723c:	f10a 0201 	add.w	r2, sl, #1
 8017240:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8017244:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017248:	1212      	asrs	r2, r2, #8
 801724a:	fa1f fa82 	uxth.w	sl, r2
 801724e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8017252:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017256:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801725a:	43d2      	mvns	r2, r2
 801725c:	b2d2      	uxtb	r2, r2
 801725e:	fb16 f60a 	smulbb	r6, r6, sl
 8017262:	fa5f fc8c 	uxtb.w	ip, ip
 8017266:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801726a:	b2c0      	uxtb	r0, r0
 801726c:	fb07 6702 	mla	r7, r7, r2, r6
 8017270:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017274:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8017276:	fb10 f00a 	smulbb	r0, r0, sl
 801727a:	fb0c 0002 	mla	r0, ip, r2, r0
 801727e:	b2ed      	uxtb	r5, r5
 8017280:	b2bf      	uxth	r7, r7
 8017282:	fb15 f50a 	smulbb	r5, r5, sl
 8017286:	b280      	uxth	r0, r0
 8017288:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801728c:	fb06 5602 	mla	r6, r6, r2, r5
 8017290:	1c7a      	adds	r2, r7, #1
 8017292:	1c45      	adds	r5, r0, #1
 8017294:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017298:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801729c:	b2b6      	uxth	r6, r6
 801729e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80172a2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80172a6:	432f      	orrs	r7, r5
 80172a8:	1c75      	adds	r5, r6, #1
 80172aa:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80172ae:	096d      	lsrs	r5, r5, #5
 80172b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80172b4:	432f      	orrs	r7, r5
 80172b6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 80172ba:	e7b2      	b.n	8017222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80172bc:	20013ff8 	.word	0x20013ff8
 80172c0:	20013ff0 	.word	0x20013ff0
 80172c4:	fffff7fb 	.word	0xfffff7fb
 80172c8:	9203      	str	r2, [sp, #12]
 80172ca:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80172cc:	458e      	cmp	lr, r1
 80172ce:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80172d2:	f4ff af68 	bcc.w	80171a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 80172d6:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80172d8:	9906      	ldr	r1, [sp, #24]
 80172da:	8812      	ldrh	r2, [r2, #0]
 80172dc:	1a52      	subs	r2, r2, r1
 80172de:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80172e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80172e4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80172e6:	3201      	adds	r2, #1
 80172e8:	428a      	cmp	r2, r1
 80172ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80172ec:	d111      	bne.n	8017312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 80172ee:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 80172f2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 80172f6:	9b06      	ldr	r3, [sp, #24]
 80172f8:	eba5 0509 	sub.w	r5, r5, r9
 80172fc:	b2ad      	uxth	r5, r5
 80172fe:	2d00      	cmp	r5, #0
 8017300:	bf08      	it	eq
 8017302:	4619      	moveq	r1, r3
 8017304:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017306:	bf18      	it	ne
 8017308:	2100      	movne	r1, #0
 801730a:	3301      	adds	r3, #1
 801730c:	930d      	str	r3, [sp, #52]	@ 0x34
 801730e:	b289      	uxth	r1, r1
 8017310:	e695      	b.n	801703e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8017312:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017316:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801731a:	1b2d      	subs	r5, r5, r4
 801731c:	b2ad      	uxth	r5, r5
 801731e:	2d00      	cmp	r5, #0
 8017320:	bf18      	it	ne
 8017322:	2400      	movne	r4, #0
 8017324:	e740      	b.n	80171a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8017326:	4b04      	ldr	r3, [pc, #16]	@ (8017338 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8017328:	6818      	ldr	r0, [r3, #0]
 801732a:	6803      	ldr	r3, [r0, #0]
 801732c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801732e:	4798      	blx	r3
 8017330:	b01d      	add	sp, #116	@ 0x74
 8017332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017336:	bf00      	nop
 8017338:	20013ff8 	.word	0x20013ff8

0801733c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801733c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017340:	b09f      	sub	sp, #124	@ 0x7c
 8017342:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017346:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801734a:	920a      	str	r2, [sp, #40]	@ 0x28
 801734c:	461d      	mov	r5, r3
 801734e:	4604      	mov	r4, r0
 8017350:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017352:	2a00      	cmp	r2, #0
 8017354:	f000 81fa 	beq.w	801774c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8017358:	6828      	ldr	r0, [r5, #0]
 801735a:	6869      	ldr	r1, [r5, #4]
 801735c:	aa1a      	add	r2, sp, #104	@ 0x68
 801735e:	c203      	stmia	r2!, {r0, r1}
 8017360:	6818      	ldr	r0, [r3, #0]
 8017362:	6859      	ldr	r1, [r3, #4]
 8017364:	aa1c      	add	r2, sp, #112	@ 0x70
 8017366:	c203      	stmia	r2!, {r0, r1}
 8017368:	a81a      	add	r0, sp, #104	@ 0x68
 801736a:	f7f7 ff6d 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801736e:	4629      	mov	r1, r5
 8017370:	a81c      	add	r0, sp, #112	@ 0x70
 8017372:	f7f7 ff91 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017376:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801737a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801737e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017382:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017386:	bfd7      	itett	le
 8017388:	b29a      	uxthle	r2, r3
 801738a:	2201      	movgt	r2, #1
 801738c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017390:	fb91 f2f2 	sdivle	r2, r1, r2
 8017394:	9201      	str	r2, [sp, #4]
 8017396:	9801      	ldr	r0, [sp, #4]
 8017398:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801739c:	fb92 f0f0 	sdiv	r0, r2, r0
 80173a0:	b280      	uxth	r0, r0
 80173a2:	9010      	str	r0, [sp, #64]	@ 0x40
 80173a4:	9901      	ldr	r1, [sp, #4]
 80173a6:	9801      	ldr	r0, [sp, #4]
 80173a8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80173aa:	440e      	add	r6, r1
 80173ac:	fb05 2510 	mls	r5, r5, r0, r2
 80173b0:	fb15 f503 	smulbb	r5, r5, r3
 80173b4:	3e01      	subs	r6, #1
 80173b6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80173ba:	fb96 f6f1 	sdiv	r6, r6, r1
 80173be:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80173c2:	440d      	add	r5, r1
 80173c4:	4419      	add	r1, r3
 80173c6:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 80173ca:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80173ce:	441a      	add	r2, r3
 80173d0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 80173d4:	9304      	str	r3, [sp, #16]
 80173d6:	4b96      	ldr	r3, [pc, #600]	@ (8017630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80173d8:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80173dc:	6818      	ldr	r0, [r3, #0]
 80173de:	6803      	ldr	r3, [r0, #0]
 80173e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80173e2:	4798      	blx	r3
 80173e4:	4b93      	ldr	r3, [pc, #588]	@ (8017634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80173e6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80173ea:	881a      	ldrh	r2, [r3, #0]
 80173ec:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 80173f0:	9318      	str	r3, [sp, #96]	@ 0x60
 80173f2:	fb02 c101 	mla	r1, r2, r1, ip
 80173f6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80173fa:	4357      	muls	r7, r2
 80173fc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017400:	3601      	adds	r6, #1
 8017402:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017404:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017406:	4b8c      	ldr	r3, [pc, #560]	@ (8017638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017408:	b2b6      	uxth	r6, r6
 801740a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801740e:	1d32      	adds	r2, r6, #4
 8017410:	9206      	str	r2, [sp, #24]
 8017412:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017414:	43d2      	mvns	r2, r2
 8017416:	b2d2      	uxtb	r2, r2
 8017418:	b2ad      	uxth	r5, r5
 801741a:	9215      	str	r2, [sp, #84]	@ 0x54
 801741c:	9a04      	ldr	r2, [sp, #16]
 801741e:	2d00      	cmp	r5, #0
 8017420:	bf0c      	ite	eq
 8017422:	4611      	moveq	r1, r2
 8017424:	2100      	movne	r1, #0
 8017426:	2200      	movs	r2, #0
 8017428:	1b1b      	subs	r3, r3, r4
 801742a:	b289      	uxth	r1, r1
 801742c:	920d      	str	r2, [sp, #52]	@ 0x34
 801742e:	9319      	str	r3, [sp, #100]	@ 0x64
 8017430:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017432:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017434:	fa12 f383 	uxtah	r3, r2, r3
 8017438:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801743a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801743e:	3304      	adds	r3, #4
 8017440:	9307      	str	r3, [sp, #28]
 8017442:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017444:	455b      	cmp	r3, fp
 8017446:	f240 817c 	bls.w	8017742 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801744a:	9a01      	ldr	r2, [sp, #4]
 801744c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017450:	fbb5 f3f3 	udiv	r3, r5, r3
 8017454:	1ad3      	subs	r3, r2, r3
 8017456:	b29b      	uxth	r3, r3
 8017458:	9316      	str	r3, [sp, #88]	@ 0x58
 801745a:	9b07      	ldr	r3, [sp, #28]
 801745c:	9807      	ldr	r0, [sp, #28]
 801745e:	785a      	ldrb	r2, [r3, #1]
 8017460:	789b      	ldrb	r3, [r3, #2]
 8017462:	7800      	ldrb	r0, [r0, #0]
 8017464:	9011      	str	r0, [sp, #68]	@ 0x44
 8017466:	021b      	lsls	r3, r3, #8
 8017468:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801746c:	9a07      	ldr	r2, [sp, #28]
 801746e:	78d2      	ldrb	r2, [r2, #3]
 8017470:	4313      	orrs	r3, r2
 8017472:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017474:	3001      	adds	r0, #1
 8017476:	441a      	add	r2, r3
 8017478:	9005      	str	r0, [sp, #20]
 801747a:	1c50      	adds	r0, r2, #1
 801747c:	9003      	str	r0, [sp, #12]
 801747e:	7852      	ldrb	r2, [r2, #1]
 8017480:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017482:	0212      	lsls	r2, r2, #8
 8017484:	5cc3      	ldrb	r3, [r0, r3]
 8017486:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801748a:	431a      	orrs	r2, r3
 801748c:	b293      	uxth	r3, r2
 801748e:	930c      	str	r3, [sp, #48]	@ 0x30
 8017490:	2300      	movs	r3, #0
 8017492:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017496:	9308      	str	r3, [sp, #32]
 8017498:	461a      	mov	r2, r3
 801749a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801749e:	930e      	str	r3, [sp, #56]	@ 0x38
 80174a0:	f04f 0801 	mov.w	r8, #1
 80174a4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80174a8:	f8cd 8008 	str.w	r8, [sp, #8]
 80174ac:	46c4      	mov	ip, r8
 80174ae:	930f      	str	r3, [sp, #60]	@ 0x3c
 80174b0:	2d00      	cmp	r5, #0
 80174b2:	d07c      	beq.n	80175ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80174b4:	45ac      	cmp	ip, r5
 80174b6:	d26c      	bcs.n	8017592 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80174b8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80174ba:	eba5 050c 	sub.w	r5, r5, ip
 80174be:	455b      	cmp	r3, fp
 80174c0:	b2ad      	uxth	r5, r5
 80174c2:	4608      	mov	r0, r1
 80174c4:	d802      	bhi.n	80174cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80174c6:	e070      	b.n	80175aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80174c8:	2b00      	cmp	r3, #0
 80174ca:	d15c      	bne.n	8017586 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80174cc:	9b03      	ldr	r3, [sp, #12]
 80174ce:	9a02      	ldr	r2, [sp, #8]
 80174d0:	785b      	ldrb	r3, [r3, #1]
 80174d2:	9902      	ldr	r1, [sp, #8]
 80174d4:	f1c2 0207 	rsb	r2, r2, #7
 80174d8:	4093      	lsls	r3, r2
 80174da:	005b      	lsls	r3, r3, #1
 80174dc:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80174e0:	9b03      	ldr	r3, [sp, #12]
 80174e2:	781b      	ldrb	r3, [r3, #0]
 80174e4:	410b      	asrs	r3, r1
 80174e6:	3101      	adds	r1, #1
 80174e8:	b2c9      	uxtb	r1, r1
 80174ea:	2908      	cmp	r1, #8
 80174ec:	9102      	str	r1, [sp, #8]
 80174ee:	9903      	ldr	r1, [sp, #12]
 80174f0:	bf0a      	itet	eq
 80174f2:	3102      	addeq	r1, #2
 80174f4:	3101      	addne	r1, #1
 80174f6:	9103      	streq	r1, [sp, #12]
 80174f8:	b2db      	uxtb	r3, r3
 80174fa:	bf0a      	itet	eq
 80174fc:	2100      	moveq	r1, #0
 80174fe:	9103      	strne	r1, [sp, #12]
 8017500:	9102      	streq	r1, [sp, #8]
 8017502:	4313      	orrs	r3, r2
 8017504:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017506:	b29a      	uxth	r2, r3
 8017508:	4291      	cmp	r1, r2
 801750a:	d30a      	bcc.n	8017522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801750c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017510:	2301      	movs	r3, #1
 8017512:	9905      	ldr	r1, [sp, #20]
 8017514:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017518:	d30f      	bcc.n	801753a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801751a:	2100      	movs	r1, #0
 801751c:	4698      	mov	r8, r3
 801751e:	9100      	str	r1, [sp, #0]
 8017520:	e032      	b.n	8017588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8017522:	9b05      	ldr	r3, [sp, #20]
 8017524:	429a      	cmp	r2, r3
 8017526:	d318      	bcc.n	801755a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8017528:	eb04 0308 	add.w	r3, r4, r8
 801752c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8017530:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017534:	f108 0301 	add.w	r3, r8, #1
 8017538:	b29b      	uxth	r3, r3
 801753a:	9905      	ldr	r1, [sp, #20]
 801753c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017540:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017544:	710e      	strb	r6, [r1, #4]
 8017546:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017548:	80ce      	strh	r6, [r1, #6]
 801754a:	f108 0601 	add.w	r6, r8, #1
 801754e:	714e      	strb	r6, [r1, #5]
 8017550:	9905      	ldr	r1, [sp, #20]
 8017552:	3101      	adds	r1, #1
 8017554:	b289      	uxth	r1, r1
 8017556:	9105      	str	r1, [sp, #20]
 8017558:	e7df      	b.n	801751a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801755a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801755e:	4611      	mov	r1, r2
 8017560:	795b      	ldrb	r3, [r3, #5]
 8017562:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8017566:	4426      	add	r6, r4
 8017568:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801756a:	4437      	add	r7, r6
 801756c:	2f00      	cmp	r7, #0
 801756e:	dd06      	ble.n	801757e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8017570:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017574:	790f      	ldrb	r7, [r1, #4]
 8017576:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801757a:	88c9      	ldrh	r1, [r1, #6]
 801757c:	e7f4      	b.n	8017568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801757e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017582:	b29b      	uxth	r3, r3
 8017584:	e7c5      	b.n	8017512 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8017586:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017588:	920c      	str	r2, [sp, #48]	@ 0x30
 801758a:	4601      	mov	r1, r0
 801758c:	9a00      	ldr	r2, [sp, #0]
 801758e:	469c      	mov	ip, r3
 8017590:	e78e      	b.n	80174b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8017592:	1957      	adds	r7, r2, r5
 8017594:	ebac 0305 	sub.w	r3, ip, r5
 8017598:	b2ba      	uxth	r2, r7
 801759a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801759e:	9200      	str	r2, [sp, #0]
 80175a0:	b29b      	uxth	r3, r3
 80175a2:	2500      	movs	r5, #0
 80175a4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80175a6:	455a      	cmp	r2, fp
 80175a8:	d88e      	bhi.n	80174c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80175aa:	4601      	mov	r1, r0
 80175ac:	e749      	b.n	8017442 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80175ae:	458c      	cmp	ip, r1
 80175b0:	bf2c      	ite	cs
 80175b2:	4628      	movcs	r0, r5
 80175b4:	462b      	movcc	r3, r5
 80175b6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80175b8:	bf27      	ittee	cs
 80175ba:	9109      	strcs	r1, [sp, #36]	@ 0x24
 80175bc:	ebac 0301 	subcs.w	r3, ip, r1
 80175c0:	eba1 000c 	subcc.w	r0, r1, ip
 80175c4:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 80175c8:	bf2c      	ite	cs
 80175ca:	b29b      	uxthcs	r3, r3
 80175cc:	b280      	uxthcc	r0, r0
 80175ce:	2dff      	cmp	r5, #255	@ 0xff
 80175d0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80175d2:	eb02 0705 	add.w	r7, r2, r5
 80175d6:	b2bd      	uxth	r5, r7
 80175d8:	9500      	str	r5, [sp, #0]
 80175da:	d12f      	bne.n	801763c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80175dc:	465e      	mov	r6, fp
 80175de:	9d00      	ldr	r5, [sp, #0]
 80175e0:	42aa      	cmp	r2, r5
 80175e2:	f040 8084 	bne.w	80176ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80175e6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80175e8:	458c      	cmp	ip, r1
 80175ea:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80175ee:	d3d8      	bcc.n	80175a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80175f0:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80175f2:	9904      	ldr	r1, [sp, #16]
 80175f4:	8812      	ldrh	r2, [r2, #0]
 80175f6:	1a52      	subs	r2, r2, r1
 80175f8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80175fc:	9a08      	ldr	r2, [sp, #32]
 80175fe:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017600:	3201      	adds	r2, #1
 8017602:	428a      	cmp	r2, r1
 8017604:	9208      	str	r2, [sp, #32]
 8017606:	f040 8092 	bne.w	801772e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801760a:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801760e:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8017612:	9b04      	ldr	r3, [sp, #16]
 8017614:	eba5 050c 	sub.w	r5, r5, ip
 8017618:	b2ad      	uxth	r5, r5
 801761a:	2d00      	cmp	r5, #0
 801761c:	bf08      	it	eq
 801761e:	4619      	moveq	r1, r3
 8017620:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017622:	bf18      	it	ne
 8017624:	2100      	movne	r1, #0
 8017626:	3301      	adds	r3, #1
 8017628:	930d      	str	r3, [sp, #52]	@ 0x34
 801762a:	b289      	uxth	r1, r1
 801762c:	e700      	b.n	8017430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801762e:	bf00      	nop
 8017630:	20013ff8 	.word	0x20013ff8
 8017634:	20013ff0 	.word	0x20013ff0
 8017638:	fffff7fb 	.word	0xfffff7fb
 801763c:	46d9      	mov	r9, fp
 801763e:	9d00      	ldr	r5, [sp, #0]
 8017640:	42aa      	cmp	r2, r5
 8017642:	d0d0      	beq.n	80175e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8017644:	1c55      	adds	r5, r2, #1
 8017646:	4422      	add	r2, r4
 8017648:	9517      	str	r5, [sp, #92]	@ 0x5c
 801764a:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801764e:	9a06      	ldr	r2, [sp, #24]
 8017650:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017654:	4472      	add	r2, lr
 8017656:	9212      	str	r2, [sp, #72]	@ 0x48
 8017658:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801765a:	f8b9 2000 	ldrh.w	r2, [r9]
 801765e:	f897 a002 	ldrb.w	sl, [r7, #2]
 8017662:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017664:	1216      	asrs	r6, r2, #8
 8017666:	fb1a fa07 	smulbb	sl, sl, r7
 801766a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801766e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017670:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017674:	fb06 a607 	mla	r6, r6, r7, sl
 8017678:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801767a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801767e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017680:	10d5      	asrs	r5, r2, #3
 8017682:	fb1a fa07 	smulbb	sl, sl, r7
 8017686:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801768a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801768c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017690:	fb05 a507 	mla	r5, r5, r7, sl
 8017694:	9f06      	ldr	r7, [sp, #24]
 8017696:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801769a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801769c:	00d2      	lsls	r2, r2, #3
 801769e:	fb1e fe07 	smulbb	lr, lr, r7
 80176a2:	b2d2      	uxtb	r2, r2
 80176a4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80176a6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80176aa:	b2b6      	uxth	r6, r6
 80176ac:	fb02 e207 	mla	r2, r2, r7, lr
 80176b0:	b292      	uxth	r2, r2
 80176b2:	b2ad      	uxth	r5, r5
 80176b4:	f106 0a01 	add.w	sl, r6, #1
 80176b8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80176bc:	f102 0e01 	add.w	lr, r2, #1
 80176c0:	f105 0a01 	add.w	sl, r5, #1
 80176c4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80176c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80176cc:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80176d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80176d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80176d8:	ea4e 0606 	orr.w	r6, lr, r6
 80176dc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80176e0:	ea46 060a 	orr.w	r6, r6, sl
 80176e4:	f829 6b02 	strh.w	r6, [r9], #2
 80176e8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80176ec:	e7a7      	b.n	801763e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80176ee:	f102 0e01 	add.w	lr, r2, #1
 80176f2:	4422      	add	r2, r4
 80176f4:	9f06      	ldr	r7, [sp, #24]
 80176f6:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80176fa:	9a06      	ldr	r2, [sp, #24]
 80176fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017700:	eb02 0a05 	add.w	sl, r2, r5
 8017704:	4a13      	ldr	r2, [pc, #76]	@ (8017754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8017706:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801770a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801770e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017712:	00d2      	lsls	r2, r2, #3
 8017714:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017718:	ea49 0202 	orr.w	r2, r9, r2
 801771c:	f817 9005 	ldrb.w	r9, [r7, r5]
 8017720:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8017724:	f826 2b02 	strh.w	r2, [r6], #2
 8017728:	fa1f f28e 	uxth.w	r2, lr
 801772c:	e757      	b.n	80175de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801772e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017732:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8017736:	1a2d      	subs	r5, r5, r0
 8017738:	b2ad      	uxth	r5, r5
 801773a:	2d00      	cmp	r5, #0
 801773c:	bf18      	it	ne
 801773e:	2000      	movne	r0, #0
 8017740:	e730      	b.n	80175a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8017742:	4b05      	ldr	r3, [pc, #20]	@ (8017758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8017744:	6818      	ldr	r0, [r3, #0]
 8017746:	6803      	ldr	r3, [r0, #0]
 8017748:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801774a:	4798      	blx	r3
 801774c:	b01f      	add	sp, #124	@ 0x7c
 801774e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017752:	bf00      	nop
 8017754:	fffff800 	.word	0xfffff800
 8017758:	20013ff8 	.word	0x20013ff8

0801775c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801775c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017760:	b091      	sub	sp, #68	@ 0x44
 8017762:	469b      	mov	fp, r3
 8017764:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8017768:	4616      	mov	r6, r2
 801776a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801776e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017772:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017776:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801777a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801777e:	4604      	mov	r4, r0
 8017780:	460d      	mov	r5, r1
 8017782:	4640      	mov	r0, r8
 8017784:	4659      	mov	r1, fp
 8017786:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801778a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801778e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8017792:	f7f2 fde9 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 8017796:	4631      	mov	r1, r6
 8017798:	4640      	mov	r0, r8
 801779a:	f7f2 fde5 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 801779e:	4b74      	ldr	r3, [pc, #464]	@ (8017970 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80177a0:	8818      	ldrh	r0, [r3, #0]
 80177a2:	4b74      	ldr	r3, [pc, #464]	@ (8017974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80177a4:	8819      	ldrh	r1, [r3, #0]
 80177a6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80177aa:	2b00      	cmp	r3, #0
 80177ac:	b202      	sxth	r2, r0
 80177ae:	b20e      	sxth	r6, r1
 80177b0:	da07      	bge.n	80177c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80177b2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80177b6:	4463      	add	r3, ip
 80177b8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80177bc:	2300      	movs	r3, #0
 80177be:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80177c2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80177c6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80177ca:	1ad2      	subs	r2, r2, r3
 80177cc:	4594      	cmp	ip, r2
 80177ce:	bfc4      	itt	gt
 80177d0:	1ac2      	subgt	r2, r0, r3
 80177d2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 80177d6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80177da:	2a00      	cmp	r2, #0
 80177dc:	da07      	bge.n	80177ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80177de:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80177e2:	4462      	add	r2, ip
 80177e4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80177e8:	2200      	movs	r2, #0
 80177ea:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80177ee:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80177f2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80177f6:	eba6 060a 	sub.w	r6, r6, sl
 80177fa:	42b2      	cmp	r2, r6
 80177fc:	bfc4      	itt	gt
 80177fe:	eba1 020a 	subgt.w	r2, r1, sl
 8017802:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8017806:	4a5c      	ldr	r2, [pc, #368]	@ (8017978 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017808:	7812      	ldrb	r2, [r2, #0]
 801780a:	b9a2      	cbnz	r2, 8017836 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801780c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017810:	4286      	cmp	r6, r0
 8017812:	4640      	mov	r0, r8
 8017814:	9303      	str	r3, [sp, #12]
 8017816:	bf14      	ite	ne
 8017818:	2600      	movne	r6, #0
 801781a:	2601      	moveq	r6, #1
 801781c:	f7f2 fde7 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 8017820:	9b03      	ldr	r3, [sp, #12]
 8017822:	b160      	cbz	r0, 801783e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017824:	2300      	movs	r3, #0
 8017826:	8023      	strh	r3, [r4, #0]
 8017828:	8063      	strh	r3, [r4, #2]
 801782a:	80a3      	strh	r3, [r4, #4]
 801782c:	4620      	mov	r0, r4
 801782e:	80e3      	strh	r3, [r4, #6]
 8017830:	b011      	add	sp, #68	@ 0x44
 8017832:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017836:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801783a:	428e      	cmp	r6, r1
 801783c:	e7e9      	b.n	8017812 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801783e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017842:	9205      	str	r2, [sp, #20]
 8017844:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017848:	9206      	str	r2, [sp, #24]
 801784a:	f8bb 2000 	ldrh.w	r2, [fp]
 801784e:	900e      	str	r0, [sp, #56]	@ 0x38
 8017850:	1a9b      	subs	r3, r3, r2
 8017852:	b21b      	sxth	r3, r3
 8017854:	9303      	str	r3, [sp, #12]
 8017856:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801785a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801785e:	ebaa 0a03 	sub.w	sl, sl, r3
 8017862:	fa0f f38a 	sxth.w	r3, sl
 8017866:	9304      	str	r3, [sp, #16]
 8017868:	9b03      	ldr	r3, [sp, #12]
 801786a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801786e:	9b04      	ldr	r3, [sp, #16]
 8017870:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017874:	9b05      	ldr	r3, [sp, #20]
 8017876:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801787a:	a90e      	add	r1, sp, #56	@ 0x38
 801787c:	9b06      	ldr	r3, [sp, #24]
 801787e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017882:	a80c      	add	r0, sp, #48	@ 0x30
 8017884:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8017888:	f7f7 fd06 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801788c:	4640      	mov	r0, r8
 801788e:	f7f7 fcdb 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017892:	a80e      	add	r0, sp, #56	@ 0x38
 8017894:	f7f7 fcd8 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017898:	4b38      	ldr	r3, [pc, #224]	@ (801797c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801789a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801789e:	881b      	ldrh	r3, [r3, #0]
 80178a0:	9307      	str	r3, [sp, #28]
 80178a2:	682b      	ldr	r3, [r5, #0]
 80178a4:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8017980 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80178a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80178aa:	4628      	mov	r0, r5
 80178ac:	4798      	blx	r3
 80178ae:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80178b2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80178b6:	4681      	mov	r9, r0
 80178b8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80178bc:	f8db 0000 	ldr.w	r0, [fp]
 80178c0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80178c2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80178c6:	6803      	ldr	r3, [r0, #0]
 80178c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80178ca:	4798      	blx	r3
 80178cc:	4607      	mov	r7, r0
 80178ce:	f8db 0000 	ldr.w	r0, [fp]
 80178d2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80178d6:	6803      	ldr	r3, [r0, #0]
 80178d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80178dc:	9109      	str	r1, [sp, #36]	@ 0x24
 80178de:	9208      	str	r2, [sp, #32]
 80178e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80178e2:	4798      	blx	r3
 80178e4:	f010 0f01 	tst.w	r0, #1
 80178e8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80178ec:	d012      	beq.n	8017914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80178ee:	f8db 0000 	ldr.w	r0, [fp]
 80178f2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80178f6:	6803      	ldr	r3, [r0, #0]
 80178f8:	9200      	str	r2, [sp, #0]
 80178fa:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80178fc:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017900:	462b      	mov	r3, r5
 8017902:	47b0      	blx	r6
 8017904:	9b03      	ldr	r3, [sp, #12]
 8017906:	8023      	strh	r3, [r4, #0]
 8017908:	9b04      	ldr	r3, [sp, #16]
 801790a:	8063      	strh	r3, [r4, #2]
 801790c:	9b05      	ldr	r3, [sp, #20]
 801790e:	80a3      	strh	r3, [r4, #4]
 8017910:	9b06      	ldr	r3, [sp, #24]
 8017912:	e78b      	b.n	801782c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017914:	fb09 f202 	mul.w	r2, r9, r2
 8017918:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801791c:	440f      	add	r7, r1
 801791e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8017922:	b166      	cbz	r6, 801793e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017924:	9a07      	ldr	r2, [sp, #28]
 8017926:	4592      	cmp	sl, r2
 8017928:	d109      	bne.n	801793e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801792a:	f8db 0000 	ldr.w	r0, [fp]
 801792e:	6802      	ldr	r2, [r0, #0]
 8017930:	fb09 f303 	mul.w	r3, r9, r3
 8017934:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 8017936:	4629      	mov	r1, r5
 8017938:	463a      	mov	r2, r7
 801793a:	47b0      	blx	r6
 801793c:	e7e2      	b.n	8017904 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801793e:	fb0a f303 	mul.w	r3, sl, r3
 8017942:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8017980 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017946:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801794a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801794e:	4545      	cmp	r5, r8
 8017950:	d2d8      	bcs.n	8017904 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017952:	f8db 0000 	ldr.w	r0, [fp]
 8017956:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801795a:	6802      	ldr	r2, [r0, #0]
 801795c:	4629      	mov	r1, r5
 801795e:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 8017962:	005b      	lsls	r3, r3, #1
 8017964:	463a      	mov	r2, r7
 8017966:	47d0      	blx	sl
 8017968:	444f      	add	r7, r9
 801796a:	4435      	add	r5, r6
 801796c:	e7ef      	b.n	801794e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801796e:	bf00      	nop
 8017970:	20013fea 	.word	0x20013fea
 8017974:	20013fec 	.word	0x20013fec
 8017978:	20013fee 	.word	0x20013fee
 801797c:	20013ff0 	.word	0x20013ff0
 8017980:	20013ff8 	.word	0x20013ff8

08017984 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017984:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017986:	4606      	mov	r6, r0
 8017988:	b087      	sub	sp, #28
 801798a:	460c      	mov	r4, r1
 801798c:	4617      	mov	r7, r2
 801798e:	461d      	mov	r5, r3
 8017990:	b333      	cbz	r3, 80179e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017992:	4608      	mov	r0, r1
 8017994:	f7f2 fd2b 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 8017998:	bb10      	cbnz	r0, 80179e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801799a:	6820      	ldr	r0, [r4, #0]
 801799c:	6861      	ldr	r1, [r4, #4]
 801799e:	4c1c      	ldr	r4, [pc, #112]	@ (8017a10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80179a0:	ab04      	add	r3, sp, #16
 80179a2:	c303      	stmia	r3!, {r0, r1}
 80179a4:	a804      	add	r0, sp, #16
 80179a6:	f7f7 fc4f 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179aa:	6820      	ldr	r0, [r4, #0]
 80179ac:	6803      	ldr	r3, [r0, #0]
 80179ae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80179b0:	4798      	blx	r3
 80179b2:	2dff      	cmp	r5, #255	@ 0xff
 80179b4:	d016      	beq.n	80179e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80179b6:	f010 0f08 	tst.w	r0, #8
 80179ba:	6820      	ldr	r0, [r4, #0]
 80179bc:	d015      	beq.n	80179ea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80179be:	2400      	movs	r4, #0
 80179c0:	6801      	ldr	r1, [r0, #0]
 80179c2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80179c6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80179ca:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80179ce:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80179d2:	9401      	str	r4, [sp, #4]
 80179d4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80179d8:	9400      	str	r4, [sp, #0]
 80179da:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 80179dc:	4639      	mov	r1, r7
 80179de:	47a0      	blx	r4
 80179e0:	b007      	add	sp, #28
 80179e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80179e4:	f010 0f02 	tst.w	r0, #2
 80179e8:	e7e7      	b.n	80179ba <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80179ea:	6803      	ldr	r3, [r0, #0]
 80179ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80179ee:	4798      	blx	r3
 80179f0:	4b08      	ldr	r3, [pc, #32]	@ (8017a14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80179f2:	881a      	ldrh	r2, [r3, #0]
 80179f4:	6833      	ldr	r3, [r6, #0]
 80179f6:	e9cd 7500 	strd	r7, r5, [sp]
 80179fa:	4601      	mov	r1, r0
 80179fc:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80179fe:	4630      	mov	r0, r6
 8017a00:	ab04      	add	r3, sp, #16
 8017a02:	47a8      	blx	r5
 8017a04:	6820      	ldr	r0, [r4, #0]
 8017a06:	6803      	ldr	r3, [r0, #0]
 8017a08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017a0a:	4798      	blx	r3
 8017a0c:	e7e8      	b.n	80179e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017a0e:	bf00      	nop
 8017a10:	20013ff8 	.word	0x20013ff8
 8017a14:	20013ff0 	.word	0x20013ff0

08017a18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017a18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017a1c:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8017a20:	9e08      	ldr	r6, [sp, #32]
 8017a22:	4688      	mov	r8, r1
 8017a24:	4614      	mov	r4, r2
 8017a26:	461d      	mov	r5, r3
 8017a28:	2f00      	cmp	r7, #0
 8017a2a:	f000 80a9 	beq.w	8017b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a2e:	4618      	mov	r0, r3
 8017a30:	f7f2 fcdd 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a34:	2800      	cmp	r0, #0
 8017a36:	f040 80a3 	bne.w	8017b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a3a:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017a3e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017a42:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017a46:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017a4a:	fb04 1303 	mla	r3, r4, r3, r1
 8017a4e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017a52:	4365      	muls	r5, r4
 8017a54:	2fff      	cmp	r7, #255	@ 0xff
 8017a56:	eba4 0200 	sub.w	r2, r4, r0
 8017a5a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017a5e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017a62:	d04a      	beq.n	8017afa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017a64:	b2bc      	uxth	r4, r7
 8017a66:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8017a6a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017a6e:	fa5f f788 	uxtb.w	r7, r8
 8017a72:	b2f3      	uxtb	r3, r6
 8017a74:	0040      	lsls	r0, r0, #1
 8017a76:	fb0e fe04 	mul.w	lr, lr, r4
 8017a7a:	4367      	muls	r7, r4
 8017a7c:	4363      	muls	r3, r4
 8017a7e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017a82:	fa1f fc8c 	uxth.w	ip, ip
 8017a86:	42a9      	cmp	r1, r5
 8017a88:	d27a      	bcs.n	8017b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a8a:	eb01 0900 	add.w	r9, r1, r0
 8017a8e:	4549      	cmp	r1, r9
 8017a90:	d231      	bcs.n	8017af6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017a92:	880a      	ldrh	r2, [r1, #0]
 8017a94:	1214      	asrs	r4, r2, #8
 8017a96:	10d6      	asrs	r6, r2, #3
 8017a98:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017a9c:	00d2      	lsls	r2, r2, #3
 8017a9e:	b2d2      	uxtb	r2, r2
 8017aa0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017aa4:	fb14 f40c 	smulbb	r4, r4, ip
 8017aa8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017aac:	4474      	add	r4, lr
 8017aae:	fb12 f20c 	smulbb	r2, r2, ip
 8017ab2:	b2a4      	uxth	r4, r4
 8017ab4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017ab8:	441a      	add	r2, r3
 8017aba:	b292      	uxth	r2, r2
 8017abc:	f104 0a01 	add.w	sl, r4, #1
 8017ac0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017ac4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017ac8:	fb16 f60c 	smulbb	r6, r6, ip
 8017acc:	f102 0a01 	add.w	sl, r2, #1
 8017ad0:	443e      	add	r6, r7
 8017ad2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017ad6:	b2b6      	uxth	r6, r6
 8017ad8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017adc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017ae0:	4322      	orrs	r2, r4
 8017ae2:	1c74      	adds	r4, r6, #1
 8017ae4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017ae8:	0976      	lsrs	r6, r6, #5
 8017aea:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017aee:	4332      	orrs	r2, r6
 8017af0:	f821 2b02 	strh.w	r2, [r1], #2
 8017af4:	e7cb      	b.n	8017a8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017af6:	4441      	add	r1, r8
 8017af8:	e7c5      	b.n	8017a86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017afa:	4f22      	ldr	r7, [pc, #136]	@ (8017b84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017afc:	0973      	lsrs	r3, r6, #5
 8017afe:	ea08 0707 	and.w	r7, r8, r7
 8017b02:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017b06:	433b      	orrs	r3, r7
 8017b08:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017b0c:	4333      	orrs	r3, r6
 8017b0e:	07e7      	lsls	r7, r4, #31
 8017b10:	b29b      	uxth	r3, r3
 8017b12:	d50b      	bpl.n	8017b2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017b14:	0040      	lsls	r0, r0, #1
 8017b16:	0052      	lsls	r2, r2, #1
 8017b18:	42a9      	cmp	r1, r5
 8017b1a:	d231      	bcs.n	8017b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b1c:	180c      	adds	r4, r1, r0
 8017b1e:	42a1      	cmp	r1, r4
 8017b20:	d202      	bcs.n	8017b28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017b22:	f821 3b02 	strh.w	r3, [r1], #2
 8017b26:	e7fa      	b.n	8017b1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017b28:	4411      	add	r1, r2
 8017b2a:	e7f5      	b.n	8017b18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017b2c:	078e      	lsls	r6, r1, #30
 8017b2e:	d008      	beq.n	8017b42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017b30:	0066      	lsls	r6, r4, #1
 8017b32:	460a      	mov	r2, r1
 8017b34:	42aa      	cmp	r2, r5
 8017b36:	d202      	bcs.n	8017b3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017b38:	8013      	strh	r3, [r2, #0]
 8017b3a:	4432      	add	r2, r6
 8017b3c:	e7fa      	b.n	8017b34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017b3e:	3102      	adds	r1, #2
 8017b40:	3801      	subs	r0, #1
 8017b42:	07c2      	lsls	r2, r0, #31
 8017b44:	d50b      	bpl.n	8017b5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017b46:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017b4a:	3a01      	subs	r2, #1
 8017b4c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017b50:	0066      	lsls	r6, r4, #1
 8017b52:	42aa      	cmp	r2, r5
 8017b54:	d202      	bcs.n	8017b5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017b56:	8013      	strh	r3, [r2, #0]
 8017b58:	4432      	add	r2, r6
 8017b5a:	e7fa      	b.n	8017b52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017b5c:	3801      	subs	r0, #1
 8017b5e:	b178      	cbz	r0, 8017b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b60:	1040      	asrs	r0, r0, #1
 8017b62:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017b66:	0080      	lsls	r0, r0, #2
 8017b68:	0064      	lsls	r4, r4, #1
 8017b6a:	42a9      	cmp	r1, r5
 8017b6c:	d208      	bcs.n	8017b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b6e:	180e      	adds	r6, r1, r0
 8017b70:	460a      	mov	r2, r1
 8017b72:	42b2      	cmp	r2, r6
 8017b74:	d202      	bcs.n	8017b7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017b76:	f842 3b04 	str.w	r3, [r2], #4
 8017b7a:	e7fa      	b.n	8017b72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017b7c:	4421      	add	r1, r4
 8017b7e:	e7f4      	b.n	8017b6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017b80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b84:	00fff800 	.word	0x00fff800

08017b88 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017b88:	2200      	movs	r2, #0
 8017b8a:	4912      	ldr	r1, [pc, #72]	@ (8017bd4 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017b8c:	6001      	str	r1, [r0, #0]
 8017b8e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017b92:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017b96:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017b9a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017b9e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8017ba2:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8017ba6:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017baa:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017bae:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017bb2:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8017bb6:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8017bba:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017bbe:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8017bc2:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8017bc6:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017bca:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017bce:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8017bd2:	4770      	bx	lr
 8017bd4:	080255e8 	.word	0x080255e8

08017bd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bdc:	460d      	mov	r5, r1
 8017bde:	b08d      	sub	sp, #52	@ 0x34
 8017be0:	4604      	mov	r4, r0
 8017be2:	6808      	ldr	r0, [r1, #0]
 8017be4:	6849      	ldr	r1, [r1, #4]
 8017be6:	4699      	mov	r9, r3
 8017be8:	ab08      	add	r3, sp, #32
 8017bea:	c303      	stmia	r3!, {r0, r1}
 8017bec:	6810      	ldr	r0, [r2, #0]
 8017bee:	6851      	ldr	r1, [r2, #4]
 8017bf0:	ab0a      	add	r3, sp, #40	@ 0x28
 8017bf2:	c303      	stmia	r3!, {r0, r1}
 8017bf4:	a808      	add	r0, sp, #32
 8017bf6:	f7f7 fb27 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017bfa:	4629      	mov	r1, r5
 8017bfc:	a80a      	add	r0, sp, #40	@ 0x28
 8017bfe:	f7f7 fb4b 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c02:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8017c06:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8017c0a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8017c0e:	4d63      	ldr	r5, [pc, #396]	@ (8017d9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017c10:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017c14:	6828      	ldr	r0, [r5, #0]
 8017c16:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017c1a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c1e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017c22:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017c26:	440a      	add	r2, r1
 8017c28:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017c2c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017c30:	4413      	add	r3, r2
 8017c32:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017c36:	6803      	ldr	r3, [r0, #0]
 8017c38:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017c3a:	4798      	blx	r3
 8017c3c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017c40:	d119      	bne.n	8017c76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017c42:	f010 0f20 	tst.w	r0, #32
 8017c46:	6828      	ldr	r0, [r5, #0]
 8017c48:	d018      	beq.n	8017c7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017c4a:	2500      	movs	r5, #0
 8017c4c:	6801      	ldr	r1, [r0, #0]
 8017c4e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017c52:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017c56:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017c5a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8017c5e:	9502      	str	r5, [sp, #8]
 8017c60:	b2b6      	uxth	r6, r6
 8017c62:	fa1f f588 	uxth.w	r5, r8
 8017c66:	9601      	str	r6, [sp, #4]
 8017c68:	9500      	str	r5, [sp, #0]
 8017c6a:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8017c6c:	4621      	mov	r1, r4
 8017c6e:	47a8      	blx	r5
 8017c70:	b00d      	add	sp, #52	@ 0x34
 8017c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c76:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8017c7a:	e7e4      	b.n	8017c46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017c7c:	6803      	ldr	r3, [r0, #0]
 8017c7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c80:	4798      	blx	r3
 8017c82:	4947      	ldr	r1, [pc, #284]	@ (8017da0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017c84:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017c88:	880b      	ldrh	r3, [r1, #0]
 8017c8a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8017c8e:	fb03 5202 	mla	r2, r3, r2, r5
 8017c92:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017c96:	4373      	muls	r3, r6
 8017c98:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017c9c:	9307      	str	r3, [sp, #28]
 8017c9e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017ca2:	9306      	str	r3, [sp, #24]
 8017ca4:	468a      	mov	sl, r1
 8017ca6:	9b07      	ldr	r3, [sp, #28]
 8017ca8:	4298      	cmp	r0, r3
 8017caa:	d270      	bcs.n	8017d8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017cac:	9b06      	ldr	r3, [sp, #24]
 8017cae:	4621      	mov	r1, r4
 8017cb0:	eb00 0b03 	add.w	fp, r0, r3
 8017cb4:	4558      	cmp	r0, fp
 8017cb6:	d25d      	bcs.n	8017d74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017cb8:	f851 4b04 	ldr.w	r4, [r1], #4
 8017cbc:	0e23      	lsrs	r3, r4, #24
 8017cbe:	d014      	beq.n	8017cea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017cc0:	2bff      	cmp	r3, #255	@ 0xff
 8017cc2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017cc6:	d112      	bne.n	8017cee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017cc8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017ccc:	d10f      	bne.n	8017cee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017cce:	0963      	lsrs	r3, r4, #5
 8017cd0:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017cd4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017cd8:	f02c 0c07 	bic.w	ip, ip, #7
 8017cdc:	ea43 0c0c 	orr.w	ip, r3, ip
 8017ce0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017ce4:	ea4c 0404 	orr.w	r4, ip, r4
 8017ce8:	8004      	strh	r4, [r0, #0]
 8017cea:	3002      	adds	r0, #2
 8017cec:	e7e2      	b.n	8017cb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017cee:	fb09 f303 	mul.w	r3, r9, r3
 8017cf2:	8807      	ldrh	r7, [r0, #0]
 8017cf4:	1c5a      	adds	r2, r3, #1
 8017cf6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017cfa:	1212      	asrs	r2, r2, #8
 8017cfc:	123e      	asrs	r6, r7, #8
 8017cfe:	b293      	uxth	r3, r2
 8017d00:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017d04:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017d08:	43d2      	mvns	r2, r2
 8017d0a:	b2d2      	uxtb	r2, r2
 8017d0c:	10fd      	asrs	r5, r7, #3
 8017d0e:	fb1e fe03 	smulbb	lr, lr, r3
 8017d12:	00ff      	lsls	r7, r7, #3
 8017d14:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017d18:	fb06 e602 	mla	r6, r6, r2, lr
 8017d1c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017d20:	b2ff      	uxtb	r7, r7
 8017d22:	fa5f fc8c 	uxtb.w	ip, ip
 8017d26:	b2e4      	uxtb	r4, r4
 8017d28:	b2b6      	uxth	r6, r6
 8017d2a:	fb1c fc03 	smulbb	ip, ip, r3
 8017d2e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017d32:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017d36:	fb14 f403 	smulbb	r4, r4, r3
 8017d3a:	fb05 c502 	mla	r5, r5, r2, ip
 8017d3e:	f106 0e01 	add.w	lr, r6, #1
 8017d42:	fb07 4702 	mla	r7, r7, r2, r4
 8017d46:	b2ad      	uxth	r5, r5
 8017d48:	b2bf      	uxth	r7, r7
 8017d4a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017d4e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017d52:	f105 0c01 	add.w	ip, r5, #1
 8017d56:	1c7e      	adds	r6, r7, #1
 8017d58:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017d5c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017d60:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017d64:	096d      	lsrs	r5, r5, #5
 8017d66:	ea46 060e 	orr.w	r6, r6, lr
 8017d6a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017d6e:	432e      	orrs	r6, r5
 8017d70:	8006      	strh	r6, [r0, #0]
 8017d72:	e7ba      	b.n	8017cea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017d74:	f8ba 3000 	ldrh.w	r3, [sl]
 8017d78:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8017d7c:	eba3 0308 	sub.w	r3, r3, r8
 8017d80:	eba4 0408 	sub.w	r4, r4, r8
 8017d84:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017d88:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017d8c:	e78b      	b.n	8017ca6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017d8e:	4b03      	ldr	r3, [pc, #12]	@ (8017d9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017d90:	6818      	ldr	r0, [r3, #0]
 8017d92:	6803      	ldr	r3, [r0, #0]
 8017d94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017d96:	4798      	blx	r3
 8017d98:	e76a      	b.n	8017c70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017d9a:	bf00      	nop
 8017d9c:	20013ff8 	.word	0x20013ff8
 8017da0:	20013ff0 	.word	0x20013ff0

08017da4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017da4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017da8:	460c      	mov	r4, r1
 8017daa:	b085      	sub	sp, #20
 8017dac:	6810      	ldr	r0, [r2, #0]
 8017dae:	6851      	ldr	r1, [r2, #4]
 8017db0:	466d      	mov	r5, sp
 8017db2:	c503      	stmia	r5!, {r0, r1}
 8017db4:	6818      	ldr	r0, [r3, #0]
 8017db6:	6859      	ldr	r1, [r3, #4]
 8017db8:	4616      	mov	r6, r2
 8017dba:	c503      	stmia	r5!, {r0, r1}
 8017dbc:	4668      	mov	r0, sp
 8017dbe:	f7f7 fa43 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017dc2:	4631      	mov	r1, r6
 8017dc4:	a802      	add	r0, sp, #8
 8017dc6:	f7f7 fa67 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017dca:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017dce:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017dd2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017dd6:	4d28      	ldr	r5, [pc, #160]	@ (8017e78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017dd8:	4e28      	ldr	r6, [pc, #160]	@ (8017e7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017dda:	6828      	ldr	r0, [r5, #0]
 8017ddc:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017de0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017de4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017de8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017dec:	f8bd 1000 	ldrh.w	r1, [sp]
 8017df0:	440a      	add	r2, r1
 8017df2:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017df6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017dfa:	4413      	add	r3, r2
 8017dfc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017e00:	6803      	ldr	r3, [r0, #0]
 8017e02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017e04:	4798      	blx	r3
 8017e06:	8833      	ldrh	r3, [r6, #0]
 8017e08:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017e0c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017e10:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8017e80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017e14:	fb03 1202 	mla	r2, r3, r2, r1
 8017e18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e1c:	fb08 f303 	mul.w	r3, r8, r3
 8017e20:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017e24:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017e28:	4298      	cmp	r0, r3
 8017e2a:	d21d      	bcs.n	8017e68 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017e2c:	eb00 080c 	add.w	r8, r0, ip
 8017e30:	4540      	cmp	r0, r8
 8017e32:	d20f      	bcs.n	8017e54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017e34:	f854 1b04 	ldr.w	r1, [r4], #4
 8017e38:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017e3c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017e40:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017e44:	ea42 0209 	orr.w	r2, r2, r9
 8017e48:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017e4c:	430a      	orrs	r2, r1
 8017e4e:	f820 2b02 	strh.w	r2, [r0], #2
 8017e52:	e7ed      	b.n	8017e30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017e54:	8832      	ldrh	r2, [r6, #0]
 8017e56:	1bd2      	subs	r2, r2, r7
 8017e58:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e5c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017e60:	1bd2      	subs	r2, r2, r7
 8017e62:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017e66:	e7df      	b.n	8017e28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017e68:	6828      	ldr	r0, [r5, #0]
 8017e6a:	6803      	ldr	r3, [r0, #0]
 8017e6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017e6e:	4798      	blx	r3
 8017e70:	b005      	add	sp, #20
 8017e72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e76:	bf00      	nop
 8017e78:	20013ff8 	.word	0x20013ff8
 8017e7c:	20013ff0 	.word	0x20013ff0
 8017e80:	fffff800 	.word	0xfffff800

08017e84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017e84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017e88:	460e      	mov	r6, r1
 8017e8a:	b08e      	sub	sp, #56	@ 0x38
 8017e8c:	4604      	mov	r4, r0
 8017e8e:	6808      	ldr	r0, [r1, #0]
 8017e90:	6849      	ldr	r1, [r1, #4]
 8017e92:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801806c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017e96:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8018070 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017e9a:	461d      	mov	r5, r3
 8017e9c:	ab0a      	add	r3, sp, #40	@ 0x28
 8017e9e:	c303      	stmia	r3!, {r0, r1}
 8017ea0:	6810      	ldr	r0, [r2, #0]
 8017ea2:	6851      	ldr	r1, [r2, #4]
 8017ea4:	ab0c      	add	r3, sp, #48	@ 0x30
 8017ea6:	c303      	stmia	r3!, {r0, r1}
 8017ea8:	a80a      	add	r0, sp, #40	@ 0x28
 8017eaa:	f7f7 f9cd 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017eae:	4631      	mov	r1, r6
 8017eb0:	a80c      	add	r0, sp, #48	@ 0x30
 8017eb2:	f7f7 f9f1 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017eb6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8017eba:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8017ebe:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017ec2:	f8d8 0000 	ldr.w	r0, [r8]
 8017ec6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8017eca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017ece:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ed2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017ed6:	440c      	add	r4, r1
 8017ed8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8017edc:	440a      	add	r2, r1
 8017ede:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8017ee2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017ee6:	4413      	add	r3, r2
 8017ee8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017eec:	6803      	ldr	r3, [r0, #0]
 8017eee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017ef0:	4798      	blx	r3
 8017ef2:	2dff      	cmp	r5, #255	@ 0xff
 8017ef4:	d124      	bne.n	8017f40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017ef6:	f010 0f01 	tst.w	r0, #1
 8017efa:	f8d8 0000 	ldr.w	r0, [r8]
 8017efe:	d022      	beq.n	8017f46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017f00:	2100      	movs	r1, #0
 8017f02:	f8d0 c000 	ldr.w	ip, [r0]
 8017f06:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8017f0a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8017f0e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017f12:	f04f 0e01 	mov.w	lr, #1
 8017f16:	f8cd e018 	str.w	lr, [sp, #24]
 8017f1a:	f8b9 e000 	ldrh.w	lr, [r9]
 8017f1e:	9503      	str	r5, [sp, #12]
 8017f20:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017f24:	b2b6      	uxth	r6, r6
 8017f26:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017f2a:	9102      	str	r1, [sp, #8]
 8017f2c:	b2bf      	uxth	r7, r7
 8017f2e:	9601      	str	r6, [sp, #4]
 8017f30:	9700      	str	r7, [sp, #0]
 8017f32:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8017f36:	4621      	mov	r1, r4
 8017f38:	47a8      	blx	r5
 8017f3a:	b00e      	add	sp, #56	@ 0x38
 8017f3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017f40:	f010 0f04 	tst.w	r0, #4
 8017f44:	e7d9      	b.n	8017efa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017f46:	6803      	ldr	r3, [r0, #0]
 8017f48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017f4a:	4798      	blx	r3
 8017f4c:	f8b9 3000 	ldrh.w	r3, [r9]
 8017f50:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017f54:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8017f58:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017f5c:	fb03 1202 	mla	r2, r3, r2, r1
 8017f60:	ebac 0c07 	sub.w	ip, ip, r7
 8017f64:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017f68:	435e      	muls	r6, r3
 8017f6a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017f6e:	2dff      	cmp	r5, #255	@ 0xff
 8017f70:	eba3 0707 	sub.w	r7, r3, r7
 8017f74:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017f78:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017f7c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017f80:	d049      	beq.n	8018016 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017f82:	43eb      	mvns	r3, r5
 8017f84:	fa1f f985 	uxth.w	r9, r5
 8017f88:	b2db      	uxtb	r3, r3
 8017f8a:	42b0      	cmp	r0, r6
 8017f8c:	d266      	bcs.n	801805c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017f8e:	eb00 0a0e 	add.w	sl, r0, lr
 8017f92:	4550      	cmp	r0, sl
 8017f94:	4621      	mov	r1, r4
 8017f96:	f104 0403 	add.w	r4, r4, #3
 8017f9a:	d25b      	bcs.n	8018054 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017f9c:	8802      	ldrh	r2, [r0, #0]
 8017f9e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017fa2:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017fa6:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8017faa:	fb11 f109 	smulbb	r1, r1, r9
 8017fae:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017fb2:	10d5      	asrs	r5, r2, #3
 8017fb4:	fb08 1803 	mla	r8, r8, r3, r1
 8017fb8:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017fbc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017fc0:	fb11 f109 	smulbb	r1, r1, r9
 8017fc4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017fc8:	fb05 1503 	mla	r5, r5, r3, r1
 8017fcc:	00d2      	lsls	r2, r2, #3
 8017fce:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017fd2:	b2d2      	uxtb	r2, r2
 8017fd4:	fb11 f109 	smulbb	r1, r1, r9
 8017fd8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017fdc:	fa1f f888 	uxth.w	r8, r8
 8017fe0:	fb02 1203 	mla	r2, r2, r3, r1
 8017fe4:	b292      	uxth	r2, r2
 8017fe6:	f108 0101 	add.w	r1, r8, #1
 8017fea:	b2ad      	uxth	r5, r5
 8017fec:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017ff0:	1c51      	adds	r1, r2, #1
 8017ff2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017ff6:	1c69      	adds	r1, r5, #1
 8017ff8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017ffc:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8018000:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018004:	096d      	lsrs	r5, r5, #5
 8018006:	ea42 0208 	orr.w	r2, r2, r8
 801800a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801800e:	432a      	orrs	r2, r5
 8018010:	f820 2b02 	strh.w	r2, [r0], #2
 8018014:	e7bd      	b.n	8017f92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8018016:	4a14      	ldr	r2, [pc, #80]	@ (8018068 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018018:	42b0      	cmp	r0, r6
 801801a:	d21f      	bcs.n	801805c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801801c:	eb00 050e 	add.w	r5, r0, lr
 8018020:	42a8      	cmp	r0, r5
 8018022:	4621      	mov	r1, r4
 8018024:	f104 0403 	add.w	r4, r4, #3
 8018028:	d210      	bcs.n	801804c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801802a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801802e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018032:	00db      	lsls	r3, r3, #3
 8018034:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018038:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801803c:	430b      	orrs	r3, r1
 801803e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018042:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018046:	f820 3b02 	strh.w	r3, [r0], #2
 801804a:	e7e9      	b.n	8018020 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801804c:	4438      	add	r0, r7
 801804e:	eb01 040c 	add.w	r4, r1, ip
 8018052:	e7e1      	b.n	8018018 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018054:	4438      	add	r0, r7
 8018056:	eb01 040c 	add.w	r4, r1, ip
 801805a:	e796      	b.n	8017f8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801805c:	4b03      	ldr	r3, [pc, #12]	@ (801806c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801805e:	6818      	ldr	r0, [r3, #0]
 8018060:	6803      	ldr	r3, [r0, #0]
 8018062:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018064:	4798      	blx	r3
 8018066:	e768      	b.n	8017f3a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018068:	fffff800 	.word	0xfffff800
 801806c:	20013ff8 	.word	0x20013ff8
 8018070:	20013ff0 	.word	0x20013ff0

08018074 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018074:	b4f0      	push	{r4, r5, r6, r7}
 8018076:	4616      	mov	r6, r2
 8018078:	2e01      	cmp	r6, #1
 801807a:	461c      	mov	r4, r3
 801807c:	460d      	mov	r5, r1
 801807e:	9a04      	ldr	r2, [sp, #16]
 8018080:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018084:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8018088:	d012      	beq.n	80180b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801808a:	d303      	bcc.n	8018094 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801808c:	2e02      	cmp	r6, #2
 801808e:	d00a      	beq.n	80180a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018090:	bcf0      	pop	{r4, r5, r6, r7}
 8018092:	4770      	bx	lr
 8018094:	6805      	ldr	r5, [r0, #0]
 8018096:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801809a:	68ed      	ldr	r5, [r5, #12]
 801809c:	4613      	mov	r3, r2
 801809e:	46ac      	mov	ip, r5
 80180a0:	4622      	mov	r2, r4
 80180a2:	bcf0      	pop	{r4, r5, r6, r7}
 80180a4:	4760      	bx	ip
 80180a6:	4621      	mov	r1, r4
 80180a8:	4628      	mov	r0, r5
 80180aa:	bcf0      	pop	{r4, r5, r6, r7}
 80180ac:	f7ff bd94 	b.w	8017bd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80180b0:	4621      	mov	r1, r4
 80180b2:	4628      	mov	r0, r5
 80180b4:	bcf0      	pop	{r4, r5, r6, r7}
 80180b6:	f7ff bee5 	b.w	8017e84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080180bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80180bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180c0:	4681      	mov	r9, r0
 80180c2:	b093      	sub	sp, #76	@ 0x4c
 80180c4:	6810      	ldr	r0, [r2, #0]
 80180c6:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 80180ca:	4f6d      	ldr	r7, [pc, #436]	@ (8018280 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80180cc:	4688      	mov	r8, r1
 80180ce:	6851      	ldr	r1, [r2, #4]
 80180d0:	ac0e      	add	r4, sp, #56	@ 0x38
 80180d2:	c403      	stmia	r4!, {r0, r1}
 80180d4:	6818      	ldr	r0, [r3, #0]
 80180d6:	6859      	ldr	r1, [r3, #4]
 80180d8:	ac10      	add	r4, sp, #64	@ 0x40
 80180da:	4616      	mov	r6, r2
 80180dc:	c403      	stmia	r4!, {r0, r1}
 80180de:	a80e      	add	r0, sp, #56	@ 0x38
 80180e0:	f7f7 f8b2 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80180e4:	4631      	mov	r1, r6
 80180e6:	a810      	add	r0, sp, #64	@ 0x40
 80180e8:	f7f7 f8d6 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80180ec:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80180f0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80180f4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80180f8:	4e62      	ldr	r6, [pc, #392]	@ (8018284 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80180fa:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 80180fe:	6830      	ldr	r0, [r6, #0]
 8018100:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018104:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018108:	4489      	add	r9, r1
 801810a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801810e:	440a      	add	r2, r1
 8018110:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8018114:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018118:	4413      	add	r3, r2
 801811a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801811e:	6803      	ldr	r3, [r0, #0]
 8018120:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018122:	4798      	blx	r3
 8018124:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018128:	6830      	ldr	r0, [r6, #0]
 801812a:	d01d      	beq.n	8018168 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801812c:	2200      	movs	r2, #0
 801812e:	6801      	ldr	r1, [r0, #0]
 8018130:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8018134:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018138:	220b      	movs	r2, #11
 801813a:	9207      	str	r2, [sp, #28]
 801813c:	883a      	ldrh	r2, [r7, #0]
 801813e:	9206      	str	r2, [sp, #24]
 8018140:	2201      	movs	r2, #1
 8018142:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018146:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801814a:	9203      	str	r2, [sp, #12]
 801814c:	b2a4      	uxth	r4, r4
 801814e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8018152:	9200      	str	r2, [sp, #0]
 8018154:	b2ad      	uxth	r5, r5
 8018156:	9502      	str	r5, [sp, #8]
 8018158:	9401      	str	r4, [sp, #4]
 801815a:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 801815c:	4642      	mov	r2, r8
 801815e:	4649      	mov	r1, r9
 8018160:	47a0      	blx	r4
 8018162:	b013      	add	sp, #76	@ 0x4c
 8018164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018168:	6803      	ldr	r3, [r0, #0]
 801816a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801816c:	4798      	blx	r3
 801816e:	883b      	ldrh	r3, [r7, #0]
 8018170:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018174:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8018178:	fb03 1202 	mla	r2, r3, r2, r1
 801817c:	435d      	muls	r5, r3
 801817e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018182:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8018186:	920c      	str	r2, [sp, #48]	@ 0x30
 8018188:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801818c:	1b12      	subs	r2, r2, r4
 801818e:	920d      	str	r2, [sp, #52]	@ 0x34
 8018190:	0062      	lsls	r2, r4, #1
 8018192:	1b1c      	subs	r4, r3, r4
 8018194:	0063      	lsls	r3, r4, #1
 8018196:	920a      	str	r2, [sp, #40]	@ 0x28
 8018198:	930b      	str	r3, [sp, #44]	@ 0x2c
 801819a:	f04f 0e04 	mov.w	lr, #4
 801819e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80181a0:	4298      	cmp	r0, r3
 80181a2:	d266      	bcs.n	8018272 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80181a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80181a6:	eb00 0b03 	add.w	fp, r0, r3
 80181aa:	4558      	cmp	r0, fp
 80181ac:	d25c      	bcs.n	8018268 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80181ae:	f819 3b01 	ldrb.w	r3, [r9], #1
 80181b2:	fb1e e303 	smlabb	r3, lr, r3, lr
 80181b6:	f858 2003 	ldr.w	r2, [r8, r3]
 80181ba:	0e11      	lsrs	r1, r2, #24
 80181bc:	d012      	beq.n	80181e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80181be:	29ff      	cmp	r1, #255	@ 0xff
 80181c0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80181c4:	d110      	bne.n	80181e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80181c6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80181ca:	d10d      	bne.n	80181e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80181cc:	0953      	lsrs	r3, r2, #5
 80181ce:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 80181d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80181d6:	f027 0707 	bic.w	r7, r7, #7
 80181da:	431f      	orrs	r7, r3
 80181dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80181e0:	433a      	orrs	r2, r7
 80181e2:	8002      	strh	r2, [r0, #0]
 80181e4:	3002      	adds	r0, #2
 80181e6:	e7e0      	b.n	80181aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80181e8:	fb0a f101 	mul.w	r1, sl, r1
 80181ec:	8806      	ldrh	r6, [r0, #0]
 80181ee:	1c4b      	adds	r3, r1, #1
 80181f0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80181f4:	1235      	asrs	r5, r6, #8
 80181f6:	10f4      	asrs	r4, r6, #3
 80181f8:	121b      	asrs	r3, r3, #8
 80181fa:	00f6      	lsls	r6, r6, #3
 80181fc:	b299      	uxth	r1, r3
 80181fe:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018202:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018206:	b2f6      	uxtb	r6, r6
 8018208:	43db      	mvns	r3, r3
 801820a:	b2d2      	uxtb	r2, r2
 801820c:	b2db      	uxtb	r3, r3
 801820e:	fb1c fc01 	smulbb	ip, ip, r1
 8018212:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018216:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801821a:	fb12 f201 	smulbb	r2, r2, r1
 801821e:	fb05 c503 	mla	r5, r5, r3, ip
 8018222:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8018226:	b2ff      	uxtb	r7, r7
 8018228:	fb06 2203 	mla	r2, r6, r3, r2
 801822c:	b2ad      	uxth	r5, r5
 801822e:	fb17 f701 	smulbb	r7, r7, r1
 8018232:	b292      	uxth	r2, r2
 8018234:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018238:	fb04 7403 	mla	r4, r4, r3, r7
 801823c:	f105 0c01 	add.w	ip, r5, #1
 8018240:	1c57      	adds	r7, r2, #1
 8018242:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018246:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801824a:	b2a4      	uxth	r4, r4
 801824c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018250:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018254:	433d      	orrs	r5, r7
 8018256:	1c67      	adds	r7, r4, #1
 8018258:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801825c:	0964      	lsrs	r4, r4, #5
 801825e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8018262:	4325      	orrs	r5, r4
 8018264:	8005      	strh	r5, [r0, #0]
 8018266:	e7bd      	b.n	80181e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018268:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801826a:	4418      	add	r0, r3
 801826c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801826e:	4499      	add	r9, r3
 8018270:	e795      	b.n	801819e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018272:	4b04      	ldr	r3, [pc, #16]	@ (8018284 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018274:	6818      	ldr	r0, [r3, #0]
 8018276:	6803      	ldr	r3, [r0, #0]
 8018278:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801827a:	4798      	blx	r3
 801827c:	e771      	b.n	8018162 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801827e:	bf00      	nop
 8018280:	20013ff0 	.word	0x20013ff0
 8018284:	20013ff8 	.word	0x20013ff8

08018288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801828c:	b087      	sub	sp, #28
 801828e:	4680      	mov	r8, r0
 8018290:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8018294:	460d      	mov	r5, r1
 8018296:	4614      	mov	r4, r2
 8018298:	2e00      	cmp	r6, #0
 801829a:	f000 80b9 	beq.w	8018410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801829e:	6810      	ldr	r0, [r2, #0]
 80182a0:	6851      	ldr	r1, [r2, #4]
 80182a2:	af02      	add	r7, sp, #8
 80182a4:	c703      	stmia	r7!, {r0, r1}
 80182a6:	6818      	ldr	r0, [r3, #0]
 80182a8:	6859      	ldr	r1, [r3, #4]
 80182aa:	af04      	add	r7, sp, #16
 80182ac:	c703      	stmia	r7!, {r0, r1}
 80182ae:	a802      	add	r0, sp, #8
 80182b0:	f7f6 ffca 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80182b4:	4621      	mov	r1, r4
 80182b6:	a804      	add	r0, sp, #16
 80182b8:	f7f6 ffee 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80182bc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80182c0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80182c4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80182c8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80182cc:	fb14 2103 	smlabb	r1, r4, r3, r2
 80182d0:	eb08 0401 	add.w	r4, r8, r1
 80182d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80182d8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80182dc:	440a      	add	r2, r1
 80182de:	f8ad 2010 	strh.w	r2, [sp, #16]
 80182e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80182e6:	4413      	add	r3, r2
 80182e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80182ec:	4b4a      	ldr	r3, [pc, #296]	@ (8018418 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80182ee:	6818      	ldr	r0, [r3, #0]
 80182f0:	6803      	ldr	r3, [r0, #0]
 80182f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80182f4:	4798      	blx	r3
 80182f6:	4b49      	ldr	r3, [pc, #292]	@ (801841c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80182f8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80182fc:	881a      	ldrh	r2, [r3, #0]
 80182fe:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018302:	2eff      	cmp	r6, #255	@ 0xff
 8018304:	fb02 c101 	mla	r1, r2, r1, ip
 8018308:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801830c:	fb02 f207 	mul.w	r2, r2, r7
 8018310:	f105 0104 	add.w	r1, r5, #4
 8018314:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018318:	461d      	mov	r5, r3
 801831a:	d05a      	beq.n	80183d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801831c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8018320:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018324:	b2b6      	uxth	r6, r6
 8018326:	fa1f fe8e 	uxth.w	lr, lr
 801832a:	9301      	str	r3, [sp, #4]
 801832c:	4282      	cmp	r2, r0
 801832e:	d96a      	bls.n	8018406 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018330:	eb00 0b0a 	add.w	fp, r0, sl
 8018334:	4583      	cmp	fp, r0
 8018336:	d940      	bls.n	80183ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018338:	f814 3b01 	ldrb.w	r3, [r4], #1
 801833c:	8805      	ldrh	r5, [r0, #0]
 801833e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018342:	122f      	asrs	r7, r5, #8
 8018344:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018348:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801834c:	fb17 f70e 	smulbb	r7, r7, lr
 8018350:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018354:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018358:	00ed      	lsls	r5, r5, #3
 801835a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801835e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018362:	10df      	asrs	r7, r3, #3
 8018364:	b2ed      	uxtb	r5, r5
 8018366:	00db      	lsls	r3, r3, #3
 8018368:	fa1f fc8c 	uxth.w	ip, ip
 801836c:	fb19 f90e 	smulbb	r9, r9, lr
 8018370:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018374:	b2db      	uxtb	r3, r3
 8018376:	fb15 f50e 	smulbb	r5, r5, lr
 801837a:	fb07 9706 	mla	r7, r7, r6, r9
 801837e:	fb03 5306 	mla	r3, r3, r6, r5
 8018382:	f10c 0901 	add.w	r9, ip, #1
 8018386:	b29b      	uxth	r3, r3
 8018388:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801838c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018390:	f103 0c01 	add.w	ip, r3, #1
 8018394:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018398:	b2bf      	uxth	r7, r7
 801839a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801839e:	ea4c 0c09 	orr.w	ip, ip, r9
 80183a2:	f107 0901 	add.w	r9, r7, #1
 80183a6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80183aa:	097f      	lsrs	r7, r7, #5
 80183ac:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80183b0:	ea4c 0c07 	orr.w	ip, ip, r7
 80183b4:	f820 cb02 	strh.w	ip, [r0], #2
 80183b8:	e7bc      	b.n	8018334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80183ba:	9b01      	ldr	r3, [sp, #4]
 80183bc:	881b      	ldrh	r3, [r3, #0]
 80183be:	eba3 0308 	sub.w	r3, r3, r8
 80183c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80183ca:	eba3 0308 	sub.w	r3, r3, r8
 80183ce:	441c      	add	r4, r3
 80183d0:	e7ac      	b.n	801832c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80183d2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80183d6:	4282      	cmp	r2, r0
 80183d8:	d915      	bls.n	8018406 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80183da:	eb00 060a 	add.w	r6, r0, sl
 80183de:	4286      	cmp	r6, r0
 80183e0:	d906      	bls.n	80183f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80183e2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80183e6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80183ea:	f820 3b02 	strh.w	r3, [r0], #2
 80183ee:	e7f6      	b.n	80183de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80183f0:	882b      	ldrh	r3, [r5, #0]
 80183f2:	eba3 0308 	sub.w	r3, r3, r8
 80183f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183fa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80183fe:	eba3 0308 	sub.w	r3, r3, r8
 8018402:	441c      	add	r4, r3
 8018404:	e7e7      	b.n	80183d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018406:	4b04      	ldr	r3, [pc, #16]	@ (8018418 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018408:	6818      	ldr	r0, [r3, #0]
 801840a:	6803      	ldr	r3, [r0, #0]
 801840c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801840e:	4798      	blx	r3
 8018410:	b007      	add	sp, #28
 8018412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018416:	bf00      	nop
 8018418:	20013ff8 	.word	0x20013ff8
 801841c:	20013ff0 	.word	0x20013ff0

08018420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018424:	b091      	sub	sp, #68	@ 0x44
 8018426:	4680      	mov	r8, r0
 8018428:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801842c:	460f      	mov	r7, r1
 801842e:	4614      	mov	r4, r2
 8018430:	2d00      	cmp	r5, #0
 8018432:	d051      	beq.n	80184d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018434:	6810      	ldr	r0, [r2, #0]
 8018436:	6851      	ldr	r1, [r2, #4]
 8018438:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801863c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801843c:	ae0c      	add	r6, sp, #48	@ 0x30
 801843e:	c603      	stmia	r6!, {r0, r1}
 8018440:	6818      	ldr	r0, [r3, #0]
 8018442:	6859      	ldr	r1, [r3, #4]
 8018444:	ae0e      	add	r6, sp, #56	@ 0x38
 8018446:	c603      	stmia	r6!, {r0, r1}
 8018448:	a80c      	add	r0, sp, #48	@ 0x30
 801844a:	f7f6 fefd 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801844e:	4621      	mov	r1, r4
 8018450:	a80e      	add	r0, sp, #56	@ 0x38
 8018452:	f7f6 ff21 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018456:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801845a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801845e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8018462:	f8d9 0000 	ldr.w	r0, [r9]
 8018466:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801846a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801846e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018472:	eb08 0401 	add.w	r4, r8, r1
 8018476:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801847a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8018640 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801847e:	440a      	add	r2, r1
 8018480:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018484:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8018488:	4413      	add	r3, r2
 801848a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801848e:	6803      	ldr	r3, [r0, #0]
 8018490:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018492:	4798      	blx	r3
 8018494:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018498:	f8d9 0000 	ldr.w	r0, [r9]
 801849c:	d01f      	beq.n	80184de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801849e:	2200      	movs	r2, #0
 80184a0:	6801      	ldr	r1, [r0, #0]
 80184a2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80184a6:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80184aa:	220b      	movs	r2, #11
 80184ac:	9207      	str	r2, [sp, #28]
 80184ae:	f8b8 2000 	ldrh.w	r2, [r8]
 80184b2:	9206      	str	r2, [sp, #24]
 80184b4:	2201      	movs	r2, #1
 80184b6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80184ba:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80184be:	9203      	str	r2, [sp, #12]
 80184c0:	fa1f f28a 	uxth.w	r2, sl
 80184c4:	9202      	str	r2, [sp, #8]
 80184c6:	b2b6      	uxth	r6, r6
 80184c8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80184cc:	9200      	str	r2, [sp, #0]
 80184ce:	9601      	str	r6, [sp, #4]
 80184d0:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 80184d2:	463a      	mov	r2, r7
 80184d4:	4621      	mov	r1, r4
 80184d6:	47a8      	blx	r5
 80184d8:	b011      	add	sp, #68	@ 0x44
 80184da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184de:	6803      	ldr	r3, [r0, #0]
 80184e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80184e2:	4798      	blx	r3
 80184e4:	f8b8 2000 	ldrh.w	r2, [r8]
 80184e8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80184ec:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 80184f0:	2dff      	cmp	r5, #255	@ 0xff
 80184f2:	fb02 1303 	mla	r3, r2, r3, r1
 80184f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80184fa:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80184fe:	fb0a fa02 	mul.w	sl, sl, r2
 8018502:	d062      	beq.n	80185ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018504:	ea6f 0c05 	mvn.w	ip, r5
 8018508:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801850c:	930a      	str	r3, [sp, #40]	@ 0x28
 801850e:	b2ad      	uxth	r5, r5
 8018510:	fa5f fc8c 	uxtb.w	ip, ip
 8018514:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8018518:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801851a:	4298      	cmp	r0, r3
 801851c:	f080 8085 	bcs.w	801862a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018520:	eb00 0b09 	add.w	fp, r0, r9
 8018524:	4558      	cmp	r0, fp
 8018526:	d246      	bcs.n	80185b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018528:	f814 eb01 	ldrb.w	lr, [r4], #1
 801852c:	2303      	movs	r3, #3
 801852e:	2204      	movs	r2, #4
 8018530:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018534:	eb07 0a0e 	add.w	sl, r7, lr
 8018538:	8803      	ldrh	r3, [r0, #0]
 801853a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801853e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018542:	1219      	asrs	r1, r3, #8
 8018544:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018548:	fb18 f805 	smulbb	r8, r8, r5
 801854c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018550:	10da      	asrs	r2, r3, #3
 8018552:	fb01 810c 	mla	r1, r1, ip, r8
 8018556:	00db      	lsls	r3, r3, #3
 8018558:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801855c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018560:	b2db      	uxtb	r3, r3
 8018562:	fb18 f805 	smulbb	r8, r8, r5
 8018566:	fb1e fe05 	smulbb	lr, lr, r5
 801856a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801856e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8018572:	b289      	uxth	r1, r1
 8018574:	fb02 820c 	mla	r2, r2, ip, r8
 8018578:	fb03 e30c 	mla	r3, r3, ip, lr
 801857c:	b292      	uxth	r2, r2
 801857e:	b29b      	uxth	r3, r3
 8018580:	f101 0801 	add.w	r8, r1, #1
 8018584:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018588:	f103 0e01 	add.w	lr, r3, #1
 801858c:	f102 0801 	add.w	r8, r2, #1
 8018590:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018594:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018598:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801859c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80185a0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80185a4:	ea4e 0101 	orr.w	r1, lr, r1
 80185a8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80185ac:	ea41 0108 	orr.w	r1, r1, r8
 80185b0:	f820 1b02 	strh.w	r1, [r0], #2
 80185b4:	e7b6      	b.n	8018524 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80185b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80185b8:	881b      	ldrh	r3, [r3, #0]
 80185ba:	1b9b      	subs	r3, r3, r6
 80185bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80185c0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80185c4:	1b9b      	subs	r3, r3, r6
 80185c6:	441c      	add	r4, r3
 80185c8:	e7a6      	b.n	8018518 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80185ca:	491b      	ldr	r1, [pc, #108]	@ (8018638 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80185cc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80185d0:	2203      	movs	r2, #3
 80185d2:	2504      	movs	r5, #4
 80185d4:	4550      	cmp	r0, sl
 80185d6:	d228      	bcs.n	801862a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80185d8:	eb00 0c09 	add.w	ip, r0, r9
 80185dc:	4560      	cmp	r0, ip
 80185de:	4623      	mov	r3, r4
 80185e0:	d219      	bcs.n	8018616 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80185e2:	f893 e000 	ldrb.w	lr, [r3]
 80185e6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80185ea:	eb07 0b0e 	add.w	fp, r7, lr
 80185ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80185f2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80185f6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80185fa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80185fe:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018602:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018606:	ea43 030b 	orr.w	r3, r3, fp
 801860a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801860e:	3401      	adds	r4, #1
 8018610:	f820 3b02 	strh.w	r3, [r0], #2
 8018614:	e7e2      	b.n	80185dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018616:	f8b8 3000 	ldrh.w	r3, [r8]
 801861a:	1b9b      	subs	r3, r3, r6
 801861c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018620:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018624:	1b9b      	subs	r3, r3, r6
 8018626:	441c      	add	r4, r3
 8018628:	e7d4      	b.n	80185d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801862a:	4b04      	ldr	r3, [pc, #16]	@ (801863c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801862c:	6818      	ldr	r0, [r3, #0]
 801862e:	6803      	ldr	r3, [r0, #0]
 8018630:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018632:	4798      	blx	r3
 8018634:	e750      	b.n	80184d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018636:	bf00      	nop
 8018638:	fffff800 	.word	0xfffff800
 801863c:	20013ff8 	.word	0x20013ff8
 8018640:	20013ff0 	.word	0x20013ff0

08018644 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018644:	b4f0      	push	{r4, r5, r6, r7}
 8018646:	460c      	mov	r4, r1
 8018648:	4611      	mov	r1, r2
 801864a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801864e:	780f      	ldrb	r7, [r1, #0]
 8018650:	784e      	ldrb	r6, [r1, #1]
 8018652:	2f01      	cmp	r7, #1
 8018654:	461a      	mov	r2, r3
 8018656:	9b04      	ldr	r3, [sp, #16]
 8018658:	d038      	beq.n	80186cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801865a:	d31f      	bcc.n	801869c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801865c:	2f02      	cmp	r7, #2
 801865e:	d14d      	bne.n	80186fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018660:	2e03      	cmp	r6, #3
 8018662:	d84b      	bhi.n	80186fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018664:	e8df f006 	tbb	[pc, r6]
 8018668:	17140702 	.word	0x17140702
 801866c:	9504      	str	r5, [sp, #16]
 801866e:	4620      	mov	r0, r4
 8018670:	bcf0      	pop	{r4, r5, r6, r7}
 8018672:	f7ff be09 	b.w	8018288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8018676:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018678:	2800      	cmp	r0, #0
 801867a:	d03f      	beq.n	80186fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801867c:	6806      	ldr	r6, [r0, #0]
 801867e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018682:	68b5      	ldr	r5, [r6, #8]
 8018684:	4613      	mov	r3, r2
 8018686:	46ac      	mov	ip, r5
 8018688:	460a      	mov	r2, r1
 801868a:	4621      	mov	r1, r4
 801868c:	bcf0      	pop	{r4, r5, r6, r7}
 801868e:	4760      	bx	ip
 8018690:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018694:	e7f0      	b.n	8018678 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018696:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801869a:	e7ed      	b.n	8018678 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801869c:	2e03      	cmp	r6, #3
 801869e:	d82d      	bhi.n	80186fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80186a0:	e8df f006 	tbb	[pc, r6]
 80186a4:	110e0702 	.word	0x110e0702
 80186a8:	9504      	str	r5, [sp, #16]
 80186aa:	4620      	mov	r0, r4
 80186ac:	bcf0      	pop	{r4, r5, r6, r7}
 80186ae:	f7ff bd05 	b.w	80180bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80186b2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80186b4:	b310      	cbz	r0, 80186fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80186b6:	6806      	ldr	r6, [r0, #0]
 80186b8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80186bc:	68f5      	ldr	r5, [r6, #12]
 80186be:	e7e1      	b.n	8018684 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80186c0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80186c4:	e7f6      	b.n	80186b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80186c6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80186ca:	e7f3      	b.n	80186b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80186cc:	2e03      	cmp	r6, #3
 80186ce:	d815      	bhi.n	80186fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80186d0:	e8df f006 	tbb	[pc, r6]
 80186d4:	110e0702 	.word	0x110e0702
 80186d8:	9504      	str	r5, [sp, #16]
 80186da:	4620      	mov	r0, r4
 80186dc:	bcf0      	pop	{r4, r5, r6, r7}
 80186de:	f7ff be9f 	b.w	8018420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80186e2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80186e4:	b150      	cbz	r0, 80186fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80186e6:	6806      	ldr	r6, [r0, #0]
 80186e8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80186ec:	6935      	ldr	r5, [r6, #16]
 80186ee:	e7c9      	b.n	8018684 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80186f0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80186f4:	e7f6      	b.n	80186e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80186f6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80186fa:	e7f3      	b.n	80186e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80186fc:	bcf0      	pop	{r4, r5, r6, r7}
 80186fe:	4770      	bx	lr

08018700 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018704:	4604      	mov	r4, r0
 8018706:	b087      	sub	sp, #28
 8018708:	6810      	ldr	r0, [r2, #0]
 801870a:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801870e:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8018948 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018712:	460e      	mov	r6, r1
 8018714:	6851      	ldr	r1, [r2, #4]
 8018716:	ad02      	add	r5, sp, #8
 8018718:	c503      	stmia	r5!, {r0, r1}
 801871a:	6818      	ldr	r0, [r3, #0]
 801871c:	6859      	ldr	r1, [r3, #4]
 801871e:	ad04      	add	r5, sp, #16
 8018720:	4617      	mov	r7, r2
 8018722:	c503      	stmia	r5!, {r0, r1}
 8018724:	a802      	add	r0, sp, #8
 8018726:	f7f6 fd8f 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801872a:	4639      	mov	r1, r7
 801872c:	a804      	add	r0, sp, #16
 801872e:	f7f6 fdb3 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018732:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018736:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801873a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801873e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018742:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018746:	fb11 2103 	smlabb	r1, r1, r3, r2
 801874a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801874e:	440e      	add	r6, r1
 8018750:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018754:	440a      	add	r2, r1
 8018756:	f8ad 2010 	strh.w	r2, [sp, #16]
 801875a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801875e:	4413      	add	r3, r2
 8018760:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018764:	4b77      	ldr	r3, [pc, #476]	@ (8018944 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018766:	6818      	ldr	r0, [r3, #0]
 8018768:	6803      	ldr	r3, [r0, #0]
 801876a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801876c:	4798      	blx	r3
 801876e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018772:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018776:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801877a:	fb0b 2303 	mla	r3, fp, r3, r2
 801877e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018782:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018786:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801878a:	fb05 f50b 	mul.w	r5, r5, fp
 801878e:	9300      	str	r3, [sp, #0]
 8018790:	d069      	beq.n	8018866 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018792:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018796:	4558      	cmp	r0, fp
 8018798:	f080 80cc 	bcs.w	8018934 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801879c:	9b00      	ldr	r3, [sp, #0]
 801879e:	18c3      	adds	r3, r0, r3
 80187a0:	9301      	str	r3, [sp, #4]
 80187a2:	4631      	mov	r1, r6
 80187a4:	9b01      	ldr	r3, [sp, #4]
 80187a6:	4298      	cmp	r0, r3
 80187a8:	d24f      	bcs.n	801884a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80187aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80187ae:	2a00      	cmp	r2, #0
 80187b0:	d048      	beq.n	8018844 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80187b2:	fb0a f202 	mul.w	r2, sl, r2
 80187b6:	1c53      	adds	r3, r2, #1
 80187b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80187bc:	121b      	asrs	r3, r3, #8
 80187be:	d041      	beq.n	8018844 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80187c0:	8802      	ldrh	r2, [r0, #0]
 80187c2:	f8b4 c000 	ldrh.w	ip, [r4]
 80187c6:	b29e      	uxth	r6, r3
 80187c8:	1215      	asrs	r5, r2, #8
 80187ca:	43db      	mvns	r3, r3
 80187cc:	b2db      	uxtb	r3, r3
 80187ce:	ea4f 272c 	mov.w	r7, ip, asr #8
 80187d2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80187d6:	fb15 f503 	smulbb	r5, r5, r3
 80187da:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80187de:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80187e2:	00d2      	lsls	r2, r2, #3
 80187e4:	fb07 5706 	mla	r7, r7, r6, r5
 80187e8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80187ec:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80187f0:	b2d2      	uxtb	r2, r2
 80187f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80187f6:	b2bf      	uxth	r7, r7
 80187f8:	fb1e fe03 	smulbb	lr, lr, r3
 80187fc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018800:	fa5f fc8c 	uxtb.w	ip, ip
 8018804:	fb12 f203 	smulbb	r2, r2, r3
 8018808:	fb05 e506 	mla	r5, r5, r6, lr
 801880c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018810:	f107 0e01 	add.w	lr, r7, #1
 8018814:	fa1f fc8c 	uxth.w	ip, ip
 8018818:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801881c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8018820:	f10c 0701 	add.w	r7, ip, #1
 8018824:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018828:	b2ad      	uxth	r5, r5
 801882a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801882e:	ea47 070e 	orr.w	r7, r7, lr
 8018832:	f105 0e01 	add.w	lr, r5, #1
 8018836:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801883a:	096d      	lsrs	r5, r5, #5
 801883c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018840:	432f      	orrs	r7, r5
 8018842:	8007      	strh	r7, [r0, #0]
 8018844:	3002      	adds	r0, #2
 8018846:	3402      	adds	r4, #2
 8018848:	e7ac      	b.n	80187a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801884a:	f8b9 3000 	ldrh.w	r3, [r9]
 801884e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018852:	eba3 0308 	sub.w	r3, r3, r8
 8018856:	eba6 0608 	sub.w	r6, r6, r8
 801885a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801885e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018862:	440e      	add	r6, r1
 8018864:	e797      	b.n	8018796 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018866:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801886a:	42a8      	cmp	r0, r5
 801886c:	d262      	bcs.n	8018934 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801886e:	9b00      	ldr	r3, [sp, #0]
 8018870:	4631      	mov	r1, r6
 8018872:	eb00 0b03 	add.w	fp, r0, r3
 8018876:	4558      	cmp	r0, fp
 8018878:	d24e      	bcs.n	8018918 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801887a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801887e:	b12b      	cbz	r3, 801888c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018880:	2bff      	cmp	r3, #255	@ 0xff
 8018882:	f8b4 e000 	ldrh.w	lr, [r4]
 8018886:	d104      	bne.n	8018892 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018888:	f8a0 e000 	strh.w	lr, [r0]
 801888c:	3002      	adds	r0, #2
 801888e:	3402      	adds	r4, #2
 8018890:	e7f1      	b.n	8018876 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018892:	8802      	ldrh	r2, [r0, #0]
 8018894:	b29f      	uxth	r7, r3
 8018896:	1216      	asrs	r6, r2, #8
 8018898:	43db      	mvns	r3, r3
 801889a:	b2db      	uxtb	r3, r3
 801889c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80188a0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80188a4:	fb16 f603 	smulbb	r6, r6, r3
 80188a8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80188ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80188b0:	00d2      	lsls	r2, r2, #3
 80188b2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80188b6:	b2d2      	uxtb	r2, r2
 80188b8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80188bc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80188c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80188c4:	fb1a fa03 	smulbb	sl, sl, r3
 80188c8:	fa1f fc8c 	uxth.w	ip, ip
 80188cc:	fb12 f303 	smulbb	r3, r2, r3
 80188d0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80188d4:	fa5f fe8e 	uxtb.w	lr, lr
 80188d8:	fb06 a607 	mla	r6, r6, r7, sl
 80188dc:	f10c 0201 	add.w	r2, ip, #1
 80188e0:	fb0e 3307 	mla	r3, lr, r7, r3
 80188e4:	b2b6      	uxth	r6, r6
 80188e6:	b29b      	uxth	r3, r3
 80188e8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80188ec:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80188f0:	f106 0a01 	add.w	sl, r6, #1
 80188f4:	f103 0c01 	add.w	ip, r3, #1
 80188f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80188fc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018900:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018904:	0976      	lsrs	r6, r6, #5
 8018906:	ea4c 0c02 	orr.w	ip, ip, r2
 801890a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801890e:	ea4c 0c06 	orr.w	ip, ip, r6
 8018912:	f8a0 c000 	strh.w	ip, [r0]
 8018916:	e7b9      	b.n	801888c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018918:	f8b9 3000 	ldrh.w	r3, [r9]
 801891c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018920:	eba3 0308 	sub.w	r3, r3, r8
 8018924:	eba6 0608 	sub.w	r6, r6, r8
 8018928:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801892c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018930:	440e      	add	r6, r1
 8018932:	e79a      	b.n	801886a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018934:	4b03      	ldr	r3, [pc, #12]	@ (8018944 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018936:	6818      	ldr	r0, [r3, #0]
 8018938:	6803      	ldr	r3, [r0, #0]
 801893a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801893c:	4798      	blx	r3
 801893e:	b007      	add	sp, #28
 8018940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018944:	20013ff8 	.word	0x20013ff8
 8018948:	20013ff0 	.word	0x20013ff0

0801894c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801894c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018950:	b089      	sub	sp, #36	@ 0x24
 8018952:	4607      	mov	r7, r0
 8018954:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8018958:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801895a:	4688      	mov	r8, r1
 801895c:	4692      	mov	sl, r2
 801895e:	4699      	mov	r9, r3
 8018960:	2e00      	cmp	r6, #0
 8018962:	d048      	beq.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018964:	4608      	mov	r0, r1
 8018966:	f7fa f81d 	bl	80129a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801896a:	4605      	mov	r5, r0
 801896c:	4640      	mov	r0, r8
 801896e:	f7fa f84d 	bl	8012a0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018972:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018976:	4640      	mov	r0, r8
 8018978:	f8ad a008 	strh.w	sl, [sp, #8]
 801897c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018980:	f8ad 900a 	strh.w	r9, [sp, #10]
 8018984:	f7fa f900 	bl	8012b88 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018988:	4605      	mov	r5, r0
 801898a:	4640      	mov	r0, r8
 801898c:	f7fa f92c 	bl	8012be8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018990:	4682      	mov	sl, r0
 8018992:	4640      	mov	r0, r8
 8018994:	f7fa f97c 	bl	8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018998:	2810      	cmp	r0, #16
 801899a:	d82c      	bhi.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801899c:	e8df f010 	tbh	[pc, r0, lsl #1]
 80189a0:	00ba00ca 	.word	0x00ba00ca
 80189a4:	002b0011 	.word	0x002b0011
 80189a8:	002b002b 	.word	0x002b002b
 80189ac:	002b002b 	.word	0x002b002b
 80189b0:	002b002b 	.word	0x002b002b
 80189b4:	00c1002b 	.word	0x00c1002b
 80189b8:	002b002b 	.word	0x002b002b
 80189bc:	002b0180 	.word	0x002b0180
 80189c0:	0173      	.short	0x0173
 80189c2:	4bbc      	ldr	r3, [pc, #752]	@ (8018cb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 80189c4:	6818      	ldr	r0, [r3, #0]
 80189c6:	6803      	ldr	r3, [r0, #0]
 80189c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80189ca:	4798      	blx	r3
 80189cc:	2eff      	cmp	r6, #255	@ 0xff
 80189ce:	d101      	bne.n	80189d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80189d0:	0683      	lsls	r3, r0, #26
 80189d2:	d506      	bpl.n	80189e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 80189d4:	4633      	mov	r3, r6
 80189d6:	4622      	mov	r2, r4
 80189d8:	a902      	add	r1, sp, #8
 80189da:	4628      	mov	r0, r5
 80189dc:	f7ff f8fc 	bl	8017bd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80189e0:	e009      	b.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80189e2:	4640      	mov	r0, r8
 80189e4:	f7fa f898 	bl	8012b18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80189e8:	b940      	cbnz	r0, 80189fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 80189ea:	4623      	mov	r3, r4
 80189ec:	aa02      	add	r2, sp, #8
 80189ee:	4629      	mov	r1, r5
 80189f0:	4638      	mov	r0, r7
 80189f2:	f7ff f9d7 	bl	8017da4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80189f6:	b009      	add	sp, #36	@ 0x24
 80189f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189fc:	f10d 0918 	add.w	r9, sp, #24
 8018a00:	4641      	mov	r1, r8
 8018a02:	4648      	mov	r0, r9
 8018a04:	f7fa f836 	bl	8012a74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018a08:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018a0c:	f10d 0810 	add.w	r8, sp, #16
 8018a10:	e888 0003 	stmia.w	r8, {r0, r1}
 8018a14:	4640      	mov	r0, r8
 8018a16:	4621      	mov	r1, r4
 8018a18:	f7f1 fca6 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 8018a1c:	4640      	mov	r0, r8
 8018a1e:	f7f1 fce6 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a22:	2800      	cmp	r0, #0
 8018a24:	d1d6      	bne.n	80189d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018a26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018a2a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018a2e:	4293      	cmp	r3, r2
 8018a30:	dd12      	ble.n	8018a58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8018a32:	1a9b      	subs	r3, r3, r2
 8018a34:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018a38:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018a3c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018a40:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018a44:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018a48:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018a4c:	464a      	mov	r2, r9
 8018a4e:	4633      	mov	r3, r6
 8018a50:	a902      	add	r1, sp, #8
 8018a52:	4628      	mov	r0, r5
 8018a54:	f7ff f8c0 	bl	8017bd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a58:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018a5c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018a60:	4293      	cmp	r3, r2
 8018a62:	dd12      	ble.n	8018a8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8018a64:	1a9b      	subs	r3, r3, r2
 8018a66:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018a6a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018a6e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018a72:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018a76:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018a7a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018a7e:	23ff      	movs	r3, #255	@ 0xff
 8018a80:	464a      	mov	r2, r9
 8018a82:	a902      	add	r1, sp, #8
 8018a84:	4628      	mov	r0, r5
 8018a86:	f7ff f8a7 	bl	8017bd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a8a:	4643      	mov	r3, r8
 8018a8c:	aa02      	add	r2, sp, #8
 8018a8e:	4629      	mov	r1, r5
 8018a90:	4638      	mov	r0, r7
 8018a92:	f7ff f987 	bl	8017da4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018a96:	88a2      	ldrh	r2, [r4, #4]
 8018a98:	8823      	ldrh	r3, [r4, #0]
 8018a9a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018a9e:	4413      	add	r3, r2
 8018aa0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018aa4:	440a      	add	r2, r1
 8018aa6:	b29b      	uxth	r3, r3
 8018aa8:	b292      	uxth	r2, r2
 8018aaa:	b211      	sxth	r1, r2
 8018aac:	b218      	sxth	r0, r3
 8018aae:	4288      	cmp	r0, r1
 8018ab0:	dd12      	ble.n	8018ad8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8018ab2:	1a9b      	subs	r3, r3, r2
 8018ab4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018ab8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018abc:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018ac0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018ac4:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018ac8:	23ff      	movs	r3, #255	@ 0xff
 8018aca:	464a      	mov	r2, r9
 8018acc:	a902      	add	r1, sp, #8
 8018ace:	4628      	mov	r0, r5
 8018ad0:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018ad4:	f7ff f880 	bl	8017bd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018ad8:	88e2      	ldrh	r2, [r4, #6]
 8018ada:	8863      	ldrh	r3, [r4, #2]
 8018adc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018ae0:	4413      	add	r3, r2
 8018ae2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018ae6:	440a      	add	r2, r1
 8018ae8:	b29b      	uxth	r3, r3
 8018aea:	b292      	uxth	r2, r2
 8018aec:	b211      	sxth	r1, r2
 8018aee:	b218      	sxth	r0, r3
 8018af0:	4288      	cmp	r0, r1
 8018af2:	dd80      	ble.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018af4:	1a9b      	subs	r3, r3, r2
 8018af6:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018afa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018afe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018b02:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018b06:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018b0a:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018b0e:	23ff      	movs	r3, #255	@ 0xff
 8018b10:	464a      	mov	r2, r9
 8018b12:	e761      	b.n	80189d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018b14:	4633      	mov	r3, r6
 8018b16:	4622      	mov	r2, r4
 8018b18:	a902      	add	r1, sp, #8
 8018b1a:	4628      	mov	r0, r5
 8018b1c:	f7ff f9b2 	bl	8017e84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018b20:	e769      	b.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b22:	e9cd 4600 	strd	r4, r6, [sp]
 8018b26:	ab02      	add	r3, sp, #8
 8018b28:	4652      	mov	r2, sl
 8018b2a:	4629      	mov	r1, r5
 8018b2c:	4638      	mov	r0, r7
 8018b2e:	f7ff fd89 	bl	8018644 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018b32:	e760      	b.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b34:	4640      	mov	r0, r8
 8018b36:	f7f9 ffef 	bl	8012b18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018b3a:	b948      	cbnz	r0, 8018b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018b3c:	683b      	ldr	r3, [r7, #0]
 8018b3e:	e9cd 6000 	strd	r6, r0, [sp]
 8018b42:	aa02      	add	r2, sp, #8
 8018b44:	68de      	ldr	r6, [r3, #12]
 8018b46:	4629      	mov	r1, r5
 8018b48:	4623      	mov	r3, r4
 8018b4a:	4638      	mov	r0, r7
 8018b4c:	47b0      	blx	r6
 8018b4e:	e752      	b.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b50:	f10d 0918 	add.w	r9, sp, #24
 8018b54:	4641      	mov	r1, r8
 8018b56:	4648      	mov	r0, r9
 8018b58:	f7f9 ff8c 	bl	8012a74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018b5c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018b60:	f10d 0810 	add.w	r8, sp, #16
 8018b64:	e888 0003 	stmia.w	r8, {r0, r1}
 8018b68:	4640      	mov	r0, r8
 8018b6a:	4621      	mov	r1, r4
 8018b6c:	f7f1 fbfc 	bl	800a368 <_ZN8touchgfx4RectaNERKS0_>
 8018b70:	4640      	mov	r0, r8
 8018b72:	f7f1 fc3c 	bl	800a3ee <_ZNK8touchgfx4Rect7isEmptyEv>
 8018b76:	b138      	cbz	r0, 8018b88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8018b78:	9600      	str	r6, [sp, #0]
 8018b7a:	4623      	mov	r3, r4
 8018b7c:	aa02      	add	r2, sp, #8
 8018b7e:	4651      	mov	r1, sl
 8018b80:	4628      	mov	r0, r5
 8018b82:	f7ff fdbd 	bl	8018700 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b86:	e736      	b.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b88:	683b      	ldr	r3, [r7, #0]
 8018b8a:	e9cd 6000 	strd	r6, r0, [sp]
 8018b8e:	aa02      	add	r2, sp, #8
 8018b90:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018b94:	4629      	mov	r1, r5
 8018b96:	4643      	mov	r3, r8
 8018b98:	4638      	mov	r0, r7
 8018b9a:	47d8      	blx	fp
 8018b9c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018ba0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018ba4:	4293      	cmp	r3, r2
 8018ba6:	dd13      	ble.n	8018bd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8018ba8:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018bac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018bb0:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018bb4:	1a9b      	subs	r3, r3, r2
 8018bb6:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018bba:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018bbe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018bc2:	9600      	str	r6, [sp, #0]
 8018bc4:	464b      	mov	r3, r9
 8018bc6:	aa02      	add	r2, sp, #8
 8018bc8:	4651      	mov	r1, sl
 8018bca:	4628      	mov	r0, r5
 8018bcc:	f7ff fd98 	bl	8018700 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018bd0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018bd4:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018bd8:	4293      	cmp	r3, r2
 8018bda:	dd13      	ble.n	8018c04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8018bdc:	1a9b      	subs	r3, r3, r2
 8018bde:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018be2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018be6:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018bea:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018bee:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018bf2:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018bf6:	9600      	str	r6, [sp, #0]
 8018bf8:	464b      	mov	r3, r9
 8018bfa:	aa02      	add	r2, sp, #8
 8018bfc:	4651      	mov	r1, sl
 8018bfe:	4628      	mov	r0, r5
 8018c00:	f7ff fd7e 	bl	8018700 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c04:	88a2      	ldrh	r2, [r4, #4]
 8018c06:	8823      	ldrh	r3, [r4, #0]
 8018c08:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018c0c:	4413      	add	r3, r2
 8018c0e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018c12:	440a      	add	r2, r1
 8018c14:	b29b      	uxth	r3, r3
 8018c16:	b292      	uxth	r2, r2
 8018c18:	b211      	sxth	r1, r2
 8018c1a:	b218      	sxth	r0, r3
 8018c1c:	4288      	cmp	r0, r1
 8018c1e:	dd13      	ble.n	8018c48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8018c20:	1a9b      	subs	r3, r3, r2
 8018c22:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018c26:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018c2a:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018c2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018c32:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018c36:	9600      	str	r6, [sp, #0]
 8018c38:	464b      	mov	r3, r9
 8018c3a:	aa02      	add	r2, sp, #8
 8018c3c:	4651      	mov	r1, sl
 8018c3e:	4628      	mov	r0, r5
 8018c40:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018c44:	f7ff fd5c 	bl	8018700 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c48:	88e2      	ldrh	r2, [r4, #6]
 8018c4a:	8863      	ldrh	r3, [r4, #2]
 8018c4c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018c50:	4413      	add	r3, r2
 8018c52:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018c56:	440a      	add	r2, r1
 8018c58:	b29b      	uxth	r3, r3
 8018c5a:	b292      	uxth	r2, r2
 8018c5c:	b211      	sxth	r1, r2
 8018c5e:	b218      	sxth	r0, r3
 8018c60:	4288      	cmp	r0, r1
 8018c62:	f77f aec8 	ble.w	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c66:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018c6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018c6e:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018c72:	1a9b      	subs	r3, r3, r2
 8018c74:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018c78:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018c7c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018c80:	9600      	str	r6, [sp, #0]
 8018c82:	464b      	mov	r3, r9
 8018c84:	e77a      	b.n	8018b7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8018c86:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018c8a:	2800      	cmp	r0, #0
 8018c8c:	f43f aeb3 	beq.w	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c90:	6803      	ldr	r3, [r0, #0]
 8018c92:	9600      	str	r6, [sp, #0]
 8018c94:	68de      	ldr	r6, [r3, #12]
 8018c96:	4623      	mov	r3, r4
 8018c98:	aa02      	add	r2, sp, #8
 8018c9a:	4629      	mov	r1, r5
 8018c9c:	47b0      	blx	r6
 8018c9e:	e6aa      	b.n	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ca0:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018ca4:	2800      	cmp	r0, #0
 8018ca6:	f43f aea6 	beq.w	80189f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018caa:	6803      	ldr	r3, [r0, #0]
 8018cac:	9600      	str	r6, [sp, #0]
 8018cae:	689e      	ldr	r6, [r3, #8]
 8018cb0:	e7f1      	b.n	8018c96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8018cb2:	bf00      	nop
 8018cb4:	20013ff8 	.word	0x20013ff8

08018cb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018cb8:	b180      	cbz	r0, 8018cdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018cba:	2903      	cmp	r1, #3
 8018cbc:	d81c      	bhi.n	8018cf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018cbe:	e8df f001 	tbb	[pc, r1]
 8018cc2:	1d02      	.short	0x1d02
 8018cc4:	1f08      	.short	0x1f08
 8018cc6:	4b10      	ldr	r3, [pc, #64]	@ (8018d08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018cc8:	8818      	ldrh	r0, [r3, #0]
 8018cca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018cce:	4240      	negs	r0, r0
 8018cd0:	4770      	bx	lr
 8018cd2:	4b0d      	ldr	r3, [pc, #52]	@ (8018d08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018cd4:	8818      	ldrh	r0, [r3, #0]
 8018cd6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018cda:	4770      	bx	lr
 8018cdc:	2903      	cmp	r1, #3
 8018cde:	d80b      	bhi.n	8018cf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018ce0:	a301      	add	r3, pc, #4	@ (adr r3, 8018ce8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018ce2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018ce6:	bf00      	nop
 8018ce8:	08018cfd 	.word	0x08018cfd
 8018cec:	08018cd3 	.word	0x08018cd3
 8018cf0:	08018d01 	.word	0x08018d01
 8018cf4:	08018cc7 	.word	0x08018cc7
 8018cf8:	2000      	movs	r0, #0
 8018cfa:	4770      	bx	lr
 8018cfc:	2001      	movs	r0, #1
 8018cfe:	4770      	bx	lr
 8018d00:	f04f 30ff 	mov.w	r0, #4294967295
 8018d04:	4770      	bx	lr
 8018d06:	bf00      	nop
 8018d08:	20013ff0 	.word	0x20013ff0

08018d0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018d0c:	b180      	cbz	r0, 8018d30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018d0e:	2903      	cmp	r1, #3
 8018d10:	d81c      	bhi.n	8018d4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018d12:	e8df f001 	tbb	[pc, r1]
 8018d16:	021d      	.short	0x021d
 8018d18:	071f      	.short	0x071f
 8018d1a:	4b10      	ldr	r3, [pc, #64]	@ (8018d5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018d1c:	8818      	ldrh	r0, [r3, #0]
 8018d1e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d22:	4770      	bx	lr
 8018d24:	4b0d      	ldr	r3, [pc, #52]	@ (8018d5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018d26:	8818      	ldrh	r0, [r3, #0]
 8018d28:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d2c:	4240      	negs	r0, r0
 8018d2e:	4770      	bx	lr
 8018d30:	2903      	cmp	r1, #3
 8018d32:	d80b      	bhi.n	8018d4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018d34:	a301      	add	r3, pc, #4	@ (adr r3, 8018d3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018d36:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018d3a:	bf00      	nop
 8018d3c:	08018d1b 	.word	0x08018d1b
 8018d40:	08018d55 	.word	0x08018d55
 8018d44:	08018d25 	.word	0x08018d25
 8018d48:	08018d51 	.word	0x08018d51
 8018d4c:	2000      	movs	r0, #0
 8018d4e:	4770      	bx	lr
 8018d50:	2001      	movs	r0, #1
 8018d52:	4770      	bx	lr
 8018d54:	f04f 30ff 	mov.w	r0, #4294967295
 8018d58:	4770      	bx	lr
 8018d5a:	bf00      	nop
 8018d5c:	20013ff0 	.word	0x20013ff0

08018d60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d64:	b099      	sub	sp, #100	@ 0x64
 8018d66:	910d      	str	r1, [sp, #52]	@ 0x34
 8018d68:	a914      	add	r1, sp, #80	@ 0x50
 8018d6a:	e881 000c 	stmia.w	r1, {r2, r3}
 8018d6e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8018d72:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018d74:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018d78:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8018d7c:	9310      	str	r3, [sp, #64]	@ 0x40
 8018d7e:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8018d82:	9308      	str	r3, [sp, #32]
 8018d84:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8018d88:	9309      	str	r3, [sp, #36]	@ 0x24
 8018d8a:	7b4b      	ldrb	r3, [r1, #13]
 8018d8c:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8018d90:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8018d94:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8018d98:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8018d9a:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8018d9e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8018da2:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8018da6:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8018daa:	f891 8006 	ldrb.w	r8, [r1, #6]
 8018dae:	ea58 0800 	orrs.w	r8, r8, r0
 8018db2:	f000 81ce 	beq.w	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018db6:	011b      	lsls	r3, r3, #4
 8018db8:	79c8      	ldrb	r0, [r1, #7]
 8018dba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8018dbe:	4303      	orrs	r3, r0
 8018dc0:	930c      	str	r3, [sp, #48]	@ 0x30
 8018dc2:	f000 81c6 	beq.w	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018dc6:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018dca:	b29b      	uxth	r3, r3
 8018dcc:	2d00      	cmp	r5, #0
 8018dce:	f000 812c 	beq.w	801902a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8018dd2:	1aed      	subs	r5, r5, r3
 8018dd4:	b2ad      	uxth	r5, r5
 8018dd6:	0429      	lsls	r1, r5, #16
 8018dd8:	d502      	bpl.n	8018de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8018dda:	1b64      	subs	r4, r4, r5
 8018ddc:	b224      	sxth	r4, r4
 8018dde:	2500      	movs	r5, #0
 8018de0:	f9b2 0000 	ldrsh.w	r0, [r2]
 8018de4:	8891      	ldrh	r1, [r2, #4]
 8018de6:	4284      	cmp	r4, r0
 8018de8:	b283      	uxth	r3, r0
 8018dea:	bfb8      	it	lt
 8018dec:	18ed      	addlt	r5, r5, r3
 8018dee:	440b      	add	r3, r1
 8018df0:	b21b      	sxth	r3, r3
 8018df2:	930a      	str	r3, [sp, #40]	@ 0x28
 8018df4:	88d3      	ldrh	r3, [r2, #6]
 8018df6:	8852      	ldrh	r2, [r2, #2]
 8018df8:	4413      	add	r3, r2
 8018dfa:	b21b      	sxth	r3, r3
 8018dfc:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018dfe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e00:	930e      	str	r3, [sp, #56]	@ 0x38
 8018e02:	bfb8      	it	lt
 8018e04:	1b2c      	sublt	r4, r5, r4
 8018e06:	4bb5      	ldr	r3, [pc, #724]	@ (80190dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8018e08:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018e0a:	f893 b000 	ldrb.w	fp, [r3]
 8018e0e:	bfbc      	itt	lt
 8018e10:	b2a5      	uxthlt	r5, r4
 8018e12:	4604      	movlt	r4, r0
 8018e14:	4653      	mov	r3, sl
 8018e16:	4621      	mov	r1, r4
 8018e18:	a814      	add	r0, sp, #80	@ 0x50
 8018e1a:	f7f6 f889 	bl	800ef30 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018e1e:	4621      	mov	r1, r4
 8018e20:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8018e24:	4653      	mov	r3, sl
 8018e26:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018e28:	a814      	add	r0, sp, #80	@ 0x50
 8018e2a:	f7f6 f89e 	bl	800ef6a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018e2e:	a918      	add	r1, sp, #96	@ 0x60
 8018e30:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018e34:	a817      	add	r0, sp, #92	@ 0x5c
 8018e36:	f7f6 f9c5 	bl	800f1c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018e3a:	f1ba 0f00 	cmp.w	sl, #0
 8018e3e:	f040 80f7 	bne.w	8019030 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8018e42:	f1bb 0f01 	cmp.w	fp, #1
 8018e46:	f040 80fb 	bne.w	8019040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8018e4a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018e4c:	2b00      	cmp	r3, #0
 8018e4e:	f040 81a8 	bne.w	80191a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 8018e52:	fa1f f288 	uxth.w	r2, r8
 8018e56:	b905      	cbnz	r5, 8018e5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8018e58:	b15e      	cbz	r6, 8018e72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8018e5a:	9808      	ldr	r0, [sp, #32]
 8018e5c:	fb06 5302 	mla	r3, r6, r2, r5
 8018e60:	4343      	muls	r3, r0
 8018e62:	4631      	mov	r1, r6
 8018e64:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8018e68:	f003 0607 	and.w	r6, r3, #7
 8018e6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e6e:	1a5b      	subs	r3, r3, r1
 8018e70:	930e      	str	r3, [sp, #56]	@ 0x38
 8018e72:	f10b 31ff 	add.w	r1, fp, #4294967295
 8018e76:	424b      	negs	r3, r1
 8018e78:	414b      	adcs	r3, r1
 8018e7a:	4618      	mov	r0, r3
 8018e7c:	4651      	mov	r1, sl
 8018e7e:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e80:	f7ff ff1a 	bl	8018cb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018e84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e86:	4683      	mov	fp, r0
 8018e88:	4618      	mov	r0, r3
 8018e8a:	f7ff ff3f 	bl	8018d0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018e8e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018e90:	4603      	mov	r3, r0
 8018e92:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018e94:	eba1 0a00 	sub.w	sl, r1, r0
 8018e98:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018e9a:	458a      	cmp	sl, r1
 8018e9c:	bfa8      	it	ge
 8018e9e:	468a      	movge	sl, r1
 8018ea0:	f1ba 0f00 	cmp.w	sl, #0
 8018ea4:	f340 8155 	ble.w	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018ea8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8018eaa:	1b64      	subs	r4, r4, r5
 8018eac:	1b0c      	subs	r4, r1, r4
 8018eae:	4544      	cmp	r4, r8
 8018eb0:	bfd4      	ite	le
 8018eb2:	ebc5 0504 	rsble	r5, r5, r4
 8018eb6:	ebc5 0508 	rsbgt	r5, r5, r8
 8018eba:	2d00      	cmp	r5, #0
 8018ebc:	f340 8149 	ble.w	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018ec0:	9908      	ldr	r1, [sp, #32]
 8018ec2:	1b52      	subs	r2, r2, r5
 8018ec4:	434a      	muls	r2, r1
 8018ec6:	920e      	str	r2, [sp, #56]	@ 0x38
 8018ec8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8018eca:	2a00      	cmp	r2, #0
 8018ecc:	f040 8175 	bne.w	80191ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8018ed0:	4a83      	ldr	r2, [pc, #524]	@ (80190e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8018ed2:	930a      	str	r3, [sp, #40]	@ 0x28
 8018ed4:	6810      	ldr	r0, [r2, #0]
 8018ed6:	6802      	ldr	r2, [r0, #0]
 8018ed8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8018eda:	4790      	blx	r2
 8018edc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018ede:	9908      	ldr	r1, [sp, #32]
 8018ee0:	2201      	movs	r2, #1
 8018ee2:	408a      	lsls	r2, r1
 8018ee4:	3a01      	subs	r2, #1
 8018ee6:	497f      	ldr	r1, [pc, #508]	@ (80190e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8018ee8:	b2d2      	uxtb	r2, r2
 8018eea:	880c      	ldrh	r4, [r1, #0]
 8018eec:	920c      	str	r2, [sp, #48]	@ 0x30
 8018eee:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8018ef2:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8018ef6:	fb04 1202 	mla	r2, r4, r2, r1
 8018efa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018efe:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8018f02:	920a      	str	r2, [sp, #40]	@ 0x28
 8018f04:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8018f08:	9212      	str	r2, [sp, #72]	@ 0x48
 8018f0a:	b2e2      	uxtb	r2, r4
 8018f0c:	9211      	str	r2, [sp, #68]	@ 0x44
 8018f0e:	fa5f f289 	uxtb.w	r2, r9
 8018f12:	9210      	str	r2, [sp, #64]	@ 0x40
 8018f14:	4a74      	ldr	r2, [pc, #464]	@ (80190e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8018f16:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8018f1a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018f1e:	4022      	ands	r2, r4
 8018f20:	430a      	orrs	r2, r1
 8018f22:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8018f26:	ea42 0209 	orr.w	r2, r2, r9
 8018f2a:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8018f2e:	b292      	uxth	r2, r2
 8018f30:	fb05 3b1b 	mls	fp, r5, fp, r3
 8018f34:	920f      	str	r2, [sp, #60]	@ 0x3c
 8018f36:	460b      	mov	r3, r1
 8018f38:	783a      	ldrb	r2, [r7, #0]
 8018f3a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018f3c:	436b      	muls	r3, r5
 8018f3e:	4132      	asrs	r2, r6
 8018f40:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8018f44:	b2d2      	uxtb	r2, r2
 8018f46:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018f48:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018f4c:	f0c0 8149 	bcc.w	80191e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8018f50:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8018f54:	46a9      	mov	r9, r5
 8018f56:	f119 39ff 	adds.w	r9, r9, #4294967295
 8018f5a:	f0c0 8132 	bcc.w	80191c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8018f5e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018f60:	4013      	ands	r3, r2
 8018f62:	d054      	beq.n	801900e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 8018f64:	20ff      	movs	r0, #255	@ 0xff
 8018f66:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018f68:	fb90 f1f1 	sdiv	r1, r0, r1
 8018f6c:	434b      	muls	r3, r1
 8018f6e:	2bfe      	cmp	r3, #254	@ 0xfe
 8018f70:	dd03      	ble.n	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 8018f72:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018f74:	4281      	cmp	r1, r0
 8018f76:	f000 8122 	beq.w	80191be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8018f7a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018f7c:	f8b8 4000 	ldrh.w	r4, [r8]
 8018f80:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018f82:	fb11 f303 	smulbb	r3, r1, r3
 8018f86:	b29b      	uxth	r3, r3
 8018f88:	1c59      	adds	r1, r3, #1
 8018f8a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018f8e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018f92:	fa1f fe83 	uxth.w	lr, r3
 8018f96:	1221      	asrs	r1, r4, #8
 8018f98:	fb10 fb0e 	smulbb	fp, r0, lr
 8018f9c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018fa0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018fa2:	43db      	mvns	r3, r3
 8018fa4:	b2db      	uxtb	r3, r3
 8018fa6:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018faa:	fb01 b103 	mla	r1, r1, r3, fp
 8018fae:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8018fb2:	fb10 fb0e 	smulbb	fp, r0, lr
 8018fb6:	00e4      	lsls	r4, r4, #3
 8018fb8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8018fba:	b2e4      	uxtb	r4, r4
 8018fbc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018fc0:	fb10 fe0e 	smulbb	lr, r0, lr
 8018fc4:	fb04 e403 	mla	r4, r4, r3, lr
 8018fc8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8018fcc:	b289      	uxth	r1, r1
 8018fce:	b2a4      	uxth	r4, r4
 8018fd0:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8018fd4:	fb0c bc03 	mla	ip, ip, r3, fp
 8018fd8:	1c4b      	adds	r3, r1, #1
 8018fda:	f104 0b01 	add.w	fp, r4, #1
 8018fde:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018fe2:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8018fe6:	fa1f fc8c 	uxth.w	ip, ip
 8018fea:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8018fee:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018ff2:	ea4b 0101 	orr.w	r1, fp, r1
 8018ff6:	f10c 0b01 	add.w	fp, ip, #1
 8018ffa:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8018ffe:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019002:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019006:	ea41 010b 	orr.w	r1, r1, fp
 801900a:	f8a8 1000 	strh.w	r1, [r8]
 801900e:	9b08      	ldr	r3, [sp, #32]
 8019010:	441e      	add	r6, r3
 8019012:	b2b6      	uxth	r6, r6
 8019014:	2e07      	cmp	r6, #7
 8019016:	bf98      	it	ls
 8019018:	411a      	asrls	r2, r3
 801901a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801901c:	bf89      	itett	hi
 801901e:	787a      	ldrbhi	r2, [r7, #1]
 8019020:	b2d2      	uxtbls	r2, r2
 8019022:	3701      	addhi	r7, #1
 8019024:	2600      	movhi	r6, #0
 8019026:	4498      	add	r8, r3
 8019028:	e795      	b.n	8018f56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 801902a:	441c      	add	r4, r3
 801902c:	b224      	sxth	r4, r4
 801902e:	e6d7      	b.n	8018de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8019030:	f1ba 0f01 	cmp.w	sl, #1
 8019034:	f47f af09 	bne.w	8018e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019038:	f1bb 0f01 	cmp.w	fp, #1
 801903c:	f47f af05 	bne.w	8018e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019040:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019042:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019044:	1a99      	subs	r1, r3, r2
 8019046:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019048:	1b9b      	subs	r3, r3, r6
 801904a:	4299      	cmp	r1, r3
 801904c:	bfa8      	it	ge
 801904e:	4619      	movge	r1, r3
 8019050:	2900      	cmp	r1, #0
 8019052:	9112      	str	r1, [sp, #72]	@ 0x48
 8019054:	dd7d      	ble.n	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019056:	4a22      	ldr	r2, [pc, #136]	@ (80190e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8019058:	9211      	str	r2, [sp, #68]	@ 0x44
 801905a:	6810      	ldr	r0, [r2, #0]
 801905c:	6803      	ldr	r3, [r0, #0]
 801905e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019060:	4798      	blx	r3
 8019062:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8019066:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019068:	d006      	beq.n	8019078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801906a:	9b08      	ldr	r3, [sp, #32]
 801906c:	2b04      	cmp	r3, #4
 801906e:	d133      	bne.n	80190d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8019070:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019072:	3300      	adds	r3, #0
 8019074:	bf18      	it	ne
 8019076:	2301      	movne	r3, #1
 8019078:	0582      	lsls	r2, r0, #22
 801907a:	fa1f fc88 	uxth.w	ip, r8
 801907e:	f140 80b9 	bpl.w	80191f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019082:	9808      	ldr	r0, [sp, #32]
 8019084:	2808      	cmp	r0, #8
 8019086:	f040 80b5 	bne.w	80191f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801908a:	2b00      	cmp	r3, #0
 801908c:	d064      	beq.n	8019158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 801908e:	f10c 0c01 	add.w	ip, ip, #1
 8019092:	f02c 0301 	bic.w	r3, ip, #1
 8019096:	b29b      	uxth	r3, r3
 8019098:	bb45      	cbnz	r5, 80190ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801909a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801909c:	eb08 0004 	add.w	r0, r8, r4
 80190a0:	4290      	cmp	r0, r2
 80190a2:	dc23      	bgt.n	80190ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 80190a4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80190a6:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 80190aa:	6810      	ldr	r0, [r2, #0]
 80190ac:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80190b0:	6804      	ldr	r4, [r0, #0]
 80190b2:	9506      	str	r5, [sp, #24]
 80190b4:	f44f 7580 	mov.w	r5, #256	@ 0x100
 80190b8:	9505      	str	r5, [sp, #20]
 80190ba:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80190bc:	9302      	str	r3, [sp, #8]
 80190be:	b289      	uxth	r1, r1
 80190c0:	e9cd 3100 	strd	r3, r1, [sp]
 80190c4:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80190c8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80190cc:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 80190ce:	4673      	mov	r3, lr
 80190d0:	fb06 710c 	mla	r1, r6, ip, r7
 80190d4:	47a0      	blx	r4
 80190d6:	e03c      	b.n	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80190d8:	2300      	movs	r3, #0
 80190da:	e7cd      	b.n	8019078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80190dc:	20013fee 	.word	0x20013fee
 80190e0:	20013ff8 	.word	0x20013ff8
 80190e4:	20013ff0 	.word	0x20013ff0
 80190e8:	00fff800 	.word	0x00fff800
 80190ec:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80190ee:	eba4 0e05 	sub.w	lr, r4, r5
 80190f2:	eba2 0e0e 	sub.w	lr, r2, lr
 80190f6:	45c6      	cmp	lr, r8
 80190f8:	bfd4      	ite	le
 80190fa:	ebc5 0e0e 	rsble	lr, r5, lr
 80190fe:	ebc5 0e08 	rsbgt	lr, r5, r8
 8019102:	f1be 0f00 	cmp.w	lr, #0
 8019106:	d024      	beq.n	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019108:	07e8      	lsls	r0, r5, #31
 801910a:	f53f ae9e 	bmi.w	8018e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801910e:	f01e 0001 	ands.w	r0, lr, #1
 8019112:	f47f ae9a 	bne.w	8018e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019116:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019118:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 801911c:	6814      	ldr	r4, [r2, #0]
 801911e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019122:	086d      	lsrs	r5, r5, #1
 8019124:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019128:	fb06 560c 	mla	r6, r6, ip, r5
 801912c:	6825      	ldr	r5, [r4, #0]
 801912e:	9006      	str	r0, [sp, #24]
 8019130:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8019134:	9005      	str	r0, [sp, #20]
 8019136:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019138:	9302      	str	r3, [sp, #8]
 801913a:	e9cd 9003 	strd	r9, r0, [sp, #12]
 801913e:	b289      	uxth	r1, r1
 8019140:	fa1f f38e 	uxth.w	r3, lr
 8019144:	9101      	str	r1, [sp, #4]
 8019146:	9300      	str	r3, [sp, #0]
 8019148:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 801914a:	4643      	mov	r3, r8
 801914c:	19b9      	adds	r1, r7, r6
 801914e:	4620      	mov	r0, r4
 8019150:	47a8      	blx	r5
 8019152:	b019      	add	sp, #100	@ 0x64
 8019154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019158:	4a28      	ldr	r2, [pc, #160]	@ (80191fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801915a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801915e:	6810      	ldr	r0, [r2, #0]
 8019160:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019164:	f8d0 a000 	ldr.w	sl, [r0]
 8019168:	9306      	str	r3, [sp, #24]
 801916a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801916e:	9305      	str	r3, [sp, #20]
 8019170:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019172:	f8cd c008 	str.w	ip, [sp, #8]
 8019176:	e9cd 9303 	strd	r9, r3, [sp, #12]
 801917a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801917c:	1b64      	subs	r4, r4, r5
 801917e:	1b1c      	subs	r4, r3, r4
 8019180:	fb06 5608 	mla	r6, r6, r8, r5
 8019184:	4544      	cmp	r4, r8
 8019186:	bfd4      	ite	le
 8019188:	ebc5 0504 	rsble	r5, r5, r4
 801918c:	ebc5 0508 	rsbgt	r5, r5, r8
 8019190:	b289      	uxth	r1, r1
 8019192:	b2ad      	uxth	r5, r5
 8019194:	9101      	str	r1, [sp, #4]
 8019196:	9500      	str	r5, [sp, #0]
 8019198:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 801919c:	4673      	mov	r3, lr
 801919e:	19b9      	adds	r1, r7, r6
 80191a0:	e798      	b.n	80190d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 80191a2:	2208      	movs	r2, #8
 80191a4:	9b08      	ldr	r3, [sp, #32]
 80191a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80191aa:	1e5a      	subs	r2, r3, #1
 80191ac:	4442      	add	r2, r8
 80191ae:	fb92 f2f3 	sdiv	r2, r2, r3
 80191b2:	fb12 f203 	smulbb	r2, r2, r3
 80191b6:	b292      	uxth	r2, r2
 80191b8:	e64d      	b.n	8018e56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 80191ba:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80191bc:	e68f      	b.n	8018ede <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 80191be:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80191c0:	e723      	b.n	801900a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 80191c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80191c4:	b143      	cbz	r3, 80191d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 80191c6:	441e      	add	r6, r3
 80191c8:	b2b6      	uxth	r6, r6
 80191ca:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 80191ce:	f006 0607 	and.w	r6, r6, #7
 80191d2:	783a      	ldrb	r2, [r7, #0]
 80191d4:	4132      	asrs	r2, r6
 80191d6:	b2d2      	uxtb	r2, r2
 80191d8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80191da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80191dc:	4419      	add	r1, r3
 80191de:	910a      	str	r1, [sp, #40]	@ 0x28
 80191e0:	e6b2      	b.n	8018f48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 80191e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80191e4:	2b00      	cmp	r3, #0
 80191e6:	d1b4      	bne.n	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80191e8:	4b04      	ldr	r3, [pc, #16]	@ (80191fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 80191ea:	6818      	ldr	r0, [r3, #0]
 80191ec:	6803      	ldr	r3, [r0, #0]
 80191ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80191f0:	4798      	blx	r3
 80191f2:	e7ae      	b.n	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80191f4:	2b00      	cmp	r3, #0
 80191f6:	f47f af4a 	bne.w	801908e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 80191fa:	e626      	b.n	8018e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80191fc:	20013ff8 	.word	0x20013ff8

08019200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019200:	b538      	push	{r3, r4, r5, lr}
 8019202:	4c15      	ldr	r4, [pc, #84]	@ (8019258 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019204:	7823      	ldrb	r3, [r4, #0]
 8019206:	f3bf 8f5b 	dmb	ish
 801920a:	07da      	lsls	r2, r3, #31
 801920c:	4605      	mov	r5, r0
 801920e:	d40b      	bmi.n	8019228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019210:	4620      	mov	r0, r4
 8019212:	f008 fc48 	bl	8021aa6 <__cxa_guard_acquire>
 8019216:	b138      	cbz	r0, 8019228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019218:	4620      	mov	r0, r4
 801921a:	f008 fc50 	bl	8021abe <__cxa_guard_release>
 801921e:	4a0f      	ldr	r2, [pc, #60]	@ (801925c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019220:	490f      	ldr	r1, [pc, #60]	@ (8019260 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8019222:	4810      	ldr	r0, [pc, #64]	@ (8019264 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019224:	f008 fc38 	bl	8021a98 <__aeabi_atexit>
 8019228:	4c0f      	ldr	r4, [pc, #60]	@ (8019268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801922a:	7823      	ldrb	r3, [r4, #0]
 801922c:	f3bf 8f5b 	dmb	ish
 8019230:	07db      	lsls	r3, r3, #31
 8019232:	d40b      	bmi.n	801924c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019234:	4620      	mov	r0, r4
 8019236:	f008 fc36 	bl	8021aa6 <__cxa_guard_acquire>
 801923a:	b138      	cbz	r0, 801924c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801923c:	4620      	mov	r0, r4
 801923e:	f008 fc3e 	bl	8021abe <__cxa_guard_release>
 8019242:	4a06      	ldr	r2, [pc, #24]	@ (801925c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019244:	4909      	ldr	r1, [pc, #36]	@ (801926c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019246:	480a      	ldr	r0, [pc, #40]	@ (8019270 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019248:	f008 fc26 	bl	8021a98 <__aeabi_atexit>
 801924c:	4b05      	ldr	r3, [pc, #20]	@ (8019264 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801924e:	616b      	str	r3, [r5, #20]
 8019250:	4b07      	ldr	r3, [pc, #28]	@ (8019270 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019252:	61ab      	str	r3, [r5, #24]
 8019254:	bd38      	pop	{r3, r4, r5, pc}
 8019256:	bf00      	nop
 8019258:	200140dc 	.word	0x200140dc
 801925c:	20000000 	.word	0x20000000
 8019260:	08015309 	.word	0x08015309
 8019264:	200001ec 	.word	0x200001ec
 8019268:	200140e0 	.word	0x200140e0
 801926c:	08015307 	.word	0x08015307
 8019270:	200001f0 	.word	0x200001f0

08019274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019274:	b538      	push	{r3, r4, r5, lr}
 8019276:	4c15      	ldr	r4, [pc, #84]	@ (80192cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019278:	7823      	ldrb	r3, [r4, #0]
 801927a:	f3bf 8f5b 	dmb	ish
 801927e:	07da      	lsls	r2, r3, #31
 8019280:	4605      	mov	r5, r0
 8019282:	d40b      	bmi.n	801929c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019284:	4620      	mov	r0, r4
 8019286:	f008 fc0e 	bl	8021aa6 <__cxa_guard_acquire>
 801928a:	b138      	cbz	r0, 801929c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801928c:	4620      	mov	r0, r4
 801928e:	f008 fc16 	bl	8021abe <__cxa_guard_release>
 8019292:	4a0f      	ldr	r2, [pc, #60]	@ (80192d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019294:	490f      	ldr	r1, [pc, #60]	@ (80192d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019296:	4810      	ldr	r0, [pc, #64]	@ (80192d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019298:	f008 fbfe 	bl	8021a98 <__aeabi_atexit>
 801929c:	4c0f      	ldr	r4, [pc, #60]	@ (80192dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801929e:	7823      	ldrb	r3, [r4, #0]
 80192a0:	f3bf 8f5b 	dmb	ish
 80192a4:	07db      	lsls	r3, r3, #31
 80192a6:	d40b      	bmi.n	80192c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80192a8:	4620      	mov	r0, r4
 80192aa:	f008 fbfc 	bl	8021aa6 <__cxa_guard_acquire>
 80192ae:	b138      	cbz	r0, 80192c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80192b0:	4620      	mov	r0, r4
 80192b2:	f008 fc04 	bl	8021abe <__cxa_guard_release>
 80192b6:	4a06      	ldr	r2, [pc, #24]	@ (80192d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80192b8:	4909      	ldr	r1, [pc, #36]	@ (80192e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80192ba:	480a      	ldr	r0, [pc, #40]	@ (80192e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80192bc:	f008 fbec 	bl	8021a98 <__aeabi_atexit>
 80192c0:	4b05      	ldr	r3, [pc, #20]	@ (80192d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80192c2:	60eb      	str	r3, [r5, #12]
 80192c4:	4b07      	ldr	r3, [pc, #28]	@ (80192e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80192c6:	612b      	str	r3, [r5, #16]
 80192c8:	bd38      	pop	{r3, r4, r5, pc}
 80192ca:	bf00      	nop
 80192cc:	200140b4 	.word	0x200140b4
 80192d0:	20000000 	.word	0x20000000
 80192d4:	0801530d 	.word	0x0801530d
 80192d8:	200001c4 	.word	0x200001c4
 80192dc:	200140b8 	.word	0x200140b8
 80192e0:	0801530b 	.word	0x0801530b
 80192e4:	200001c8 	.word	0x200001c8

080192e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80192e8:	b510      	push	{r4, lr}
 80192ea:	4604      	mov	r4, r0
 80192ec:	f7ff ff88 	bl	8019200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80192f0:	4620      	mov	r0, r4
 80192f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192f6:	f7ff bfbd 	b.w	8019274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080192fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80192fc:	b538      	push	{r3, r4, r5, lr}
 80192fe:	4c15      	ldr	r4, [pc, #84]	@ (8019354 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019300:	7823      	ldrb	r3, [r4, #0]
 8019302:	f3bf 8f5b 	dmb	ish
 8019306:	07da      	lsls	r2, r3, #31
 8019308:	4605      	mov	r5, r0
 801930a:	d40b      	bmi.n	8019324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801930c:	4620      	mov	r0, r4
 801930e:	f008 fbca 	bl	8021aa6 <__cxa_guard_acquire>
 8019312:	b138      	cbz	r0, 8019324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019314:	4620      	mov	r0, r4
 8019316:	f008 fbd2 	bl	8021abe <__cxa_guard_release>
 801931a:	4a0f      	ldr	r2, [pc, #60]	@ (8019358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801931c:	490f      	ldr	r1, [pc, #60]	@ (801935c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801931e:	4810      	ldr	r0, [pc, #64]	@ (8019360 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019320:	f008 fbba 	bl	8021a98 <__aeabi_atexit>
 8019324:	4c0f      	ldr	r4, [pc, #60]	@ (8019364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8019326:	7823      	ldrb	r3, [r4, #0]
 8019328:	f3bf 8f5b 	dmb	ish
 801932c:	07db      	lsls	r3, r3, #31
 801932e:	d40b      	bmi.n	8019348 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019330:	4620      	mov	r0, r4
 8019332:	f008 fbb8 	bl	8021aa6 <__cxa_guard_acquire>
 8019336:	b138      	cbz	r0, 8019348 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019338:	4620      	mov	r0, r4
 801933a:	f008 fbc0 	bl	8021abe <__cxa_guard_release>
 801933e:	4a06      	ldr	r2, [pc, #24]	@ (8019358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019340:	4909      	ldr	r1, [pc, #36]	@ (8019368 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019342:	480a      	ldr	r0, [pc, #40]	@ (801936c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019344:	f008 fba8 	bl	8021a98 <__aeabi_atexit>
 8019348:	4b05      	ldr	r3, [pc, #20]	@ (8019360 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801934a:	626b      	str	r3, [r5, #36]	@ 0x24
 801934c:	4b07      	ldr	r3, [pc, #28]	@ (801936c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801934e:	62ab      	str	r3, [r5, #40]	@ 0x28
 8019350:	bd38      	pop	{r3, r4, r5, pc}
 8019352:	bf00      	nop
 8019354:	200140e4 	.word	0x200140e4
 8019358:	20000000 	.word	0x20000000
 801935c:	08015301 	.word	0x08015301
 8019360:	200001f4 	.word	0x200001f4
 8019364:	200140e8 	.word	0x200140e8
 8019368:	080152ff 	.word	0x080152ff
 801936c:	200001f8 	.word	0x200001f8

08019370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019370:	b538      	push	{r3, r4, r5, lr}
 8019372:	4c15      	ldr	r4, [pc, #84]	@ (80193c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019374:	7823      	ldrb	r3, [r4, #0]
 8019376:	f3bf 8f5b 	dmb	ish
 801937a:	07da      	lsls	r2, r3, #31
 801937c:	4605      	mov	r5, r0
 801937e:	d40b      	bmi.n	8019398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019380:	4620      	mov	r0, r4
 8019382:	f008 fb90 	bl	8021aa6 <__cxa_guard_acquire>
 8019386:	b138      	cbz	r0, 8019398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019388:	4620      	mov	r0, r4
 801938a:	f008 fb98 	bl	8021abe <__cxa_guard_release>
 801938e:	4a0f      	ldr	r2, [pc, #60]	@ (80193cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019390:	490f      	ldr	r1, [pc, #60]	@ (80193d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019392:	4810      	ldr	r0, [pc, #64]	@ (80193d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019394:	f008 fb80 	bl	8021a98 <__aeabi_atexit>
 8019398:	4c0f      	ldr	r4, [pc, #60]	@ (80193d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801939a:	7823      	ldrb	r3, [r4, #0]
 801939c:	f3bf 8f5b 	dmb	ish
 80193a0:	07db      	lsls	r3, r3, #31
 80193a2:	d40b      	bmi.n	80193bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80193a4:	4620      	mov	r0, r4
 80193a6:	f008 fb7e 	bl	8021aa6 <__cxa_guard_acquire>
 80193aa:	b138      	cbz	r0, 80193bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80193ac:	4620      	mov	r0, r4
 80193ae:	f008 fb86 	bl	8021abe <__cxa_guard_release>
 80193b2:	4a06      	ldr	r2, [pc, #24]	@ (80193cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80193b4:	4909      	ldr	r1, [pc, #36]	@ (80193dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80193b6:	480a      	ldr	r0, [pc, #40]	@ (80193e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80193b8:	f008 fb6e 	bl	8021a98 <__aeabi_atexit>
 80193bc:	4b05      	ldr	r3, [pc, #20]	@ (80193d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80193be:	61eb      	str	r3, [r5, #28]
 80193c0:	4b07      	ldr	r3, [pc, #28]	@ (80193e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80193c2:	622b      	str	r3, [r5, #32]
 80193c4:	bd38      	pop	{r3, r4, r5, pc}
 80193c6:	bf00      	nop
 80193c8:	200140bc 	.word	0x200140bc
 80193cc:	20000000 	.word	0x20000000
 80193d0:	08015305 	.word	0x08015305
 80193d4:	200001cc 	.word	0x200001cc
 80193d8:	200140c0 	.word	0x200140c0
 80193dc:	08015303 	.word	0x08015303
 80193e0:	200001d0 	.word	0x200001d0

080193e4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80193e4:	b510      	push	{r4, lr}
 80193e6:	4604      	mov	r4, r0
 80193e8:	f7ff ff88 	bl	80192fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80193ec:	4620      	mov	r0, r4
 80193ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80193f2:	f7ff bfbd 	b.w	8019370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080193f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80193f8:	b538      	push	{r3, r4, r5, lr}
 80193fa:	4c15      	ldr	r4, [pc, #84]	@ (8019450 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80193fc:	7823      	ldrb	r3, [r4, #0]
 80193fe:	f3bf 8f5b 	dmb	ish
 8019402:	07da      	lsls	r2, r3, #31
 8019404:	4605      	mov	r5, r0
 8019406:	d40b      	bmi.n	8019420 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019408:	4620      	mov	r0, r4
 801940a:	f008 fb4c 	bl	8021aa6 <__cxa_guard_acquire>
 801940e:	b138      	cbz	r0, 8019420 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019410:	4620      	mov	r0, r4
 8019412:	f008 fb54 	bl	8021abe <__cxa_guard_release>
 8019416:	4a0f      	ldr	r2, [pc, #60]	@ (8019454 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019418:	490f      	ldr	r1, [pc, #60]	@ (8019458 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801941a:	4810      	ldr	r0, [pc, #64]	@ (801945c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801941c:	f008 fb3c 	bl	8021a98 <__aeabi_atexit>
 8019420:	4c0f      	ldr	r4, [pc, #60]	@ (8019460 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8019422:	7823      	ldrb	r3, [r4, #0]
 8019424:	f3bf 8f5b 	dmb	ish
 8019428:	07db      	lsls	r3, r3, #31
 801942a:	d40b      	bmi.n	8019444 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801942c:	4620      	mov	r0, r4
 801942e:	f008 fb3a 	bl	8021aa6 <__cxa_guard_acquire>
 8019432:	b138      	cbz	r0, 8019444 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019434:	4620      	mov	r0, r4
 8019436:	f008 fb42 	bl	8021abe <__cxa_guard_release>
 801943a:	4a06      	ldr	r2, [pc, #24]	@ (8019454 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801943c:	4909      	ldr	r1, [pc, #36]	@ (8019464 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801943e:	480a      	ldr	r0, [pc, #40]	@ (8019468 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019440:	f008 fb2a 	bl	8021a98 <__aeabi_atexit>
 8019444:	4b05      	ldr	r3, [pc, #20]	@ (801945c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019446:	636b      	str	r3, [r5, #52]	@ 0x34
 8019448:	4b07      	ldr	r3, [pc, #28]	@ (8019468 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801944a:	63ab      	str	r3, [r5, #56]	@ 0x38
 801944c:	bd38      	pop	{r3, r4, r5, pc}
 801944e:	bf00      	nop
 8019450:	200140f4 	.word	0x200140f4
 8019454:	20000000 	.word	0x20000000
 8019458:	080152f9 	.word	0x080152f9
 801945c:	20000204 	.word	0x20000204
 8019460:	200140f8 	.word	0x200140f8
 8019464:	080152f7 	.word	0x080152f7
 8019468:	20000208 	.word	0x20000208

0801946c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801946c:	b538      	push	{r3, r4, r5, lr}
 801946e:	4c15      	ldr	r4, [pc, #84]	@ (80194c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019470:	7823      	ldrb	r3, [r4, #0]
 8019472:	f3bf 8f5b 	dmb	ish
 8019476:	07da      	lsls	r2, r3, #31
 8019478:	4605      	mov	r5, r0
 801947a:	d40b      	bmi.n	8019494 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801947c:	4620      	mov	r0, r4
 801947e:	f008 fb12 	bl	8021aa6 <__cxa_guard_acquire>
 8019482:	b138      	cbz	r0, 8019494 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019484:	4620      	mov	r0, r4
 8019486:	f008 fb1a 	bl	8021abe <__cxa_guard_release>
 801948a:	4a0f      	ldr	r2, [pc, #60]	@ (80194c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801948c:	490f      	ldr	r1, [pc, #60]	@ (80194cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801948e:	4810      	ldr	r0, [pc, #64]	@ (80194d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019490:	f008 fb02 	bl	8021a98 <__aeabi_atexit>
 8019494:	4c0f      	ldr	r4, [pc, #60]	@ (80194d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019496:	7823      	ldrb	r3, [r4, #0]
 8019498:	f3bf 8f5b 	dmb	ish
 801949c:	07db      	lsls	r3, r3, #31
 801949e:	d40b      	bmi.n	80194b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80194a0:	4620      	mov	r0, r4
 80194a2:	f008 fb00 	bl	8021aa6 <__cxa_guard_acquire>
 80194a6:	b138      	cbz	r0, 80194b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80194a8:	4620      	mov	r0, r4
 80194aa:	f008 fb08 	bl	8021abe <__cxa_guard_release>
 80194ae:	4a06      	ldr	r2, [pc, #24]	@ (80194c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80194b0:	4909      	ldr	r1, [pc, #36]	@ (80194d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80194b2:	480a      	ldr	r0, [pc, #40]	@ (80194dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80194b4:	f008 faf0 	bl	8021a98 <__aeabi_atexit>
 80194b8:	4b05      	ldr	r3, [pc, #20]	@ (80194d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80194ba:	62eb      	str	r3, [r5, #44]	@ 0x2c
 80194bc:	4b07      	ldr	r3, [pc, #28]	@ (80194dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80194be:	632b      	str	r3, [r5, #48]	@ 0x30
 80194c0:	bd38      	pop	{r3, r4, r5, pc}
 80194c2:	bf00      	nop
 80194c4:	200140c4 	.word	0x200140c4
 80194c8:	20000000 	.word	0x20000000
 80194cc:	080152fd 	.word	0x080152fd
 80194d0:	200001d4 	.word	0x200001d4
 80194d4:	200140c8 	.word	0x200140c8
 80194d8:	080152fb 	.word	0x080152fb
 80194dc:	200001d8 	.word	0x200001d8

080194e0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80194e0:	b510      	push	{r4, lr}
 80194e2:	4604      	mov	r4, r0
 80194e4:	f7ff ff88 	bl	80193f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80194e8:	4620      	mov	r0, r4
 80194ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80194ee:	f7ff bfbd 	b.w	801946c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080194f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80194f4:	b538      	push	{r3, r4, r5, lr}
 80194f6:	4c15      	ldr	r4, [pc, #84]	@ (801954c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80194f8:	7823      	ldrb	r3, [r4, #0]
 80194fa:	f3bf 8f5b 	dmb	ish
 80194fe:	07da      	lsls	r2, r3, #31
 8019500:	4605      	mov	r5, r0
 8019502:	d40b      	bmi.n	801951c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019504:	4620      	mov	r0, r4
 8019506:	f008 face 	bl	8021aa6 <__cxa_guard_acquire>
 801950a:	b138      	cbz	r0, 801951c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801950c:	4620      	mov	r0, r4
 801950e:	f008 fad6 	bl	8021abe <__cxa_guard_release>
 8019512:	4a0f      	ldr	r2, [pc, #60]	@ (8019550 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019514:	490f      	ldr	r1, [pc, #60]	@ (8019554 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019516:	4810      	ldr	r0, [pc, #64]	@ (8019558 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019518:	f008 fabe 	bl	8021a98 <__aeabi_atexit>
 801951c:	4c0f      	ldr	r4, [pc, #60]	@ (801955c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801951e:	7823      	ldrb	r3, [r4, #0]
 8019520:	f3bf 8f5b 	dmb	ish
 8019524:	07db      	lsls	r3, r3, #31
 8019526:	d40b      	bmi.n	8019540 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019528:	4620      	mov	r0, r4
 801952a:	f008 fabc 	bl	8021aa6 <__cxa_guard_acquire>
 801952e:	b138      	cbz	r0, 8019540 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019530:	4620      	mov	r0, r4
 8019532:	f008 fac4 	bl	8021abe <__cxa_guard_release>
 8019536:	4a06      	ldr	r2, [pc, #24]	@ (8019550 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019538:	4909      	ldr	r1, [pc, #36]	@ (8019560 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801953a:	480a      	ldr	r0, [pc, #40]	@ (8019564 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801953c:	f008 faac 	bl	8021a98 <__aeabi_atexit>
 8019540:	4b05      	ldr	r3, [pc, #20]	@ (8019558 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019542:	656b      	str	r3, [r5, #84]	@ 0x54
 8019544:	4b07      	ldr	r3, [pc, #28]	@ (8019564 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019546:	65ab      	str	r3, [r5, #88]	@ 0x58
 8019548:	bd38      	pop	{r3, r4, r5, pc}
 801954a:	bf00      	nop
 801954c:	200140fc 	.word	0x200140fc
 8019550:	20000000 	.word	0x20000000
 8019554:	080152e9 	.word	0x080152e9
 8019558:	2000020c 	.word	0x2000020c
 801955c:	20014100 	.word	0x20014100
 8019560:	080152e7 	.word	0x080152e7
 8019564:	20000210 	.word	0x20000210

08019568 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019568:	b538      	push	{r3, r4, r5, lr}
 801956a:	4c15      	ldr	r4, [pc, #84]	@ (80195c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801956c:	7823      	ldrb	r3, [r4, #0]
 801956e:	f3bf 8f5b 	dmb	ish
 8019572:	07da      	lsls	r2, r3, #31
 8019574:	4605      	mov	r5, r0
 8019576:	d40b      	bmi.n	8019590 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019578:	4620      	mov	r0, r4
 801957a:	f008 fa94 	bl	8021aa6 <__cxa_guard_acquire>
 801957e:	b138      	cbz	r0, 8019590 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019580:	4620      	mov	r0, r4
 8019582:	f008 fa9c 	bl	8021abe <__cxa_guard_release>
 8019586:	4a0f      	ldr	r2, [pc, #60]	@ (80195c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019588:	490f      	ldr	r1, [pc, #60]	@ (80195c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801958a:	4810      	ldr	r0, [pc, #64]	@ (80195cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801958c:	f008 fa84 	bl	8021a98 <__aeabi_atexit>
 8019590:	4c0f      	ldr	r4, [pc, #60]	@ (80195d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019592:	7823      	ldrb	r3, [r4, #0]
 8019594:	f3bf 8f5b 	dmb	ish
 8019598:	07db      	lsls	r3, r3, #31
 801959a:	d40b      	bmi.n	80195b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801959c:	4620      	mov	r0, r4
 801959e:	f008 fa82 	bl	8021aa6 <__cxa_guard_acquire>
 80195a2:	b138      	cbz	r0, 80195b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80195a4:	4620      	mov	r0, r4
 80195a6:	f008 fa8a 	bl	8021abe <__cxa_guard_release>
 80195aa:	4a06      	ldr	r2, [pc, #24]	@ (80195c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80195ac:	4909      	ldr	r1, [pc, #36]	@ (80195d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80195ae:	480a      	ldr	r0, [pc, #40]	@ (80195d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80195b0:	f008 fa72 	bl	8021a98 <__aeabi_atexit>
 80195b4:	4b05      	ldr	r3, [pc, #20]	@ (80195cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80195b6:	64eb      	str	r3, [r5, #76]	@ 0x4c
 80195b8:	4b07      	ldr	r3, [pc, #28]	@ (80195d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80195ba:	652b      	str	r3, [r5, #80]	@ 0x50
 80195bc:	bd38      	pop	{r3, r4, r5, pc}
 80195be:	bf00      	nop
 80195c0:	20014104 	.word	0x20014104
 80195c4:	20000000 	.word	0x20000000
 80195c8:	080152ed 	.word	0x080152ed
 80195cc:	20000214 	.word	0x20000214
 80195d0:	20014108 	.word	0x20014108
 80195d4:	080152eb 	.word	0x080152eb
 80195d8:	20000218 	.word	0x20000218

080195dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80195dc:	b538      	push	{r3, r4, r5, lr}
 80195de:	4c15      	ldr	r4, [pc, #84]	@ (8019634 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80195e0:	7823      	ldrb	r3, [r4, #0]
 80195e2:	f3bf 8f5b 	dmb	ish
 80195e6:	07da      	lsls	r2, r3, #31
 80195e8:	4605      	mov	r5, r0
 80195ea:	d40b      	bmi.n	8019604 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80195ec:	4620      	mov	r0, r4
 80195ee:	f008 fa5a 	bl	8021aa6 <__cxa_guard_acquire>
 80195f2:	b138      	cbz	r0, 8019604 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80195f4:	4620      	mov	r0, r4
 80195f6:	f008 fa62 	bl	8021abe <__cxa_guard_release>
 80195fa:	4a0f      	ldr	r2, [pc, #60]	@ (8019638 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80195fc:	490f      	ldr	r1, [pc, #60]	@ (801963c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80195fe:	4810      	ldr	r0, [pc, #64]	@ (8019640 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019600:	f008 fa4a 	bl	8021a98 <__aeabi_atexit>
 8019604:	4c0f      	ldr	r4, [pc, #60]	@ (8019644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019606:	7823      	ldrb	r3, [r4, #0]
 8019608:	f3bf 8f5b 	dmb	ish
 801960c:	07db      	lsls	r3, r3, #31
 801960e:	d40b      	bmi.n	8019628 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019610:	4620      	mov	r0, r4
 8019612:	f008 fa48 	bl	8021aa6 <__cxa_guard_acquire>
 8019616:	b138      	cbz	r0, 8019628 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019618:	4620      	mov	r0, r4
 801961a:	f008 fa50 	bl	8021abe <__cxa_guard_release>
 801961e:	4a06      	ldr	r2, [pc, #24]	@ (8019638 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019620:	4909      	ldr	r1, [pc, #36]	@ (8019648 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019622:	480a      	ldr	r0, [pc, #40]	@ (801964c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019624:	f008 fa38 	bl	8021a98 <__aeabi_atexit>
 8019628:	4b05      	ldr	r3, [pc, #20]	@ (8019640 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801962a:	646b      	str	r3, [r5, #68]	@ 0x44
 801962c:	4b07      	ldr	r3, [pc, #28]	@ (801964c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801962e:	64ab      	str	r3, [r5, #72]	@ 0x48
 8019630:	bd38      	pop	{r3, r4, r5, pc}
 8019632:	bf00      	nop
 8019634:	200140cc 	.word	0x200140cc
 8019638:	20000000 	.word	0x20000000
 801963c:	080152f1 	.word	0x080152f1
 8019640:	200001dc 	.word	0x200001dc
 8019644:	200140d0 	.word	0x200140d0
 8019648:	080152ef 	.word	0x080152ef
 801964c:	200001e0 	.word	0x200001e0

08019650 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019650:	b538      	push	{r3, r4, r5, lr}
 8019652:	4c15      	ldr	r4, [pc, #84]	@ (80196a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019654:	7823      	ldrb	r3, [r4, #0]
 8019656:	f3bf 8f5b 	dmb	ish
 801965a:	07da      	lsls	r2, r3, #31
 801965c:	4605      	mov	r5, r0
 801965e:	d40b      	bmi.n	8019678 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019660:	4620      	mov	r0, r4
 8019662:	f008 fa20 	bl	8021aa6 <__cxa_guard_acquire>
 8019666:	b138      	cbz	r0, 8019678 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019668:	4620      	mov	r0, r4
 801966a:	f008 fa28 	bl	8021abe <__cxa_guard_release>
 801966e:	4a0f      	ldr	r2, [pc, #60]	@ (80196ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019670:	490f      	ldr	r1, [pc, #60]	@ (80196b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019672:	4810      	ldr	r0, [pc, #64]	@ (80196b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019674:	f008 fa10 	bl	8021a98 <__aeabi_atexit>
 8019678:	4c0f      	ldr	r4, [pc, #60]	@ (80196b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801967a:	7823      	ldrb	r3, [r4, #0]
 801967c:	f3bf 8f5b 	dmb	ish
 8019680:	07db      	lsls	r3, r3, #31
 8019682:	d40b      	bmi.n	801969c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019684:	4620      	mov	r0, r4
 8019686:	f008 fa0e 	bl	8021aa6 <__cxa_guard_acquire>
 801968a:	b138      	cbz	r0, 801969c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801968c:	4620      	mov	r0, r4
 801968e:	f008 fa16 	bl	8021abe <__cxa_guard_release>
 8019692:	4a06      	ldr	r2, [pc, #24]	@ (80196ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019694:	4909      	ldr	r1, [pc, #36]	@ (80196bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019696:	480a      	ldr	r0, [pc, #40]	@ (80196c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019698:	f008 f9fe 	bl	8021a98 <__aeabi_atexit>
 801969c:	4b05      	ldr	r3, [pc, #20]	@ (80196b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801969e:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80196a0:	4b07      	ldr	r3, [pc, #28]	@ (80196c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80196a2:	642b      	str	r3, [r5, #64]	@ 0x40
 80196a4:	bd38      	pop	{r3, r4, r5, pc}
 80196a6:	bf00      	nop
 80196a8:	200140ec 	.word	0x200140ec
 80196ac:	20000000 	.word	0x20000000
 80196b0:	080152f5 	.word	0x080152f5
 80196b4:	200001fc 	.word	0x200001fc
 80196b8:	200140f0 	.word	0x200140f0
 80196bc:	080152f3 	.word	0x080152f3
 80196c0:	20000200 	.word	0x20000200

080196c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80196c4:	b510      	push	{r4, lr}
 80196c6:	4604      	mov	r4, r0
 80196c8:	f7ff ff14 	bl	80194f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80196cc:	4620      	mov	r0, r4
 80196ce:	f7ff ff85 	bl	80195dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80196d2:	4620      	mov	r0, r4
 80196d4:	f7ff ff48 	bl	8019568 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80196d8:	4620      	mov	r0, r4
 80196da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80196de:	f7ff bfb7 	b.w	8019650 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080196e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80196e4:	b538      	push	{r3, r4, r5, lr}
 80196e6:	4c15      	ldr	r4, [pc, #84]	@ (801973c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80196e8:	7823      	ldrb	r3, [r4, #0]
 80196ea:	f3bf 8f5b 	dmb	ish
 80196ee:	07da      	lsls	r2, r3, #31
 80196f0:	4605      	mov	r5, r0
 80196f2:	d40b      	bmi.n	801970c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80196f4:	4620      	mov	r0, r4
 80196f6:	f008 f9d6 	bl	8021aa6 <__cxa_guard_acquire>
 80196fa:	b138      	cbz	r0, 801970c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80196fc:	4620      	mov	r0, r4
 80196fe:	f008 f9de 	bl	8021abe <__cxa_guard_release>
 8019702:	4a0f      	ldr	r2, [pc, #60]	@ (8019740 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019704:	490f      	ldr	r1, [pc, #60]	@ (8019744 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019706:	4810      	ldr	r0, [pc, #64]	@ (8019748 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019708:	f008 f9c6 	bl	8021a98 <__aeabi_atexit>
 801970c:	4c0f      	ldr	r4, [pc, #60]	@ (801974c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801970e:	7823      	ldrb	r3, [r4, #0]
 8019710:	f3bf 8f5b 	dmb	ish
 8019714:	07db      	lsls	r3, r3, #31
 8019716:	d40b      	bmi.n	8019730 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019718:	4620      	mov	r0, r4
 801971a:	f008 f9c4 	bl	8021aa6 <__cxa_guard_acquire>
 801971e:	b138      	cbz	r0, 8019730 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019720:	4620      	mov	r0, r4
 8019722:	f008 f9cc 	bl	8021abe <__cxa_guard_release>
 8019726:	4a06      	ldr	r2, [pc, #24]	@ (8019740 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019728:	4909      	ldr	r1, [pc, #36]	@ (8019750 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801972a:	480a      	ldr	r0, [pc, #40]	@ (8019754 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801972c:	f008 f9b4 	bl	8021a98 <__aeabi_atexit>
 8019730:	4b05      	ldr	r3, [pc, #20]	@ (8019748 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019732:	666b      	str	r3, [r5, #100]	@ 0x64
 8019734:	4b07      	ldr	r3, [pc, #28]	@ (8019754 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019736:	66ab      	str	r3, [r5, #104]	@ 0x68
 8019738:	bd38      	pop	{r3, r4, r5, pc}
 801973a:	bf00      	nop
 801973c:	200140d4 	.word	0x200140d4
 8019740:	20000000 	.word	0x20000000
 8019744:	080152e1 	.word	0x080152e1
 8019748:	200001e4 	.word	0x200001e4
 801974c:	200140d8 	.word	0x200140d8
 8019750:	080152df 	.word	0x080152df
 8019754:	200001e8 	.word	0x200001e8

08019758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019758:	b538      	push	{r3, r4, r5, lr}
 801975a:	4c15      	ldr	r4, [pc, #84]	@ (80197b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801975c:	7823      	ldrb	r3, [r4, #0]
 801975e:	f3bf 8f5b 	dmb	ish
 8019762:	07da      	lsls	r2, r3, #31
 8019764:	4605      	mov	r5, r0
 8019766:	d40b      	bmi.n	8019780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019768:	4620      	mov	r0, r4
 801976a:	f008 f99c 	bl	8021aa6 <__cxa_guard_acquire>
 801976e:	b138      	cbz	r0, 8019780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019770:	4620      	mov	r0, r4
 8019772:	f008 f9a4 	bl	8021abe <__cxa_guard_release>
 8019776:	4a0f      	ldr	r2, [pc, #60]	@ (80197b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019778:	490f      	ldr	r1, [pc, #60]	@ (80197b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801977a:	4810      	ldr	r0, [pc, #64]	@ (80197bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801977c:	f008 f98c 	bl	8021a98 <__aeabi_atexit>
 8019780:	4c0f      	ldr	r4, [pc, #60]	@ (80197c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019782:	7823      	ldrb	r3, [r4, #0]
 8019784:	f3bf 8f5b 	dmb	ish
 8019788:	07db      	lsls	r3, r3, #31
 801978a:	d40b      	bmi.n	80197a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801978c:	4620      	mov	r0, r4
 801978e:	f008 f98a 	bl	8021aa6 <__cxa_guard_acquire>
 8019792:	b138      	cbz	r0, 80197a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019794:	4620      	mov	r0, r4
 8019796:	f008 f992 	bl	8021abe <__cxa_guard_release>
 801979a:	4a06      	ldr	r2, [pc, #24]	@ (80197b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801979c:	4909      	ldr	r1, [pc, #36]	@ (80197c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801979e:	480a      	ldr	r0, [pc, #40]	@ (80197c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80197a0:	f008 f97a 	bl	8021a98 <__aeabi_atexit>
 80197a4:	4b05      	ldr	r3, [pc, #20]	@ (80197bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80197a6:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80197a8:	4b07      	ldr	r3, [pc, #28]	@ (80197c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80197aa:	662b      	str	r3, [r5, #96]	@ 0x60
 80197ac:	bd38      	pop	{r3, r4, r5, pc}
 80197ae:	bf00      	nop
 80197b0:	200140ac 	.word	0x200140ac
 80197b4:	20000000 	.word	0x20000000
 80197b8:	080152e5 	.word	0x080152e5
 80197bc:	200001bc 	.word	0x200001bc
 80197c0:	200140b0 	.word	0x200140b0
 80197c4:	080152e3 	.word	0x080152e3
 80197c8:	200001c0 	.word	0x200001c0

080197cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80197cc:	b510      	push	{r4, lr}
 80197ce:	4604      	mov	r4, r0
 80197d0:	f7ff ff88 	bl	80196e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80197d4:	4620      	mov	r0, r4
 80197d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80197da:	f7ff bfbd 	b.w	8019758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080197e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80197e0:	b538      	push	{r3, r4, r5, lr}
 80197e2:	4c15      	ldr	r4, [pc, #84]	@ (8019838 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80197e4:	7823      	ldrb	r3, [r4, #0]
 80197e6:	f3bf 8f5b 	dmb	ish
 80197ea:	07da      	lsls	r2, r3, #31
 80197ec:	4605      	mov	r5, r0
 80197ee:	d40b      	bmi.n	8019808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80197f0:	4620      	mov	r0, r4
 80197f2:	f008 f958 	bl	8021aa6 <__cxa_guard_acquire>
 80197f6:	b138      	cbz	r0, 8019808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80197f8:	4620      	mov	r0, r4
 80197fa:	f008 f960 	bl	8021abe <__cxa_guard_release>
 80197fe:	4a0f      	ldr	r2, [pc, #60]	@ (801983c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019800:	490f      	ldr	r1, [pc, #60]	@ (8019840 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019802:	4810      	ldr	r0, [pc, #64]	@ (8019844 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019804:	f008 f948 	bl	8021a98 <__aeabi_atexit>
 8019808:	4c0f      	ldr	r4, [pc, #60]	@ (8019848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801980a:	7823      	ldrb	r3, [r4, #0]
 801980c:	f3bf 8f5b 	dmb	ish
 8019810:	07db      	lsls	r3, r3, #31
 8019812:	d40b      	bmi.n	801982c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019814:	4620      	mov	r0, r4
 8019816:	f008 f946 	bl	8021aa6 <__cxa_guard_acquire>
 801981a:	b138      	cbz	r0, 801982c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801981c:	4620      	mov	r0, r4
 801981e:	f008 f94e 	bl	8021abe <__cxa_guard_release>
 8019822:	4a06      	ldr	r2, [pc, #24]	@ (801983c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019824:	4909      	ldr	r1, [pc, #36]	@ (801984c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019826:	480a      	ldr	r0, [pc, #40]	@ (8019850 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019828:	f008 f936 	bl	8021a98 <__aeabi_atexit>
 801982c:	4b05      	ldr	r3, [pc, #20]	@ (8019844 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801982e:	676b      	str	r3, [r5, #116]	@ 0x74
 8019830:	4b07      	ldr	r3, [pc, #28]	@ (8019850 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019832:	67ab      	str	r3, [r5, #120]	@ 0x78
 8019834:	bd38      	pop	{r3, r4, r5, pc}
 8019836:	bf00      	nop
 8019838:	200140a4 	.word	0x200140a4
 801983c:	20000000 	.word	0x20000000
 8019840:	080152d9 	.word	0x080152d9
 8019844:	200001b4 	.word	0x200001b4
 8019848:	200140a8 	.word	0x200140a8
 801984c:	080152d7 	.word	0x080152d7
 8019850:	200001b8 	.word	0x200001b8

08019854 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019854:	b538      	push	{r3, r4, r5, lr}
 8019856:	4c15      	ldr	r4, [pc, #84]	@ (80198ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019858:	7823      	ldrb	r3, [r4, #0]
 801985a:	f3bf 8f5b 	dmb	ish
 801985e:	07da      	lsls	r2, r3, #31
 8019860:	4605      	mov	r5, r0
 8019862:	d40b      	bmi.n	801987c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019864:	4620      	mov	r0, r4
 8019866:	f008 f91e 	bl	8021aa6 <__cxa_guard_acquire>
 801986a:	b138      	cbz	r0, 801987c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801986c:	4620      	mov	r0, r4
 801986e:	f008 f926 	bl	8021abe <__cxa_guard_release>
 8019872:	4a0f      	ldr	r2, [pc, #60]	@ (80198b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019874:	490f      	ldr	r1, [pc, #60]	@ (80198b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019876:	4810      	ldr	r0, [pc, #64]	@ (80198b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019878:	f008 f90e 	bl	8021a98 <__aeabi_atexit>
 801987c:	4c0f      	ldr	r4, [pc, #60]	@ (80198bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801987e:	7823      	ldrb	r3, [r4, #0]
 8019880:	f3bf 8f5b 	dmb	ish
 8019884:	07db      	lsls	r3, r3, #31
 8019886:	d40b      	bmi.n	80198a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019888:	4620      	mov	r0, r4
 801988a:	f008 f90c 	bl	8021aa6 <__cxa_guard_acquire>
 801988e:	b138      	cbz	r0, 80198a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019890:	4620      	mov	r0, r4
 8019892:	f008 f914 	bl	8021abe <__cxa_guard_release>
 8019896:	4a06      	ldr	r2, [pc, #24]	@ (80198b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019898:	4909      	ldr	r1, [pc, #36]	@ (80198c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801989a:	480a      	ldr	r0, [pc, #40]	@ (80198c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801989c:	f008 f8fc 	bl	8021a98 <__aeabi_atexit>
 80198a0:	4b05      	ldr	r3, [pc, #20]	@ (80198b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80198a2:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80198a4:	4b07      	ldr	r3, [pc, #28]	@ (80198c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80198a6:	672b      	str	r3, [r5, #112]	@ 0x70
 80198a8:	bd38      	pop	{r3, r4, r5, pc}
 80198aa:	bf00      	nop
 80198ac:	2001409c 	.word	0x2001409c
 80198b0:	20000000 	.word	0x20000000
 80198b4:	080152dd 	.word	0x080152dd
 80198b8:	200001ac 	.word	0x200001ac
 80198bc:	200140a0 	.word	0x200140a0
 80198c0:	080152db 	.word	0x080152db
 80198c4:	200001b0 	.word	0x200001b0

080198c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80198c8:	b510      	push	{r4, lr}
 80198ca:	4604      	mov	r4, r0
 80198cc:	f7ff ff88 	bl	80197e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80198d0:	4620      	mov	r0, r4
 80198d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80198d6:	f7ff bfbd 	b.w	8019854 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080198da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80198da:	b510      	push	{r4, lr}
 80198dc:	4604      	mov	r4, r0
 80198de:	f7ff fff3 	bl	80198c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80198e2:	4620      	mov	r0, r4
 80198e4:	f7ff ff72 	bl	80197cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80198e8:	4620      	mov	r0, r4
 80198ea:	f7ff fdf9 	bl	80194e0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80198ee:	4620      	mov	r0, r4
 80198f0:	f7ff fcfa 	bl	80192e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80198f4:	4620      	mov	r0, r4
 80198f6:	f7ff fd75 	bl	80193e4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80198fa:	4620      	mov	r0, r4
 80198fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019900:	f7ff bee0 	b.w	80196c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019904 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019904:	b538      	push	{r3, r4, r5, lr}
 8019906:	4c0b      	ldr	r4, [pc, #44]	@ (8019934 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019908:	7823      	ldrb	r3, [r4, #0]
 801990a:	f3bf 8f5b 	dmb	ish
 801990e:	07db      	lsls	r3, r3, #31
 8019910:	4605      	mov	r5, r0
 8019912:	d40b      	bmi.n	801992c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019914:	4620      	mov	r0, r4
 8019916:	f008 f8c6 	bl	8021aa6 <__cxa_guard_acquire>
 801991a:	b138      	cbz	r0, 801992c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801991c:	4620      	mov	r0, r4
 801991e:	f008 f8ce 	bl	8021abe <__cxa_guard_release>
 8019922:	4a05      	ldr	r2, [pc, #20]	@ (8019938 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019924:	4905      	ldr	r1, [pc, #20]	@ (801993c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019926:	4806      	ldr	r0, [pc, #24]	@ (8019940 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019928:	f008 f8b6 	bl	8021a98 <__aeabi_atexit>
 801992c:	4b04      	ldr	r3, [pc, #16]	@ (8019940 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801992e:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8019930:	bd38      	pop	{r3, r4, r5, pc}
 8019932:	bf00      	nop
 8019934:	20014090 	.word	0x20014090
 8019938:	20000000 	.word	0x20000000
 801993c:	080152d5 	.word	0x080152d5
 8019940:	200001a4 	.word	0x200001a4

08019944 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019944:	b538      	push	{r3, r4, r5, lr}
 8019946:	4c0b      	ldr	r4, [pc, #44]	@ (8019974 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019948:	7823      	ldrb	r3, [r4, #0]
 801994a:	f3bf 8f5b 	dmb	ish
 801994e:	07db      	lsls	r3, r3, #31
 8019950:	4605      	mov	r5, r0
 8019952:	d40b      	bmi.n	801996c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019954:	4620      	mov	r0, r4
 8019956:	f008 f8a6 	bl	8021aa6 <__cxa_guard_acquire>
 801995a:	b138      	cbz	r0, 801996c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801995c:	4620      	mov	r0, r4
 801995e:	f008 f8ae 	bl	8021abe <__cxa_guard_release>
 8019962:	4a05      	ldr	r2, [pc, #20]	@ (8019978 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8019964:	4905      	ldr	r1, [pc, #20]	@ (801997c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8019966:	4806      	ldr	r0, [pc, #24]	@ (8019980 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019968:	f008 f896 	bl	8021a98 <__aeabi_atexit>
 801996c:	4b04      	ldr	r3, [pc, #16]	@ (8019980 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801996e:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8019972:	bd38      	pop	{r3, r4, r5, pc}
 8019974:	20014094 	.word	0x20014094
 8019978:	20000000 	.word	0x20000000
 801997c:	080152d3 	.word	0x080152d3
 8019980:	200001a8 	.word	0x200001a8

08019984 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8019984:	b570      	push	{r4, r5, r6, lr}
 8019986:	4d0d      	ldr	r5, [pc, #52]	@ (80199bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8019988:	4c0d      	ldr	r4, [pc, #52]	@ (80199c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801998a:	782b      	ldrb	r3, [r5, #0]
 801998c:	f3bf 8f5b 	dmb	ish
 8019990:	f013 0f01 	tst.w	r3, #1
 8019994:	4606      	mov	r6, r0
 8019996:	d10d      	bne.n	80199b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019998:	4628      	mov	r0, r5
 801999a:	f008 f884 	bl	8021aa6 <__cxa_guard_acquire>
 801999e:	b148      	cbz	r0, 80199b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80199a0:	4b08      	ldr	r3, [pc, #32]	@ (80199c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80199a2:	6023      	str	r3, [r4, #0]
 80199a4:	4628      	mov	r0, r5
 80199a6:	f008 f88a 	bl	8021abe <__cxa_guard_release>
 80199aa:	4a07      	ldr	r2, [pc, #28]	@ (80199c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80199ac:	4907      	ldr	r1, [pc, #28]	@ (80199cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80199ae:	4620      	mov	r0, r4
 80199b0:	f008 f872 	bl	8021a98 <__aeabi_atexit>
 80199b4:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80199b8:	bd70      	pop	{r4, r5, r6, pc}
 80199ba:	bf00      	nop
 80199bc:	20014098 	.word	0x20014098
 80199c0:	20014210 	.word	0x20014210
 80199c4:	08025384 	.word	0x08025384
 80199c8:	20000000 	.word	0x20000000
 80199cc:	080152d1 	.word	0x080152d1

080199d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80199d0:	b510      	push	{r4, lr}
 80199d2:	4604      	mov	r4, r0
 80199d4:	f7ff ff96 	bl	8019904 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80199d8:	4620      	mov	r0, r4
 80199da:	f7ff ffb3 	bl	8019944 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80199de:	4620      	mov	r0, r4
 80199e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80199e4:	f7ff bfce 	b.w	8019984 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080199e8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 80199e8:	b570      	push	{r4, r5, r6, lr}
 80199ea:	4d0d      	ldr	r5, [pc, #52]	@ (8019a20 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 80199ec:	4c0d      	ldr	r4, [pc, #52]	@ (8019a24 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 80199ee:	782b      	ldrb	r3, [r5, #0]
 80199f0:	f3bf 8f5b 	dmb	ish
 80199f4:	f013 0f01 	tst.w	r3, #1
 80199f8:	4606      	mov	r6, r0
 80199fa:	d10d      	bne.n	8019a18 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 80199fc:	4628      	mov	r0, r5
 80199fe:	f008 f852 	bl	8021aa6 <__cxa_guard_acquire>
 8019a02:	b148      	cbz	r0, 8019a18 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019a04:	4b08      	ldr	r3, [pc, #32]	@ (8019a28 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8019a06:	6023      	str	r3, [r4, #0]
 8019a08:	4628      	mov	r0, r5
 8019a0a:	f008 f858 	bl	8021abe <__cxa_guard_release>
 8019a0e:	4a07      	ldr	r2, [pc, #28]	@ (8019a2c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8019a10:	4907      	ldr	r1, [pc, #28]	@ (8019a30 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8019a12:	4620      	mov	r0, r4
 8019a14:	f008 f840 	bl	8021a98 <__aeabi_atexit>
 8019a18:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8019a1c:	bd70      	pop	{r4, r5, r6, pc}
 8019a1e:	bf00      	nop
 8019a20:	2001408c 	.word	0x2001408c
 8019a24:	2001410c 	.word	0x2001410c
 8019a28:	080253a0 	.word	0x080253a0
 8019a2c:	20000000 	.word	0x20000000
 8019a30:	080152cf 	.word	0x080152cf

08019a34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a38:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8019a3c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8019a40:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019a44:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8019a48:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8019a4c:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019a50:	8808      	ldrh	r0, [r1, #0]
 8019a52:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019a56:	2d00      	cmp	r5, #0
 8019a58:	eb02 0a0c 	add.w	sl, r2, ip
 8019a5c:	f2c0 80b0 	blt.w	8019bc0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019a60:	45ab      	cmp	fp, r5
 8019a62:	f340 80ad 	ble.w	8019bc0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019a66:	2c00      	cmp	r4, #0
 8019a68:	f2c0 80a8 	blt.w	8019bbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019a6c:	45a6      	cmp	lr, r4
 8019a6e:	f340 80a5 	ble.w	8019bbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019a72:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019a76:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019a7a:	1c62      	adds	r2, r4, #1
 8019a7c:	f100 80a3 	bmi.w	8019bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a80:	4596      	cmp	lr, r2
 8019a82:	f340 80a0 	ble.w	8019bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a86:	f1b9 0f00 	cmp.w	r9, #0
 8019a8a:	f000 809c 	beq.w	8019bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a8e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019a92:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019a96:	3501      	adds	r5, #1
 8019a98:	f100 8099 	bmi.w	8019bce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019a9c:	45ab      	cmp	fp, r5
 8019a9e:	f340 8096 	ble.w	8019bce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019aa2:	2f00      	cmp	r7, #0
 8019aa4:	f000 8093 	beq.w	8019bce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019aa8:	2c00      	cmp	r4, #0
 8019aaa:	f2c0 808e 	blt.w	8019bca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019aae:	45a6      	cmp	lr, r4
 8019ab0:	f340 808b 	ble.w	8019bca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019ab4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019ab8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019abc:	3401      	adds	r4, #1
 8019abe:	f100 8089 	bmi.w	8019bd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019ac2:	45a6      	cmp	lr, r4
 8019ac4:	f340 8086 	ble.w	8019bd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019ac8:	f1b9 0f00 	cmp.w	r9, #0
 8019acc:	f000 8082 	beq.w	8019bd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019ad0:	44d6      	add	lr, sl
 8019ad2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019ad6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019ada:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019ade:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019ae2:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019ae6:	fb19 fe07 	smulbb	lr, r9, r7
 8019aea:	ea44 0808 	orr.w	r8, r4, r8
 8019aee:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019af2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019af6:	f1c7 0210 	rsb	r2, r7, #16
 8019afa:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019afe:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019b02:	ea44 0c0c 	orr.w	ip, r4, ip
 8019b06:	eba2 0209 	sub.w	r2, r2, r9
 8019b0a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019b0e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019b12:	fb04 f40c 	mul.w	r4, r4, ip
 8019b16:	fb02 4808 	mla	r8, r2, r8, r4
 8019b1a:	041a      	lsls	r2, r3, #16
 8019b1c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019b20:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019b24:	4313      	orrs	r3, r2
 8019b26:	042a      	lsls	r2, r5, #16
 8019b28:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019b2c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019b30:	fb0e 8303 	mla	r3, lr, r3, r8
 8019b34:	432a      	orrs	r2, r5
 8019b36:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019b3a:	fb07 3202 	mla	r2, r7, r2, r3
 8019b3e:	0d53      	lsrs	r3, r2, #21
 8019b40:	0952      	lsrs	r2, r2, #5
 8019b42:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019b46:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019b4a:	431a      	orrs	r2, r3
 8019b4c:	b293      	uxth	r3, r2
 8019b4e:	b2b4      	uxth	r4, r6
 8019b50:	1202      	asrs	r2, r0, #8
 8019b52:	43f6      	mvns	r6, r6
 8019b54:	b2f6      	uxtb	r6, r6
 8019b56:	121d      	asrs	r5, r3, #8
 8019b58:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019b5c:	fb12 f206 	smulbb	r2, r2, r6
 8019b60:	10c7      	asrs	r7, r0, #3
 8019b62:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019b66:	00c0      	lsls	r0, r0, #3
 8019b68:	fb05 2504 	mla	r5, r5, r4, r2
 8019b6c:	b2c0      	uxtb	r0, r0
 8019b6e:	10da      	asrs	r2, r3, #3
 8019b70:	00db      	lsls	r3, r3, #3
 8019b72:	b2db      	uxtb	r3, r3
 8019b74:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019b78:	fb10 f006 	smulbb	r0, r0, r6
 8019b7c:	b2ad      	uxth	r5, r5
 8019b7e:	fb03 0004 	mla	r0, r3, r4, r0
 8019b82:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019b86:	fb17 f706 	smulbb	r7, r7, r6
 8019b8a:	b280      	uxth	r0, r0
 8019b8c:	1c6b      	adds	r3, r5, #1
 8019b8e:	fb02 7204 	mla	r2, r2, r4, r7
 8019b92:	b292      	uxth	r2, r2
 8019b94:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019b98:	1c43      	adds	r3, r0, #1
 8019b9a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019b9e:	1c50      	adds	r0, r2, #1
 8019ba0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019ba4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019ba8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019bac:	0952      	lsrs	r2, r2, #5
 8019bae:	432b      	orrs	r3, r5
 8019bb0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019bb4:	4313      	orrs	r3, r2
 8019bb6:	800b      	strh	r3, [r1, #0]
 8019bb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bbc:	4680      	mov	r8, r0
 8019bbe:	e75c      	b.n	8019a7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019bc0:	4684      	mov	ip, r0
 8019bc2:	4680      	mov	r8, r0
 8019bc4:	e767      	b.n	8019a96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019bc6:	4684      	mov	ip, r0
 8019bc8:	e765      	b.n	8019a96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019bca:	4605      	mov	r5, r0
 8019bcc:	e776      	b.n	8019abc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019bce:	4603      	mov	r3, r0
 8019bd0:	4605      	mov	r5, r0
 8019bd2:	e782      	b.n	8019ada <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019bd4:	4603      	mov	r3, r0
 8019bd6:	e780      	b.n	8019ada <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bdc:	b099      	sub	sp, #100	@ 0x64
 8019bde:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019be2:	9215      	str	r2, [sp, #84]	@ 0x54
 8019be4:	9309      	str	r3, [sp, #36]	@ 0x24
 8019be6:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019be8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019bec:	930d      	str	r3, [sp, #52]	@ 0x34
 8019bee:	910c      	str	r1, [sp, #48]	@ 0x30
 8019bf0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019bf4:	9016      	str	r0, [sp, #88]	@ 0x58
 8019bf6:	6850      	ldr	r0, [r2, #4]
 8019bf8:	6812      	ldr	r2, [r2, #0]
 8019bfa:	fb00 1303 	mla	r3, r0, r3, r1
 8019bfe:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019c02:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c04:	681b      	ldr	r3, [r3, #0]
 8019c06:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019c08:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c0a:	685e      	ldr	r6, [r3, #4]
 8019c0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019c0e:	43db      	mvns	r3, r3
 8019c10:	b2db      	uxtb	r3, r3
 8019c12:	3604      	adds	r6, #4
 8019c14:	930a      	str	r3, [sp, #40]	@ 0x28
 8019c16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019c18:	2b00      	cmp	r3, #0
 8019c1a:	dc03      	bgt.n	8019c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019c1c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019c1e:	2b00      	cmp	r3, #0
 8019c20:	f340 8225 	ble.w	801a06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019c24:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c2a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c2e:	1e48      	subs	r0, r1, #1
 8019c30:	1e57      	subs	r7, r2, #1
 8019c32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019c34:	2b00      	cmp	r3, #0
 8019c36:	f340 80e3 	ble.w	8019e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019c3a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019c3e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019c42:	d406      	bmi.n	8019c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c44:	4584      	cmp	ip, r0
 8019c46:	da04      	bge.n	8019c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c48:	2b00      	cmp	r3, #0
 8019c4a:	db02      	blt.n	8019c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c4c:	42bb      	cmp	r3, r7
 8019c4e:	f2c0 80d8 	blt.w	8019e02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019c52:	f11c 0c01 	adds.w	ip, ip, #1
 8019c56:	f100 80c9 	bmi.w	8019dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c5a:	4561      	cmp	r1, ip
 8019c5c:	f2c0 80c6 	blt.w	8019dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c60:	3301      	adds	r3, #1
 8019c62:	f100 80c3 	bmi.w	8019dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c66:	429a      	cmp	r2, r3
 8019c68:	f2c0 80c0 	blt.w	8019dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c6c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019c70:	4647      	mov	r7, r8
 8019c72:	f1bb 0f00 	cmp.w	fp, #0
 8019c76:	f340 80e3 	ble.w	8019e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019c7a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019c7c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c7e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019c82:	689b      	ldr	r3, [r3, #8]
 8019c84:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019c88:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019c8c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019c90:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019c94:	f100 8121 	bmi.w	8019eda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c98:	f103 39ff 	add.w	r9, r3, #4294967295
 8019c9c:	454a      	cmp	r2, r9
 8019c9e:	f280 811c 	bge.w	8019eda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019ca2:	f1bc 0f00 	cmp.w	ip, #0
 8019ca6:	f2c0 8118 	blt.w	8019eda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019caa:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019cae:	45cc      	cmp	ip, r9
 8019cb0:	f280 8113 	bge.w	8019eda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019cb4:	b21b      	sxth	r3, r3
 8019cb6:	fb0c 2203 	mla	r2, ip, r3, r2
 8019cba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019cbc:	eb04 0902 	add.w	r9, r4, r2
 8019cc0:	5ca2      	ldrb	r2, [r4, r2]
 8019cc2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019cc6:	2800      	cmp	r0, #0
 8019cc8:	f000 80fe 	beq.w	8019ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019ccc:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019cd0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019cd4:	9211      	str	r2, [sp, #68]	@ 0x44
 8019cd6:	b151      	cbz	r1, 8019cee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019cd8:	eb09 0203 	add.w	r2, r9, r3
 8019cdc:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019ce0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019ce4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019ce6:	7853      	ldrb	r3, [r2, #1]
 8019ce8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019cec:	9312      	str	r3, [sp, #72]	@ 0x48
 8019cee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019cf0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019cf2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019cf6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019cfa:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019cfe:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d02:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019d04:	041b      	lsls	r3, r3, #16
 8019d06:	fb10 f201 	smulbb	r2, r0, r1
 8019d0a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019d0e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019d12:	10d2      	asrs	r2, r2, #3
 8019d14:	4323      	orrs	r3, r4
 8019d16:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019d1a:	4353      	muls	r3, r2
 8019d1c:	fb09 330c 	mla	r3, r9, ip, r3
 8019d20:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019d24:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019d28:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019d2c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019d30:	f1c1 0c10 	rsb	ip, r1, #16
 8019d34:	ebac 0c00 	sub.w	ip, ip, r0
 8019d38:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019d3c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019d40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019d42:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019d44:	0418      	lsls	r0, r3, #16
 8019d46:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019d4a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019d4e:	4318      	orrs	r0, r3
 8019d50:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019d54:	fb02 c200 	mla	r2, r2, r0, ip
 8019d58:	0d53      	lsrs	r3, r2, #21
 8019d5a:	0952      	lsrs	r2, r2, #5
 8019d5c:	8838      	ldrh	r0, [r7, #0]
 8019d5e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019d62:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019d66:	431a      	orrs	r2, r3
 8019d68:	b292      	uxth	r2, r2
 8019d6a:	1201      	asrs	r1, r0, #8
 8019d6c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019d70:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019d74:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019d78:	fb11 f104 	smulbb	r1, r1, r4
 8019d7c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019d80:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019d84:	00c0      	lsls	r0, r0, #3
 8019d86:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019d8a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019d8e:	10d1      	asrs	r1, r2, #3
 8019d90:	b2c0      	uxtb	r0, r0
 8019d92:	00d2      	lsls	r2, r2, #3
 8019d94:	b2d2      	uxtb	r2, r2
 8019d96:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019d9a:	fb1e fe04 	smulbb	lr, lr, r4
 8019d9e:	fb10 f004 	smulbb	r0, r0, r4
 8019da2:	fa1f fc8c 	uxth.w	ip, ip
 8019da6:	fb01 e103 	mla	r1, r1, r3, lr
 8019daa:	fb02 0303 	mla	r3, r2, r3, r0
 8019dae:	b29a      	uxth	r2, r3
 8019db0:	f10c 0301 	add.w	r3, ip, #1
 8019db4:	b289      	uxth	r1, r1
 8019db6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019dba:	1c53      	adds	r3, r2, #1
 8019dbc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019dc0:	1c4a      	adds	r2, r1, #1
 8019dc2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019dc6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019dca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019dce:	0949      	lsrs	r1, r1, #5
 8019dd0:	ea43 030c 	orr.w	r3, r3, ip
 8019dd4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019dd8:	430b      	orrs	r3, r1
 8019dda:	803b      	strh	r3, [r7, #0]
 8019ddc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019dde:	449a      	add	sl, r3
 8019de0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019de2:	3702      	adds	r7, #2
 8019de4:	441d      	add	r5, r3
 8019de6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019dea:	e742      	b.n	8019c72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019dec:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019dee:	449a      	add	sl, r3
 8019df0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019df2:	441d      	add	r5, r3
 8019df4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019df6:	3b01      	subs	r3, #1
 8019df8:	9309      	str	r3, [sp, #36]	@ 0x24
 8019dfa:	f108 0802 	add.w	r8, r8, #2
 8019dfe:	e718      	b.n	8019c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019e00:	d023      	beq.n	8019e4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019e02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e04:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8019e06:	3b01      	subs	r3, #1
 8019e08:	fb00 a003 	mla	r0, r0, r3, sl
 8019e0c:	1400      	asrs	r0, r0, #16
 8019e0e:	f53f af2d 	bmi.w	8019c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e12:	3901      	subs	r1, #1
 8019e14:	4288      	cmp	r0, r1
 8019e16:	f6bf af29 	bge.w	8019c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e1a:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8019e1c:	fb01 5303 	mla	r3, r1, r3, r5
 8019e20:	141b      	asrs	r3, r3, #16
 8019e22:	f53f af23 	bmi.w	8019c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e26:	3a01      	subs	r2, #1
 8019e28:	4293      	cmp	r3, r2
 8019e2a:	f6bf af1f 	bge.w	8019c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e2e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8019e32:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8019e36:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8019e3a:	f1be 0f00 	cmp.w	lr, #0
 8019e3e:	dc6c      	bgt.n	8019f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019e40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e42:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019e46:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019e4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e4c:	2b00      	cmp	r3, #0
 8019e4e:	f340 810e 	ble.w	801a06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019e52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e56:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019e5a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e5e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019e60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e6c:	eef0 6a62 	vmov.f32	s13, s5
 8019e70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e7c:	ee16 aa90 	vmov	sl, s13
 8019e80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e84:	eef0 6a43 	vmov.f32	s13, s6
 8019e88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e8c:	ee12 2a90 	vmov	r2, s5
 8019e90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e94:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e98:	ee13 2a10 	vmov	r2, s6
 8019e9c:	9325      	str	r3, [sp, #148]	@ 0x94
 8019e9e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019ea0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ea4:	9326      	str	r3, [sp, #152]	@ 0x98
 8019ea6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019ea8:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019eaa:	3b01      	subs	r3, #1
 8019eac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019eb0:	930c      	str	r3, [sp, #48]	@ 0x30
 8019eb2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019eb4:	bf08      	it	eq
 8019eb6:	4613      	moveq	r3, r2
 8019eb8:	ee16 5a90 	vmov	r5, s13
 8019ebc:	9309      	str	r3, [sp, #36]	@ 0x24
 8019ebe:	eeb0 3a67 	vmov.f32	s6, s15
 8019ec2:	eef0 2a47 	vmov.f32	s5, s14
 8019ec6:	e6a6      	b.n	8019c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019ec8:	2900      	cmp	r1, #0
 8019eca:	f43f af10 	beq.w	8019cee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019ece:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019ed2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019ed6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019ed8:	e709      	b.n	8019cee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019eda:	f112 0901 	adds.w	r9, r2, #1
 8019ede:	f53f af7d 	bmi.w	8019ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019ee2:	454b      	cmp	r3, r9
 8019ee4:	f6ff af7a 	blt.w	8019ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019ee8:	f11c 0901 	adds.w	r9, ip, #1
 8019eec:	f53f af76 	bmi.w	8019ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019ef0:	45ce      	cmp	lr, r9
 8019ef2:	f6ff af73 	blt.w	8019ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019ef6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019ef8:	9202      	str	r2, [sp, #8]
 8019efa:	b21b      	sxth	r3, r3
 8019efc:	fa0f f28e 	sxth.w	r2, lr
 8019f00:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019f04:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019f08:	9201      	str	r2, [sp, #4]
 8019f0a:	9300      	str	r3, [sp, #0]
 8019f0c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019f0e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8019f10:	4633      	mov	r3, r6
 8019f12:	4639      	mov	r1, r7
 8019f14:	f7ff fd8e 	bl	8019a34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019f18:	e760      	b.n	8019ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f1a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019f1c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019f1e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019f22:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019f26:	1429      	asrs	r1, r5, #16
 8019f28:	fb03 2101 	mla	r1, r3, r1, r2
 8019f2c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019f2e:	440a      	add	r2, r1
 8019f30:	5c61      	ldrb	r1, [r4, r1]
 8019f32:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019f36:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019f3a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019f3e:	f1bc 0f00 	cmp.w	ip, #0
 8019f42:	f000 808c 	beq.w	801a05e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019f46:	7857      	ldrb	r7, [r2, #1]
 8019f48:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019f4c:	9413      	str	r4, [sp, #76]	@ 0x4c
 8019f4e:	b140      	cbz	r0, 8019f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019f50:	18d7      	adds	r7, r2, r3
 8019f52:	5cd3      	ldrb	r3, [r2, r3]
 8019f54:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f58:	9310      	str	r3, [sp, #64]	@ 0x40
 8019f5a:	787b      	ldrb	r3, [r7, #1]
 8019f5c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f60:	9314      	str	r3, [sp, #80]	@ 0x50
 8019f62:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019f64:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019f66:	fb1c f200 	smulbb	r2, ip, r0
 8019f6a:	041f      	lsls	r7, r3, #16
 8019f6c:	10d2      	asrs	r2, r2, #3
 8019f6e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019f72:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8019f76:	431f      	orrs	r7, r3
 8019f78:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019f7c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019f7e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019f80:	041b      	lsls	r3, r3, #16
 8019f82:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8019f86:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019f8a:	ea43 030b 	orr.w	r3, r3, fp
 8019f8e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019f90:	4353      	muls	r3, r2
 8019f92:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019f96:	fb04 3707 	mla	r7, r4, r7, r3
 8019f9a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019f9e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019fa2:	ea43 0b01 	orr.w	fp, r3, r1
 8019fa6:	f1c0 0110 	rsb	r1, r0, #16
 8019faa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019fac:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019fae:	eba1 0c0c 	sub.w	ip, r1, ip
 8019fb2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019fb6:	fb0c 770b 	mla	r7, ip, fp, r7
 8019fba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019fbe:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8019fc2:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019fc6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019fca:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019fce:	fb02 770c 	mla	r7, r2, ip, r7
 8019fd2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019fd4:	0d79      	lsrs	r1, r7, #21
 8019fd6:	097f      	lsrs	r7, r7, #5
 8019fd8:	8812      	ldrh	r2, [r2, #0]
 8019fda:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019fde:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019fe2:	430f      	orrs	r7, r1
 8019fe4:	b2bb      	uxth	r3, r7
 8019fe6:	1211      	asrs	r1, r2, #8
 8019fe8:	1218      	asrs	r0, r3, #8
 8019fea:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019fee:	fb11 f104 	smulbb	r1, r1, r4
 8019ff2:	10d7      	asrs	r7, r2, #3
 8019ff4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019ff8:	00d2      	lsls	r2, r2, #3
 8019ffa:	fb00 1009 	mla	r0, r0, r9, r1
 8019ffe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a002:	10d9      	asrs	r1, r3, #3
 801a004:	b2d2      	uxtb	r2, r2
 801a006:	00db      	lsls	r3, r3, #3
 801a008:	fb17 f704 	smulbb	r7, r7, r4
 801a00c:	fb12 f204 	smulbb	r2, r2, r4
 801a010:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a014:	b2db      	uxtb	r3, r3
 801a016:	b280      	uxth	r0, r0
 801a018:	fb01 7109 	mla	r1, r1, r9, r7
 801a01c:	fb03 2309 	mla	r3, r3, r9, r2
 801a020:	b29b      	uxth	r3, r3
 801a022:	b289      	uxth	r1, r1
 801a024:	1c42      	adds	r2, r0, #1
 801a026:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a02a:	1c4f      	adds	r7, r1, #1
 801a02c:	1c5a      	adds	r2, r3, #1
 801a02e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a032:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a036:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a03a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a03e:	0949      	lsrs	r1, r1, #5
 801a040:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a042:	4310      	orrs	r0, r2
 801a044:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a048:	4308      	orrs	r0, r1
 801a04a:	f823 0b02 	strh.w	r0, [r3], #2
 801a04e:	930e      	str	r3, [sp, #56]	@ 0x38
 801a050:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a052:	449a      	add	sl, r3
 801a054:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a056:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a05a:	441d      	add	r5, r3
 801a05c:	e6ed      	b.n	8019e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a05e:	2800      	cmp	r0, #0
 801a060:	f43f af7f 	beq.w	8019f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a064:	5cd3      	ldrb	r3, [r2, r3]
 801a066:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a06a:	9310      	str	r3, [sp, #64]	@ 0x40
 801a06c:	e779      	b.n	8019f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a06e:	b019      	add	sp, #100	@ 0x64
 801a070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a074:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a078:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801a07c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a080:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801a084:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801a088:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a08c:	8808      	ldrh	r0, [r1, #0]
 801a08e:	fb08 470e 	mla	r7, r8, lr, r4
 801a092:	f1b8 0f00 	cmp.w	r8, #0
 801a096:	eb02 0907 	add.w	r9, r2, r7
 801a09a:	db67      	blt.n	801a16c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a09c:	45c2      	cmp	sl, r8
 801a09e:	dd65      	ble.n	801a16c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a0a0:	2c00      	cmp	r4, #0
 801a0a2:	db61      	blt.n	801a168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a0a4:	45a6      	cmp	lr, r4
 801a0a6:	dd5f      	ble.n	801a168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a0a8:	5dd2      	ldrb	r2, [r2, r7]
 801a0aa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a0ae:	1c62      	adds	r2, r4, #1
 801a0b0:	d45f      	bmi.n	801a172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a0b2:	4596      	cmp	lr, r2
 801a0b4:	dd5d      	ble.n	801a172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a0b6:	2d00      	cmp	r5, #0
 801a0b8:	d05b      	beq.n	801a172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a0ba:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a0be:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a0c2:	f118 0801 	adds.w	r8, r8, #1
 801a0c6:	d458      	bmi.n	801a17a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a0c8:	45c2      	cmp	sl, r8
 801a0ca:	dd56      	ble.n	801a17a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a0cc:	2e00      	cmp	r6, #0
 801a0ce:	d054      	beq.n	801a17a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a0d0:	2c00      	cmp	r4, #0
 801a0d2:	db50      	blt.n	801a176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a0d4:	45a6      	cmp	lr, r4
 801a0d6:	dd4e      	ble.n	801a176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a0d8:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a0dc:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a0e0:	3401      	adds	r4, #1
 801a0e2:	d407      	bmi.n	801a0f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a0e4:	45a6      	cmp	lr, r4
 801a0e6:	dd05      	ble.n	801a0f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a0e8:	b125      	cbz	r5, 801a0f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a0ea:	44ce      	add	lr, r9
 801a0ec:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a0f0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a0f4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a0f8:	fb15 f406 	smulbb	r4, r5, r6
 801a0fc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a100:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a104:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a108:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a10c:	ea43 0c0c 	orr.w	ip, r3, ip
 801a110:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a114:	f1c6 0310 	rsb	r3, r6, #16
 801a118:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a11c:	1b5b      	subs	r3, r3, r5
 801a11e:	ea4e 0707 	orr.w	r7, lr, r7
 801a122:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a126:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a12a:	437d      	muls	r5, r7
 801a12c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a130:	0403      	lsls	r3, r0, #16
 801a132:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a136:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a13a:	4318      	orrs	r0, r3
 801a13c:	0413      	lsls	r3, r2, #16
 801a13e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a142:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a146:	4313      	orrs	r3, r2
 801a148:	fb04 c000 	mla	r0, r4, r0, ip
 801a14c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a150:	fb06 0003 	mla	r0, r6, r3, r0
 801a154:	0d43      	lsrs	r3, r0, #21
 801a156:	0940      	lsrs	r0, r0, #5
 801a158:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a15c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a160:	4318      	orrs	r0, r3
 801a162:	8008      	strh	r0, [r1, #0]
 801a164:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a168:	4684      	mov	ip, r0
 801a16a:	e7a0      	b.n	801a0ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a16c:	4607      	mov	r7, r0
 801a16e:	4684      	mov	ip, r0
 801a170:	e7a7      	b.n	801a0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a172:	4607      	mov	r7, r0
 801a174:	e7a5      	b.n	801a0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a176:	4602      	mov	r2, r0
 801a178:	e7b2      	b.n	801a0e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a17a:	4602      	mov	r2, r0
 801a17c:	e7ba      	b.n	801a0f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a17e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a182:	b093      	sub	sp, #76	@ 0x4c
 801a184:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a188:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a18a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a18c:	9108      	str	r1, [sp, #32]
 801a18e:	9306      	str	r3, [sp, #24]
 801a190:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a194:	9010      	str	r0, [sp, #64]	@ 0x40
 801a196:	6850      	ldr	r0, [r2, #4]
 801a198:	6812      	ldr	r2, [r2, #0]
 801a19a:	fb00 1303 	mla	r3, r0, r3, r1
 801a19e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a1a2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a1a4:	681b      	ldr	r3, [r3, #0]
 801a1a6:	9307      	str	r3, [sp, #28]
 801a1a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a1aa:	685f      	ldr	r7, [r3, #4]
 801a1ac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a1b0:	3704      	adds	r7, #4
 801a1b2:	9b08      	ldr	r3, [sp, #32]
 801a1b4:	2b00      	cmp	r3, #0
 801a1b6:	dc03      	bgt.n	801a1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a1b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a1ba:	2b00      	cmp	r3, #0
 801a1bc:	f340 81b2 	ble.w	801a524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a1c0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a1c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a1c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a1ca:	1e48      	subs	r0, r1, #1
 801a1cc:	f102 3cff 	add.w	ip, r2, #4294967295
 801a1d0:	9b06      	ldr	r3, [sp, #24]
 801a1d2:	2b00      	cmp	r3, #0
 801a1d4:	f340 80a9 	ble.w	801a32a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a1d8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a1dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a1e0:	d406      	bmi.n	801a1f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1e2:	4586      	cmp	lr, r0
 801a1e4:	da04      	bge.n	801a1f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1e6:	2b00      	cmp	r3, #0
 801a1e8:	db02      	blt.n	801a1f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1ea:	4563      	cmp	r3, ip
 801a1ec:	f2c0 809e 	blt.w	801a32c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a1f0:	f11e 0e01 	adds.w	lr, lr, #1
 801a1f4:	f100 808f 	bmi.w	801a316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1f8:	4571      	cmp	r1, lr
 801a1fa:	f2c0 808c 	blt.w	801a316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1fe:	3301      	adds	r3, #1
 801a200:	f100 8089 	bmi.w	801a316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a204:	429a      	cmp	r2, r3
 801a206:	f2c0 8086 	blt.w	801a316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a20a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a20e:	46c8      	mov	r8, r9
 801a210:	f1bb 0f00 	cmp.w	fp, #0
 801a214:	f340 80a6 	ble.w	801a364 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a218:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801a21a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a21c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a220:	689b      	ldr	r3, [r3, #8]
 801a222:	1422      	asrs	r2, r4, #16
 801a224:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a228:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a22c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a230:	f100 80e3 	bmi.w	801a3fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a234:	f103 3aff 	add.w	sl, r3, #4294967295
 801a238:	4552      	cmp	r2, sl
 801a23a:	f280 80de 	bge.w	801a3fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a23e:	f1bc 0f00 	cmp.w	ip, #0
 801a242:	f2c0 80da 	blt.w	801a3fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a246:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a24a:	45d4      	cmp	ip, sl
 801a24c:	f280 80d5 	bge.w	801a3fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a250:	b21b      	sxth	r3, r3
 801a252:	fb0c 2203 	mla	r2, ip, r3, r2
 801a256:	9d07      	ldr	r5, [sp, #28]
 801a258:	eb05 0a02 	add.w	sl, r5, r2
 801a25c:	5caa      	ldrb	r2, [r5, r2]
 801a25e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a262:	2800      	cmp	r0, #0
 801a264:	f000 80c0 	beq.w	801a3e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a268:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a26c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a270:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a272:	b151      	cbz	r1, 801a28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a274:	eb0a 0203 	add.w	r2, sl, r3
 801a278:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a27c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a280:	9309      	str	r3, [sp, #36]	@ 0x24
 801a282:	7853      	ldrb	r3, [r2, #1]
 801a284:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a288:	930c      	str	r3, [sp, #48]	@ 0x30
 801a28a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a28c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a28e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a292:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a296:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a29a:	ea4c 0c03 	orr.w	ip, ip, r3
 801a29e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a2a0:	041b      	lsls	r3, r3, #16
 801a2a2:	fb10 f201 	smulbb	r2, r0, r1
 801a2a6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a2aa:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a2ae:	10d2      	asrs	r2, r2, #3
 801a2b0:	432b      	orrs	r3, r5
 801a2b2:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a2b6:	4353      	muls	r3, r2
 801a2b8:	fb0a 330c 	mla	r3, sl, ip, r3
 801a2bc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a2c0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a2c4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a2c8:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a2cc:	f1c1 0c10 	rsb	ip, r1, #16
 801a2d0:	ebac 0c00 	sub.w	ip, ip, r0
 801a2d4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a2d8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a2dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a2de:	0418      	lsls	r0, r3, #16
 801a2e0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a2e4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a2e8:	4318      	orrs	r0, r3
 801a2ea:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a2ee:	fb02 c200 	mla	r2, r2, r0, ip
 801a2f2:	0d53      	lsrs	r3, r2, #21
 801a2f4:	0952      	lsrs	r2, r2, #5
 801a2f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a2fa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a2fe:	431a      	orrs	r2, r3
 801a300:	f8a8 2000 	strh.w	r2, [r8]
 801a304:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a306:	441c      	add	r4, r3
 801a308:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a30a:	f108 0802 	add.w	r8, r8, #2
 801a30e:	441e      	add	r6, r3
 801a310:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a314:	e77c      	b.n	801a210 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a316:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a318:	441c      	add	r4, r3
 801a31a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a31c:	441e      	add	r6, r3
 801a31e:	9b06      	ldr	r3, [sp, #24]
 801a320:	3b01      	subs	r3, #1
 801a322:	9306      	str	r3, [sp, #24]
 801a324:	f109 0902 	add.w	r9, r9, #2
 801a328:	e752      	b.n	801a1d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a32a:	d020      	beq.n	801a36e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a32c:	9b06      	ldr	r3, [sp, #24]
 801a32e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a330:	3b01      	subs	r3, #1
 801a332:	fb00 4003 	mla	r0, r0, r3, r4
 801a336:	1400      	asrs	r0, r0, #16
 801a338:	f53f af67 	bmi.w	801a20a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a33c:	3901      	subs	r1, #1
 801a33e:	4288      	cmp	r0, r1
 801a340:	f6bf af63 	bge.w	801a20a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a344:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a346:	fb01 6303 	mla	r3, r1, r3, r6
 801a34a:	141b      	asrs	r3, r3, #16
 801a34c:	f53f af5d 	bmi.w	801a20a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a350:	3a01      	subs	r2, #1
 801a352:	4293      	cmp	r3, r2
 801a354:	f6bf af59 	bge.w	801a20a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a358:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a35c:	46ca      	mov	sl, r9
 801a35e:	f1b8 0f00 	cmp.w	r8, #0
 801a362:	dc67      	bgt.n	801a434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a364:	9b06      	ldr	r3, [sp, #24]
 801a366:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a36a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a36e:	9b08      	ldr	r3, [sp, #32]
 801a370:	2b00      	cmp	r3, #0
 801a372:	f340 80d7 	ble.w	801a524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a376:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a37a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a37e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a382:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a384:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a388:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a38c:	eeb0 6a62 	vmov.f32	s12, s5
 801a390:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a394:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a398:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a39c:	ee16 4a10 	vmov	r4, s12
 801a3a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a3a4:	eeb0 6a43 	vmov.f32	s12, s6
 801a3a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a3ac:	ee12 2a90 	vmov	r2, s5
 801a3b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a3b4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3b8:	ee13 2a10 	vmov	r2, s6
 801a3bc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a3be:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a3c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3c4:	9320      	str	r3, [sp, #128]	@ 0x80
 801a3c6:	9b08      	ldr	r3, [sp, #32]
 801a3c8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a3ca:	3b01      	subs	r3, #1
 801a3cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3d0:	9308      	str	r3, [sp, #32]
 801a3d2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a3d4:	bf08      	it	eq
 801a3d6:	4613      	moveq	r3, r2
 801a3d8:	ee16 6a10 	vmov	r6, s12
 801a3dc:	9306      	str	r3, [sp, #24]
 801a3de:	eeb0 3a67 	vmov.f32	s6, s15
 801a3e2:	eef0 2a47 	vmov.f32	s5, s14
 801a3e6:	e6e4      	b.n	801a1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a3e8:	2900      	cmp	r1, #0
 801a3ea:	f43f af4e 	beq.w	801a28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a3ee:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a3f2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a3f6:	9309      	str	r3, [sp, #36]	@ 0x24
 801a3f8:	e747      	b.n	801a28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a3fa:	f112 0a01 	adds.w	sl, r2, #1
 801a3fe:	d481      	bmi.n	801a304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a400:	4553      	cmp	r3, sl
 801a402:	f6ff af7f 	blt.w	801a304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a406:	f11c 0a01 	adds.w	sl, ip, #1
 801a40a:	f53f af7b 	bmi.w	801a304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a40e:	45d6      	cmp	lr, sl
 801a410:	f6ff af78 	blt.w	801a304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a414:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a418:	b21b      	sxth	r3, r3
 801a41a:	fa0f f28e 	sxth.w	r2, lr
 801a41e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a422:	9201      	str	r2, [sp, #4]
 801a424:	9300      	str	r3, [sp, #0]
 801a426:	9a07      	ldr	r2, [sp, #28]
 801a428:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a42a:	463b      	mov	r3, r7
 801a42c:	4641      	mov	r1, r8
 801a42e:	f7ff fe21 	bl	801a074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a432:	e767      	b.n	801a304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a434:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a436:	9d07      	ldr	r5, [sp, #28]
 801a438:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a43c:	1422      	asrs	r2, r4, #16
 801a43e:	1431      	asrs	r1, r6, #16
 801a440:	fb03 2101 	mla	r1, r3, r1, r2
 801a444:	9a07      	ldr	r2, [sp, #28]
 801a446:	440a      	add	r2, r1
 801a448:	5c69      	ldrb	r1, [r5, r1]
 801a44a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a44e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a452:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a456:	f1be 0f00 	cmp.w	lr, #0
 801a45a:	d05c      	beq.n	801a516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a45c:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a460:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a464:	950d      	str	r5, [sp, #52]	@ 0x34
 801a466:	b150      	cbz	r0, 801a47e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a468:	eb02 0c03 	add.w	ip, r2, r3
 801a46c:	5cd3      	ldrb	r3, [r2, r3]
 801a46e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a472:	930a      	str	r3, [sp, #40]	@ 0x28
 801a474:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a478:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a47c:	930e      	str	r3, [sp, #56]	@ 0x38
 801a47e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a480:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a482:	fb1e f200 	smulbb	r2, lr, r0
 801a486:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a48a:	10d2      	asrs	r2, r2, #3
 801a48c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a490:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a494:	ea4c 0c03 	orr.w	ip, ip, r3
 801a498:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a49c:	9311      	str	r3, [sp, #68]	@ 0x44
 801a49e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a4a0:	041b      	lsls	r3, r3, #16
 801a4a2:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a4a6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a4aa:	ea43 030b 	orr.w	r3, r3, fp
 801a4ae:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a4b0:	4353      	muls	r3, r2
 801a4b2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a4b6:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a4ba:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a4be:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a4c2:	ea43 0b01 	orr.w	fp, r3, r1
 801a4c6:	f1c0 0110 	rsb	r1, r0, #16
 801a4ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a4cc:	eba1 0e0e 	sub.w	lr, r1, lr
 801a4d0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a4d4:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a4d8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a4dc:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a4e0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a4e4:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a4e8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a4ec:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a4f0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a4f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a4f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a4fc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a500:	ea43 0c0c 	orr.w	ip, r3, ip
 801a504:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a506:	f82a cb02 	strh.w	ip, [sl], #2
 801a50a:	441c      	add	r4, r3
 801a50c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a50e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a512:	441e      	add	r6, r3
 801a514:	e723      	b.n	801a35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a516:	2800      	cmp	r0, #0
 801a518:	d0b1      	beq.n	801a47e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a51a:	5cd3      	ldrb	r3, [r2, r3]
 801a51c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a520:	930a      	str	r3, [sp, #40]	@ 0x28
 801a522:	e7ac      	b.n	801a47e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a524:	b013      	add	sp, #76	@ 0x4c
 801a526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a52a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a52e:	880d      	ldrh	r5, [r1, #0]
 801a530:	b087      	sub	sp, #28
 801a532:	10ef      	asrs	r7, r5, #3
 801a534:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a538:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a53c:	00ed      	lsls	r5, r5, #3
 801a53e:	9701      	str	r7, [sp, #4]
 801a540:	b2ed      	uxtb	r5, r5
 801a542:	9502      	str	r5, [sp, #8]
 801a544:	9d01      	ldr	r5, [sp, #4]
 801a546:	9103      	str	r1, [sp, #12]
 801a548:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a54c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a550:	9902      	ldr	r1, [sp, #8]
 801a552:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a556:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a55a:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a55e:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a562:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a566:	022d      	lsls	r5, r5, #8
 801a568:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a56c:	fb06 0709 	mla	r7, r6, r9, r0
 801a570:	430d      	orrs	r5, r1
 801a572:	2e00      	cmp	r6, #0
 801a574:	eb02 0c07 	add.w	ip, r2, r7
 801a578:	9505      	str	r5, [sp, #20]
 801a57a:	f2c0 80b6 	blt.w	801a6ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a57e:	45b3      	cmp	fp, r6
 801a580:	f340 80b3 	ble.w	801a6ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a584:	2800      	cmp	r0, #0
 801a586:	f2c0 80ae 	blt.w	801a6e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a58a:	4581      	cmp	r9, r0
 801a58c:	f340 80ab 	ble.w	801a6e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a590:	5dd7      	ldrb	r7, [r2, r7]
 801a592:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a596:	441f      	add	r7, r3
 801a598:	1c42      	adds	r2, r0, #1
 801a59a:	f100 80a9 	bmi.w	801a6f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a59e:	4591      	cmp	r9, r2
 801a5a0:	f340 80a6 	ble.w	801a6f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a5a4:	2c00      	cmp	r4, #0
 801a5a6:	f000 80a3 	beq.w	801a6f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a5aa:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a5ae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a5b2:	441d      	add	r5, r3
 801a5b4:	3601      	adds	r6, #1
 801a5b6:	f100 809f 	bmi.w	801a6f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a5ba:	45b3      	cmp	fp, r6
 801a5bc:	f340 809c 	ble.w	801a6f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a5c0:	f1be 0f00 	cmp.w	lr, #0
 801a5c4:	f000 8098 	beq.w	801a6f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a5c8:	2800      	cmp	r0, #0
 801a5ca:	f2c0 8093 	blt.w	801a6f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a5ce:	4581      	cmp	r9, r0
 801a5d0:	f340 8090 	ble.w	801a6f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a5d4:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a5d8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a5dc:	441e      	add	r6, r3
 801a5de:	3001      	adds	r0, #1
 801a5e0:	f100 808d 	bmi.w	801a6fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a5e4:	4581      	cmp	r9, r0
 801a5e6:	f340 808a 	ble.w	801a6fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a5ea:	2c00      	cmp	r4, #0
 801a5ec:	f000 8087 	beq.w	801a6fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a5f0:	44e1      	add	r9, ip
 801a5f2:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a5f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a5fa:	4413      	add	r3, r2
 801a5fc:	b2a4      	uxth	r4, r4
 801a5fe:	fa1f fe8e 	uxth.w	lr, lr
 801a602:	fb04 fb0e 	mul.w	fp, r4, lr
 801a606:	0124      	lsls	r4, r4, #4
 801a608:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a60c:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a610:	eba4 040b 	sub.w	r4, r4, fp
 801a614:	fa1f f08e 	uxth.w	r0, lr
 801a618:	b2a2      	uxth	r2, r4
 801a61a:	78ac      	ldrb	r4, [r5, #2]
 801a61c:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a620:	9901      	ldr	r1, [sp, #4]
 801a622:	eba9 0900 	sub.w	r9, r9, r0
 801a626:	fa1f f989 	uxth.w	r9, r9
 801a62a:	4354      	muls	r4, r2
 801a62c:	fb09 440c 	mla	r4, r9, ip, r4
 801a630:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a634:	fb00 440c 	mla	r4, r0, ip, r4
 801a638:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a63c:	fa1f fe88 	uxth.w	lr, r8
 801a640:	ea6f 0808 	mvn.w	r8, r8
 801a644:	fa5f f888 	uxtb.w	r8, r8
 801a648:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a64c:	fb1a fa08 	smulbb	sl, sl, r8
 801a650:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a654:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a658:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a65c:	787c      	ldrb	r4, [r7, #1]
 801a65e:	782d      	ldrb	r5, [r5, #0]
 801a660:	783f      	ldrb	r7, [r7, #0]
 801a662:	fb02 fa0a 	mul.w	sl, r2, sl
 801a666:	fb09 aa04 	mla	sl, r9, r4, sl
 801a66a:	7874      	ldrb	r4, [r6, #1]
 801a66c:	436a      	muls	r2, r5
 801a66e:	7835      	ldrb	r5, [r6, #0]
 801a670:	fb00 aa04 	mla	sl, r0, r4, sl
 801a674:	fb09 2207 	mla	r2, r9, r7, r2
 801a678:	785c      	ldrb	r4, [r3, #1]
 801a67a:	781b      	ldrb	r3, [r3, #0]
 801a67c:	fb00 2005 	mla	r0, r0, r5, r2
 801a680:	fb0b a404 	mla	r4, fp, r4, sl
 801a684:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a688:	9b02      	ldr	r3, [sp, #8]
 801a68a:	fb11 fa08 	smulbb	sl, r1, r8
 801a68e:	fa1f fc8c 	uxth.w	ip, ip
 801a692:	fb13 f808 	smulbb	r8, r3, r8
 801a696:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a69a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a69e:	fb04 a40e 	mla	r4, r4, lr, sl
 801a6a2:	f10c 0301 	add.w	r3, ip, #1
 801a6a6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a6aa:	fa1f fe8e 	uxth.w	lr, lr
 801a6ae:	b2a4      	uxth	r4, r4
 801a6b0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a6b4:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a6b8:	f104 0a01 	add.w	sl, r4, #1
 801a6bc:	f10e 0c01 	add.w	ip, lr, #1
 801a6c0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a6c4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a6c8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a6cc:	0964      	lsrs	r4, r4, #5
 801a6ce:	ea4c 0c03 	orr.w	ip, ip, r3
 801a6d2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a6d6:	9b03      	ldr	r3, [sp, #12]
 801a6d8:	ea4c 0c04 	orr.w	ip, ip, r4
 801a6dc:	f8a3 c000 	strh.w	ip, [r3]
 801a6e0:	b007      	add	sp, #28
 801a6e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6e6:	af05      	add	r7, sp, #20
 801a6e8:	e756      	b.n	801a598 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a6ea:	ad05      	add	r5, sp, #20
 801a6ec:	462f      	mov	r7, r5
 801a6ee:	e761      	b.n	801a5b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a6f0:	ad05      	add	r5, sp, #20
 801a6f2:	e75f      	b.n	801a5b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a6f4:	ae05      	add	r6, sp, #20
 801a6f6:	e772      	b.n	801a5de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a6f8:	ab05      	add	r3, sp, #20
 801a6fa:	461e      	mov	r6, r3
 801a6fc:	e77e      	b.n	801a5fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a6fe:	ab05      	add	r3, sp, #20
 801a700:	e77c      	b.n	801a5fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a702:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a706:	b095      	sub	sp, #84	@ 0x54
 801a708:	9212      	str	r2, [sp, #72]	@ 0x48
 801a70a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a70c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a70e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a712:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a714:	910e      	str	r1, [sp, #56]	@ 0x38
 801a716:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a71a:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a71c:	6850      	ldr	r0, [r2, #4]
 801a71e:	6812      	ldr	r2, [r2, #0]
 801a720:	fb00 1303 	mla	r3, r0, r3, r1
 801a724:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a728:	930a      	str	r3, [sp, #40]	@ 0x28
 801a72a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a72c:	681b      	ldr	r3, [r3, #0]
 801a72e:	930d      	str	r3, [sp, #52]	@ 0x34
 801a730:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a732:	685c      	ldr	r4, [r3, #4]
 801a734:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a736:	43db      	mvns	r3, r3
 801a738:	b2db      	uxtb	r3, r3
 801a73a:	3404      	adds	r4, #4
 801a73c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a73e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a740:	2b00      	cmp	r3, #0
 801a742:	dc03      	bgt.n	801a74c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a744:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a746:	2b00      	cmp	r3, #0
 801a748:	f340 8255 	ble.w	801abf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a74c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a74e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a752:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a756:	1e48      	subs	r0, r1, #1
 801a758:	1e55      	subs	r5, r2, #1
 801a75a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a75c:	2b00      	cmp	r3, #0
 801a75e:	f340 80f9 	ble.w	801a954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a762:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a764:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a766:	1436      	asrs	r6, r6, #16
 801a768:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a76c:	d406      	bmi.n	801a77c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a76e:	4286      	cmp	r6, r0
 801a770:	da04      	bge.n	801a77c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a772:	2b00      	cmp	r3, #0
 801a774:	db02      	blt.n	801a77c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a776:	42ab      	cmp	r3, r5
 801a778:	f2c0 80ed 	blt.w	801a956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a77c:	3601      	adds	r6, #1
 801a77e:	f100 80da 	bmi.w	801a936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a782:	42b1      	cmp	r1, r6
 801a784:	f2c0 80d7 	blt.w	801a936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a788:	3301      	adds	r3, #1
 801a78a:	f100 80d4 	bmi.w	801a936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a78e:	429a      	cmp	r2, r3
 801a790:	f2c0 80d1 	blt.w	801a936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a794:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a796:	9311      	str	r3, [sp, #68]	@ 0x44
 801a798:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a79a:	930c      	str	r3, [sp, #48]	@ 0x30
 801a79c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a79e:	2b00      	cmp	r3, #0
 801a7a0:	f340 80fa 	ble.w	801a998 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a7a4:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801a7a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a7a8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a7aa:	68c6      	ldr	r6, [r0, #12]
 801a7ac:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a7ae:	141d      	asrs	r5, r3, #16
 801a7b0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a7b4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a7b6:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a7b8:	1400      	asrs	r0, r0, #16
 801a7ba:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a7be:	6892      	ldr	r2, [r2, #8]
 801a7c0:	f100 813e 	bmi.w	801aa40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a7c4:	1e57      	subs	r7, r2, #1
 801a7c6:	42b8      	cmp	r0, r7
 801a7c8:	f280 813a 	bge.w	801aa40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a7cc:	2d00      	cmp	r5, #0
 801a7ce:	f2c0 8137 	blt.w	801aa40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a7d2:	1e77      	subs	r7, r6, #1
 801a7d4:	42bd      	cmp	r5, r7
 801a7d6:	f280 8133 	bge.w	801aa40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a7da:	b212      	sxth	r2, r2
 801a7dc:	fb05 0002 	mla	r0, r5, r2, r0
 801a7e0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a7e2:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a7e6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a7ea:	182e      	adds	r6, r5, r0
 801a7ec:	eb04 050a 	add.w	r5, r4, sl
 801a7f0:	2b00      	cmp	r3, #0
 801a7f2:	f000 8117 	beq.w	801aa24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a7f6:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a7fa:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a7fe:	44a4      	add	ip, r4
 801a800:	2900      	cmp	r1, #0
 801a802:	f000 8117 	beq.w	801aa34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a806:	18b0      	adds	r0, r6, r2
 801a808:	5cb2      	ldrb	r2, [r6, r2]
 801a80a:	7840      	ldrb	r0, [r0, #1]
 801a80c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a810:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a814:	4422      	add	r2, r4
 801a816:	4420      	add	r0, r4
 801a818:	b29b      	uxth	r3, r3
 801a81a:	b289      	uxth	r1, r1
 801a81c:	fb03 f901 	mul.w	r9, r3, r1
 801a820:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a824:	011b      	lsls	r3, r3, #4
 801a826:	b289      	uxth	r1, r1
 801a828:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a82c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a830:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a832:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a836:	f8b6 e000 	ldrh.w	lr, [r6]
 801a83a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801a83e:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801a842:	eba3 0309 	sub.w	r3, r3, r9
 801a846:	b29b      	uxth	r3, r3
 801a848:	eba8 0801 	sub.w	r8, r8, r1
 801a84c:	fa1f f888 	uxth.w	r8, r8
 801a850:	435f      	muls	r7, r3
 801a852:	fb08 770b 	mla	r7, r8, fp, r7
 801a856:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a85a:	9310      	str	r3, [sp, #64]	@ 0x40
 801a85c:	fb01 770b 	mla	r7, r1, fp, r7
 801a860:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a864:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a866:	fb09 770b 	mla	r7, r9, fp, r7
 801a86a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a86e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a872:	fb1b fb03 	smulbb	fp, fp, r3
 801a876:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a87a:	fb07 b706 	mla	r7, r7, r6, fp
 801a87e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a880:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a884:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a888:	f89c c000 	ldrb.w	ip, [ip]
 801a88c:	435d      	muls	r5, r3
 801a88e:	fb08 550b 	mla	r5, r8, fp, r5
 801a892:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a896:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a898:	fb01 550b 	mla	r5, r1, fp, r5
 801a89c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a8a0:	fb09 550b 	mla	r5, r9, fp, r5
 801a8a4:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a8a8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a8ac:	fb1b fb03 	smulbb	fp, fp, r3
 801a8b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a8b2:	fb03 f30c 	mul.w	r3, r3, ip
 801a8b6:	f892 c000 	ldrb.w	ip, [r2]
 801a8ba:	fb08 330a 	mla	r3, r8, sl, r3
 801a8be:	fb01 330c 	mla	r3, r1, ip, r3
 801a8c2:	f890 c000 	ldrb.w	ip, [r0]
 801a8c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a8ca:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a8ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a8d0:	fa5f fe8e 	uxtb.w	lr, lr
 801a8d4:	b2bf      	uxth	r7, r7
 801a8d6:	fb1e fe03 	smulbb	lr, lr, r3
 801a8da:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a8de:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a8e2:	fb05 b506 	mla	r5, r5, r6, fp
 801a8e6:	1c7b      	adds	r3, r7, #1
 801a8e8:	fb0c e606 	mla	r6, ip, r6, lr
 801a8ec:	b2ad      	uxth	r5, r5
 801a8ee:	b2b6      	uxth	r6, r6
 801a8f0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a8f4:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801a8f8:	f105 0b01 	add.w	fp, r5, #1
 801a8fc:	1c77      	adds	r7, r6, #1
 801a8fe:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a902:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a906:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a90a:	096d      	lsrs	r5, r5, #5
 801a90c:	431f      	orrs	r7, r3
 801a90e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a912:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a914:	433d      	orrs	r5, r7
 801a916:	801d      	strh	r5, [r3, #0]
 801a918:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a91a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a91c:	3302      	adds	r3, #2
 801a91e:	930c      	str	r3, [sp, #48]	@ 0x30
 801a920:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a922:	4413      	add	r3, r2
 801a924:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a926:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a928:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a92a:	4413      	add	r3, r2
 801a92c:	9320      	str	r3, [sp, #128]	@ 0x80
 801a92e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a930:	3b01      	subs	r3, #1
 801a932:	9311      	str	r3, [sp, #68]	@ 0x44
 801a934:	e732      	b.n	801a79c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a936:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a938:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a93a:	4433      	add	r3, r6
 801a93c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a93e:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801a940:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a942:	4433      	add	r3, r6
 801a944:	9320      	str	r3, [sp, #128]	@ 0x80
 801a946:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a948:	3b01      	subs	r3, #1
 801a94a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a94c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a94e:	3302      	adds	r3, #2
 801a950:	930a      	str	r3, [sp, #40]	@ 0x28
 801a952:	e702      	b.n	801a75a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a954:	d027      	beq.n	801a9a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a956:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a958:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801a95a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a95c:	3b01      	subs	r3, #1
 801a95e:	fb00 5003 	mla	r0, r0, r3, r5
 801a962:	1400      	asrs	r0, r0, #16
 801a964:	f53f af16 	bmi.w	801a794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a968:	3901      	subs	r1, #1
 801a96a:	4288      	cmp	r0, r1
 801a96c:	f6bf af12 	bge.w	801a794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a970:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801a972:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a974:	fb01 0303 	mla	r3, r1, r3, r0
 801a978:	141b      	asrs	r3, r3, #16
 801a97a:	f53f af0b 	bmi.w	801a794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a97e:	3a01      	subs	r2, #1
 801a980:	4293      	cmp	r3, r2
 801a982:	f6bf af07 	bge.w	801a794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a986:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a988:	9311      	str	r3, [sp, #68]	@ 0x44
 801a98a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801a98e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a990:	930c      	str	r3, [sp, #48]	@ 0x30
 801a992:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a994:	2b00      	cmp	r3, #0
 801a996:	dc70      	bgt.n	801aa7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a998:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a99a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a99c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a9a4:	930a      	str	r3, [sp, #40]	@ 0x28
 801a9a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a9a8:	2b00      	cmp	r3, #0
 801a9aa:	f340 8124 	ble.w	801abf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a9ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a9b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a9ba:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a9bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9c8:	eef0 6a62 	vmov.f32	s13, s5
 801a9cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9d8:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801a9dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9e0:	eef0 6a43 	vmov.f32	s13, s6
 801a9e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9e8:	ee12 2a90 	vmov	r2, s5
 801a9ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9f4:	ee13 2a10 	vmov	r2, s6
 801a9f8:	9321      	str	r3, [sp, #132]	@ 0x84
 801a9fa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a9fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa00:	9322      	str	r3, [sp, #136]	@ 0x88
 801aa02:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801aa04:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801aa06:	3b01      	subs	r3, #1
 801aa08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa0c:	930e      	str	r3, [sp, #56]	@ 0x38
 801aa0e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801aa10:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801aa14:	bf08      	it	eq
 801aa16:	4613      	moveq	r3, r2
 801aa18:	9309      	str	r3, [sp, #36]	@ 0x24
 801aa1a:	eeb0 3a67 	vmov.f32	s6, s15
 801aa1e:	eef0 2a47 	vmov.f32	s5, s14
 801aa22:	e68c      	b.n	801a73e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aa24:	b149      	cbz	r1, 801aa3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801aa26:	5cb2      	ldrb	r2, [r6, r2]
 801aa28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa2c:	4422      	add	r2, r4
 801aa2e:	4628      	mov	r0, r5
 801aa30:	46ac      	mov	ip, r5
 801aa32:	e6f1      	b.n	801a818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801aa34:	4628      	mov	r0, r5
 801aa36:	462a      	mov	r2, r5
 801aa38:	e6ee      	b.n	801a818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801aa3a:	4628      	mov	r0, r5
 801aa3c:	462a      	mov	r2, r5
 801aa3e:	e7f7      	b.n	801aa30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801aa40:	1c47      	adds	r7, r0, #1
 801aa42:	f53f af69 	bmi.w	801a918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa46:	42ba      	cmp	r2, r7
 801aa48:	f6ff af66 	blt.w	801a918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa4c:	1c6f      	adds	r7, r5, #1
 801aa4e:	f53f af63 	bmi.w	801a918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa52:	42be      	cmp	r6, r7
 801aa54:	f6ff af60 	blt.w	801a918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa58:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801aa5a:	9002      	str	r0, [sp, #8]
 801aa5c:	b236      	sxth	r6, r6
 801aa5e:	b212      	sxth	r2, r2
 801aa60:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801aa64:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801aa68:	9200      	str	r2, [sp, #0]
 801aa6a:	9601      	str	r6, [sp, #4]
 801aa6c:	4623      	mov	r3, r4
 801aa6e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801aa72:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801aa74:	f7ff fd59 	bl	801a52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801aa78:	e74e      	b.n	801a918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa7a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aa7c:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801aa7e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801aa80:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa82:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801aa86:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801aa88:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801aa8c:	142d      	asrs	r5, r5, #16
 801aa8e:	1400      	asrs	r0, r0, #16
 801aa90:	fb02 5000 	mla	r0, r2, r0, r5
 801aa94:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801aa96:	f815 9000 	ldrb.w	r9, [r5, r0]
 801aa9a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801aa9e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801aaa2:	182e      	adds	r6, r5, r0
 801aaa4:	eb04 0509 	add.w	r5, r4, r9
 801aaa8:	2b00      	cmp	r3, #0
 801aaaa:	f000 8096 	beq.w	801abda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801aaae:	7877      	ldrb	r7, [r6, #1]
 801aab0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aab4:	4427      	add	r7, r4
 801aab6:	2900      	cmp	r1, #0
 801aab8:	f000 8097 	beq.w	801abea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801aabc:	18b0      	adds	r0, r6, r2
 801aabe:	5cb2      	ldrb	r2, [r6, r2]
 801aac0:	7840      	ldrb	r0, [r0, #1]
 801aac2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aac6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aaca:	4422      	add	r2, r4
 801aacc:	4420      	add	r0, r4
 801aace:	b29b      	uxth	r3, r3
 801aad0:	b289      	uxth	r1, r1
 801aad2:	fb03 f801 	mul.w	r8, r3, r1
 801aad6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801aad8:	f895 b002 	ldrb.w	fp, [r5, #2]
 801aadc:	f8b6 c000 	ldrh.w	ip, [r6]
 801aae0:	78be      	ldrb	r6, [r7, #2]
 801aae2:	f814 9009 	ldrb.w	r9, [r4, r9]
 801aae6:	011b      	lsls	r3, r3, #4
 801aae8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801aaec:	b289      	uxth	r1, r1
 801aaee:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801aaf2:	eba3 0308 	sub.w	r3, r3, r8
 801aaf6:	b29b      	uxth	r3, r3
 801aaf8:	ebae 0e01 	sub.w	lr, lr, r1
 801aafc:	fa1f fe8e 	uxth.w	lr, lr
 801ab00:	435e      	muls	r6, r3
 801ab02:	fb0e 660b 	mla	r6, lr, fp, r6
 801ab06:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ab0a:	9310      	str	r3, [sp, #64]	@ 0x40
 801ab0c:	fb01 660b 	mla	r6, r1, fp, r6
 801ab10:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ab14:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab16:	fb08 660b 	mla	r6, r8, fp, r6
 801ab1a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ab1e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801ab22:	fb1b fb03 	smulbb	fp, fp, r3
 801ab26:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ab2a:	fb06 b60a 	mla	r6, r6, sl, fp
 801ab2e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab30:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ab34:	787d      	ldrb	r5, [r7, #1]
 801ab36:	783f      	ldrb	r7, [r7, #0]
 801ab38:	435d      	muls	r5, r3
 801ab3a:	fb0e 550b 	mla	r5, lr, fp, r5
 801ab3e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ab42:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab44:	fb01 550b 	mla	r5, r1, fp, r5
 801ab48:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ab4c:	fb08 550b 	mla	r5, r8, fp, r5
 801ab50:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ab54:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ab58:	fb1b fb03 	smulbb	fp, fp, r3
 801ab5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab5e:	437b      	muls	r3, r7
 801ab60:	7817      	ldrb	r7, [r2, #0]
 801ab62:	fb0e 3309 	mla	r3, lr, r9, r3
 801ab66:	fb01 3307 	mla	r3, r1, r7, r3
 801ab6a:	7807      	ldrb	r7, [r0, #0]
 801ab6c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ab70:	fb08 3707 	mla	r7, r8, r7, r3
 801ab74:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab76:	fa5f fc8c 	uxtb.w	ip, ip
 801ab7a:	fb1c fc03 	smulbb	ip, ip, r3
 801ab7e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ab82:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ab86:	fb05 b50a 	mla	r5, r5, sl, fp
 801ab8a:	fb07 c70a 	mla	r7, r7, sl, ip
 801ab8e:	b2b6      	uxth	r6, r6
 801ab90:	b2ad      	uxth	r5, r5
 801ab92:	b2bf      	uxth	r7, r7
 801ab94:	1c73      	adds	r3, r6, #1
 801ab96:	1c7a      	adds	r2, r7, #1
 801ab98:	f105 0b01 	add.w	fp, r5, #1
 801ab9c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801aba0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801aba4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801aba8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801abac:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801abb0:	096d      	lsrs	r5, r5, #5
 801abb2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801abb4:	4316      	orrs	r6, r2
 801abb6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801abba:	432e      	orrs	r6, r5
 801abbc:	f823 6b02 	strh.w	r6, [r3], #2
 801abc0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801abc2:	930c      	str	r3, [sp, #48]	@ 0x30
 801abc4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801abc6:	4413      	add	r3, r2
 801abc8:	931f      	str	r3, [sp, #124]	@ 0x7c
 801abca:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801abcc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801abce:	4413      	add	r3, r2
 801abd0:	9320      	str	r3, [sp, #128]	@ 0x80
 801abd2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801abd4:	3b01      	subs	r3, #1
 801abd6:	9311      	str	r3, [sp, #68]	@ 0x44
 801abd8:	e6db      	b.n	801a992 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801abda:	b149      	cbz	r1, 801abf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801abdc:	5cb2      	ldrb	r2, [r6, r2]
 801abde:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801abe2:	4422      	add	r2, r4
 801abe4:	4628      	mov	r0, r5
 801abe6:	462f      	mov	r7, r5
 801abe8:	e771      	b.n	801aace <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801abea:	4628      	mov	r0, r5
 801abec:	462a      	mov	r2, r5
 801abee:	e76e      	b.n	801aace <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801abf0:	4628      	mov	r0, r5
 801abf2:	462a      	mov	r2, r5
 801abf4:	e7f7      	b.n	801abe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801abf6:	b015      	add	sp, #84	@ 0x54
 801abf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801abfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801abfc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac00:	880f      	ldrh	r7, [r1, #0]
 801ac02:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801ac06:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ac0a:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801ac0e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ac12:	023c      	lsls	r4, r7, #8
 801ac14:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801ac18:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801ac1c:	017c      	lsls	r4, r7, #5
 801ac1e:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801ac22:	00ff      	lsls	r7, r7, #3
 801ac24:	ea4b 0404 	orr.w	r4, fp, r4
 801ac28:	b2ff      	uxtb	r7, r7
 801ac2a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801ac2e:	4327      	orrs	r7, r4
 801ac30:	2d00      	cmp	r5, #0
 801ac32:	eb02 080a 	add.w	r8, r2, sl
 801ac36:	9701      	str	r7, [sp, #4]
 801ac38:	db7e      	blt.n	801ad38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ac3a:	45a9      	cmp	r9, r5
 801ac3c:	dd7c      	ble.n	801ad38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ac3e:	f1bc 0f00 	cmp.w	ip, #0
 801ac42:	db77      	blt.n	801ad34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ac44:	45e6      	cmp	lr, ip
 801ac46:	dd75      	ble.n	801ad34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ac48:	f812 700a 	ldrb.w	r7, [r2, sl]
 801ac4c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ac50:	441f      	add	r7, r3
 801ac52:	f11c 0201 	adds.w	r2, ip, #1
 801ac56:	d472      	bmi.n	801ad3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ac58:	4596      	cmp	lr, r2
 801ac5a:	dd70      	ble.n	801ad3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ac5c:	2800      	cmp	r0, #0
 801ac5e:	d06e      	beq.n	801ad3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ac60:	f898 4001 	ldrb.w	r4, [r8, #1]
 801ac64:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ac68:	441c      	add	r4, r3
 801ac6a:	3501      	adds	r5, #1
 801ac6c:	d46b      	bmi.n	801ad46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac6e:	45a9      	cmp	r9, r5
 801ac70:	dd69      	ble.n	801ad46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac72:	2e00      	cmp	r6, #0
 801ac74:	d067      	beq.n	801ad46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac76:	f1bc 0f00 	cmp.w	ip, #0
 801ac7a:	db62      	blt.n	801ad42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ac7c:	45e6      	cmp	lr, ip
 801ac7e:	dd60      	ble.n	801ad42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ac80:	f818 500e 	ldrb.w	r5, [r8, lr]
 801ac84:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ac88:	441d      	add	r5, r3
 801ac8a:	f11c 0201 	adds.w	r2, ip, #1
 801ac8e:	d45d      	bmi.n	801ad4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac90:	4596      	cmp	lr, r2
 801ac92:	dd5b      	ble.n	801ad4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac94:	2800      	cmp	r0, #0
 801ac96:	d059      	beq.n	801ad4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac98:	44c6      	add	lr, r8
 801ac9a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ac9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aca2:	4413      	add	r3, r2
 801aca4:	b280      	uxth	r0, r0
 801aca6:	b2b2      	uxth	r2, r6
 801aca8:	fb00 f602 	mul.w	r6, r0, r2
 801acac:	0100      	lsls	r0, r0, #4
 801acae:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801acb2:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801acb6:	1b80      	subs	r0, r0, r6
 801acb8:	fa1f fc82 	uxth.w	ip, r2
 801acbc:	b282      	uxth	r2, r0
 801acbe:	78a0      	ldrb	r0, [r4, #2]
 801acc0:	f897 e002 	ldrb.w	lr, [r7, #2]
 801acc4:	f897 9000 	ldrb.w	r9, [r7]
 801acc8:	787f      	ldrb	r7, [r7, #1]
 801acca:	eba8 080c 	sub.w	r8, r8, ip
 801acce:	fa1f f888 	uxth.w	r8, r8
 801acd2:	4350      	muls	r0, r2
 801acd4:	fb08 0e0e 	mla	lr, r8, lr, r0
 801acd8:	78a8      	ldrb	r0, [r5, #2]
 801acda:	fb0c e000 	mla	r0, ip, r0, lr
 801acde:	f893 e002 	ldrb.w	lr, [r3, #2]
 801ace2:	fb06 0e0e 	mla	lr, r6, lr, r0
 801ace6:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801acea:	f894 e000 	ldrb.w	lr, [r4]
 801acee:	fb02 fe0e 	mul.w	lr, r2, lr
 801acf2:	fb08 e909 	mla	r9, r8, r9, lr
 801acf6:	f895 e000 	ldrb.w	lr, [r5]
 801acfa:	fb0c 990e 	mla	r9, ip, lr, r9
 801acfe:	f893 e000 	ldrb.w	lr, [r3]
 801ad02:	785b      	ldrb	r3, [r3, #1]
 801ad04:	fb06 9e0e 	mla	lr, r6, lr, r9
 801ad08:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ad0c:	ea4e 0e00 	orr.w	lr, lr, r0
 801ad10:	7860      	ldrb	r0, [r4, #1]
 801ad12:	4350      	muls	r0, r2
 801ad14:	786a      	ldrb	r2, [r5, #1]
 801ad16:	fb08 0007 	mla	r0, r8, r7, r0
 801ad1a:	fb0c 0202 	mla	r2, ip, r2, r0
 801ad1e:	fb06 2303 	mla	r3, r6, r3, r2
 801ad22:	095b      	lsrs	r3, r3, #5
 801ad24:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ad28:	ea4e 0303 	orr.w	r3, lr, r3
 801ad2c:	800b      	strh	r3, [r1, #0]
 801ad2e:	b003      	add	sp, #12
 801ad30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad34:	af01      	add	r7, sp, #4
 801ad36:	e78c      	b.n	801ac52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801ad38:	ac01      	add	r4, sp, #4
 801ad3a:	4627      	mov	r7, r4
 801ad3c:	e795      	b.n	801ac6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ad3e:	ac01      	add	r4, sp, #4
 801ad40:	e793      	b.n	801ac6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ad42:	ad01      	add	r5, sp, #4
 801ad44:	e7a1      	b.n	801ac8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801ad46:	ab01      	add	r3, sp, #4
 801ad48:	461d      	mov	r5, r3
 801ad4a:	e7ab      	b.n	801aca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801ad4c:	ab01      	add	r3, sp, #4
 801ad4e:	e7a9      	b.n	801aca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801ad50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad54:	b08f      	sub	sp, #60	@ 0x3c
 801ad56:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801ad5a:	920c      	str	r2, [sp, #48]	@ 0x30
 801ad5c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801ad5e:	910a      	str	r1, [sp, #40]	@ 0x28
 801ad60:	9306      	str	r3, [sp, #24]
 801ad62:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801ad66:	900d      	str	r0, [sp, #52]	@ 0x34
 801ad68:	6850      	ldr	r0, [r2, #4]
 801ad6a:	6812      	ldr	r2, [r2, #0]
 801ad6c:	fb00 1303 	mla	r3, r0, r3, r1
 801ad70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ad74:	9307      	str	r3, [sp, #28]
 801ad76:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad78:	681b      	ldr	r3, [r3, #0]
 801ad7a:	9308      	str	r3, [sp, #32]
 801ad7c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad7e:	685c      	ldr	r4, [r3, #4]
 801ad80:	3404      	adds	r4, #4
 801ad82:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ad84:	2b00      	cmp	r3, #0
 801ad86:	dc03      	bgt.n	801ad90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ad88:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ad8a:	2b00      	cmp	r3, #0
 801ad8c:	f340 81d6 	ble.w	801b13c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ad90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ad96:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ad9a:	1e48      	subs	r0, r1, #1
 801ad9c:	1e56      	subs	r6, r2, #1
 801ad9e:	9b06      	ldr	r3, [sp, #24]
 801ada0:	2b00      	cmp	r3, #0
 801ada2:	f340 80b7 	ble.w	801af14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801ada6:	ea5f 472b 	movs.w	r7, fp, asr #16
 801adaa:	ea4f 4325 	mov.w	r3, r5, asr #16
 801adae:	d406      	bmi.n	801adbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801adb0:	4287      	cmp	r7, r0
 801adb2:	da04      	bge.n	801adbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801adb4:	2b00      	cmp	r3, #0
 801adb6:	db02      	blt.n	801adbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801adb8:	42b3      	cmp	r3, r6
 801adba:	f2c0 80ac 	blt.w	801af16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801adbe:	3701      	adds	r7, #1
 801adc0:	f100 809d 	bmi.w	801aefe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801adc4:	42b9      	cmp	r1, r7
 801adc6:	f2c0 809a 	blt.w	801aefe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801adca:	3301      	adds	r3, #1
 801adcc:	f100 8097 	bmi.w	801aefe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801add0:	429a      	cmp	r2, r3
 801add2:	f2c0 8094 	blt.w	801aefe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801add6:	9b06      	ldr	r3, [sp, #24]
 801add8:	930b      	str	r3, [sp, #44]	@ 0x2c
 801adda:	9b07      	ldr	r3, [sp, #28]
 801addc:	9309      	str	r3, [sp, #36]	@ 0x24
 801adde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ade0:	2b00      	cmp	r3, #0
 801ade2:	f340 80b5 	ble.w	801af50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ade6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ade8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801adea:	68c7      	ldr	r7, [r0, #12]
 801adec:	6892      	ldr	r2, [r2, #8]
 801adee:	ea5f 402b 	movs.w	r0, fp, asr #16
 801adf2:	ea4f 4625 	mov.w	r6, r5, asr #16
 801adf6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801adfa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801adfe:	f100 80fb 	bmi.w	801aff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae02:	f102 3cff 	add.w	ip, r2, #4294967295
 801ae06:	4560      	cmp	r0, ip
 801ae08:	f280 80f6 	bge.w	801aff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae0c:	2e00      	cmp	r6, #0
 801ae0e:	f2c0 80f3 	blt.w	801aff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae12:	f107 3cff 	add.w	ip, r7, #4294967295
 801ae16:	4566      	cmp	r6, ip
 801ae18:	f280 80ee 	bge.w	801aff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae1c:	b212      	sxth	r2, r2
 801ae1e:	fb06 0002 	mla	r0, r6, r2, r0
 801ae22:	9e08      	ldr	r6, [sp, #32]
 801ae24:	1837      	adds	r7, r6, r0
 801ae26:	5c30      	ldrb	r0, [r6, r0]
 801ae28:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801ae2c:	eb04 0c08 	add.w	ip, r4, r8
 801ae30:	2b00      	cmp	r3, #0
 801ae32:	f000 80d3 	beq.w	801afdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ae36:	787e      	ldrb	r6, [r7, #1]
 801ae38:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ae3c:	4426      	add	r6, r4
 801ae3e:	2900      	cmp	r1, #0
 801ae40:	f000 80d4 	beq.w	801afec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ae44:	18b8      	adds	r0, r7, r2
 801ae46:	5cba      	ldrb	r2, [r7, r2]
 801ae48:	7840      	ldrb	r0, [r0, #1]
 801ae4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae4e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ae52:	4422      	add	r2, r4
 801ae54:	4420      	add	r0, r4
 801ae56:	b29b      	uxth	r3, r3
 801ae58:	b289      	uxth	r1, r1
 801ae5a:	fb03 f901 	mul.w	r9, r3, r1
 801ae5e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ae62:	011b      	lsls	r3, r3, #4
 801ae64:	b289      	uxth	r1, r1
 801ae66:	78b7      	ldrb	r7, [r6, #2]
 801ae68:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ae6c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ae70:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ae74:	eba3 0309 	sub.w	r3, r3, r9
 801ae78:	b29b      	uxth	r3, r3
 801ae7a:	ebae 0e01 	sub.w	lr, lr, r1
 801ae7e:	fa1f fe8e 	uxth.w	lr, lr
 801ae82:	435f      	muls	r7, r3
 801ae84:	fb0e 770a 	mla	r7, lr, sl, r7
 801ae88:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ae8c:	fb01 770a 	mla	r7, r1, sl, r7
 801ae90:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ae94:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ae98:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ae9c:	f896 8000 	ldrb.w	r8, [r6]
 801aea0:	7876      	ldrb	r6, [r6, #1]
 801aea2:	fb03 f808 	mul.w	r8, r3, r8
 801aea6:	fb0e 8807 	mla	r8, lr, r7, r8
 801aeaa:	7817      	ldrb	r7, [r2, #0]
 801aeac:	fb01 8807 	mla	r8, r1, r7, r8
 801aeb0:	7807      	ldrb	r7, [r0, #0]
 801aeb2:	fb09 8707 	mla	r7, r9, r7, r8
 801aeb6:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801aeba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801aebe:	ea47 070a 	orr.w	r7, r7, sl
 801aec2:	4373      	muls	r3, r6
 801aec4:	f892 a001 	ldrb.w	sl, [r2, #1]
 801aec8:	fb0e 330c 	mla	r3, lr, ip, r3
 801aecc:	fb01 310a 	mla	r1, r1, sl, r3
 801aed0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801aed4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aed6:	fb09 1a0a 	mla	sl, r9, sl, r1
 801aeda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aede:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801aee2:	ea47 070a 	orr.w	r7, r7, sl
 801aee6:	801f      	strh	r7, [r3, #0]
 801aee8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aeea:	3302      	adds	r3, #2
 801aeec:	9309      	str	r3, [sp, #36]	@ 0x24
 801aeee:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801aef0:	449b      	add	fp, r3
 801aef2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801aef4:	441d      	add	r5, r3
 801aef6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aef8:	3b01      	subs	r3, #1
 801aefa:	930b      	str	r3, [sp, #44]	@ 0x2c
 801aefc:	e76f      	b.n	801adde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801aefe:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801af00:	449b      	add	fp, r3
 801af02:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801af04:	441d      	add	r5, r3
 801af06:	9b06      	ldr	r3, [sp, #24]
 801af08:	3b01      	subs	r3, #1
 801af0a:	9306      	str	r3, [sp, #24]
 801af0c:	9b07      	ldr	r3, [sp, #28]
 801af0e:	3302      	adds	r3, #2
 801af10:	9307      	str	r3, [sp, #28]
 801af12:	e744      	b.n	801ad9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801af14:	d023      	beq.n	801af5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801af16:	9b06      	ldr	r3, [sp, #24]
 801af18:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801af1a:	3b01      	subs	r3, #1
 801af1c:	fb00 b003 	mla	r0, r0, r3, fp
 801af20:	1400      	asrs	r0, r0, #16
 801af22:	f53f af58 	bmi.w	801add6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af26:	3901      	subs	r1, #1
 801af28:	4288      	cmp	r0, r1
 801af2a:	f6bf af54 	bge.w	801add6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af2e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801af30:	fb01 5303 	mla	r3, r1, r3, r5
 801af34:	141b      	asrs	r3, r3, #16
 801af36:	f53f af4e 	bmi.w	801add6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af3a:	3a01      	subs	r2, #1
 801af3c:	4293      	cmp	r3, r2
 801af3e:	f6bf af4a 	bge.w	801add6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af42:	9b06      	ldr	r3, [sp, #24]
 801af44:	9309      	str	r3, [sp, #36]	@ 0x24
 801af46:	9b07      	ldr	r3, [sp, #28]
 801af48:	930b      	str	r3, [sp, #44]	@ 0x2c
 801af4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af4c:	2b00      	cmp	r3, #0
 801af4e:	dc70      	bgt.n	801b032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801af50:	9b06      	ldr	r3, [sp, #24]
 801af52:	9a07      	ldr	r2, [sp, #28]
 801af54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801af5c:	9307      	str	r3, [sp, #28]
 801af5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af60:	2b00      	cmp	r3, #0
 801af62:	f340 80eb 	ble.w	801b13c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801af66:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af6a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801af6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af72:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801af74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af78:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af80:	eef0 6a62 	vmov.f32	s13, s5
 801af84:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af90:	ee16 ba90 	vmov	fp, s13
 801af94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af98:	eef0 6a43 	vmov.f32	s13, s6
 801af9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afa0:	ee12 2a90 	vmov	r2, s5
 801afa4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afa8:	fb92 f3f3 	sdiv	r3, r2, r3
 801afac:	ee13 2a10 	vmov	r2, s6
 801afb0:	931b      	str	r3, [sp, #108]	@ 0x6c
 801afb2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801afb4:	fb92 f3f3 	sdiv	r3, r2, r3
 801afb8:	931c      	str	r3, [sp, #112]	@ 0x70
 801afba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801afbc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801afbe:	3b01      	subs	r3, #1
 801afc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afc4:	930a      	str	r3, [sp, #40]	@ 0x28
 801afc6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801afc8:	bf08      	it	eq
 801afca:	4613      	moveq	r3, r2
 801afcc:	ee16 5a90 	vmov	r5, s13
 801afd0:	9306      	str	r3, [sp, #24]
 801afd2:	eeb0 3a67 	vmov.f32	s6, s15
 801afd6:	eef0 2a47 	vmov.f32	s5, s14
 801afda:	e6d2      	b.n	801ad82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801afdc:	b149      	cbz	r1, 801aff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801afde:	5cba      	ldrb	r2, [r7, r2]
 801afe0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801afe4:	4422      	add	r2, r4
 801afe6:	4660      	mov	r0, ip
 801afe8:	4666      	mov	r6, ip
 801afea:	e734      	b.n	801ae56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801afec:	4660      	mov	r0, ip
 801afee:	4662      	mov	r2, ip
 801aff0:	e731      	b.n	801ae56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801aff2:	4660      	mov	r0, ip
 801aff4:	4662      	mov	r2, ip
 801aff6:	e7f7      	b.n	801afe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801aff8:	f110 0c01 	adds.w	ip, r0, #1
 801affc:	f53f af74 	bmi.w	801aee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b000:	4562      	cmp	r2, ip
 801b002:	f6ff af71 	blt.w	801aee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b006:	f116 0c01 	adds.w	ip, r6, #1
 801b00a:	f53f af6d 	bmi.w	801aee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b00e:	4567      	cmp	r7, ip
 801b010:	f6ff af6a 	blt.w	801aee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b014:	b23f      	sxth	r7, r7
 801b016:	b212      	sxth	r2, r2
 801b018:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b01c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b020:	9200      	str	r2, [sp, #0]
 801b022:	9701      	str	r7, [sp, #4]
 801b024:	4623      	mov	r3, r4
 801b026:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b02a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801b02c:	f7ff fde6 	bl	801abfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b030:	e75a      	b.n	801aee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b032:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b034:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b038:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b03c:	1428      	asrs	r0, r5, #16
 801b03e:	fb02 6000 	mla	r0, r2, r0, r6
 801b042:	9e08      	ldr	r6, [sp, #32]
 801b044:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b048:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b04c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b050:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b054:	1837      	adds	r7, r6, r0
 801b056:	eb04 0c08 	add.w	ip, r4, r8
 801b05a:	2b00      	cmp	r3, #0
 801b05c:	d060      	beq.n	801b120 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b05e:	787e      	ldrb	r6, [r7, #1]
 801b060:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b064:	4426      	add	r6, r4
 801b066:	2900      	cmp	r1, #0
 801b068:	d062      	beq.n	801b130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801b06a:	18b8      	adds	r0, r7, r2
 801b06c:	5cba      	ldrb	r2, [r7, r2]
 801b06e:	7840      	ldrb	r0, [r0, #1]
 801b070:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b074:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b078:	4422      	add	r2, r4
 801b07a:	4420      	add	r0, r4
 801b07c:	b29b      	uxth	r3, r3
 801b07e:	b289      	uxth	r1, r1
 801b080:	fb03 f901 	mul.w	r9, r3, r1
 801b084:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b088:	011b      	lsls	r3, r3, #4
 801b08a:	b289      	uxth	r1, r1
 801b08c:	78b7      	ldrb	r7, [r6, #2]
 801b08e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b092:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b096:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b09a:	eba3 0309 	sub.w	r3, r3, r9
 801b09e:	b29b      	uxth	r3, r3
 801b0a0:	ebae 0e01 	sub.w	lr, lr, r1
 801b0a4:	fa1f fe8e 	uxth.w	lr, lr
 801b0a8:	435f      	muls	r7, r3
 801b0aa:	fb0e 770a 	mla	r7, lr, sl, r7
 801b0ae:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b0b2:	fb01 770a 	mla	r7, r1, sl, r7
 801b0b6:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b0ba:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b0be:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b0c2:	f896 8000 	ldrb.w	r8, [r6]
 801b0c6:	7876      	ldrb	r6, [r6, #1]
 801b0c8:	fb03 f808 	mul.w	r8, r3, r8
 801b0cc:	fb0e 8807 	mla	r8, lr, r7, r8
 801b0d0:	7817      	ldrb	r7, [r2, #0]
 801b0d2:	fb01 8807 	mla	r8, r1, r7, r8
 801b0d6:	7807      	ldrb	r7, [r0, #0]
 801b0d8:	fb09 8707 	mla	r7, r9, r7, r8
 801b0dc:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b0e0:	4373      	muls	r3, r6
 801b0e2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b0e6:	7856      	ldrb	r6, [r2, #1]
 801b0e8:	ea47 070a 	orr.w	r7, r7, sl
 801b0ec:	fb0e 330c 	mla	r3, lr, ip, r3
 801b0f0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b0f4:	fb01 3306 	mla	r3, r1, r6, r3
 801b0f8:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b0fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b100:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b102:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b106:	ea47 070a 	orr.w	r7, r7, sl
 801b10a:	f823 7b02 	strh.w	r7, [r3], #2
 801b10e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b110:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b112:	449b      	add	fp, r3
 801b114:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b116:	441d      	add	r5, r3
 801b118:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b11a:	3b01      	subs	r3, #1
 801b11c:	9309      	str	r3, [sp, #36]	@ 0x24
 801b11e:	e714      	b.n	801af4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b120:	b149      	cbz	r1, 801b136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b122:	5cba      	ldrb	r2, [r7, r2]
 801b124:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b128:	4422      	add	r2, r4
 801b12a:	4660      	mov	r0, ip
 801b12c:	4666      	mov	r6, ip
 801b12e:	e7a5      	b.n	801b07c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b130:	4660      	mov	r0, ip
 801b132:	4662      	mov	r2, ip
 801b134:	e7a2      	b.n	801b07c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b136:	4660      	mov	r0, ip
 801b138:	4662      	mov	r2, ip
 801b13a:	e7f7      	b.n	801b12c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b13c:	b00f      	add	sp, #60	@ 0x3c
 801b13e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b142 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b142:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b146:	b085      	sub	sp, #20
 801b148:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801b14c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801b150:	9102      	str	r1, [sp, #8]
 801b152:	2c00      	cmp	r4, #0
 801b154:	fb04 710c 	mla	r1, r4, ip, r7
 801b158:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801b15c:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801b160:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b164:	eb02 0e01 	add.w	lr, r2, r1
 801b168:	f2c0 8122 	blt.w	801b3b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b16c:	45a0      	cmp	r8, r4
 801b16e:	f340 811f 	ble.w	801b3b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b172:	2f00      	cmp	r7, #0
 801b174:	f2c0 811a 	blt.w	801b3ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b178:	45bc      	cmp	ip, r7
 801b17a:	f340 8117 	ble.w	801b3ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b17e:	5c52      	ldrb	r2, [r2, r1]
 801b180:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b184:	1c7a      	adds	r2, r7, #1
 801b186:	f100 8116 	bmi.w	801b3b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b18a:	4594      	cmp	ip, r2
 801b18c:	f340 8113 	ble.w	801b3b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b190:	2e00      	cmp	r6, #0
 801b192:	f000 8112 	beq.w	801b3ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b196:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b19a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b19e:	3401      	adds	r4, #1
 801b1a0:	f100 810f 	bmi.w	801b3c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b1a4:	45a0      	cmp	r8, r4
 801b1a6:	f340 810c 	ble.w	801b3c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b1aa:	2800      	cmp	r0, #0
 801b1ac:	f000 810c 	beq.w	801b3c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b1b0:	2f00      	cmp	r7, #0
 801b1b2:	f2c0 8104 	blt.w	801b3be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b1b6:	45bc      	cmp	ip, r7
 801b1b8:	f340 8101 	ble.w	801b3be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b1bc:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b1c0:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b1c4:	3701      	adds	r7, #1
 801b1c6:	f100 8102 	bmi.w	801b3ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b1ca:	45bc      	cmp	ip, r7
 801b1cc:	f340 80ff 	ble.w	801b3ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b1d0:	2e00      	cmp	r6, #0
 801b1d2:	f000 80fe 	beq.w	801b3d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b1d6:	44f4      	add	ip, lr
 801b1d8:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b1dc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b1e0:	b2b6      	uxth	r6, r6
 801b1e2:	b280      	uxth	r0, r0
 801b1e4:	fb00 fe06 	mul.w	lr, r0, r6
 801b1e8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b1ec:	0136      	lsls	r6, r6, #4
 801b1ee:	eba6 070e 	sub.w	r7, r6, lr
 801b1f2:	b280      	uxth	r0, r0
 801b1f4:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b1f8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b1fc:	b2bf      	uxth	r7, r7
 801b1fe:	1a1b      	subs	r3, r3, r0
 801b200:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b204:	b29b      	uxth	r3, r3
 801b206:	fb0a f607 	mul.w	r6, sl, r7
 801b20a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b20e:	fb0b 6603 	mla	r6, fp, r3, r6
 801b212:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b216:	fb00 6609 	mla	r6, r0, r9, r6
 801b21a:	fb0e 6608 	mla	r6, lr, r8, r6
 801b21e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b222:	9600      	str	r6, [sp, #0]
 801b224:	2e00      	cmp	r6, #0
 801b226:	f000 80be 	beq.w	801b3a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b22a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b22e:	fb0b fc0c 	mul.w	ip, fp, ip
 801b232:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b236:	fb0b f505 	mul.w	r5, fp, r5
 801b23a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b23e:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b242:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b246:	44dc      	add	ip, fp
 801b248:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b24c:	9501      	str	r5, [sp, #4]
 801b24e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b252:	9503      	str	r5, [sp, #12]
 801b254:	9d01      	ldr	r5, [sp, #4]
 801b256:	9e02      	ldr	r6, [sp, #8]
 801b258:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b25c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b260:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b264:	fb0a fc0c 	mul.w	ip, sl, ip
 801b268:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b26c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b270:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b274:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b278:	4465      	add	r5, ip
 801b27a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b27e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b282:	fb09 fc0c 	mul.w	ip, r9, ip
 801b286:	fb09 f904 	mul.w	r9, r9, r4
 801b28a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b28e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b292:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b296:	fb08 f404 	mul.w	r4, r8, r4
 801b29a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b29e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b2a2:	fb08 f802 	mul.w	r8, r8, r2
 801b2a6:	fb0a fa01 	mul.w	sl, sl, r1
 801b2aa:	0a22      	lsrs	r2, r4, #8
 801b2ac:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b2b0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b2b4:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b2b8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b2bc:	4414      	add	r4, r2
 801b2be:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b2c2:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b2c6:	0a2d      	lsrs	r5, r5, #8
 801b2c8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b2cc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b2d0:	9a03      	ldr	r2, [sp, #12]
 801b2d2:	8836      	ldrh	r6, [r6, #0]
 801b2d4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b2d8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b2dc:	437d      	muls	r5, r7
 801b2de:	4461      	add	r1, ip
 801b2e0:	0a24      	lsrs	r4, r4, #8
 801b2e2:	fb02 5503 	mla	r5, r2, r3, r5
 801b2e6:	0a09      	lsrs	r1, r1, #8
 801b2e8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b2ec:	fb04 540e 	mla	r4, r4, lr, r5
 801b2f0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b2f4:	fb01 4100 	mla	r1, r1, r0, r4
 801b2f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2fc:	0a09      	lsrs	r1, r1, #8
 801b2fe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b302:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b306:	fb07 f70a 	mul.w	r7, r7, sl
 801b30a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b30e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b312:	fb03 7101 	mla	r1, r3, r1, r7
 801b316:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b31a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b31e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b322:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b326:	fb00 e101 	mla	r1, r0, r1, lr
 801b32a:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801b32e:	9a00      	ldr	r2, [sp, #0]
 801b330:	b287      	uxth	r7, r0
 801b332:	437a      	muls	r2, r7
 801b334:	0a09      	lsrs	r1, r1, #8
 801b336:	1c53      	adds	r3, r2, #1
 801b338:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b33c:	4321      	orrs	r1, r4
 801b33e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b342:	1235      	asrs	r5, r6, #8
 801b344:	0c0a      	lsrs	r2, r1, #16
 801b346:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b34a:	b2db      	uxtb	r3, r3
 801b34c:	fb12 f207 	smulbb	r2, r2, r7
 801b350:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b354:	fb05 2503 	mla	r5, r5, r3, r2
 801b358:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b35c:	10f2      	asrs	r2, r6, #3
 801b35e:	b2c8      	uxtb	r0, r1
 801b360:	00f6      	lsls	r6, r6, #3
 801b362:	fb14 f407 	smulbb	r4, r4, r7
 801b366:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b36a:	b2f6      	uxtb	r6, r6
 801b36c:	fb10 f007 	smulbb	r0, r0, r7
 801b370:	fb02 4203 	mla	r2, r2, r3, r4
 801b374:	b2ad      	uxth	r5, r5
 801b376:	fb06 0303 	mla	r3, r6, r3, r0
 801b37a:	b299      	uxth	r1, r3
 801b37c:	b294      	uxth	r4, r2
 801b37e:	1c6b      	adds	r3, r5, #1
 801b380:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b384:	1c62      	adds	r2, r4, #1
 801b386:	1c4b      	adds	r3, r1, #1
 801b388:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b38c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b390:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b394:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b398:	0952      	lsrs	r2, r2, #5
 801b39a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b39e:	432b      	orrs	r3, r5
 801b3a0:	4313      	orrs	r3, r2
 801b3a2:	9a02      	ldr	r2, [sp, #8]
 801b3a4:	8013      	strh	r3, [r2, #0]
 801b3a6:	b005      	add	sp, #20
 801b3a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3ac:	2500      	movs	r5, #0
 801b3ae:	e6e9      	b.n	801b184 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b3b0:	2100      	movs	r1, #0
 801b3b2:	460d      	mov	r5, r1
 801b3b4:	e6f3      	b.n	801b19e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b3b6:	2100      	movs	r1, #0
 801b3b8:	e6f1      	b.n	801b19e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b3ba:	4631      	mov	r1, r6
 801b3bc:	e6ef      	b.n	801b19e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b3be:	2400      	movs	r4, #0
 801b3c0:	e700      	b.n	801b1c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b3c2:	2200      	movs	r2, #0
 801b3c4:	4614      	mov	r4, r2
 801b3c6:	e70b      	b.n	801b1e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b3c8:	4602      	mov	r2, r0
 801b3ca:	4604      	mov	r4, r0
 801b3cc:	e708      	b.n	801b1e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b3ce:	2200      	movs	r2, #0
 801b3d0:	e706      	b.n	801b1e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b3d2:	4632      	mov	r2, r6
 801b3d4:	e704      	b.n	801b1e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b3d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b3d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3da:	b09f      	sub	sp, #124	@ 0x7c
 801b3dc:	921b      	str	r2, [sp, #108]	@ 0x6c
 801b3de:	9309      	str	r3, [sp, #36]	@ 0x24
 801b3e0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801b3e2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b3e6:	931c      	str	r3, [sp, #112]	@ 0x70
 801b3e8:	9119      	str	r1, [sp, #100]	@ 0x64
 801b3ea:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b3ee:	901d      	str	r0, [sp, #116]	@ 0x74
 801b3f0:	6850      	ldr	r0, [r2, #4]
 801b3f2:	6812      	ldr	r2, [r2, #0]
 801b3f4:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b3f6:	fb00 1303 	mla	r3, r0, r3, r1
 801b3fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b3fe:	930c      	str	r3, [sp, #48]	@ 0x30
 801b400:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b402:	681b      	ldr	r3, [r3, #0]
 801b404:	9312      	str	r3, [sp, #72]	@ 0x48
 801b406:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b408:	685e      	ldr	r6, [r3, #4]
 801b40a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b40e:	930d      	str	r3, [sp, #52]	@ 0x34
 801b410:	3604      	adds	r6, #4
 801b412:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b414:	2b00      	cmp	r3, #0
 801b416:	dc03      	bgt.n	801b420 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b418:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b41a:	2b00      	cmp	r3, #0
 801b41c:	f340 8388 	ble.w	801bb30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b420:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b422:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b426:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b42a:	1e48      	subs	r0, r1, #1
 801b42c:	1e57      	subs	r7, r2, #1
 801b42e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b430:	2b00      	cmp	r3, #0
 801b432:	f340 8195 	ble.w	801b760 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b436:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b438:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b43c:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b440:	d406      	bmi.n	801b450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b442:	4584      	cmp	ip, r0
 801b444:	da04      	bge.n	801b450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b446:	2b00      	cmp	r3, #0
 801b448:	db02      	blt.n	801b450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b44a:	42bb      	cmp	r3, r7
 801b44c:	f2c0 8189 	blt.w	801b762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b450:	f11c 0c01 	adds.w	ip, ip, #1
 801b454:	f100 8177 	bmi.w	801b746 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b458:	4561      	cmp	r1, ip
 801b45a:	f2c0 8174 	blt.w	801b746 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b45e:	3301      	adds	r3, #1
 801b460:	f100 8171 	bmi.w	801b746 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b464:	429a      	cmp	r2, r3
 801b466:	f2c0 816e 	blt.w	801b746 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b46a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b46c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b46e:	931a      	str	r3, [sp, #104]	@ 0x68
 801b470:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b472:	2b00      	cmp	r3, #0
 801b474:	f340 8193 	ble.w	801b79e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b478:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b47a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b47e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b480:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b484:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b486:	141b      	asrs	r3, r3, #16
 801b488:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b48c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b490:	f100 81d6 	bmi.w	801b840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b494:	f100 38ff 	add.w	r8, r0, #4294967295
 801b498:	4543      	cmp	r3, r8
 801b49a:	f280 81d1 	bge.w	801b840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b49e:	f1bc 0f00 	cmp.w	ip, #0
 801b4a2:	f2c0 81cd 	blt.w	801b840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b4a6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b4aa:	45c4      	cmp	ip, r8
 801b4ac:	f280 81c8 	bge.w	801b840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b4b0:	b200      	sxth	r0, r0
 801b4b2:	fb0c 3300 	mla	r3, ip, r0, r3
 801b4b6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b4b8:	eb04 0803 	add.w	r8, r4, r3
 801b4bc:	5ce3      	ldrb	r3, [r4, r3]
 801b4be:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b4c2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b4c6:	2a00      	cmp	r2, #0
 801b4c8:	f000 81af 	beq.w	801b82a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b4cc:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b4d0:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b4d4:	940e      	str	r4, [sp, #56]	@ 0x38
 801b4d6:	0e24      	lsrs	r4, r4, #24
 801b4d8:	9415      	str	r4, [sp, #84]	@ 0x54
 801b4da:	b179      	cbz	r1, 801b4fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b4dc:	eb08 0c00 	add.w	ip, r8, r0
 801b4e0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b4e4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b4e8:	900a      	str	r0, [sp, #40]	@ 0x28
 801b4ea:	0e00      	lsrs	r0, r0, #24
 801b4ec:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b4ee:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b4f2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b4f6:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b4f8:	0e00      	lsrs	r0, r0, #24
 801b4fa:	9016      	str	r0, [sp, #88]	@ 0x58
 801b4fc:	b292      	uxth	r2, r2
 801b4fe:	b289      	uxth	r1, r1
 801b500:	fb02 f901 	mul.w	r9, r2, r1
 801b504:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b508:	0112      	lsls	r2, r2, #4
 801b50a:	eba2 0809 	sub.w	r8, r2, r9
 801b50e:	b289      	uxth	r1, r1
 801b510:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b514:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b516:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b518:	fa1f f888 	uxth.w	r8, r8
 801b51c:	1a52      	subs	r2, r2, r1
 801b51e:	b292      	uxth	r2, r2
 801b520:	fb08 f000 	mul.w	r0, r8, r0
 801b524:	fb02 000e 	mla	r0, r2, lr, r0
 801b528:	fb01 0004 	mla	r0, r1, r4, r0
 801b52c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b52e:	fb09 0004 	mla	r0, r9, r4, r0
 801b532:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b536:	2800      	cmp	r0, #0
 801b538:	f000 80fa 	beq.w	801b730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b53c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b540:	d01b      	beq.n	801b57a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b542:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b546:	fb0e fa0a 	mul.w	sl, lr, sl
 801b54a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b54e:	fb0e fe03 	mul.w	lr, lr, r3
 801b552:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b556:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b55a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b55e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b562:	4453      	add	r3, sl
 801b564:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b568:	0a1b      	lsrs	r3, r3, #8
 801b56a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b56e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b572:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b576:	ea43 030c 	orr.w	r3, r3, ip
 801b57a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b57c:	2cff      	cmp	r4, #255	@ 0xff
 801b57e:	d021      	beq.n	801b5c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b580:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b582:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b586:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b588:	fb04 fb0b 	mul.w	fp, r4, fp
 801b58c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b58e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b592:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b594:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b598:	fb04 fa0a 	mul.w	sl, r4, sl
 801b59c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5a0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b5a4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b5a8:	44de      	add	lr, fp
 801b5aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b5ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5b6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5ba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b5be:	ea4e 040a 	orr.w	r4, lr, sl
 801b5c2:	940e      	str	r4, [sp, #56]	@ 0x38
 801b5c4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b5c6:	2cff      	cmp	r4, #255	@ 0xff
 801b5c8:	d021      	beq.n	801b60e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b5ca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b5cc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b5d0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b5d2:	fb04 fb0b 	mul.w	fp, r4, fp
 801b5d6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b5d8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b5dc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b5de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5e2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5e6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5ea:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b5ee:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b5f2:	44de      	add	lr, fp
 801b5f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b5f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b600:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b604:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b608:	ea4e 040a 	orr.w	r4, lr, sl
 801b60c:	940a      	str	r4, [sp, #40]	@ 0x28
 801b60e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b610:	2cff      	cmp	r4, #255	@ 0xff
 801b612:	d021      	beq.n	801b658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b614:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b616:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b61a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b61c:	fb04 fb0b 	mul.w	fp, r4, fp
 801b620:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b622:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b626:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b628:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b62c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b630:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b634:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b638:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b63c:	44de      	add	lr, fp
 801b63e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b642:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b646:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b64a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b64e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b652:	ea4e 040a 	orr.w	r4, lr, sl
 801b656:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b658:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b65a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b65e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b660:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b664:	fb08 fc0c 	mul.w	ip, r8, ip
 801b668:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b66c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b670:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b672:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b676:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b67a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b67c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b680:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b684:	fb08 f80e 	mul.w	r8, r8, lr
 801b688:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b68c:	fb02 8303 	mla	r3, r2, r3, r8
 801b690:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b692:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b694:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b698:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b69a:	fb01 330a 	mla	r3, r1, sl, r3
 801b69e:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b6a2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b6a4:	fb09 3901 	mla	r9, r9, r1, r3
 801b6a8:	4342      	muls	r2, r0
 801b6aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b6b2:	883b      	ldrh	r3, [r7, #0]
 801b6b4:	1c50      	adds	r0, r2, #1
 801b6b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b6ba:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b6be:	ea4c 0c09 	orr.w	ip, ip, r9
 801b6c2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b6c6:	1219      	asrs	r1, r3, #8
 801b6c8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b6cc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b6d0:	b2c0      	uxtb	r0, r0
 801b6d2:	fb12 f204 	smulbb	r2, r2, r4
 801b6d6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b6da:	fb01 2100 	mla	r1, r1, r0, r2
 801b6de:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b6e2:	10da      	asrs	r2, r3, #3
 801b6e4:	fa5f fc8c 	uxtb.w	ip, ip
 801b6e8:	00db      	lsls	r3, r3, #3
 801b6ea:	fb1c fc04 	smulbb	ip, ip, r4
 801b6ee:	b2db      	uxtb	r3, r3
 801b6f0:	b289      	uxth	r1, r1
 801b6f2:	fb03 c300 	mla	r3, r3, r0, ip
 801b6f6:	fa1f fc83 	uxth.w	ip, r3
 801b6fa:	1c4b      	adds	r3, r1, #1
 801b6fc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b700:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b704:	fb1e fe04 	smulbb	lr, lr, r4
 801b708:	f10c 0301 	add.w	r3, ip, #1
 801b70c:	fb02 e200 	mla	r2, r2, r0, lr
 801b710:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b714:	b292      	uxth	r2, r2
 801b716:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b71a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b71e:	430b      	orrs	r3, r1
 801b720:	1c51      	adds	r1, r2, #1
 801b722:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b726:	0952      	lsrs	r2, r2, #5
 801b728:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b72c:	4313      	orrs	r3, r2
 801b72e:	803b      	strh	r3, [r7, #0]
 801b730:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b732:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b734:	441a      	add	r2, r3
 801b736:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b738:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b73a:	441d      	add	r5, r3
 801b73c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b73e:	3b01      	subs	r3, #1
 801b740:	3702      	adds	r7, #2
 801b742:	931a      	str	r3, [sp, #104]	@ 0x68
 801b744:	e694      	b.n	801b470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b746:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b748:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b74a:	441c      	add	r4, r3
 801b74c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b74e:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b750:	441d      	add	r5, r3
 801b752:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b754:	3b01      	subs	r3, #1
 801b756:	9309      	str	r3, [sp, #36]	@ 0x24
 801b758:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b75a:	3302      	adds	r3, #2
 801b75c:	930c      	str	r3, [sp, #48]	@ 0x30
 801b75e:	e666      	b.n	801b42e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b760:	d024      	beq.n	801b7ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b762:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b764:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b766:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b768:	3b01      	subs	r3, #1
 801b76a:	fb00 4003 	mla	r0, r0, r3, r4
 801b76e:	1400      	asrs	r0, r0, #16
 801b770:	f53f ae7b 	bmi.w	801b46a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b774:	3901      	subs	r1, #1
 801b776:	4288      	cmp	r0, r1
 801b778:	f6bf ae77 	bge.w	801b46a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b77c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801b77e:	fb01 5303 	mla	r3, r1, r3, r5
 801b782:	141b      	asrs	r3, r3, #16
 801b784:	f53f ae71 	bmi.w	801b46a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b788:	3a01      	subs	r2, #1
 801b78a:	4293      	cmp	r3, r2
 801b78c:	f6bf ae6d 	bge.w	801b46a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b790:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b794:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801b798:	f1bb 0f00 	cmp.w	fp, #0
 801b79c:	dc70      	bgt.n	801b880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b79e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b7a0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b7a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b7a6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b7aa:	930c      	str	r3, [sp, #48]	@ 0x30
 801b7ac:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b7ae:	2b00      	cmp	r3, #0
 801b7b0:	f340 81be 	ble.w	801bb30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b7b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7b8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b7bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b7c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b7c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7ce:	eef0 6a62 	vmov.f32	s13, s5
 801b7d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b7de:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801b7e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b7e6:	eef0 6a43 	vmov.f32	s13, s6
 801b7ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b7ee:	ee12 2a90 	vmov	r2, s5
 801b7f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b7f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7fa:	ee13 2a10 	vmov	r2, s6
 801b7fe:	932b      	str	r3, [sp, #172]	@ 0xac
 801b800:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b802:	fb92 f3f3 	sdiv	r3, r2, r3
 801b806:	932c      	str	r3, [sp, #176]	@ 0xb0
 801b808:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b80a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801b80c:	3b01      	subs	r3, #1
 801b80e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b812:	9319      	str	r3, [sp, #100]	@ 0x64
 801b814:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b816:	bf08      	it	eq
 801b818:	4613      	moveq	r3, r2
 801b81a:	ee16 5a90 	vmov	r5, s13
 801b81e:	9309      	str	r3, [sp, #36]	@ 0x24
 801b820:	eeb0 3a67 	vmov.f32	s6, s15
 801b824:	eef0 2a47 	vmov.f32	s5, s14
 801b828:	e5f3      	b.n	801b412 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b82a:	2900      	cmp	r1, #0
 801b82c:	f43f ae66 	beq.w	801b4fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b830:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b834:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b838:	900a      	str	r0, [sp, #40]	@ 0x28
 801b83a:	0e00      	lsrs	r0, r0, #24
 801b83c:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b83e:	e65d      	b.n	801b4fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b840:	f113 0801 	adds.w	r8, r3, #1
 801b844:	f53f af74 	bmi.w	801b730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b848:	4540      	cmp	r0, r8
 801b84a:	f6ff af71 	blt.w	801b730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b84e:	f11c 0801 	adds.w	r8, ip, #1
 801b852:	f53f af6d 	bmi.w	801b730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b856:	45c6      	cmp	lr, r8
 801b858:	f6ff af6a 	blt.w	801b730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b85c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801b85e:	9302      	str	r3, [sp, #8]
 801b860:	b200      	sxth	r0, r0
 801b862:	fa0f f38e 	sxth.w	r3, lr
 801b866:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b86a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b86e:	9301      	str	r3, [sp, #4]
 801b870:	9000      	str	r0, [sp, #0]
 801b872:	4633      	mov	r3, r6
 801b874:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b876:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801b878:	4639      	mov	r1, r7
 801b87a:	f7ff fc62 	bl	801b142 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b87e:	e757      	b.n	801b730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b880:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b882:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b884:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b888:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b88a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b88e:	1427      	asrs	r7, r4, #16
 801b890:	142b      	asrs	r3, r5, #16
 801b892:	fb01 7303 	mla	r3, r1, r3, r7
 801b896:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b898:	18e7      	adds	r7, r4, r3
 801b89a:	5ce3      	ldrb	r3, [r4, r3]
 801b89c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b8a0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b8a4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b8a8:	2a00      	cmp	r2, #0
 801b8aa:	f000 8137 	beq.w	801bb1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b8ae:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b8b2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b8b6:	9410      	str	r4, [sp, #64]	@ 0x40
 801b8b8:	0e24      	lsrs	r4, r4, #24
 801b8ba:	9417      	str	r4, [sp, #92]	@ 0x5c
 801b8bc:	b170      	cbz	r0, 801b8dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b8be:	eb07 0e01 	add.w	lr, r7, r1
 801b8c2:	5c79      	ldrb	r1, [r7, r1]
 801b8c4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b8c8:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b8ca:	0e09      	lsrs	r1, r1, #24
 801b8cc:	9114      	str	r1, [sp, #80]	@ 0x50
 801b8ce:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b8d2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b8d6:	9111      	str	r1, [sp, #68]	@ 0x44
 801b8d8:	0e09      	lsrs	r1, r1, #24
 801b8da:	9118      	str	r1, [sp, #96]	@ 0x60
 801b8dc:	b292      	uxth	r2, r2
 801b8de:	b280      	uxth	r0, r0
 801b8e0:	fb02 f800 	mul.w	r8, r2, r0
 801b8e4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b8e8:	0112      	lsls	r2, r2, #4
 801b8ea:	eba2 0e08 	sub.w	lr, r2, r8
 801b8ee:	b280      	uxth	r0, r0
 801b8f0:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b8f4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801b8f6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b8f8:	fa1f fe8e 	uxth.w	lr, lr
 801b8fc:	1a12      	subs	r2, r2, r0
 801b8fe:	b292      	uxth	r2, r2
 801b900:	fb0e f101 	mul.w	r1, lr, r1
 801b904:	fb02 110c 	mla	r1, r2, ip, r1
 801b908:	fb00 1104 	mla	r1, r0, r4, r1
 801b90c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b90e:	fb08 1104 	mla	r1, r8, r4, r1
 801b912:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b916:	2900      	cmp	r1, #0
 801b918:	f000 80f5 	beq.w	801bb06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b91c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b920:	d019      	beq.n	801b956 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b922:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b926:	fb0c fa0a 	mul.w	sl, ip, sl
 801b92a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b92e:	fb0c fc03 	mul.w	ip, ip, r3
 801b932:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b936:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b93a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b93e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b942:	4453      	add	r3, sl
 801b944:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b948:	0a1b      	lsrs	r3, r3, #8
 801b94a:	0a3f      	lsrs	r7, r7, #8
 801b94c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b950:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b954:	433b      	orrs	r3, r7
 801b956:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b958:	2cff      	cmp	r4, #255	@ 0xff
 801b95a:	d020      	beq.n	801b99e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b95c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b95e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b962:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b964:	4367      	muls	r7, r4
 801b966:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b968:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b96c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b96e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b972:	fb04 fa0a 	mul.w	sl, r4, sl
 801b976:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b97a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b97e:	44bc      	add	ip, r7
 801b980:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b984:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b988:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b98c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b990:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b994:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b998:	ea4c 040a 	orr.w	r4, ip, sl
 801b99c:	9410      	str	r4, [sp, #64]	@ 0x40
 801b99e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b9a0:	2cff      	cmp	r4, #255	@ 0xff
 801b9a2:	d020      	beq.n	801b9e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b9a4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b9a6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b9aa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b9ac:	4367      	muls	r7, r4
 801b9ae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b9b0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b9b4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b9b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9ba:	fb04 fa0a 	mul.w	sl, r4, sl
 801b9be:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b9c2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9c6:	44bc      	add	ip, r7
 801b9c8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b9cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9d8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b9e0:	ea4c 040a 	orr.w	r4, ip, sl
 801b9e4:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b9e6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b9e8:	2cff      	cmp	r4, #255	@ 0xff
 801b9ea:	d020      	beq.n	801ba2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b9ec:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b9ee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b9f2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b9f4:	4367      	muls	r7, r4
 801b9f6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b9f8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b9fc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b9fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba02:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba06:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ba0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ba0e:	44bc      	add	ip, r7
 801ba10:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ba14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ba24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ba28:	ea4c 040a 	orr.w	r4, ip, sl
 801ba2c:	9411      	str	r4, [sp, #68]	@ 0x44
 801ba2e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ba30:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ba34:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ba36:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ba3a:	fb0e f707 	mul.w	r7, lr, r7
 801ba3e:	fb02 770c 	mla	r7, r2, ip, r7
 801ba42:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ba46:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ba48:	fb00 770c 	mla	r7, r0, ip, r7
 801ba4c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ba50:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ba52:	fb08 770c 	mla	r7, r8, ip, r7
 801ba56:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801ba5a:	fb0e fe0c 	mul.w	lr, lr, ip
 801ba5e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ba62:	fb02 e303 	mla	r3, r2, r3, lr
 801ba66:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ba68:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ba6a:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ba6e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ba70:	fb00 330a 	mla	r3, r0, sl, r3
 801ba74:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ba78:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ba7c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ba7e:	f8b9 0000 	ldrh.w	r0, [r9]
 801ba82:	434b      	muls	r3, r1
 801ba84:	0a3f      	lsrs	r7, r7, #8
 801ba86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba8a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ba8e:	1c59      	adds	r1, r3, #1
 801ba90:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ba94:	ea47 070c 	orr.w	r7, r7, ip
 801ba98:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ba9c:	1202      	asrs	r2, r0, #8
 801ba9e:	0c3b      	lsrs	r3, r7, #16
 801baa0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801baa4:	b2c9      	uxtb	r1, r1
 801baa6:	fb13 f304 	smulbb	r3, r3, r4
 801baaa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801baae:	fb02 3201 	mla	r2, r2, r1, r3
 801bab2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801bab6:	10c3      	asrs	r3, r0, #3
 801bab8:	b2ff      	uxtb	r7, r7
 801baba:	00c0      	lsls	r0, r0, #3
 801babc:	b292      	uxth	r2, r2
 801babe:	fb1c fc04 	smulbb	ip, ip, r4
 801bac2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801bac6:	b2c0      	uxtb	r0, r0
 801bac8:	fb17 f704 	smulbb	r7, r7, r4
 801bacc:	fb03 c301 	mla	r3, r3, r1, ip
 801bad0:	fb00 7001 	mla	r0, r0, r1, r7
 801bad4:	f102 0c01 	add.w	ip, r2, #1
 801bad8:	b280      	uxth	r0, r0
 801bada:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801bade:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801bae2:	1c42      	adds	r2, r0, #1
 801bae4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bae8:	b29b      	uxth	r3, r3
 801baea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801baee:	ea42 020c 	orr.w	r2, r2, ip
 801baf2:	f103 0c01 	add.w	ip, r3, #1
 801baf6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801bafa:	095b      	lsrs	r3, r3, #5
 801bafc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bb00:	431a      	orrs	r2, r3
 801bb02:	f8a9 2000 	strh.w	r2, [r9]
 801bb06:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801bb08:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801bb0a:	441a      	add	r2, r3
 801bb0c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bb0e:	9229      	str	r2, [sp, #164]	@ 0xa4
 801bb10:	f109 0902 	add.w	r9, r9, #2
 801bb14:	441d      	add	r5, r3
 801bb16:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bb1a:	e63d      	b.n	801b798 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801bb1c:	2800      	cmp	r0, #0
 801bb1e:	f43f aedd 	beq.w	801b8dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bb22:	5c79      	ldrb	r1, [r7, r1]
 801bb24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb28:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bb2a:	0e09      	lsrs	r1, r1, #24
 801bb2c:	9114      	str	r1, [sp, #80]	@ 0x50
 801bb2e:	e6d5      	b.n	801b8dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bb30:	b01f      	add	sp, #124	@ 0x7c
 801bb32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb36 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801bb36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb3a:	b089      	sub	sp, #36	@ 0x24
 801bb3c:	9101      	str	r1, [sp, #4]
 801bb3e:	9801      	ldr	r0, [sp, #4]
 801bb40:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801bb44:	8800      	ldrh	r0, [r0, #0]
 801bb46:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801bb4a:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801bb4e:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801bb52:	1206      	asrs	r6, r0, #8
 801bb54:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801bb58:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bb5c:	9602      	str	r6, [sp, #8]
 801bb5e:	10c6      	asrs	r6, r0, #3
 801bb60:	00c0      	lsls	r0, r0, #3
 801bb62:	b2c0      	uxtb	r0, r0
 801bb64:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bb68:	9004      	str	r0, [sp, #16]
 801bb6a:	2f00      	cmp	r7, #0
 801bb6c:	fb07 100c 	mla	r0, r7, ip, r1
 801bb70:	9603      	str	r6, [sp, #12]
 801bb72:	eb02 0e00 	add.w	lr, r2, r0
 801bb76:	f2c0 810a 	blt.w	801bd8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bb7a:	45b8      	cmp	r8, r7
 801bb7c:	f340 8107 	ble.w	801bd8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bb80:	2900      	cmp	r1, #0
 801bb82:	f2c0 8102 	blt.w	801bd8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bb86:	458c      	cmp	ip, r1
 801bb88:	f340 80ff 	ble.w	801bd8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bb8c:	5c12      	ldrb	r2, [r2, r0]
 801bb8e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801bb92:	1c4a      	adds	r2, r1, #1
 801bb94:	f100 80fe 	bmi.w	801bd94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bb98:	4594      	cmp	ip, r2
 801bb9a:	f340 80fb 	ble.w	801bd94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bb9e:	2d00      	cmp	r5, #0
 801bba0:	f000 80fa 	beq.w	801bd98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801bba4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bba8:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801bbac:	3701      	adds	r7, #1
 801bbae:	f100 80f7 	bmi.w	801bda0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bbb2:	45b8      	cmp	r8, r7
 801bbb4:	f340 80f4 	ble.w	801bda0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bbb8:	2c00      	cmp	r4, #0
 801bbba:	f000 80f4 	beq.w	801bda6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801bbbe:	2900      	cmp	r1, #0
 801bbc0:	eb0e 020c 	add.w	r2, lr, ip
 801bbc4:	f2c0 80ea 	blt.w	801bd9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bbc8:	458c      	cmp	ip, r1
 801bbca:	f340 80e7 	ble.w	801bd9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bbce:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801bbd2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801bbd6:	3101      	adds	r1, #1
 801bbd8:	f100 80e8 	bmi.w	801bdac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bbdc:	458c      	cmp	ip, r1
 801bbde:	f340 80e5 	ble.w	801bdac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bbe2:	2d00      	cmp	r5, #0
 801bbe4:	f000 80e4 	beq.w	801bdb0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801bbe8:	7852      	ldrb	r2, [r2, #1]
 801bbea:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bbee:	0e0b      	lsrs	r3, r1, #24
 801bbf0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801bbf4:	9300      	str	r3, [sp, #0]
 801bbf6:	b2a4      	uxth	r4, r4
 801bbf8:	b2ab      	uxth	r3, r5
 801bbfa:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801bbfe:	fb03 f904 	mul.w	r9, r3, r4
 801bc02:	fb0a f505 	mul.w	r5, sl, r5
 801bc06:	011b      	lsls	r3, r3, #4
 801bc08:	eba3 0e09 	sub.w	lr, r3, r9
 801bc0c:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801bc10:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801bc14:	0a28      	lsrs	r0, r5, #8
 801bc16:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bc1a:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801bc1e:	4405      	add	r5, r0
 801bc20:	0a2d      	lsrs	r5, r5, #8
 801bc22:	fb0a f303 	mul.w	r3, sl, r3
 801bc26:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801bc2a:	9005      	str	r0, [sp, #20]
 801bc2c:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801bc30:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bc34:	0a1b      	lsrs	r3, r3, #8
 801bc36:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bc3a:	9306      	str	r3, [sp, #24]
 801bc3c:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801bc40:	fb0b f303 	mul.w	r3, fp, r3
 801bc44:	0a1d      	lsrs	r5, r3, #8
 801bc46:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bc4a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801bc4e:	fb0b f606 	mul.w	r6, fp, r6
 801bc52:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801bc56:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801bc5a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc5e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bc62:	fb08 f707 	mul.w	r7, r8, r7
 801bc66:	441d      	add	r5, r3
 801bc68:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801bc6c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bc70:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801bc74:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bc78:	fb08 fc0c 	mul.w	ip, r8, ip
 801bc7c:	0a1b      	lsrs	r3, r3, #8
 801bc7e:	9307      	str	r3, [sp, #28]
 801bc80:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801bc84:	0e0b      	lsrs	r3, r1, #24
 801bc86:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801bc8a:	435f      	muls	r7, r3
 801bc8c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc90:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bc94:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bc98:	4460      	add	r0, ip
 801bc9a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc9e:	b2a4      	uxth	r4, r4
 801bca0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bca4:	0a2d      	lsrs	r5, r5, #8
 801bca6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bcaa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bcae:	fa1f fe8e 	uxth.w	lr, lr
 801bcb2:	4359      	muls	r1, r3
 801bcb4:	1b12      	subs	r2, r2, r4
 801bcb6:	9b05      	ldr	r3, [sp, #20]
 801bcb8:	44bc      	add	ip, r7
 801bcba:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bcbe:	b292      	uxth	r2, r2
 801bcc0:	fb05 f50e 	mul.w	r5, r5, lr
 801bcc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcc8:	fb03 5502 	mla	r5, r3, r2, r5
 801bccc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bcd0:	9b06      	ldr	r3, [sp, #24]
 801bcd2:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801bcd6:	0a36      	lsrs	r6, r6, #8
 801bcd8:	0a00      	lsrs	r0, r0, #8
 801bcda:	fb0c 5509 	mla	r5, ip, r9, r5
 801bcde:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bce2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bce6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bcea:	fb00 5504 	mla	r5, r0, r4, r5
 801bcee:	fb0e f606 	mul.w	r6, lr, r6
 801bcf2:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801bcf6:	0a09      	lsrs	r1, r1, #8
 801bcf8:	9b07      	ldr	r3, [sp, #28]
 801bcfa:	fb02 6000 	mla	r0, r2, r0, r6
 801bcfe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bd02:	fb09 0001 	mla	r0, r9, r1, r0
 801bd06:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bd0a:	fb0e fe0b 	mul.w	lr, lr, fp
 801bd0e:	fb04 0003 	mla	r0, r4, r3, r0
 801bd12:	fb02 e20a 	mla	r2, r2, sl, lr
 801bd16:	9b00      	ldr	r3, [sp, #0]
 801bd18:	fb04 2408 	mla	r4, r4, r8, r2
 801bd1c:	fb09 4903 	mla	r9, r9, r3, r4
 801bd20:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801bd24:	9b02      	ldr	r3, [sp, #8]
 801bd26:	9a04      	ldr	r2, [sp, #16]
 801bd28:	fa5f f989 	uxtb.w	r9, r9
 801bd2c:	fb03 f109 	mul.w	r1, r3, r9
 801bd30:	9b03      	ldr	r3, [sp, #12]
 801bd32:	0a2d      	lsrs	r5, r5, #8
 801bd34:	0a00      	lsrs	r0, r0, #8
 801bd36:	fb03 f309 	mul.w	r3, r3, r9
 801bd3a:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801bd3e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bd42:	4305      	orrs	r5, r0
 801bd44:	fb02 f909 	mul.w	r9, r2, r9
 801bd48:	1c58      	adds	r0, r3, #1
 801bd4a:	1c4a      	adds	r2, r1, #1
 801bd4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd54:	0a2b      	lsrs	r3, r5, #8
 801bd56:	0c2a      	lsrs	r2, r5, #16
 801bd58:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bd5c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bd60:	00db      	lsls	r3, r3, #3
 801bd62:	0212      	lsls	r2, r2, #8
 801bd64:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801bd68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd6c:	4313      	orrs	r3, r2
 801bd6e:	f109 0201 	add.w	r2, r9, #1
 801bd72:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bd76:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801bd7a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bd7e:	431d      	orrs	r5, r3
 801bd80:	9b01      	ldr	r3, [sp, #4]
 801bd82:	801d      	strh	r5, [r3, #0]
 801bd84:	b009      	add	sp, #36	@ 0x24
 801bd86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd8a:	2000      	movs	r0, #0
 801bd8c:	e701      	b.n	801bb92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801bd8e:	2600      	movs	r6, #0
 801bd90:	4630      	mov	r0, r6
 801bd92:	e70b      	b.n	801bbac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd94:	2600      	movs	r6, #0
 801bd96:	e709      	b.n	801bbac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd98:	462e      	mov	r6, r5
 801bd9a:	e707      	b.n	801bbac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd9c:	2700      	movs	r7, #0
 801bd9e:	e71a      	b.n	801bbd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801bda0:	2100      	movs	r1, #0
 801bda2:	460f      	mov	r7, r1
 801bda4:	e723      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bda6:	4621      	mov	r1, r4
 801bda8:	4627      	mov	r7, r4
 801bdaa:	e720      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bdac:	2100      	movs	r1, #0
 801bdae:	e71e      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bdb0:	4629      	mov	r1, r5
 801bdb2:	e71c      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801bdb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdb8:	b09b      	sub	sp, #108	@ 0x6c
 801bdba:	9218      	str	r2, [sp, #96]	@ 0x60
 801bdbc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801bdbe:	9116      	str	r1, [sp, #88]	@ 0x58
 801bdc0:	9307      	str	r3, [sp, #28]
 801bdc2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801bdc6:	9019      	str	r0, [sp, #100]	@ 0x64
 801bdc8:	6850      	ldr	r0, [r2, #4]
 801bdca:	6812      	ldr	r2, [r2, #0]
 801bdcc:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801bdce:	fb00 1303 	mla	r3, r0, r3, r1
 801bdd2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bdd6:	930a      	str	r3, [sp, #40]	@ 0x28
 801bdd8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bdda:	681b      	ldr	r3, [r3, #0]
 801bddc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bdde:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bde0:	685e      	ldr	r6, [r3, #4]
 801bde2:	3604      	adds	r6, #4
 801bde4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801bde6:	2b00      	cmp	r3, #0
 801bde8:	dc03      	bgt.n	801bdf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bdea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bdec:	2b00      	cmp	r3, #0
 801bdee:	f340 8373 	ble.w	801c4d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bdf2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bdf4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bdf8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bdfc:	1e48      	subs	r0, r1, #1
 801bdfe:	1e57      	subs	r7, r2, #1
 801be00:	9b07      	ldr	r3, [sp, #28]
 801be02:	2b00      	cmp	r3, #0
 801be04:	f340 8190 	ble.w	801c128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801be08:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801be0a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801be0e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801be12:	d406      	bmi.n	801be22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801be14:	4584      	cmp	ip, r0
 801be16:	da04      	bge.n	801be22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801be18:	2b00      	cmp	r3, #0
 801be1a:	db02      	blt.n	801be22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801be1c:	42bb      	cmp	r3, r7
 801be1e:	f2c0 8184 	blt.w	801c12a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801be22:	f11c 0c01 	adds.w	ip, ip, #1
 801be26:	f100 8172 	bmi.w	801c10e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801be2a:	4561      	cmp	r1, ip
 801be2c:	f2c0 816f 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801be30:	3301      	adds	r3, #1
 801be32:	f100 816c 	bmi.w	801c10e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801be36:	429a      	cmp	r2, r3
 801be38:	f2c0 8169 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801be3c:	9b07      	ldr	r3, [sp, #28]
 801be3e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801be40:	9317      	str	r3, [sp, #92]	@ 0x5c
 801be42:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801be44:	2b00      	cmp	r3, #0
 801be46:	f340 818e 	ble.w	801c166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801be4a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801be4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801be50:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be52:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801be56:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801be58:	141b      	asrs	r3, r3, #16
 801be5a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801be5e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801be62:	f100 81d1 	bmi.w	801c208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be66:	f101 38ff 	add.w	r8, r1, #4294967295
 801be6a:	4543      	cmp	r3, r8
 801be6c:	f280 81cc 	bge.w	801c208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be70:	f1bc 0f00 	cmp.w	ip, #0
 801be74:	f2c0 81c8 	blt.w	801c208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be78:	f10e 38ff 	add.w	r8, lr, #4294967295
 801be7c:	45c4      	cmp	ip, r8
 801be7e:	f280 81c3 	bge.w	801c208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be82:	b209      	sxth	r1, r1
 801be84:	fb0c 3301 	mla	r3, ip, r1, r3
 801be88:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801be8a:	eb04 0803 	add.w	r8, r4, r3
 801be8e:	5ce3      	ldrb	r3, [r4, r3]
 801be90:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801be94:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801be98:	2a00      	cmp	r2, #0
 801be9a:	f000 81aa 	beq.w	801c1f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801be9e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bea2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801bea6:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bea8:	0e24      	lsrs	r4, r4, #24
 801beaa:	9412      	str	r4, [sp, #72]	@ 0x48
 801beac:	b178      	cbz	r0, 801bece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801beae:	eb08 0c01 	add.w	ip, r8, r1
 801beb2:	f818 1001 	ldrb.w	r1, [r8, r1]
 801beb6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801beba:	9108      	str	r1, [sp, #32]
 801bebc:	0e09      	lsrs	r1, r1, #24
 801bebe:	9110      	str	r1, [sp, #64]	@ 0x40
 801bec0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801bec4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bec8:	910c      	str	r1, [sp, #48]	@ 0x30
 801beca:	0e09      	lsrs	r1, r1, #24
 801becc:	9113      	str	r1, [sp, #76]	@ 0x4c
 801bece:	b292      	uxth	r2, r2
 801bed0:	b280      	uxth	r0, r0
 801bed2:	fb02 f900 	mul.w	r9, r2, r0
 801bed6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801beda:	0112      	lsls	r2, r2, #4
 801bedc:	eba2 0809 	sub.w	r8, r2, r9
 801bee0:	b280      	uxth	r0, r0
 801bee2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bee6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801bee8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801beea:	fa1f f888 	uxth.w	r8, r8
 801beee:	1a12      	subs	r2, r2, r0
 801bef0:	b292      	uxth	r2, r2
 801bef2:	fb08 f101 	mul.w	r1, r8, r1
 801bef6:	fb02 110e 	mla	r1, r2, lr, r1
 801befa:	fb00 1104 	mla	r1, r0, r4, r1
 801befe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf00:	fb09 1104 	mla	r1, r9, r4, r1
 801bf04:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bf08:	2900      	cmp	r1, #0
 801bf0a:	f000 80f5 	beq.w	801c0f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bf0e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bf12:	d01b      	beq.n	801bf4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bf14:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bf18:	fb0e fa0a 	mul.w	sl, lr, sl
 801bf1c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bf20:	fb0e fe03 	mul.w	lr, lr, r3
 801bf24:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bf28:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf2c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bf30:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bf34:	4453      	add	r3, sl
 801bf36:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bf3a:	0a1b      	lsrs	r3, r3, #8
 801bf3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf40:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf44:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bf48:	ea43 030c 	orr.w	r3, r3, ip
 801bf4c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf4e:	2cff      	cmp	r4, #255	@ 0xff
 801bf50:	d021      	beq.n	801bf96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801bf52:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bf54:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf58:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf5a:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf5e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bf60:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf64:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf6a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf6e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf72:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf76:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bf7a:	44de      	add	lr, fp
 801bf7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf8c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf90:	ea4e 040a 	orr.w	r4, lr, sl
 801bf94:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bf96:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf98:	2cff      	cmp	r4, #255	@ 0xff
 801bf9a:	d021      	beq.n	801bfe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801bf9c:	9c08      	ldr	r4, [sp, #32]
 801bf9e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bfa2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bfa4:	fb04 fb0b 	mul.w	fp, r4, fp
 801bfa8:	9c08      	ldr	r4, [sp, #32]
 801bfaa:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bfae:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bfb0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bfb4:	fb04 fa0a 	mul.w	sl, r4, sl
 801bfb8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfbc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bfc0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfc4:	44de      	add	lr, fp
 801bfc6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfd2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfd6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfda:	ea4e 040a 	orr.w	r4, lr, sl
 801bfde:	9408      	str	r4, [sp, #32]
 801bfe0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfe2:	2cff      	cmp	r4, #255	@ 0xff
 801bfe4:	d021      	beq.n	801c02a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bfe6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bfe8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bfec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfee:	fb04 fb0b 	mul.w	fp, r4, fp
 801bff2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bff4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bff8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bffa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bffe:	fb04 fa0a 	mul.w	sl, r4, sl
 801c002:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c006:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c00a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c00e:	44de      	add	lr, fp
 801c010:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c014:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c018:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c01c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c020:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c024:	ea4e 040a 	orr.w	r4, lr, sl
 801c028:	940c      	str	r4, [sp, #48]	@ 0x30
 801c02a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c02c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c030:	9c08      	ldr	r4, [sp, #32]
 801c032:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c036:	fb08 fc0c 	mul.w	ip, r8, ip
 801c03a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c03e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c042:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c044:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c048:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c04c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c04e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c052:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c056:	fb08 f80e 	mul.w	r8, r8, lr
 801c05a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c05e:	fb02 8303 	mla	r3, r2, r3, r8
 801c062:	9a08      	ldr	r2, [sp, #32]
 801c064:	f8b7 8000 	ldrh.w	r8, [r7]
 801c068:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c06c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c06e:	fb00 330a 	mla	r3, r0, sl, r3
 801c072:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801c076:	fb09 3900 	mla	r9, r9, r0, r3
 801c07a:	43c9      	mvns	r1, r1
 801c07c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c080:	fa5f fe81 	uxtb.w	lr, r1
 801c084:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c088:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c08c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c090:	fb02 f20e 	mul.w	r2, r2, lr
 801c094:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c098:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c09c:	ea4c 0c09 	orr.w	ip, ip, r9
 801c0a0:	1c53      	adds	r3, r2, #1
 801c0a2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c0a6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c0aa:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c0ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c0b2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c0b6:	4a63      	ldr	r2, [pc, #396]	@ (801c244 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c0b8:	fb00 f00e 	mul.w	r0, r0, lr
 801c0bc:	b2db      	uxtb	r3, r3
 801c0be:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c0c2:	1c43      	adds	r3, r0, #1
 801c0c4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c0c8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c0cc:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c0d0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c0d4:	b2c9      	uxtb	r1, r1
 801c0d6:	00db      	lsls	r3, r3, #3
 801c0d8:	fb01 f10e 	mul.w	r1, r1, lr
 801c0dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c0e0:	4313      	orrs	r3, r2
 801c0e2:	1c4a      	adds	r2, r1, #1
 801c0e4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c0e8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c0ec:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c0f0:	ea4c 0c03 	orr.w	ip, ip, r3
 801c0f4:	f8a7 c000 	strh.w	ip, [r7]
 801c0f8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c0fa:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c0fc:	441a      	add	r2, r3
 801c0fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c100:	9225      	str	r2, [sp, #148]	@ 0x94
 801c102:	441d      	add	r5, r3
 801c104:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c106:	3b01      	subs	r3, #1
 801c108:	3702      	adds	r7, #2
 801c10a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c10c:	e699      	b.n	801be42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c10e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c110:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c112:	441c      	add	r4, r3
 801c114:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c116:	9425      	str	r4, [sp, #148]	@ 0x94
 801c118:	441d      	add	r5, r3
 801c11a:	9b07      	ldr	r3, [sp, #28]
 801c11c:	3b01      	subs	r3, #1
 801c11e:	9307      	str	r3, [sp, #28]
 801c120:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c122:	3302      	adds	r3, #2
 801c124:	930a      	str	r3, [sp, #40]	@ 0x28
 801c126:	e66b      	b.n	801be00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c128:	d024      	beq.n	801c174 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c12a:	9b07      	ldr	r3, [sp, #28]
 801c12c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801c12e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c130:	3b01      	subs	r3, #1
 801c132:	fb00 4003 	mla	r0, r0, r3, r4
 801c136:	1400      	asrs	r0, r0, #16
 801c138:	f53f ae80 	bmi.w	801be3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c13c:	3901      	subs	r1, #1
 801c13e:	4288      	cmp	r0, r1
 801c140:	f6bf ae7c 	bge.w	801be3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c144:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c146:	fb01 5303 	mla	r3, r1, r3, r5
 801c14a:	141b      	asrs	r3, r3, #16
 801c14c:	f53f ae76 	bmi.w	801be3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c150:	3a01      	subs	r2, #1
 801c152:	4293      	cmp	r3, r2
 801c154:	f6bf ae72 	bge.w	801be3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c158:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c15c:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c160:	f1bb 0f00 	cmp.w	fp, #0
 801c164:	dc70      	bgt.n	801c248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c166:	9b07      	ldr	r3, [sp, #28]
 801c168:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c16c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c16e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c172:	930a      	str	r3, [sp, #40]	@ 0x28
 801c174:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c176:	2b00      	cmp	r3, #0
 801c178:	f340 81ae 	ble.w	801c4d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c17c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c180:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c184:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c188:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c18a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c18e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c192:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c196:	eef0 6a62 	vmov.f32	s13, s5
 801c19a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c19e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c1a6:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801c1aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c1ae:	eef0 6a43 	vmov.f32	s13, s6
 801c1b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c1b6:	ee12 2a90 	vmov	r2, s5
 801c1ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c1be:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1c2:	ee13 2a10 	vmov	r2, s6
 801c1c6:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c1c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c1ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1ce:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c1d0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c1d2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c1d4:	3b01      	subs	r3, #1
 801c1d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1da:	9316      	str	r3, [sp, #88]	@ 0x58
 801c1dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c1de:	bf08      	it	eq
 801c1e0:	4613      	moveq	r3, r2
 801c1e2:	ee16 5a90 	vmov	r5, s13
 801c1e6:	9307      	str	r3, [sp, #28]
 801c1e8:	eeb0 3a67 	vmov.f32	s6, s15
 801c1ec:	eef0 2a47 	vmov.f32	s5, s14
 801c1f0:	e5f8      	b.n	801bde4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c1f2:	2800      	cmp	r0, #0
 801c1f4:	f43f ae6b 	beq.w	801bece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c1f8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c1fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c200:	9108      	str	r1, [sp, #32]
 801c202:	0e09      	lsrs	r1, r1, #24
 801c204:	9110      	str	r1, [sp, #64]	@ 0x40
 801c206:	e662      	b.n	801bece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c208:	f113 0801 	adds.w	r8, r3, #1
 801c20c:	f53f af74 	bmi.w	801c0f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c210:	4541      	cmp	r1, r8
 801c212:	f6ff af71 	blt.w	801c0f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c216:	f11c 0801 	adds.w	r8, ip, #1
 801c21a:	f53f af6d 	bmi.w	801c0f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c21e:	45c6      	cmp	lr, r8
 801c220:	f6ff af6a 	blt.w	801c0f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c224:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c228:	b209      	sxth	r1, r1
 801c22a:	fa0f f38e 	sxth.w	r3, lr
 801c22e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c232:	9301      	str	r3, [sp, #4]
 801c234:	9100      	str	r1, [sp, #0]
 801c236:	4633      	mov	r3, r6
 801c238:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c23a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c23c:	4639      	mov	r1, r7
 801c23e:	f7ff fc7a 	bl	801bb36 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c242:	e759      	b.n	801c0f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c244:	fffff800 	.word	0xfffff800
 801c248:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c24a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c24c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c250:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c252:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c256:	1427      	asrs	r7, r4, #16
 801c258:	142b      	asrs	r3, r5, #16
 801c25a:	fb01 7303 	mla	r3, r1, r3, r7
 801c25e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c260:	18e7      	adds	r7, r4, r3
 801c262:	5ce3      	ldrb	r3, [r4, r3]
 801c264:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c268:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c26c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c270:	2a00      	cmp	r2, #0
 801c272:	f000 8127 	beq.w	801c4c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c276:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c27a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c27e:	940d      	str	r4, [sp, #52]	@ 0x34
 801c280:	0e24      	lsrs	r4, r4, #24
 801c282:	9414      	str	r4, [sp, #80]	@ 0x50
 801c284:	b170      	cbz	r0, 801c2a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c286:	eb07 0e01 	add.w	lr, r7, r1
 801c28a:	5c79      	ldrb	r1, [r7, r1]
 801c28c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c290:	9109      	str	r1, [sp, #36]	@ 0x24
 801c292:	0e09      	lsrs	r1, r1, #24
 801c294:	9111      	str	r1, [sp, #68]	@ 0x44
 801c296:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c29a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c29e:	910e      	str	r1, [sp, #56]	@ 0x38
 801c2a0:	0e09      	lsrs	r1, r1, #24
 801c2a2:	9115      	str	r1, [sp, #84]	@ 0x54
 801c2a4:	b292      	uxth	r2, r2
 801c2a6:	b280      	uxth	r0, r0
 801c2a8:	fb02 f800 	mul.w	r8, r2, r0
 801c2ac:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c2b0:	0112      	lsls	r2, r2, #4
 801c2b2:	eba2 0e08 	sub.w	lr, r2, r8
 801c2b6:	b280      	uxth	r0, r0
 801c2b8:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801c2bc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c2be:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c2c0:	fa1f fe8e 	uxth.w	lr, lr
 801c2c4:	1a09      	subs	r1, r1, r0
 801c2c6:	b289      	uxth	r1, r1
 801c2c8:	fb0e f202 	mul.w	r2, lr, r2
 801c2cc:	fb01 220c 	mla	r2, r1, ip, r2
 801c2d0:	fb00 2204 	mla	r2, r0, r4, r2
 801c2d4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c2d6:	fb08 2204 	mla	r2, r8, r4, r2
 801c2da:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c2de:	2a00      	cmp	r2, #0
 801c2e0:	f000 80e5 	beq.w	801c4ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c2e4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c2e8:	d019      	beq.n	801c31e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c2ea:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c2ee:	fb0c fa0a 	mul.w	sl, ip, sl
 801c2f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c2f6:	fb0c fc03 	mul.w	ip, ip, r3
 801c2fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c2fe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c302:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c306:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c30a:	4453      	add	r3, sl
 801c30c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c310:	0a1b      	lsrs	r3, r3, #8
 801c312:	0a3f      	lsrs	r7, r7, #8
 801c314:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c318:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c31c:	433b      	orrs	r3, r7
 801c31e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c320:	2cff      	cmp	r4, #255	@ 0xff
 801c322:	d020      	beq.n	801c366 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c324:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c326:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c32a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c32c:	4367      	muls	r7, r4
 801c32e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c330:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c334:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c336:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c33a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c33e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c342:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c346:	44bc      	add	ip, r7
 801c348:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c34c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c350:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c354:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c358:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c35c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c360:	ea4c 040a 	orr.w	r4, ip, sl
 801c364:	940d      	str	r4, [sp, #52]	@ 0x34
 801c366:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c368:	2cff      	cmp	r4, #255	@ 0xff
 801c36a:	d020      	beq.n	801c3ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c36c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c36e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c372:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c374:	4367      	muls	r7, r4
 801c376:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c378:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c37c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c37e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c382:	fb04 fa0a 	mul.w	sl, r4, sl
 801c386:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c38a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c38e:	44bc      	add	ip, r7
 801c390:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c394:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c398:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c39c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3a8:	ea4c 040a 	orr.w	r4, ip, sl
 801c3ac:	9409      	str	r4, [sp, #36]	@ 0x24
 801c3ae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c3b0:	2cff      	cmp	r4, #255	@ 0xff
 801c3b2:	d020      	beq.n	801c3f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c3b4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c3b6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3ba:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c3bc:	4367      	muls	r7, r4
 801c3be:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c3c0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c3c4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c3c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c3ca:	fb04 fa0a 	mul.w	sl, r4, sl
 801c3ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c3d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3d6:	44bc      	add	ip, r7
 801c3d8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3f0:	ea4c 040a 	orr.w	r4, ip, sl
 801c3f4:	940e      	str	r4, [sp, #56]	@ 0x38
 801c3f6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c3f8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3fc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c3fe:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c402:	fb0e f707 	mul.w	r7, lr, r7
 801c406:	fb01 770c 	mla	r7, r1, ip, r7
 801c40a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c40e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c410:	fb00 770c 	mla	r7, r0, ip, r7
 801c414:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c418:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c41a:	fb08 770c 	mla	r7, r8, ip, r7
 801c41e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c422:	fb0e fe0c 	mul.w	lr, lr, ip
 801c426:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c42a:	fb01 e303 	mla	r3, r1, r3, lr
 801c42e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c430:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c434:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c436:	fb00 330a 	mla	r3, r0, sl, r3
 801c43a:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c43e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c442:	f8b9 3000 	ldrh.w	r3, [r9]
 801c446:	43d2      	mvns	r2, r2
 801c448:	1218      	asrs	r0, r3, #8
 801c44a:	b2d2      	uxtb	r2, r2
 801c44c:	10d9      	asrs	r1, r3, #3
 801c44e:	0a3f      	lsrs	r7, r7, #8
 801c450:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c454:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c458:	00db      	lsls	r3, r3, #3
 801c45a:	4350      	muls	r0, r2
 801c45c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c460:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c464:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c468:	b2db      	uxtb	r3, r3
 801c46a:	ea47 070c 	orr.w	r7, r7, ip
 801c46e:	4351      	muls	r1, r2
 801c470:	4353      	muls	r3, r2
 801c472:	1c42      	adds	r2, r0, #1
 801c474:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c478:	0c3a      	lsrs	r2, r7, #16
 801c47a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c47e:	4a18      	ldr	r2, [pc, #96]	@ (801c4e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c480:	b2c0      	uxtb	r0, r0
 801c482:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c486:	1c4a      	adds	r2, r1, #1
 801c488:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c48c:	0a3a      	lsrs	r2, r7, #8
 801c48e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c492:	00c9      	lsls	r1, r1, #3
 801c494:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c498:	4301      	orrs	r1, r0
 801c49a:	1c58      	adds	r0, r3, #1
 801c49c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c4a0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c4a4:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c4a8:	4308      	orrs	r0, r1
 801c4aa:	f8a9 0000 	strh.w	r0, [r9]
 801c4ae:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c4b0:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c4b2:	441a      	add	r2, r3
 801c4b4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c4b6:	9225      	str	r2, [sp, #148]	@ 0x94
 801c4b8:	f109 0902 	add.w	r9, r9, #2
 801c4bc:	441d      	add	r5, r3
 801c4be:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c4c2:	e64d      	b.n	801c160 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c4c4:	2800      	cmp	r0, #0
 801c4c6:	f43f aeed 	beq.w	801c2a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c4ca:	5c79      	ldrb	r1, [r7, r1]
 801c4cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c4d0:	9109      	str	r1, [sp, #36]	@ 0x24
 801c4d2:	0e09      	lsrs	r1, r1, #24
 801c4d4:	9111      	str	r1, [sp, #68]	@ 0x44
 801c4d6:	e6e5      	b.n	801c2a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c4d8:	b01b      	add	sp, #108	@ 0x6c
 801c4da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4de:	bf00      	nop
 801c4e0:	fffff800 	.word	0xfffff800

0801c4e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c4e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4e8:	b085      	sub	sp, #20
 801c4ea:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c4ee:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c4f2:	9103      	str	r1, [sp, #12]
 801c4f4:	fb00 7406 	mla	r4, r0, r6, r7
 801c4f8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c4fc:	2800      	cmp	r0, #0
 801c4fe:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c502:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c506:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c50a:	9501      	str	r5, [sp, #4]
 801c50c:	eb03 0904 	add.w	r9, r3, r4
 801c510:	f2c0 8150 	blt.w	801c7b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c514:	4583      	cmp	fp, r0
 801c516:	f340 814d 	ble.w	801c7b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c51a:	2f00      	cmp	r7, #0
 801c51c:	f2c0 8146 	blt.w	801c7ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c520:	42be      	cmp	r6, r7
 801c522:	f340 8143 	ble.w	801c7ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c526:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c52a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c52e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c532:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c536:	4355      	muls	r5, r2
 801c538:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c53c:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c540:	fb0c f203 	mul.w	r2, ip, r3
 801c544:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c548:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c54c:	441d      	add	r5, r3
 801c54e:	f102 0320 	add.w	r3, r2, #32
 801c552:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c556:	0a1b      	lsrs	r3, r3, #8
 801c558:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c55c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c560:	431c      	orrs	r4, r3
 801c562:	1c7b      	adds	r3, r7, #1
 801c564:	f100 812b 	bmi.w	801c7be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c568:	429e      	cmp	r6, r3
 801c56a:	f340 8128 	ble.w	801c7be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c56e:	2900      	cmp	r1, #0
 801c570:	f000 8128 	beq.w	801c7c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c574:	9a01      	ldr	r2, [sp, #4]
 801c576:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c57a:	8855      	ldrh	r5, [r2, #2]
 801c57c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c580:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c584:	fb08 f802 	mul.w	r8, r8, r2
 801c588:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c58c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c590:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c594:	435d      	muls	r5, r3
 801c596:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c59a:	44d0      	add	r8, sl
 801c59c:	f105 0a20 	add.w	sl, r5, #32
 801c5a0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c5a4:	0a2d      	lsrs	r5, r5, #8
 801c5a6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c5aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c5ae:	432a      	orrs	r2, r5
 801c5b0:	3001      	adds	r0, #1
 801c5b2:	f100 810d 	bmi.w	801c7d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c5b6:	4583      	cmp	fp, r0
 801c5b8:	f340 810a 	ble.w	801c7d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c5bc:	f1be 0f00 	cmp.w	lr, #0
 801c5c0:	f000 810b 	beq.w	801c7da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c5c4:	2f00      	cmp	r7, #0
 801c5c6:	f2c0 8100 	blt.w	801c7ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c5ca:	42be      	cmp	r6, r7
 801c5cc:	f340 80fd 	ble.w	801c7ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c5d0:	9801      	ldr	r0, [sp, #4]
 801c5d2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c5d6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c5da:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c5de:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c5e2:	fb0a fa00 	mul.w	sl, sl, r0
 801c5e6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c5ea:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c5ee:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c5f2:	fb05 f808 	mul.w	r8, r5, r8
 801c5f6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c5fa:	4482      	add	sl, r0
 801c5fc:	f108 0020 	add.w	r0, r8, #32
 801c600:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c604:	0a00      	lsrs	r0, r0, #8
 801c606:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c60a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c60e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c612:	3701      	adds	r7, #1
 801c614:	f100 80e6 	bmi.w	801c7e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c618:	42be      	cmp	r6, r7
 801c61a:	f340 80e3 	ble.w	801c7e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c61e:	2900      	cmp	r1, #0
 801c620:	f000 80e3 	beq.w	801c7ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c624:	3601      	adds	r6, #1
 801c626:	9801      	ldr	r0, [sp, #4]
 801c628:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c62c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c630:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c634:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c638:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c63c:	fb09 f906 	mul.w	r9, r9, r6
 801c640:	fb07 f800 	mul.w	r8, r7, r0
 801c644:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c648:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c64c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c650:	44d1      	add	r9, sl
 801c652:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c656:	f108 0020 	add.w	r0, r8, #32
 801c65a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c65e:	0a00      	lsrs	r0, r0, #8
 801c660:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c664:	4330      	orrs	r0, r6
 801c666:	b28e      	uxth	r6, r1
 801c668:	fa1f f98e 	uxth.w	r9, lr
 801c66c:	fb06 f809 	mul.w	r8, r6, r9
 801c670:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c674:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c678:	0136      	lsls	r6, r6, #4
 801c67a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c67e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c682:	9601      	str	r6, [sp, #4]
 801c684:	ea4a 0404 	orr.w	r4, sl, r4
 801c688:	fa1f f689 	uxth.w	r6, r9
 801c68c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c690:	fb11 f90e 	smulbb	r9, r1, lr
 801c694:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c698:	9602      	str	r6, [sp, #8]
 801c69a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c69e:	4626      	mov	r6, r4
 801c6a0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c6a4:	f1ce 0410 	rsb	r4, lr, #16
 801c6a8:	1a64      	subs	r4, r4, r1
 801c6aa:	ea4a 0202 	orr.w	r2, sl, r2
 801c6ae:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c6b2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c6b6:	434a      	muls	r2, r1
 801c6b8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c6bc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c6c0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c6c4:	fb04 2406 	mla	r4, r4, r6, r2
 801c6c8:	ea4a 0000 	orr.w	r0, sl, r0
 801c6cc:	fb09 4200 	mla	r2, r9, r0, r4
 801c6d0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c6d4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c6d8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c6dc:	ea44 0b0b 	orr.w	fp, r4, fp
 801c6e0:	9c01      	ldr	r4, [sp, #4]
 801c6e2:	9e02      	ldr	r6, [sp, #8]
 801c6e4:	9903      	ldr	r1, [sp, #12]
 801c6e6:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c6ea:	1ba4      	subs	r4, r4, r6
 801c6ec:	9e01      	ldr	r6, [sp, #4]
 801c6ee:	8808      	ldrh	r0, [r1, #0]
 801c6f0:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c6f4:	eba6 0608 	sub.w	r6, r6, r8
 801c6f8:	b2b6      	uxth	r6, r6
 801c6fa:	b2a4      	uxth	r4, r4
 801c6fc:	4373      	muls	r3, r6
 801c6fe:	fb0c 3304 	mla	r3, ip, r4, r3
 801c702:	9c02      	ldr	r4, [sp, #8]
 801c704:	fb04 3505 	mla	r5, r4, r5, r3
 801c708:	fb08 5707 	mla	r7, r8, r7, r5
 801c70c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c710:	b289      	uxth	r1, r1
 801c712:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c716:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c71a:	434f      	muls	r7, r1
 801c71c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c720:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c724:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c728:	1c7b      	adds	r3, r7, #1
 801c72a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c72e:	ea42 0e0e 	orr.w	lr, r2, lr
 801c732:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c736:	fa1f f28e 	uxth.w	r2, lr
 801c73a:	1203      	asrs	r3, r0, #8
 801c73c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c740:	b2ff      	uxtb	r7, r7
 801c742:	1215      	asrs	r5, r2, #8
 801c744:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c748:	fb13 f307 	smulbb	r3, r3, r7
 801c74c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c750:	fb05 3501 	mla	r5, r5, r1, r3
 801c754:	10c3      	asrs	r3, r0, #3
 801c756:	10d4      	asrs	r4, r2, #3
 801c758:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c75c:	fb13 f307 	smulbb	r3, r3, r7
 801c760:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c764:	fb04 3401 	mla	r4, r4, r1, r3
 801c768:	00c3      	lsls	r3, r0, #3
 801c76a:	00d2      	lsls	r2, r2, #3
 801c76c:	b2db      	uxtb	r3, r3
 801c76e:	fb13 f307 	smulbb	r3, r3, r7
 801c772:	b2d2      	uxtb	r2, r2
 801c774:	fb02 3101 	mla	r1, r2, r1, r3
 801c778:	b2ad      	uxth	r5, r5
 801c77a:	b289      	uxth	r1, r1
 801c77c:	b2a4      	uxth	r4, r4
 801c77e:	1c6b      	adds	r3, r5, #1
 801c780:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c784:	1c62      	adds	r2, r4, #1
 801c786:	1c4b      	adds	r3, r1, #1
 801c788:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c78c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c790:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c794:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c798:	0964      	lsrs	r4, r4, #5
 801c79a:	432b      	orrs	r3, r5
 801c79c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c7a0:	9a03      	ldr	r2, [sp, #12]
 801c7a2:	4323      	orrs	r3, r4
 801c7a4:	8013      	strh	r3, [r2, #0]
 801c7a6:	b005      	add	sp, #20
 801c7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7ac:	f04f 0c00 	mov.w	ip, #0
 801c7b0:	4664      	mov	r4, ip
 801c7b2:	e6d6      	b.n	801c562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c7b4:	2300      	movs	r3, #0
 801c7b6:	469c      	mov	ip, r3
 801c7b8:	461a      	mov	r2, r3
 801c7ba:	461c      	mov	r4, r3
 801c7bc:	e6f8      	b.n	801c5b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c7be:	2300      	movs	r3, #0
 801c7c0:	461a      	mov	r2, r3
 801c7c2:	e6f5      	b.n	801c5b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c7c4:	460b      	mov	r3, r1
 801c7c6:	460a      	mov	r2, r1
 801c7c8:	e6f2      	b.n	801c5b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c7ca:	2500      	movs	r5, #0
 801c7cc:	46ab      	mov	fp, r5
 801c7ce:	e720      	b.n	801c612 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c7d0:	2700      	movs	r7, #0
 801c7d2:	463d      	mov	r5, r7
 801c7d4:	4638      	mov	r0, r7
 801c7d6:	46bb      	mov	fp, r7
 801c7d8:	e745      	b.n	801c666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c7da:	4677      	mov	r7, lr
 801c7dc:	4675      	mov	r5, lr
 801c7de:	4670      	mov	r0, lr
 801c7e0:	46f3      	mov	fp, lr
 801c7e2:	e740      	b.n	801c666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c7e4:	2700      	movs	r7, #0
 801c7e6:	4638      	mov	r0, r7
 801c7e8:	e73d      	b.n	801c666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c7ea:	460f      	mov	r7, r1
 801c7ec:	4608      	mov	r0, r1
 801c7ee:	e73a      	b.n	801c666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c7f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7f4:	b097      	sub	sp, #92	@ 0x5c
 801c7f6:	9214      	str	r2, [sp, #80]	@ 0x50
 801c7f8:	9308      	str	r3, [sp, #32]
 801c7fa:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c7fc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c800:	9312      	str	r3, [sp, #72]	@ 0x48
 801c802:	9111      	str	r1, [sp, #68]	@ 0x44
 801c804:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c808:	9015      	str	r0, [sp, #84]	@ 0x54
 801c80a:	6850      	ldr	r0, [r2, #4]
 801c80c:	6812      	ldr	r2, [r2, #0]
 801c80e:	fb00 1303 	mla	r3, r0, r3, r1
 801c812:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c816:	9309      	str	r3, [sp, #36]	@ 0x24
 801c818:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c81a:	681b      	ldr	r3, [r3, #0]
 801c81c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c81e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c820:	685b      	ldr	r3, [r3, #4]
 801c822:	930c      	str	r3, [sp, #48]	@ 0x30
 801c824:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801c828:	930a      	str	r3, [sp, #40]	@ 0x28
 801c82a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c82c:	2b00      	cmp	r3, #0
 801c82e:	dc03      	bgt.n	801c838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c830:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c832:	2b00      	cmp	r3, #0
 801c834:	f340 83cb 	ble.w	801cfce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c838:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c83a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c83e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c842:	1e48      	subs	r0, r1, #1
 801c844:	1e55      	subs	r5, r2, #1
 801c846:	9b08      	ldr	r3, [sp, #32]
 801c848:	2b00      	cmp	r3, #0
 801c84a:	f340 81a3 	ble.w	801cb94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c84e:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c850:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c852:	1436      	asrs	r6, r6, #16
 801c854:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c858:	d406      	bmi.n	801c868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c85a:	4286      	cmp	r6, r0
 801c85c:	da04      	bge.n	801c868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c85e:	2b00      	cmp	r3, #0
 801c860:	db02      	blt.n	801c868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c862:	42ab      	cmp	r3, r5
 801c864:	f2c0 8197 	blt.w	801cb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c868:	3601      	adds	r6, #1
 801c86a:	f100 8184 	bmi.w	801cb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c86e:	42b1      	cmp	r1, r6
 801c870:	f2c0 8181 	blt.w	801cb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c874:	3301      	adds	r3, #1
 801c876:	f100 817e 	bmi.w	801cb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c87a:	429a      	cmp	r2, r3
 801c87c:	f2c0 817b 	blt.w	801cb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c880:	9b08      	ldr	r3, [sp, #32]
 801c882:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801c884:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c886:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c88a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c88c:	2b00      	cmp	r3, #0
 801c88e:	f340 81a4 	ble.w	801cbda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c892:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c894:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c896:	1418      	asrs	r0, r3, #16
 801c898:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c89a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c89e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c8a0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c8a4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c8a6:	142d      	asrs	r5, r5, #16
 801c8a8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c8ac:	f100 81f8 	bmi.w	801cca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c8b0:	f102 3eff 	add.w	lr, r2, #4294967295
 801c8b4:	4575      	cmp	r5, lr
 801c8b6:	f280 81f3 	bge.w	801cca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c8ba:	2800      	cmp	r0, #0
 801c8bc:	f2c0 81f0 	blt.w	801cca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c8c0:	f103 3eff 	add.w	lr, r3, #4294967295
 801c8c4:	4570      	cmp	r0, lr
 801c8c6:	f280 81eb 	bge.w	801cca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c8ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c8cc:	b212      	sxth	r2, r2
 801c8ce:	fb00 5002 	mla	r0, r0, r2, r5
 801c8d2:	fa1f fe81 	uxth.w	lr, r1
 801c8d6:	eb03 0a00 	add.w	sl, r3, r0
 801c8da:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c8de:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c8e2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c8e6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c8ea:	b29b      	uxth	r3, r3
 801c8ec:	f1bc 0f00 	cmp.w	ip, #0
 801c8f0:	f000 81b9 	beq.w	801cc66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c8f4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c8f8:	940d      	str	r4, [sp, #52]	@ 0x34
 801c8fa:	eb0a 0b02 	add.w	fp, sl, r2
 801c8fe:	fa1f fa8c 	uxth.w	sl, ip
 801c902:	fb0a fe0e 	mul.w	lr, sl, lr
 801c906:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c90a:	fa1f fa8a 	uxth.w	sl, sl
 801c90e:	eba5 050e 	sub.w	r5, r5, lr
 801c912:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c916:	940e      	str	r4, [sp, #56]	@ 0x38
 801c918:	eba3 030a 	sub.w	r3, r3, sl
 801c91c:	b2ad      	uxth	r5, r5
 801c91e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c920:	b29b      	uxth	r3, r3
 801c922:	fb08 f505 	mul.w	r5, r8, r5
 801c926:	fb09 5303 	mla	r3, r9, r3, r5
 801c92a:	fb0a 3304 	mla	r3, sl, r4, r3
 801c92e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c930:	fb0e 3304 	mla	r3, lr, r4, r3
 801c934:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c938:	2b00      	cmp	r3, #0
 801c93a:	f000 810f 	beq.w	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c93e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c940:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c944:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c948:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c94c:	f000 8190 	beq.w	801cc70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c950:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c954:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c958:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c95c:	fb09 f000 	mul.w	r0, r9, r0
 801c960:	fb0a fe0e 	mul.w	lr, sl, lr
 801c964:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c968:	f100 0b20 	add.w	fp, r0, #32
 801c96c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c970:	44ce      	add	lr, r9
 801c972:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c976:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c97a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c97e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c982:	ea4e 0909 	orr.w	r9, lr, r9
 801c986:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c98a:	8868      	ldrh	r0, [r5, #2]
 801c98c:	d019      	beq.n	801c9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c98e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c992:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c996:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c99a:	fb08 f800 	mul.w	r8, r8, r0
 801c99e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c9a2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c9a6:	f108 0b20 	add.w	fp, r8, #32
 801c9aa:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c9ae:	4486      	add	lr, r0
 801c9b0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c9b4:	0a00      	lsrs	r0, r0, #8
 801c9b6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c9ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c9be:	ea4e 0000 	orr.w	r0, lr, r0
 801c9c2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c9c6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c9ca:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c9ce:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c9d2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c9d6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c9da:	ea4e 0909 	orr.w	r9, lr, r9
 801c9de:	ea4a 0000 	orr.w	r0, sl, r0
 801c9e2:	f1bc 0f00 	cmp.w	ip, #0
 801c9e6:	f000 8145 	beq.w	801cc74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c9ea:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c9ee:	3a01      	subs	r2, #1
 801c9f0:	0052      	lsls	r2, r2, #1
 801c9f2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c9f4:	3202      	adds	r2, #2
 801c9f6:	2cff      	cmp	r4, #255	@ 0xff
 801c9f8:	eb05 0e02 	add.w	lr, r5, r2
 801c9fc:	5aaa      	ldrh	r2, [r5, r2]
 801c9fe:	d018      	beq.n	801ca32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ca00:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801ca04:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca08:	fb04 fa02 	mul.w	sl, r4, r2
 801ca0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca10:	fb08 f805 	mul.w	r8, r8, r5
 801ca14:	f10a 0520 	add.w	r5, sl, #32
 801ca18:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ca1c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ca20:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ca24:	4442      	add	r2, r8
 801ca26:	0a2d      	lsrs	r5, r5, #8
 801ca28:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ca2c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ca30:	432a      	orrs	r2, r5
 801ca32:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ca34:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ca38:	2cff      	cmp	r4, #255	@ 0xff
 801ca3a:	d01a      	beq.n	801ca72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ca3c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ca40:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ca44:	fb04 fa05 	mul.w	sl, r4, r5
 801ca48:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca4c:	fb08 f80e 	mul.w	r8, r8, lr
 801ca50:	f10a 0e20 	add.w	lr, sl, #32
 801ca54:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ca58:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ca5c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ca60:	4445      	add	r5, r8
 801ca62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ca66:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ca6a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801ca6e:	ea45 050e 	orr.w	r5, r5, lr
 801ca72:	fb1c fe01 	smulbb	lr, ip, r1
 801ca76:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ca7a:	f1cc 0810 	rsb	r8, ip, #16
 801ca7e:	eba8 0801 	sub.w	r8, r8, r1
 801ca82:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca86:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ca8a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ca8e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ca92:	4341      	muls	r1, r0
 801ca94:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ca98:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ca9c:	ea4a 0202 	orr.w	r2, sl, r2
 801caa0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801caa4:	fb09 1108 	mla	r1, r9, r8, r1
 801caa8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801caac:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801cab0:	fb0c 1102 	mla	r1, ip, r2, r1
 801cab4:	ea4b 0505 	orr.w	r5, fp, r5
 801cab8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cabc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cac0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cac4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cac8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cacc:	ea42 0e0e 	orr.w	lr, r2, lr
 801cad0:	fa1f f28e 	uxth.w	r2, lr
 801cad4:	2bff      	cmp	r3, #255	@ 0xff
 801cad6:	d103      	bne.n	801cae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801cad8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cada:	29ff      	cmp	r1, #255	@ 0xff
 801cadc:	f000 80de 	beq.w	801cc9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801cae0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801cae2:	8838      	ldrh	r0, [r7, #0]
 801cae4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cae6:	434b      	muls	r3, r1
 801cae8:	f103 0c01 	add.w	ip, r3, #1
 801caec:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801caf0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801caf4:	fa5f fc83 	uxtb.w	ip, r3
 801caf8:	1203      	asrs	r3, r0, #8
 801cafa:	1215      	asrs	r5, r2, #8
 801cafc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cb00:	fb13 f30c 	smulbb	r3, r3, ip
 801cb04:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cb08:	fb05 3501 	mla	r5, r5, r1, r3
 801cb0c:	10c3      	asrs	r3, r0, #3
 801cb0e:	10d1      	asrs	r1, r2, #3
 801cb10:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cb14:	fb13 f30c 	smulbb	r3, r3, ip
 801cb18:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cb1c:	fb01 3104 	mla	r1, r1, r4, r3
 801cb20:	00c3      	lsls	r3, r0, #3
 801cb22:	00d2      	lsls	r2, r2, #3
 801cb24:	b2db      	uxtb	r3, r3
 801cb26:	b2d2      	uxtb	r2, r2
 801cb28:	fb13 f30c 	smulbb	r3, r3, ip
 801cb2c:	b2ad      	uxth	r5, r5
 801cb2e:	fb02 3304 	mla	r3, r2, r4, r3
 801cb32:	b29a      	uxth	r2, r3
 801cb34:	1c6b      	adds	r3, r5, #1
 801cb36:	b289      	uxth	r1, r1
 801cb38:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cb3c:	1c53      	adds	r3, r2, #1
 801cb3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cb42:	1c4a      	adds	r2, r1, #1
 801cb44:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cb48:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cb4c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cb50:	0949      	lsrs	r1, r1, #5
 801cb52:	432b      	orrs	r3, r5
 801cb54:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cb58:	430b      	orrs	r3, r1
 801cb5a:	803b      	strh	r3, [r7, #0]
 801cb5c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb5e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cb60:	4413      	add	r3, r2
 801cb62:	9321      	str	r3, [sp, #132]	@ 0x84
 801cb64:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cb66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb68:	441a      	add	r2, r3
 801cb6a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb6c:	9222      	str	r2, [sp, #136]	@ 0x88
 801cb6e:	3b01      	subs	r3, #1
 801cb70:	3702      	adds	r7, #2
 801cb72:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb74:	e689      	b.n	801c88a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cb76:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb78:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801cb7a:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801cb7c:	4433      	add	r3, r6
 801cb7e:	9321      	str	r3, [sp, #132]	@ 0x84
 801cb80:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb82:	441c      	add	r4, r3
 801cb84:	9b08      	ldr	r3, [sp, #32]
 801cb86:	9422      	str	r4, [sp, #136]	@ 0x88
 801cb88:	3b01      	subs	r3, #1
 801cb8a:	9308      	str	r3, [sp, #32]
 801cb8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb8e:	3302      	adds	r3, #2
 801cb90:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb92:	e658      	b.n	801c846 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801cb94:	d028      	beq.n	801cbe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cb96:	9b08      	ldr	r3, [sp, #32]
 801cb98:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801cb9a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801cb9c:	3b01      	subs	r3, #1
 801cb9e:	fb00 5003 	mla	r0, r0, r3, r5
 801cba2:	1400      	asrs	r0, r0, #16
 801cba4:	f53f ae6c 	bmi.w	801c880 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cba8:	3901      	subs	r1, #1
 801cbaa:	4288      	cmp	r0, r1
 801cbac:	f6bf ae68 	bge.w	801c880 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cbb0:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801cbb2:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801cbb4:	fb01 0303 	mla	r3, r1, r3, r0
 801cbb8:	141b      	asrs	r3, r3, #16
 801cbba:	f53f ae61 	bmi.w	801c880 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cbbe:	3a01      	subs	r2, #1
 801cbc0:	4293      	cmp	r3, r2
 801cbc2:	f6bf ae5d 	bge.w	801c880 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cbc6:	9b08      	ldr	r3, [sp, #32]
 801cbc8:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801cbcc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cbce:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cbd2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cbd4:	2b00      	cmp	r3, #0
 801cbd6:	f300 8082 	bgt.w	801ccde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801cbda:	9b08      	ldr	r3, [sp, #32]
 801cbdc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cbe0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cbe2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cbe6:	9309      	str	r3, [sp, #36]	@ 0x24
 801cbe8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cbea:	2b00      	cmp	r3, #0
 801cbec:	f340 81ef 	ble.w	801cfce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cbf0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cbf4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cbf8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cbfc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cbfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cc02:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cc06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cc0a:	eef0 6a62 	vmov.f32	s13, s5
 801cc0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cc12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc16:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cc1a:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801cc1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cc22:	eef0 6a43 	vmov.f32	s13, s6
 801cc26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cc2a:	ee12 2a90 	vmov	r2, s5
 801cc2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cc32:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc36:	ee13 2a10 	vmov	r2, s6
 801cc3a:	9323      	str	r3, [sp, #140]	@ 0x8c
 801cc3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc42:	9324      	str	r3, [sp, #144]	@ 0x90
 801cc44:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cc46:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc48:	3b01      	subs	r3, #1
 801cc4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc4e:	9311      	str	r3, [sp, #68]	@ 0x44
 801cc50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc52:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801cc56:	bf08      	it	eq
 801cc58:	4613      	moveq	r3, r2
 801cc5a:	9308      	str	r3, [sp, #32]
 801cc5c:	eeb0 3a67 	vmov.f32	s6, s15
 801cc60:	eef0 2a47 	vmov.f32	s5, s14
 801cc64:	e5e1      	b.n	801c82a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cc66:	fb08 f505 	mul.w	r5, r8, r5
 801cc6a:	fb09 5303 	mla	r3, r9, r3, r5
 801cc6e:	e661      	b.n	801c934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801cc70:	4681      	mov	r9, r0
 801cc72:	e688      	b.n	801c986 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cc74:	f1c1 0210 	rsb	r2, r1, #16
 801cc78:	4341      	muls	r1, r0
 801cc7a:	fb09 1902 	mla	r9, r9, r2, r1
 801cc7e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cc82:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cc86:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cc8a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc8e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cc92:	ea42 0909 	orr.w	r9, r2, r9
 801cc96:	fa1f f289 	uxth.w	r2, r9
 801cc9a:	e71b      	b.n	801cad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cc9c:	803a      	strh	r2, [r7, #0]
 801cc9e:	e75d      	b.n	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cca0:	f115 0e01 	adds.w	lr, r5, #1
 801cca4:	f53f af5a 	bmi.w	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cca8:	4572      	cmp	r2, lr
 801ccaa:	f6ff af57 	blt.w	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccae:	f110 0e01 	adds.w	lr, r0, #1
 801ccb2:	f53f af53 	bmi.w	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccb6:	4573      	cmp	r3, lr
 801ccb8:	f6ff af50 	blt.w	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccbc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ccbe:	9502      	str	r5, [sp, #8]
 801ccc0:	b21b      	sxth	r3, r3
 801ccc2:	b212      	sxth	r2, r2
 801ccc4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801ccc8:	9301      	str	r3, [sp, #4]
 801ccca:	9200      	str	r2, [sp, #0]
 801cccc:	e9cd c405 	strd	ip, r4, [sp, #20]
 801ccd0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801ccd4:	4639      	mov	r1, r7
 801ccd6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ccd8:	f7ff fc04 	bl	801c4e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801ccdc:	e73e      	b.n	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccde:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cce0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cce4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cce6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801ccea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ccec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ccf0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ccf2:	141f      	asrs	r7, r3, #16
 801ccf4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801ccf6:	141b      	asrs	r3, r3, #16
 801ccf8:	fb01 3707 	mla	r7, r1, r7, r3
 801ccfc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ccfe:	fa1f fc82 	uxth.w	ip, r2
 801cd02:	eb03 0a07 	add.w	sl, r3, r7
 801cd06:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cd0a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cd0e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cd12:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801cd16:	b29b      	uxth	r3, r3
 801cd18:	2d00      	cmp	r5, #0
 801cd1a:	f000 813d 	beq.w	801cf98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cd1e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cd22:	940f      	str	r4, [sp, #60]	@ 0x3c
 801cd24:	eb0a 0b01 	add.w	fp, sl, r1
 801cd28:	fa1f fa85 	uxth.w	sl, r5
 801cd2c:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd30:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cd34:	fa1f fa8a 	uxth.w	sl, sl
 801cd38:	eba0 000c 	sub.w	r0, r0, ip
 801cd3c:	eba3 030a 	sub.w	r3, r3, sl
 801cd40:	b280      	uxth	r0, r0
 801cd42:	fb08 f000 	mul.w	r0, r8, r0
 801cd46:	b29b      	uxth	r3, r3
 801cd48:	fb09 0303 	mla	r3, r9, r3, r0
 801cd4c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cd4e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cd52:	9410      	str	r4, [sp, #64]	@ 0x40
 801cd54:	fb0a 3300 	mla	r3, sl, r0, r3
 801cd58:	fb0c 3304 	mla	r3, ip, r4, r3
 801cd5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cd60:	2b00      	cmp	r3, #0
 801cd62:	f000 810b 	beq.w	801cf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cd66:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801cd68:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cd6a:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cd6e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cd72:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cd76:	f000 8114 	beq.w	801cfa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801cd7a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cd7e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cd82:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cd86:	fb09 f707 	mul.w	r7, r9, r7
 801cd8a:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd8e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cd92:	f107 0b20 	add.w	fp, r7, #32
 801cd96:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cd9a:	44cc      	add	ip, r9
 801cd9c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cda0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cda4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cda8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cdac:	ea4c 0909 	orr.w	r9, ip, r9
 801cdb0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cdb4:	8847      	ldrh	r7, [r0, #2]
 801cdb6:	d019      	beq.n	801cdec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801cdb8:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cdbc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cdc0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cdc4:	fb08 f807 	mul.w	r8, r8, r7
 801cdc8:	fb0a fc0c 	mul.w	ip, sl, ip
 801cdcc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cdd0:	f108 0b20 	add.w	fp, r8, #32
 801cdd4:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cdd8:	44bc      	add	ip, r7
 801cdda:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801cdde:	0a3f      	lsrs	r7, r7, #8
 801cde0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cde4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cde8:	ea4c 0707 	orr.w	r7, ip, r7
 801cdec:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cdf0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cdf4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cdf8:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cdfc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ce00:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ce04:	ea4c 0909 	orr.w	r9, ip, r9
 801ce08:	ea4a 0707 	orr.w	r7, sl, r7
 801ce0c:	2d00      	cmp	r5, #0
 801ce0e:	f000 80ca 	beq.w	801cfa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801ce12:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801ce16:	3901      	subs	r1, #1
 801ce18:	0049      	lsls	r1, r1, #1
 801ce1a:	3102      	adds	r1, #2
 801ce1c:	eb00 0c01 	add.w	ip, r0, r1
 801ce20:	5a41      	ldrh	r1, [r0, r1]
 801ce22:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801ce24:	28ff      	cmp	r0, #255	@ 0xff
 801ce26:	d019      	beq.n	801ce5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801ce28:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ce2a:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801ce2e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce32:	fb04 fa01 	mul.w	sl, r4, r1
 801ce36:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce3a:	fb08 f800 	mul.w	r8, r8, r0
 801ce3e:	f10a 0020 	add.w	r0, sl, #32
 801ce42:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ce46:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ce4a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ce4e:	4441      	add	r1, r8
 801ce50:	0a00      	lsrs	r0, r0, #8
 801ce52:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ce56:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ce5a:	4301      	orrs	r1, r0
 801ce5c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ce5e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ce62:	2cff      	cmp	r4, #255	@ 0xff
 801ce64:	d01a      	beq.n	801ce9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801ce66:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801ce6a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ce6e:	fb04 fa00 	mul.w	sl, r4, r0
 801ce72:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce76:	fb08 f80c 	mul.w	r8, r8, ip
 801ce7a:	f10a 0c20 	add.w	ip, sl, #32
 801ce7e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ce82:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ce86:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ce8a:	4440      	add	r0, r8
 801ce8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce90:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ce94:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ce98:	ea40 000c 	orr.w	r0, r0, ip
 801ce9c:	fb15 fc02 	smulbb	ip, r5, r2
 801cea0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cea4:	f1c5 0810 	rsb	r8, r5, #16
 801cea8:	eba8 0802 	sub.w	r8, r8, r2
 801ceac:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ceb0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ceb4:	437a      	muls	r2, r7
 801ceb6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ceba:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cebe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cec2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cec6:	fb09 2208 	mla	r2, r9, r8, r2
 801ceca:	ea4a 0101 	orr.w	r1, sl, r1
 801cece:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ced2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ced6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ceda:	fb05 2201 	mla	r2, r5, r1, r2
 801cede:	ea4b 0000 	orr.w	r0, fp, r0
 801cee2:	fb0c 2200 	mla	r2, ip, r0, r2
 801cee6:	0d57      	lsrs	r7, r2, #21
 801cee8:	0952      	lsrs	r2, r2, #5
 801ceea:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ceee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cef2:	433a      	orrs	r2, r7
 801cef4:	2bff      	cmp	r3, #255	@ 0xff
 801cef6:	b292      	uxth	r2, r2
 801cef8:	d102      	bne.n	801cf00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cefa:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cefc:	29ff      	cmp	r1, #255	@ 0xff
 801cefe:	d063      	beq.n	801cfc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801cf00:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801cf02:	f8be 1000 	ldrh.w	r1, [lr]
 801cf06:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cf08:	4343      	muls	r3, r0
 801cf0a:	1c58      	adds	r0, r3, #1
 801cf0c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801cf10:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cf14:	1208      	asrs	r0, r1, #8
 801cf16:	b2db      	uxtb	r3, r3
 801cf18:	1215      	asrs	r5, r2, #8
 801cf1a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cf1e:	fb10 f003 	smulbb	r0, r0, r3
 801cf22:	10cf      	asrs	r7, r1, #3
 801cf24:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cf28:	00c9      	lsls	r1, r1, #3
 801cf2a:	fb05 0504 	mla	r5, r5, r4, r0
 801cf2e:	b2c9      	uxtb	r1, r1
 801cf30:	10d0      	asrs	r0, r2, #3
 801cf32:	00d2      	lsls	r2, r2, #3
 801cf34:	fb11 f103 	smulbb	r1, r1, r3
 801cf38:	b2d2      	uxtb	r2, r2
 801cf3a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cf3e:	fb02 1204 	mla	r2, r2, r4, r1
 801cf42:	fb17 f703 	smulbb	r7, r7, r3
 801cf46:	b2ad      	uxth	r5, r5
 801cf48:	b292      	uxth	r2, r2
 801cf4a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cf4e:	fb00 7004 	mla	r0, r0, r4, r7
 801cf52:	1c6b      	adds	r3, r5, #1
 801cf54:	1c57      	adds	r7, r2, #1
 801cf56:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cf5a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cf5e:	b280      	uxth	r0, r0
 801cf60:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cf64:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cf68:	433d      	orrs	r5, r7
 801cf6a:	1c47      	adds	r7, r0, #1
 801cf6c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cf70:	097f      	lsrs	r7, r7, #5
 801cf72:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cf76:	433d      	orrs	r5, r7
 801cf78:	f8ae 5000 	strh.w	r5, [lr]
 801cf7c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cf7e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cf80:	4413      	add	r3, r2
 801cf82:	9321      	str	r3, [sp, #132]	@ 0x84
 801cf84:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cf86:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf88:	441a      	add	r2, r3
 801cf8a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cf8c:	9222      	str	r2, [sp, #136]	@ 0x88
 801cf8e:	3b01      	subs	r3, #1
 801cf90:	f10e 0e02 	add.w	lr, lr, #2
 801cf94:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cf96:	e61c      	b.n	801cbd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801cf98:	fb08 f000 	mul.w	r0, r8, r0
 801cf9c:	fb09 0303 	mla	r3, r9, r3, r0
 801cfa0:	e6dc      	b.n	801cd5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801cfa2:	46b9      	mov	r9, r7
 801cfa4:	e704      	b.n	801cdb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801cfa6:	f1c2 0110 	rsb	r1, r2, #16
 801cfaa:	437a      	muls	r2, r7
 801cfac:	fb09 2901 	mla	r9, r9, r1, r2
 801cfb0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cfb4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cfb8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801cfbc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cfc0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cfc4:	4302      	orrs	r2, r0
 801cfc6:	e795      	b.n	801cef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801cfc8:	f8ae 2000 	strh.w	r2, [lr]
 801cfcc:	e7d6      	b.n	801cf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cfce:	b017      	add	sp, #92	@ 0x5c
 801cfd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cfd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cfd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfd8:	b085      	sub	sp, #20
 801cfda:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801cfde:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801cfe2:	9103      	str	r1, [sp, #12]
 801cfe4:	fb00 7406 	mla	r4, r0, r6, r7
 801cfe8:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801cfec:	2800      	cmp	r0, #0
 801cfee:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801cff2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801cff6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801cffa:	9501      	str	r5, [sp, #4]
 801cffc:	eb02 0904 	add.w	r9, r2, r4
 801d000:	f2c0 8141 	blt.w	801d286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d004:	4583      	cmp	fp, r0
 801d006:	f340 813e 	ble.w	801d286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d00a:	2f00      	cmp	r7, #0
 801d00c:	f2c0 8137 	blt.w	801d27e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d010:	42be      	cmp	r6, r7
 801d012:	f340 8134 	ble.w	801d27e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d016:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d01a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d01e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d022:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d026:	4355      	muls	r5, r2
 801d028:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d02c:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d030:	fb0c f203 	mul.w	r2, ip, r3
 801d034:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d038:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801d03c:	441d      	add	r5, r3
 801d03e:	f102 0320 	add.w	r3, r2, #32
 801d042:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d046:	0a1b      	lsrs	r3, r3, #8
 801d048:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d04c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d050:	431c      	orrs	r4, r3
 801d052:	1c7b      	adds	r3, r7, #1
 801d054:	f100 811c 	bmi.w	801d290 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d058:	429e      	cmp	r6, r3
 801d05a:	f340 8119 	ble.w	801d290 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d05e:	2900      	cmp	r1, #0
 801d060:	f000 8119 	beq.w	801d296 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d064:	9a01      	ldr	r2, [sp, #4]
 801d066:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d06a:	8855      	ldrh	r5, [r2, #2]
 801d06c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d070:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d074:	fb08 f802 	mul.w	r8, r8, r2
 801d078:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d07c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d080:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d084:	435d      	muls	r5, r3
 801d086:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d08a:	44d0      	add	r8, sl
 801d08c:	f105 0a20 	add.w	sl, r5, #32
 801d090:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d094:	0a2d      	lsrs	r5, r5, #8
 801d096:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d09a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d09e:	432a      	orrs	r2, r5
 801d0a0:	3001      	adds	r0, #1
 801d0a2:	f100 80fe 	bmi.w	801d2a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d0a6:	4583      	cmp	fp, r0
 801d0a8:	f340 80fb 	ble.w	801d2a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d0ac:	f1be 0f00 	cmp.w	lr, #0
 801d0b0:	f000 80fc 	beq.w	801d2ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d0b4:	2f00      	cmp	r7, #0
 801d0b6:	f2c0 80f1 	blt.w	801d29c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d0ba:	42be      	cmp	r6, r7
 801d0bc:	f340 80ee 	ble.w	801d29c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d0c0:	9801      	ldr	r0, [sp, #4]
 801d0c2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d0c6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d0ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d0ce:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d0d2:	fb0a fa00 	mul.w	sl, sl, r0
 801d0d6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d0da:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d0de:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d0e2:	fb05 f808 	mul.w	r8, r5, r8
 801d0e6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d0ea:	4482      	add	sl, r0
 801d0ec:	f108 0020 	add.w	r0, r8, #32
 801d0f0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d0f4:	0a00      	lsrs	r0, r0, #8
 801d0f6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d0fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0fe:	ea4b 0b00 	orr.w	fp, fp, r0
 801d102:	3701      	adds	r7, #1
 801d104:	f100 80d7 	bmi.w	801d2b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d108:	42be      	cmp	r6, r7
 801d10a:	f340 80d4 	ble.w	801d2b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d10e:	2900      	cmp	r1, #0
 801d110:	f000 80d4 	beq.w	801d2bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d114:	3601      	adds	r6, #1
 801d116:	9801      	ldr	r0, [sp, #4]
 801d118:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d11c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d120:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d124:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d128:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d12c:	fb09 f906 	mul.w	r9, r9, r6
 801d130:	fb07 f800 	mul.w	r8, r7, r0
 801d134:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d138:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d13c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d140:	44d1      	add	r9, sl
 801d142:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d146:	f108 0020 	add.w	r0, r8, #32
 801d14a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d14e:	0a00      	lsrs	r0, r0, #8
 801d150:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d154:	4330      	orrs	r0, r6
 801d156:	b28e      	uxth	r6, r1
 801d158:	fa1f f98e 	uxth.w	r9, lr
 801d15c:	fb06 f809 	mul.w	r8, r6, r9
 801d160:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d164:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d168:	0136      	lsls	r6, r6, #4
 801d16a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d16e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d172:	9601      	str	r6, [sp, #4]
 801d174:	ea4a 0404 	orr.w	r4, sl, r4
 801d178:	fa1f f689 	uxth.w	r6, r9
 801d17c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d180:	fb11 f90e 	smulbb	r9, r1, lr
 801d184:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d188:	9602      	str	r6, [sp, #8]
 801d18a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d18e:	4626      	mov	r6, r4
 801d190:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d194:	f1ce 0410 	rsb	r4, lr, #16
 801d198:	1a64      	subs	r4, r4, r1
 801d19a:	ea4a 0202 	orr.w	r2, sl, r2
 801d19e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d1a2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d1a6:	434a      	muls	r2, r1
 801d1a8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d1ac:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d1b0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d1b4:	fb04 2406 	mla	r4, r4, r6, r2
 801d1b8:	ea4a 0000 	orr.w	r0, sl, r0
 801d1bc:	fb09 4200 	mla	r2, r9, r0, r4
 801d1c0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d1c4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d1c8:	9801      	ldr	r0, [sp, #4]
 801d1ca:	9903      	ldr	r1, [sp, #12]
 801d1cc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d1d0:	ea44 0b0b 	orr.w	fp, r4, fp
 801d1d4:	9c02      	ldr	r4, [sp, #8]
 801d1d6:	8809      	ldrh	r1, [r1, #0]
 801d1d8:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801d1dc:	1b00      	subs	r0, r0, r4
 801d1de:	9c01      	ldr	r4, [sp, #4]
 801d1e0:	eba4 0608 	sub.w	r6, r4, r8
 801d1e4:	b2b6      	uxth	r6, r6
 801d1e6:	b280      	uxth	r0, r0
 801d1e8:	4373      	muls	r3, r6
 801d1ea:	fb0c 3300 	mla	r3, ip, r0, r3
 801d1ee:	9802      	ldr	r0, [sp, #8]
 801d1f0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d1f4:	fb00 3505 	mla	r5, r0, r5, r3
 801d1f8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d1fc:	fb08 5707 	mla	r7, r8, r7, r5
 801d200:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d204:	120b      	asrs	r3, r1, #8
 801d206:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d20a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d20e:	b2ff      	uxtb	r7, r7
 801d210:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d214:	10c8      	asrs	r0, r1, #3
 801d216:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d21a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d21e:	00c9      	lsls	r1, r1, #3
 801d220:	437b      	muls	r3, r7
 801d222:	ea42 0e0e 	orr.w	lr, r2, lr
 801d226:	b2c9      	uxtb	r1, r1
 801d228:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d22c:	fa1f f28e 	uxth.w	r2, lr
 801d230:	4378      	muls	r0, r7
 801d232:	434f      	muls	r7, r1
 801d234:	1c59      	adds	r1, r3, #1
 801d236:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d23a:	1213      	asrs	r3, r2, #8
 801d23c:	f023 0307 	bic.w	r3, r3, #7
 801d240:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d244:	1c41      	adds	r1, r0, #1
 801d246:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d24a:	10d1      	asrs	r1, r2, #3
 801d24c:	f021 0103 	bic.w	r1, r1, #3
 801d250:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d254:	021b      	lsls	r3, r3, #8
 801d256:	00c9      	lsls	r1, r1, #3
 801d258:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d25c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d260:	430b      	orrs	r3, r1
 801d262:	1c79      	adds	r1, r7, #1
 801d264:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d268:	00d2      	lsls	r2, r2, #3
 801d26a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d26e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d272:	431a      	orrs	r2, r3
 801d274:	9b03      	ldr	r3, [sp, #12]
 801d276:	801a      	strh	r2, [r3, #0]
 801d278:	b005      	add	sp, #20
 801d27a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d27e:	f04f 0c00 	mov.w	ip, #0
 801d282:	4664      	mov	r4, ip
 801d284:	e6e5      	b.n	801d052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d286:	2300      	movs	r3, #0
 801d288:	469c      	mov	ip, r3
 801d28a:	461a      	mov	r2, r3
 801d28c:	461c      	mov	r4, r3
 801d28e:	e707      	b.n	801d0a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d290:	2300      	movs	r3, #0
 801d292:	461a      	mov	r2, r3
 801d294:	e704      	b.n	801d0a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d296:	460b      	mov	r3, r1
 801d298:	460a      	mov	r2, r1
 801d29a:	e701      	b.n	801d0a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d29c:	2500      	movs	r5, #0
 801d29e:	46ab      	mov	fp, r5
 801d2a0:	e72f      	b.n	801d102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d2a2:	2700      	movs	r7, #0
 801d2a4:	463d      	mov	r5, r7
 801d2a6:	4638      	mov	r0, r7
 801d2a8:	46bb      	mov	fp, r7
 801d2aa:	e754      	b.n	801d156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d2ac:	4677      	mov	r7, lr
 801d2ae:	4675      	mov	r5, lr
 801d2b0:	4670      	mov	r0, lr
 801d2b2:	46f3      	mov	fp, lr
 801d2b4:	e74f      	b.n	801d156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d2b6:	2700      	movs	r7, #0
 801d2b8:	4638      	mov	r0, r7
 801d2ba:	e74c      	b.n	801d156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d2bc:	460f      	mov	r7, r1
 801d2be:	4608      	mov	r0, r1
 801d2c0:	e749      	b.n	801d156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d2c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2c8:	b093      	sub	sp, #76	@ 0x4c
 801d2ca:	9210      	str	r2, [sp, #64]	@ 0x40
 801d2cc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d2ce:	910e      	str	r1, [sp, #56]	@ 0x38
 801d2d0:	9306      	str	r3, [sp, #24]
 801d2d2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d2d6:	9011      	str	r0, [sp, #68]	@ 0x44
 801d2d8:	6850      	ldr	r0, [r2, #4]
 801d2da:	6812      	ldr	r2, [r2, #0]
 801d2dc:	fb00 1303 	mla	r3, r0, r3, r1
 801d2e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d2e4:	9307      	str	r3, [sp, #28]
 801d2e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d2e8:	681b      	ldr	r3, [r3, #0]
 801d2ea:	9308      	str	r3, [sp, #32]
 801d2ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d2ee:	685b      	ldr	r3, [r3, #4]
 801d2f0:	9309      	str	r3, [sp, #36]	@ 0x24
 801d2f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d2f4:	2b00      	cmp	r3, #0
 801d2f6:	dc03      	bgt.n	801d300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d2f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d2fa:	2b00      	cmp	r3, #0
 801d2fc:	f340 83b4 	ble.w	801da68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d300:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d302:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d306:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d30a:	1e48      	subs	r0, r1, #1
 801d30c:	1e55      	subs	r5, r2, #1
 801d30e:	9b06      	ldr	r3, [sp, #24]
 801d310:	2b00      	cmp	r3, #0
 801d312:	f340 8163 	ble.w	801d5dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d316:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801d318:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d31a:	1436      	asrs	r6, r6, #16
 801d31c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d320:	d406      	bmi.n	801d330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d322:	4286      	cmp	r6, r0
 801d324:	da04      	bge.n	801d330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d326:	2b00      	cmp	r3, #0
 801d328:	db02      	blt.n	801d330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d32a:	42ab      	cmp	r3, r5
 801d32c:	f2c0 8157 	blt.w	801d5de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d330:	3601      	adds	r6, #1
 801d332:	f100 8144 	bmi.w	801d5be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d336:	42b1      	cmp	r1, r6
 801d338:	f2c0 8141 	blt.w	801d5be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d33c:	3301      	adds	r3, #1
 801d33e:	f100 813e 	bmi.w	801d5be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d342:	429a      	cmp	r2, r3
 801d344:	f2c0 813b 	blt.w	801d5be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d348:	9b06      	ldr	r3, [sp, #24]
 801d34a:	9f07      	ldr	r7, [sp, #28]
 801d34c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d34e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d352:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d354:	2b00      	cmp	r3, #0
 801d356:	f340 8164 	ble.w	801d622 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d35a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d35c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d35e:	1418      	asrs	r0, r3, #16
 801d360:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d362:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d366:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d368:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d36c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d36e:	142d      	asrs	r5, r5, #16
 801d370:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d374:	f100 81ee 	bmi.w	801d754 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d378:	f102 3eff 	add.w	lr, r2, #4294967295
 801d37c:	4575      	cmp	r5, lr
 801d37e:	f280 81e9 	bge.w	801d754 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d382:	2800      	cmp	r0, #0
 801d384:	f2c0 81e6 	blt.w	801d754 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d388:	f103 3eff 	add.w	lr, r3, #4294967295
 801d38c:	4570      	cmp	r0, lr
 801d38e:	f280 81e1 	bge.w	801d754 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d392:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d394:	b212      	sxth	r2, r2
 801d396:	fb00 5002 	mla	r0, r0, r2, r5
 801d39a:	fa1f fe81 	uxth.w	lr, r1
 801d39e:	eb03 0a00 	add.w	sl, r3, r0
 801d3a2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d3a6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d3aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d3ae:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d3b2:	b29b      	uxth	r3, r3
 801d3b4:	f1bc 0f00 	cmp.w	ip, #0
 801d3b8:	f000 8179 	beq.w	801d6ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d3bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d3c0:	940a      	str	r4, [sp, #40]	@ 0x28
 801d3c2:	eb0a 0b02 	add.w	fp, sl, r2
 801d3c6:	fa1f fa8c 	uxth.w	sl, ip
 801d3ca:	fb0a fe0e 	mul.w	lr, sl, lr
 801d3ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d3d2:	fa1f fa8a 	uxth.w	sl, sl
 801d3d6:	eba5 050e 	sub.w	r5, r5, lr
 801d3da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d3de:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d3e0:	eba3 030a 	sub.w	r3, r3, sl
 801d3e4:	b2ad      	uxth	r5, r5
 801d3e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d3e8:	b29b      	uxth	r3, r3
 801d3ea:	fb08 f505 	mul.w	r5, r8, r5
 801d3ee:	fb09 5303 	mla	r3, r9, r3, r5
 801d3f2:	fb0a 3304 	mla	r3, sl, r4, r3
 801d3f6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d3f8:	fb0e 3304 	mla	r3, lr, r4, r3
 801d3fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d400:	2b00      	cmp	r3, #0
 801d402:	f000 80cf 	beq.w	801d5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d406:	9c08      	ldr	r4, [sp, #32]
 801d408:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d40c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d410:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d414:	f000 8150 	beq.w	801d6b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d418:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d41c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d420:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d424:	fb09 f000 	mul.w	r0, r9, r0
 801d428:	fb0a fe0e 	mul.w	lr, sl, lr
 801d42c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d430:	f100 0b20 	add.w	fp, r0, #32
 801d434:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d438:	44ce      	add	lr, r9
 801d43a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d43e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d442:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d446:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d44a:	ea4e 0909 	orr.w	r9, lr, r9
 801d44e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d452:	8868      	ldrh	r0, [r5, #2]
 801d454:	d019      	beq.n	801d48a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d456:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d45a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d45e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d462:	fb08 f800 	mul.w	r8, r8, r0
 801d466:	fb0a fe0e 	mul.w	lr, sl, lr
 801d46a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d46e:	f108 0b20 	add.w	fp, r8, #32
 801d472:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d476:	4486      	add	lr, r0
 801d478:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d47c:	0a00      	lsrs	r0, r0, #8
 801d47e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d482:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d486:	ea4e 0000 	orr.w	r0, lr, r0
 801d48a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d48e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d492:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d496:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d49a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d49e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d4a2:	ea4e 0909 	orr.w	r9, lr, r9
 801d4a6:	ea4a 0000 	orr.w	r0, sl, r0
 801d4aa:	f1bc 0f00 	cmp.w	ip, #0
 801d4ae:	f000 8105 	beq.w	801d6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d4b2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d4b6:	3a01      	subs	r2, #1
 801d4b8:	0052      	lsls	r2, r2, #1
 801d4ba:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d4bc:	3202      	adds	r2, #2
 801d4be:	2cff      	cmp	r4, #255	@ 0xff
 801d4c0:	eb05 0e02 	add.w	lr, r5, r2
 801d4c4:	5aaa      	ldrh	r2, [r5, r2]
 801d4c6:	d018      	beq.n	801d4fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d4c8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d4cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d4d0:	fb04 fa02 	mul.w	sl, r4, r2
 801d4d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d4d8:	fb08 f805 	mul.w	r8, r8, r5
 801d4dc:	f10a 0520 	add.w	r5, sl, #32
 801d4e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d4e4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d4e8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d4ec:	4442      	add	r2, r8
 801d4ee:	0a2d      	lsrs	r5, r5, #8
 801d4f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d4f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d4f8:	432a      	orrs	r2, r5
 801d4fa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d4fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d500:	2cff      	cmp	r4, #255	@ 0xff
 801d502:	d01a      	beq.n	801d53a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d504:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d508:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d50c:	fb04 fa05 	mul.w	sl, r4, r5
 801d510:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d514:	fb08 f80e 	mul.w	r8, r8, lr
 801d518:	f10a 0e20 	add.w	lr, sl, #32
 801d51c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d520:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d524:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d528:	4445      	add	r5, r8
 801d52a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d52e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d532:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d536:	ea45 050e 	orr.w	r5, r5, lr
 801d53a:	fb1c fe01 	smulbb	lr, ip, r1
 801d53e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d542:	f1cc 0810 	rsb	r8, ip, #16
 801d546:	eba8 0801 	sub.w	r8, r8, r1
 801d54a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d54e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d552:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d556:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d55a:	4341      	muls	r1, r0
 801d55c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d560:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d564:	ea4a 0202 	orr.w	r2, sl, r2
 801d568:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d56c:	fb09 1108 	mla	r1, r9, r8, r1
 801d570:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d574:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d578:	fb0c 1102 	mla	r1, ip, r2, r1
 801d57c:	ea4b 0505 	orr.w	r5, fp, r5
 801d580:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d584:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d588:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d58c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d590:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d594:	ea42 0e0e 	orr.w	lr, r2, lr
 801d598:	fa1f f28e 	uxth.w	r2, lr
 801d59c:	2bff      	cmp	r3, #255	@ 0xff
 801d59e:	f040 80a1 	bne.w	801d6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d5a2:	803a      	strh	r2, [r7, #0]
 801d5a4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d5a6:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d5a8:	4413      	add	r3, r2
 801d5aa:	931d      	str	r3, [sp, #116]	@ 0x74
 801d5ac:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d5ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5b0:	441a      	add	r2, r3
 801d5b2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5b4:	921e      	str	r2, [sp, #120]	@ 0x78
 801d5b6:	3b01      	subs	r3, #1
 801d5b8:	3702      	adds	r7, #2
 801d5ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d5bc:	e6c9      	b.n	801d352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d5be:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d5c0:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d5c2:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d5c4:	4433      	add	r3, r6
 801d5c6:	931d      	str	r3, [sp, #116]	@ 0x74
 801d5c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5ca:	441c      	add	r4, r3
 801d5cc:	9b06      	ldr	r3, [sp, #24]
 801d5ce:	941e      	str	r4, [sp, #120]	@ 0x78
 801d5d0:	3b01      	subs	r3, #1
 801d5d2:	9306      	str	r3, [sp, #24]
 801d5d4:	9b07      	ldr	r3, [sp, #28]
 801d5d6:	3302      	adds	r3, #2
 801d5d8:	9307      	str	r3, [sp, #28]
 801d5da:	e698      	b.n	801d30e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d5dc:	d028      	beq.n	801d630 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d5de:	9b06      	ldr	r3, [sp, #24]
 801d5e0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d5e2:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d5e4:	3b01      	subs	r3, #1
 801d5e6:	fb00 5003 	mla	r0, r0, r3, r5
 801d5ea:	1400      	asrs	r0, r0, #16
 801d5ec:	f53f aeac 	bmi.w	801d348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5f0:	3901      	subs	r1, #1
 801d5f2:	4288      	cmp	r0, r1
 801d5f4:	f6bf aea8 	bge.w	801d348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5f8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d5fa:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d5fc:	fb01 0303 	mla	r3, r1, r3, r0
 801d600:	141b      	asrs	r3, r3, #16
 801d602:	f53f aea1 	bmi.w	801d348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d606:	3a01      	subs	r2, #1
 801d608:	4293      	cmp	r3, r2
 801d60a:	f6bf ae9d 	bge.w	801d348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d60e:	9b06      	ldr	r3, [sp, #24]
 801d610:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d614:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d616:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d61a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d61c:	2b00      	cmp	r3, #0
 801d61e:	f300 80b6 	bgt.w	801d78e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d622:	9b06      	ldr	r3, [sp, #24]
 801d624:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d628:	9b07      	ldr	r3, [sp, #28]
 801d62a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d62e:	9307      	str	r3, [sp, #28]
 801d630:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d632:	2b00      	cmp	r3, #0
 801d634:	f340 8218 	ble.w	801da68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d638:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d63c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d640:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d644:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d646:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d64a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d64e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d652:	eef0 6a62 	vmov.f32	s13, s5
 801d656:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d65a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d65e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d662:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d666:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d66a:	eef0 6a43 	vmov.f32	s13, s6
 801d66e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d672:	ee12 2a90 	vmov	r2, s5
 801d676:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d67a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d67e:	ee13 2a10 	vmov	r2, s6
 801d682:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d684:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d686:	fb92 f3f3 	sdiv	r3, r2, r3
 801d68a:	9320      	str	r3, [sp, #128]	@ 0x80
 801d68c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d68e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d690:	3b01      	subs	r3, #1
 801d692:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d696:	930e      	str	r3, [sp, #56]	@ 0x38
 801d698:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d69a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d69e:	bf08      	it	eq
 801d6a0:	4613      	moveq	r3, r2
 801d6a2:	9306      	str	r3, [sp, #24]
 801d6a4:	eeb0 3a67 	vmov.f32	s6, s15
 801d6a8:	eef0 2a47 	vmov.f32	s5, s14
 801d6ac:	e621      	b.n	801d2f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d6ae:	fb08 f505 	mul.w	r5, r8, r5
 801d6b2:	fb09 5303 	mla	r3, r9, r3, r5
 801d6b6:	e6a1      	b.n	801d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d6b8:	4681      	mov	r9, r0
 801d6ba:	e6c8      	b.n	801d44e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d6bc:	f1c1 0210 	rsb	r2, r1, #16
 801d6c0:	4341      	muls	r1, r0
 801d6c2:	fb09 1902 	mla	r9, r9, r2, r1
 801d6c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d6ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d6ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d6d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d6d6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d6da:	ea42 0909 	orr.w	r9, r2, r9
 801d6de:	fa1f f289 	uxth.w	r2, r9
 801d6e2:	e75b      	b.n	801d59c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d6e4:	f8b7 c000 	ldrh.w	ip, [r7]
 801d6e8:	43db      	mvns	r3, r3
 801d6ea:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d6ee:	fa5f fe83 	uxtb.w	lr, r3
 801d6f2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d6f6:	fb00 f00e 	mul.w	r0, r0, lr
 801d6fa:	1c41      	adds	r1, r0, #1
 801d6fc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d700:	1211      	asrs	r1, r2, #8
 801d702:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d706:	f021 0107 	bic.w	r1, r1, #7
 801d70a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d70e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d712:	48d7      	ldr	r0, [pc, #860]	@ (801da70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d714:	fb05 f50e 	mul.w	r5, r5, lr
 801d718:	b2c9      	uxtb	r1, r1
 801d71a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d71e:	1c69      	adds	r1, r5, #1
 801d720:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d724:	10d1      	asrs	r1, r2, #3
 801d726:	f021 0103 	bic.w	r1, r1, #3
 801d72a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d72e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d732:	b2db      	uxtb	r3, r3
 801d734:	00c9      	lsls	r1, r1, #3
 801d736:	fb03 f30e 	mul.w	r3, r3, lr
 801d73a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d73e:	4301      	orrs	r1, r0
 801d740:	1c58      	adds	r0, r3, #1
 801d742:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d746:	00d2      	lsls	r2, r2, #3
 801d748:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d74c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d750:	430a      	orrs	r2, r1
 801d752:	e726      	b.n	801d5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d754:	f115 0e01 	adds.w	lr, r5, #1
 801d758:	f53f af24 	bmi.w	801d5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d75c:	4572      	cmp	r2, lr
 801d75e:	f6ff af21 	blt.w	801d5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d762:	f110 0e01 	adds.w	lr, r0, #1
 801d766:	f53f af1d 	bmi.w	801d5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d76a:	4573      	cmp	r3, lr
 801d76c:	f6ff af1a 	blt.w	801d5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d770:	b21b      	sxth	r3, r3
 801d772:	b212      	sxth	r2, r2
 801d774:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d778:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d77c:	9301      	str	r3, [sp, #4]
 801d77e:	9200      	str	r2, [sp, #0]
 801d780:	4639      	mov	r1, r7
 801d782:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d786:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d788:	f7ff fc24 	bl	801cfd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d78c:	e70a      	b.n	801d5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d78e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d790:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d794:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d796:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d79a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d79c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7a0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d7a2:	141f      	asrs	r7, r3, #16
 801d7a4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d7a6:	141b      	asrs	r3, r3, #16
 801d7a8:	fb01 3707 	mla	r7, r1, r7, r3
 801d7ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7ae:	fa1f fc82 	uxth.w	ip, r2
 801d7b2:	eb03 0a07 	add.w	sl, r3, r7
 801d7b6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d7ba:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d7be:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d7c2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d7c6:	b29b      	uxth	r3, r3
 801d7c8:	2d00      	cmp	r5, #0
 801d7ca:	f000 80fe 	beq.w	801d9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d7ce:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d7d2:	940c      	str	r4, [sp, #48]	@ 0x30
 801d7d4:	eb0a 0b01 	add.w	fp, sl, r1
 801d7d8:	fa1f fa85 	uxth.w	sl, r5
 801d7dc:	fb0a fc0c 	mul.w	ip, sl, ip
 801d7e0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d7e4:	fa1f fa8a 	uxth.w	sl, sl
 801d7e8:	eba0 000c 	sub.w	r0, r0, ip
 801d7ec:	eba3 030a 	sub.w	r3, r3, sl
 801d7f0:	b280      	uxth	r0, r0
 801d7f2:	fb08 f000 	mul.w	r0, r8, r0
 801d7f6:	b29b      	uxth	r3, r3
 801d7f8:	fb09 0303 	mla	r3, r9, r3, r0
 801d7fc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d7fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d802:	940d      	str	r4, [sp, #52]	@ 0x34
 801d804:	fb0a 3300 	mla	r3, sl, r0, r3
 801d808:	fb0c 3304 	mla	r3, ip, r4, r3
 801d80c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d810:	2b00      	cmp	r3, #0
 801d812:	f000 80cc 	beq.w	801d9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d816:	9808      	ldr	r0, [sp, #32]
 801d818:	9c08      	ldr	r4, [sp, #32]
 801d81a:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d81e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d822:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d826:	f000 80d5 	beq.w	801d9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d82a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d82e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d832:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d836:	fb09 f707 	mul.w	r7, r9, r7
 801d83a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d83e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d842:	f107 0b20 	add.w	fp, r7, #32
 801d846:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d84a:	44cc      	add	ip, r9
 801d84c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d850:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d854:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d858:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d85c:	ea4c 0909 	orr.w	r9, ip, r9
 801d860:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d864:	8847      	ldrh	r7, [r0, #2]
 801d866:	d019      	beq.n	801d89c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d868:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d86c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d870:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d874:	fb08 f807 	mul.w	r8, r8, r7
 801d878:	fb0a fc0c 	mul.w	ip, sl, ip
 801d87c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d880:	f108 0b20 	add.w	fp, r8, #32
 801d884:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d888:	44bc      	add	ip, r7
 801d88a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d88e:	0a3f      	lsrs	r7, r7, #8
 801d890:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d894:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d898:	ea4c 0707 	orr.w	r7, ip, r7
 801d89c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d8a0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d8a4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d8a8:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d8ac:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d8b0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d8b4:	ea4c 0909 	orr.w	r9, ip, r9
 801d8b8:	ea4a 0707 	orr.w	r7, sl, r7
 801d8bc:	2d00      	cmp	r5, #0
 801d8be:	f000 808b 	beq.w	801d9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d8c2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d8c6:	3901      	subs	r1, #1
 801d8c8:	0049      	lsls	r1, r1, #1
 801d8ca:	3102      	adds	r1, #2
 801d8cc:	eb00 0c01 	add.w	ip, r0, r1
 801d8d0:	5a41      	ldrh	r1, [r0, r1]
 801d8d2:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d8d4:	28ff      	cmp	r0, #255	@ 0xff
 801d8d6:	d019      	beq.n	801d90c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d8d8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d8da:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d8de:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d8e2:	fb04 fa01 	mul.w	sl, r4, r1
 801d8e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d8ea:	fb08 f800 	mul.w	r8, r8, r0
 801d8ee:	f10a 0020 	add.w	r0, sl, #32
 801d8f2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d8f6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d8fa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d8fe:	4441      	add	r1, r8
 801d900:	0a00      	lsrs	r0, r0, #8
 801d902:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d906:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d90a:	4301      	orrs	r1, r0
 801d90c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d90e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d912:	2cff      	cmp	r4, #255	@ 0xff
 801d914:	d01a      	beq.n	801d94c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d916:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d91a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d91e:	fb04 fa00 	mul.w	sl, r4, r0
 801d922:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d926:	fb08 f80c 	mul.w	r8, r8, ip
 801d92a:	f10a 0c20 	add.w	ip, sl, #32
 801d92e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d932:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d936:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d93a:	4440      	add	r0, r8
 801d93c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d940:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d944:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d948:	ea40 000c 	orr.w	r0, r0, ip
 801d94c:	fb15 fc02 	smulbb	ip, r5, r2
 801d950:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d954:	f1c5 0810 	rsb	r8, r5, #16
 801d958:	eba8 0802 	sub.w	r8, r8, r2
 801d95c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d960:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d964:	437a      	muls	r2, r7
 801d966:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d96a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d96e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d972:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d976:	fb09 2208 	mla	r2, r9, r8, r2
 801d97a:	ea4a 0101 	orr.w	r1, sl, r1
 801d97e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d982:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d986:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d98a:	fb05 2201 	mla	r2, r5, r1, r2
 801d98e:	ea4b 0000 	orr.w	r0, fp, r0
 801d992:	fb0c 2200 	mla	r2, ip, r0, r2
 801d996:	0d57      	lsrs	r7, r2, #21
 801d998:	0952      	lsrs	r2, r2, #5
 801d99a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d99e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d9a2:	433a      	orrs	r2, r7
 801d9a4:	2bff      	cmp	r3, #255	@ 0xff
 801d9a6:	b292      	uxth	r2, r2
 801d9a8:	d127      	bne.n	801d9fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d9aa:	f8ae 2000 	strh.w	r2, [lr]
 801d9ae:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d9b0:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d9b2:	4413      	add	r3, r2
 801d9b4:	931d      	str	r3, [sp, #116]	@ 0x74
 801d9b6:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d9b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d9ba:	441a      	add	r2, r3
 801d9bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d9be:	921e      	str	r2, [sp, #120]	@ 0x78
 801d9c0:	3b01      	subs	r3, #1
 801d9c2:	f10e 0e02 	add.w	lr, lr, #2
 801d9c6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d9c8:	e627      	b.n	801d61a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d9ca:	fb08 f000 	mul.w	r0, r8, r0
 801d9ce:	fb09 0303 	mla	r3, r9, r3, r0
 801d9d2:	e71b      	b.n	801d80c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d9d4:	46b9      	mov	r9, r7
 801d9d6:	e743      	b.n	801d860 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d9d8:	f1c2 0110 	rsb	r1, r2, #16
 801d9dc:	437a      	muls	r2, r7
 801d9de:	fb09 2901 	mla	r9, r9, r1, r2
 801d9e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d9e6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d9ea:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d9ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d9f2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d9f6:	4302      	orrs	r2, r0
 801d9f8:	e7d4      	b.n	801d9a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d9fa:	f8be 7000 	ldrh.w	r7, [lr]
 801d9fe:	4c1c      	ldr	r4, [pc, #112]	@ (801da70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801da00:	43db      	mvns	r3, r3
 801da02:	1238      	asrs	r0, r7, #8
 801da04:	fa5f fc83 	uxtb.w	ip, r3
 801da08:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801da0c:	10fd      	asrs	r5, r7, #3
 801da0e:	fb00 f00c 	mul.w	r0, r0, ip
 801da12:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801da16:	fb05 f10c 	mul.w	r1, r5, ip
 801da1a:	1c45      	adds	r5, r0, #1
 801da1c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801da20:	1215      	asrs	r5, r2, #8
 801da22:	f025 0507 	bic.w	r5, r5, #7
 801da26:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801da2a:	1c4d      	adds	r5, r1, #1
 801da2c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801da30:	10d1      	asrs	r1, r2, #3
 801da32:	f021 0103 	bic.w	r1, r1, #3
 801da36:	00fb      	lsls	r3, r7, #3
 801da38:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801da3c:	b2db      	uxtb	r3, r3
 801da3e:	b2c0      	uxtb	r0, r0
 801da40:	00c9      	lsls	r1, r1, #3
 801da42:	fb03 f30c 	mul.w	r3, r3, ip
 801da46:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801da4a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801da4e:	4308      	orrs	r0, r1
 801da50:	1c59      	adds	r1, r3, #1
 801da52:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801da56:	00d2      	lsls	r2, r2, #3
 801da58:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801da5c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801da60:	4318      	orrs	r0, r3
 801da62:	f8ae 0000 	strh.w	r0, [lr]
 801da66:	e7a2      	b.n	801d9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801da68:	b013      	add	sp, #76	@ 0x4c
 801da6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da6e:	bf00      	nop
 801da70:	fffff800 	.word	0xfffff800

0801da74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801da74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801da78:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801da7c:	fb05 4c03 	mla	ip, r5, r3, r4
 801da80:	2d00      	cmp	r5, #0
 801da82:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801da86:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801da8a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801da8e:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801da92:	8808      	ldrh	r0, [r1, #0]
 801da94:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801da98:	f2c0 80a7 	blt.w	801dbea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801da9c:	45aa      	cmp	sl, r5
 801da9e:	f340 80a4 	ble.w	801dbea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801daa2:	2c00      	cmp	r4, #0
 801daa4:	f2c0 809f 	blt.w	801dbe6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801daa8:	42a3      	cmp	r3, r4
 801daaa:	f340 809c 	ble.w	801dbe6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801daae:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801dab2:	1c62      	adds	r2, r4, #1
 801dab4:	f100 809c 	bmi.w	801dbf0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dab8:	4293      	cmp	r3, r2
 801daba:	f340 8099 	ble.w	801dbf0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dabe:	f1b9 0f00 	cmp.w	r9, #0
 801dac2:	f000 8095 	beq.w	801dbf0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dac6:	f8be c002 	ldrh.w	ip, [lr, #2]
 801daca:	3501      	adds	r5, #1
 801dacc:	f100 8094 	bmi.w	801dbf8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dad0:	45aa      	cmp	sl, r5
 801dad2:	f340 8091 	ble.w	801dbf8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dad6:	2f00      	cmp	r7, #0
 801dad8:	f000 808e 	beq.w	801dbf8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801dadc:	2c00      	cmp	r4, #0
 801dade:	f2c0 8089 	blt.w	801dbf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801dae2:	42a3      	cmp	r3, r4
 801dae4:	f340 8086 	ble.w	801dbf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801dae8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801daec:	3401      	adds	r4, #1
 801daee:	f100 8086 	bmi.w	801dbfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801daf2:	42a3      	cmp	r3, r4
 801daf4:	f340 8083 	ble.w	801dbfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801daf8:	f1b9 0f00 	cmp.w	r9, #0
 801dafc:	d07f      	beq.n	801dbfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dafe:	3301      	adds	r3, #1
 801db00:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801db04:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801db08:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801db0c:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801db10:	fb19 fe07 	smulbb	lr, r9, r7
 801db14:	ea44 0808 	orr.w	r8, r4, r8
 801db18:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801db1c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801db20:	f1c7 0210 	rsb	r2, r7, #16
 801db24:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801db28:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801db2c:	ea44 0c0c 	orr.w	ip, r4, ip
 801db30:	eba2 0209 	sub.w	r2, r2, r9
 801db34:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801db38:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801db3c:	fb04 f40c 	mul.w	r4, r4, ip
 801db40:	fb02 4808 	mla	r8, r2, r8, r4
 801db44:	041a      	lsls	r2, r3, #16
 801db46:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801db4a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801db4e:	4313      	orrs	r3, r2
 801db50:	042a      	lsls	r2, r5, #16
 801db52:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801db56:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801db5a:	fb0e 8303 	mla	r3, lr, r3, r8
 801db5e:	432a      	orrs	r2, r5
 801db60:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801db64:	fb07 3202 	mla	r2, r7, r2, r3
 801db68:	0d53      	lsrs	r3, r2, #21
 801db6a:	0952      	lsrs	r2, r2, #5
 801db6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801db70:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801db74:	431a      	orrs	r2, r3
 801db76:	b293      	uxth	r3, r2
 801db78:	b2b4      	uxth	r4, r6
 801db7a:	1202      	asrs	r2, r0, #8
 801db7c:	43f6      	mvns	r6, r6
 801db7e:	b2f6      	uxtb	r6, r6
 801db80:	121d      	asrs	r5, r3, #8
 801db82:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801db86:	fb12 f206 	smulbb	r2, r2, r6
 801db8a:	10c7      	asrs	r7, r0, #3
 801db8c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801db90:	00c0      	lsls	r0, r0, #3
 801db92:	fb05 2504 	mla	r5, r5, r4, r2
 801db96:	b2c0      	uxtb	r0, r0
 801db98:	10da      	asrs	r2, r3, #3
 801db9a:	00db      	lsls	r3, r3, #3
 801db9c:	b2db      	uxtb	r3, r3
 801db9e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801dba2:	fb10 f006 	smulbb	r0, r0, r6
 801dba6:	b2ad      	uxth	r5, r5
 801dba8:	fb03 0004 	mla	r0, r3, r4, r0
 801dbac:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801dbb0:	fb17 f706 	smulbb	r7, r7, r6
 801dbb4:	b280      	uxth	r0, r0
 801dbb6:	1c6b      	adds	r3, r5, #1
 801dbb8:	fb02 7204 	mla	r2, r2, r4, r7
 801dbbc:	b292      	uxth	r2, r2
 801dbbe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dbc2:	1c43      	adds	r3, r0, #1
 801dbc4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801dbc8:	1c50      	adds	r0, r2, #1
 801dbca:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801dbce:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801dbd2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dbd6:	0952      	lsrs	r2, r2, #5
 801dbd8:	432b      	orrs	r3, r5
 801dbda:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dbde:	4313      	orrs	r3, r2
 801dbe0:	800b      	strh	r3, [r1, #0]
 801dbe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dbe6:	4680      	mov	r8, r0
 801dbe8:	e763      	b.n	801dab2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801dbea:	4684      	mov	ip, r0
 801dbec:	4680      	mov	r8, r0
 801dbee:	e76c      	b.n	801daca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801dbf0:	4684      	mov	ip, r0
 801dbf2:	e76a      	b.n	801daca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801dbf4:	4605      	mov	r5, r0
 801dbf6:	e779      	b.n	801daec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801dbf8:	4603      	mov	r3, r0
 801dbfa:	4605      	mov	r5, r0
 801dbfc:	e782      	b.n	801db04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801dbfe:	4603      	mov	r3, r0
 801dc00:	e780      	b.n	801db04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801dc02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc06:	b093      	sub	sp, #76	@ 0x4c
 801dc08:	461d      	mov	r5, r3
 801dc0a:	9210      	str	r2, [sp, #64]	@ 0x40
 801dc0c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dc0e:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801dc12:	920b      	str	r2, [sp, #44]	@ 0x2c
 801dc14:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801dc18:	910a      	str	r1, [sp, #40]	@ 0x28
 801dc1a:	6859      	ldr	r1, [r3, #4]
 801dc1c:	681b      	ldr	r3, [r3, #0]
 801dc1e:	9011      	str	r0, [sp, #68]	@ 0x44
 801dc20:	fb01 2707 	mla	r7, r1, r7, r2
 801dc24:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801dc28:	9307      	str	r3, [sp, #28]
 801dc2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dc2c:	681b      	ldr	r3, [r3, #0]
 801dc2e:	9309      	str	r3, [sp, #36]	@ 0x24
 801dc30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dc32:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801dc36:	43db      	mvns	r3, r3
 801dc38:	b2db      	uxtb	r3, r3
 801dc3a:	9308      	str	r3, [sp, #32]
 801dc3c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dc3e:	2b00      	cmp	r3, #0
 801dc40:	dc03      	bgt.n	801dc4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dc42:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dc44:	2b00      	cmp	r3, #0
 801dc46:	f340 8203 	ble.w	801e050 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dc4a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dc4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc54:	1e48      	subs	r0, r1, #1
 801dc56:	f102 3cff 	add.w	ip, r2, #4294967295
 801dc5a:	2d00      	cmp	r5, #0
 801dc5c:	f340 80da 	ble.w	801de14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dc60:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dc64:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dc68:	d406      	bmi.n	801dc78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc6a:	4586      	cmp	lr, r0
 801dc6c:	da04      	bge.n	801dc78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc6e:	2b00      	cmp	r3, #0
 801dc70:	db02      	blt.n	801dc78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc72:	4563      	cmp	r3, ip
 801dc74:	f2c0 80cf 	blt.w	801de16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dc78:	f11e 0e01 	adds.w	lr, lr, #1
 801dc7c:	f100 80c1 	bmi.w	801de02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc80:	4571      	cmp	r1, lr
 801dc82:	f2c0 80be 	blt.w	801de02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc86:	3301      	adds	r3, #1
 801dc88:	f100 80bb 	bmi.w	801de02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc8c:	429a      	cmp	r2, r3
 801dc8e:	f2c0 80b8 	blt.w	801de02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc92:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801dc96:	46a9      	mov	r9, r5
 801dc98:	f1b9 0f00 	cmp.w	r9, #0
 801dc9c:	f340 80d8 	ble.w	801de50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801dca0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dca2:	1421      	asrs	r1, r4, #16
 801dca4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dca8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dcac:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801dcb0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801dcb4:	f100 8111 	bmi.w	801deda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dcb8:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dcbc:	4551      	cmp	r1, sl
 801dcbe:	f280 810c 	bge.w	801deda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dcc2:	2800      	cmp	r0, #0
 801dcc4:	f2c0 8109 	blt.w	801deda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dcc8:	f103 3aff 	add.w	sl, r3, #4294967295
 801dccc:	4550      	cmp	r0, sl
 801dcce:	f280 8104 	bge.w	801deda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dcd2:	fa0f f38e 	sxth.w	r3, lr
 801dcd6:	fb00 1103 	mla	r1, r0, r3, r1
 801dcda:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801dcdc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801dce0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801dce4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801dce8:	f1bc 0f00 	cmp.w	ip, #0
 801dcec:	d007      	beq.n	801dcfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801dcee:	005b      	lsls	r3, r3, #1
 801dcf0:	eb0a 0003 	add.w	r0, sl, r3
 801dcf4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801dcf8:	930c      	str	r3, [sp, #48]	@ 0x30
 801dcfa:	8843      	ldrh	r3, [r0, #2]
 801dcfc:	930d      	str	r3, [sp, #52]	@ 0x34
 801dcfe:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801dd02:	fb12 f30c 	smulbb	r3, r2, ip
 801dd06:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dd0a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dd0e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dd12:	10db      	asrs	r3, r3, #3
 801dd14:	ea40 000e 	orr.w	r0, r0, lr
 801dd18:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dd1c:	f1cc 0e10 	rsb	lr, ip, #16
 801dd20:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dd24:	ebae 0e02 	sub.w	lr, lr, r2
 801dd28:	ea4a 0101 	orr.w	r1, sl, r1
 801dd2c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dd30:	4351      	muls	r1, r2
 801dd32:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801dd34:	9f08      	ldr	r7, [sp, #32]
 801dd36:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dd3a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dd3e:	0410      	lsls	r0, r2, #16
 801dd40:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dd44:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dd48:	4310      	orrs	r0, r2
 801dd4a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dd4c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dd4e:	0412      	lsls	r2, r2, #16
 801dd50:	fb03 e000 	mla	r0, r3, r0, lr
 801dd54:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dd58:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801dd5c:	ea42 020e 	orr.w	r2, r2, lr
 801dd60:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dd64:	fb03 0302 	mla	r3, r3, r2, r0
 801dd68:	0d5a      	lsrs	r2, r3, #21
 801dd6a:	095b      	lsrs	r3, r3, #5
 801dd6c:	f8b8 0000 	ldrh.w	r0, [r8]
 801dd70:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dd74:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801dd78:	4313      	orrs	r3, r2
 801dd7a:	b29b      	uxth	r3, r3
 801dd7c:	1201      	asrs	r1, r0, #8
 801dd7e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801dd82:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801dd86:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dd8a:	fb11 f107 	smulbb	r1, r1, r7
 801dd8e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801dd92:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801dd96:	00c0      	lsls	r0, r0, #3
 801dd98:	fb0c 1c02 	mla	ip, ip, r2, r1
 801dd9c:	b2c0      	uxtb	r0, r0
 801dd9e:	10d9      	asrs	r1, r3, #3
 801dda0:	00db      	lsls	r3, r3, #3
 801dda2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801dda6:	b2db      	uxtb	r3, r3
 801dda8:	fb10 f007 	smulbb	r0, r0, r7
 801ddac:	fa1f fc8c 	uxth.w	ip, ip
 801ddb0:	fb03 0302 	mla	r3, r3, r2, r0
 801ddb4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ddb8:	fb1e fe07 	smulbb	lr, lr, r7
 801ddbc:	fb01 e102 	mla	r1, r1, r2, lr
 801ddc0:	b29a      	uxth	r2, r3
 801ddc2:	f10c 0301 	add.w	r3, ip, #1
 801ddc6:	b289      	uxth	r1, r1
 801ddc8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ddcc:	1c53      	adds	r3, r2, #1
 801ddce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ddd2:	1c4a      	adds	r2, r1, #1
 801ddd4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ddd8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801dddc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dde0:	0949      	lsrs	r1, r1, #5
 801dde2:	ea43 030c 	orr.w	r3, r3, ip
 801dde6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ddea:	430b      	orrs	r3, r1
 801ddec:	f8a8 3000 	strh.w	r3, [r8]
 801ddf0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ddf2:	441c      	add	r4, r3
 801ddf4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ddf6:	f108 0802 	add.w	r8, r8, #2
 801ddfa:	441e      	add	r6, r3
 801ddfc:	f109 39ff 	add.w	r9, r9, #4294967295
 801de00:	e74a      	b.n	801dc98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801de02:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801de04:	441c      	add	r4, r3
 801de06:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801de08:	441e      	add	r6, r3
 801de0a:	9b07      	ldr	r3, [sp, #28]
 801de0c:	3302      	adds	r3, #2
 801de0e:	3d01      	subs	r5, #1
 801de10:	9307      	str	r3, [sp, #28]
 801de12:	e722      	b.n	801dc5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801de14:	d022      	beq.n	801de5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801de16:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801de18:	1e6b      	subs	r3, r5, #1
 801de1a:	fb00 4003 	mla	r0, r0, r3, r4
 801de1e:	1400      	asrs	r0, r0, #16
 801de20:	f53f af37 	bmi.w	801dc92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de24:	3901      	subs	r1, #1
 801de26:	4288      	cmp	r0, r1
 801de28:	f6bf af33 	bge.w	801dc92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de2c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801de2e:	fb01 6303 	mla	r3, r1, r3, r6
 801de32:	141b      	asrs	r3, r3, #16
 801de34:	f53f af2d 	bmi.w	801dc92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de38:	3a01      	subs	r2, #1
 801de3a:	4293      	cmp	r3, r2
 801de3c:	f6bf af29 	bge.w	801dc92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de40:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801de44:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801de48:	46a8      	mov	r8, r5
 801de4a:	f1b8 0f00 	cmp.w	r8, #0
 801de4e:	dc5e      	bgt.n	801df0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801de50:	9b07      	ldr	r3, [sp, #28]
 801de52:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801de56:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801de5a:	9307      	str	r3, [sp, #28]
 801de5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801de5e:	2b00      	cmp	r3, #0
 801de60:	f340 80f6 	ble.w	801e050 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801de64:	ee30 0a04 	vadd.f32	s0, s0, s8
 801de68:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801de6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801de70:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801de72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de76:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de7e:	eef0 6a62 	vmov.f32	s13, s5
 801de82:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de8e:	ee16 4a90 	vmov	r4, s13
 801de92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de96:	eef0 6a43 	vmov.f32	s13, s6
 801de9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de9e:	ee12 2a90 	vmov	r2, s5
 801dea2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dea6:	fb92 f3f3 	sdiv	r3, r2, r3
 801deaa:	ee13 2a10 	vmov	r2, s6
 801deae:	931f      	str	r3, [sp, #124]	@ 0x7c
 801deb0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801deb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801deb6:	9320      	str	r3, [sp, #128]	@ 0x80
 801deb8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801deba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801debc:	3b01      	subs	r3, #1
 801debe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dec2:	930a      	str	r3, [sp, #40]	@ 0x28
 801dec4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dec6:	ee16 6a90 	vmov	r6, s13
 801deca:	bf14      	ite	ne
 801decc:	461d      	movne	r5, r3
 801dece:	4615      	moveq	r5, r2
 801ded0:	eeb0 3a67 	vmov.f32	s6, s15
 801ded4:	eef0 2a47 	vmov.f32	s5, s14
 801ded8:	e6b0      	b.n	801dc3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801deda:	f111 0a01 	adds.w	sl, r1, #1
 801dede:	d487      	bmi.n	801ddf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dee0:	45d6      	cmp	lr, sl
 801dee2:	db85      	blt.n	801ddf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dee4:	f110 0a01 	adds.w	sl, r0, #1
 801dee8:	d482      	bmi.n	801ddf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801deea:	4553      	cmp	r3, sl
 801deec:	db80      	blt.n	801ddf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801deee:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801def0:	9101      	str	r1, [sp, #4]
 801def2:	b21b      	sxth	r3, r3
 801def4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801def8:	9300      	str	r3, [sp, #0]
 801defa:	e9cd c704 	strd	ip, r7, [sp, #16]
 801defe:	fa0f f38e 	sxth.w	r3, lr
 801df02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801df04:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801df06:	4641      	mov	r1, r8
 801df08:	f7ff fdb4 	bl	801da74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801df0c:	e770      	b.n	801ddf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801df0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801df10:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801df12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df16:	1430      	asrs	r0, r6, #16
 801df18:	1423      	asrs	r3, r4, #16
 801df1a:	fb01 3000 	mla	r0, r1, r0, r3
 801df1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801df20:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801df24:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801df28:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801df2c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801df30:	8858      	ldrh	r0, [r3, #2]
 801df32:	f1be 0f00 	cmp.w	lr, #0
 801df36:	d00b      	beq.n	801df50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801df38:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801df3c:	3901      	subs	r1, #1
 801df3e:	0049      	lsls	r1, r1, #1
 801df40:	3102      	adds	r1, #2
 801df42:	eb03 0b01 	add.w	fp, r3, r1
 801df46:	5a5b      	ldrh	r3, [r3, r1]
 801df48:	930e      	str	r3, [sp, #56]	@ 0x38
 801df4a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801df4e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801df50:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801df54:	fb12 f30e 	smulbb	r3, r2, lr
 801df58:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801df5c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801df60:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801df64:	10db      	asrs	r3, r3, #3
 801df66:	ea41 010c 	orr.w	r1, r1, ip
 801df6a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801df6e:	f1ce 0c10 	rsb	ip, lr, #16
 801df72:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801df76:	ebac 0c02 	sub.w	ip, ip, r2
 801df7a:	ea4b 0000 	orr.w	r0, fp, r0
 801df7e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801df82:	4350      	muls	r0, r2
 801df84:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801df86:	9f08      	ldr	r7, [sp, #32]
 801df88:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801df8c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801df90:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801df94:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801df98:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801df9a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801df9c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dfa0:	0412      	lsls	r2, r2, #16
 801dfa2:	ea4b 0101 	orr.w	r1, fp, r1
 801dfa6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dfaa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dfae:	fb03 c101 	mla	r1, r3, r1, ip
 801dfb2:	4302      	orrs	r2, r0
 801dfb4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dfb8:	fb03 1202 	mla	r2, r3, r2, r1
 801dfbc:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801dfc0:	0952      	lsrs	r2, r2, #5
 801dfc2:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801dfc6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801dfca:	f8b9 2000 	ldrh.w	r2, [r9]
 801dfce:	ea4b 0303 	orr.w	r3, fp, r3
 801dfd2:	b29b      	uxth	r3, r3
 801dfd4:	1211      	asrs	r1, r2, #8
 801dfd6:	1218      	asrs	r0, r3, #8
 801dfd8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dfdc:	fb11 f107 	smulbb	r1, r1, r7
 801dfe0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801dfe4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dfe8:	00d2      	lsls	r2, r2, #3
 801dfea:	fb00 100a 	mla	r0, r0, sl, r1
 801dfee:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801dff2:	10d9      	asrs	r1, r3, #3
 801dff4:	b2d2      	uxtb	r2, r2
 801dff6:	00db      	lsls	r3, r3, #3
 801dff8:	fb1c fc07 	smulbb	ip, ip, r7
 801dffc:	fb12 f207 	smulbb	r2, r2, r7
 801e000:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e004:	b2db      	uxtb	r3, r3
 801e006:	b280      	uxth	r0, r0
 801e008:	fb01 c10a 	mla	r1, r1, sl, ip
 801e00c:	fb03 230a 	mla	r3, r3, sl, r2
 801e010:	b29b      	uxth	r3, r3
 801e012:	b289      	uxth	r1, r1
 801e014:	1c42      	adds	r2, r0, #1
 801e016:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e01a:	f101 0c01 	add.w	ip, r1, #1
 801e01e:	1c5a      	adds	r2, r3, #1
 801e020:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e024:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e028:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e02a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e02e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e032:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e036:	4310      	orrs	r0, r2
 801e038:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e03c:	441c      	add	r4, r3
 801e03e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e040:	ea40 000c 	orr.w	r0, r0, ip
 801e044:	f829 0b02 	strh.w	r0, [r9], #2
 801e048:	441e      	add	r6, r3
 801e04a:	f108 38ff 	add.w	r8, r8, #4294967295
 801e04e:	e6fc      	b.n	801de4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e050:	b013      	add	sp, #76	@ 0x4c
 801e052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e056 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e056:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e05a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e05e:	fb0e 4703 	mla	r7, lr, r3, r4
 801e062:	f1be 0f00 	cmp.w	lr, #0
 801e066:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e06a:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801e06e:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801e072:	8808      	ldrh	r0, [r1, #0]
 801e074:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e078:	db60      	blt.n	801e13c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e07a:	45f1      	cmp	r9, lr
 801e07c:	dd5e      	ble.n	801e13c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e07e:	2c00      	cmp	r4, #0
 801e080:	db5a      	blt.n	801e138 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e082:	42a3      	cmp	r3, r4
 801e084:	dd58      	ble.n	801e138 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e086:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e08a:	1c62      	adds	r2, r4, #1
 801e08c:	d459      	bmi.n	801e142 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e08e:	4293      	cmp	r3, r2
 801e090:	dd57      	ble.n	801e142 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e092:	2d00      	cmp	r5, #0
 801e094:	d055      	beq.n	801e142 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e096:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e09a:	f11e 0e01 	adds.w	lr, lr, #1
 801e09e:	d454      	bmi.n	801e14a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e0a0:	45f1      	cmp	r9, lr
 801e0a2:	dd52      	ble.n	801e14a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e0a4:	2e00      	cmp	r6, #0
 801e0a6:	d050      	beq.n	801e14a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e0a8:	2c00      	cmp	r4, #0
 801e0aa:	db4c      	blt.n	801e146 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e0ac:	42a3      	cmp	r3, r4
 801e0ae:	dd4a      	ble.n	801e146 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e0b0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e0b4:	3401      	adds	r4, #1
 801e0b6:	d405      	bmi.n	801e0c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e0b8:	42a3      	cmp	r3, r4
 801e0ba:	dd03      	ble.n	801e0c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e0bc:	b115      	cbz	r5, 801e0c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e0be:	3301      	adds	r3, #1
 801e0c0:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e0c4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e0c8:	fb15 f406 	smulbb	r4, r5, r6
 801e0cc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e0d0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e0d4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e0d8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e0dc:	ea43 0c0c 	orr.w	ip, r3, ip
 801e0e0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e0e4:	f1c6 0310 	rsb	r3, r6, #16
 801e0e8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e0ec:	1b5b      	subs	r3, r3, r5
 801e0ee:	ea4e 0707 	orr.w	r7, lr, r7
 801e0f2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e0f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e0fa:	437d      	muls	r5, r7
 801e0fc:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e100:	0403      	lsls	r3, r0, #16
 801e102:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e106:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e10a:	4318      	orrs	r0, r3
 801e10c:	0413      	lsls	r3, r2, #16
 801e10e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e112:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e116:	4313      	orrs	r3, r2
 801e118:	fb04 c000 	mla	r0, r4, r0, ip
 801e11c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e120:	fb06 0003 	mla	r0, r6, r3, r0
 801e124:	0d43      	lsrs	r3, r0, #21
 801e126:	0940      	lsrs	r0, r0, #5
 801e128:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e12c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e130:	4318      	orrs	r0, r3
 801e132:	8008      	strh	r0, [r1, #0]
 801e134:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e138:	4684      	mov	ip, r0
 801e13a:	e7a6      	b.n	801e08a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e13c:	4607      	mov	r7, r0
 801e13e:	4684      	mov	ip, r0
 801e140:	e7ab      	b.n	801e09a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e142:	4607      	mov	r7, r0
 801e144:	e7a9      	b.n	801e09a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e146:	4602      	mov	r2, r0
 801e148:	e7b4      	b.n	801e0b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e14a:	4602      	mov	r2, r0
 801e14c:	e7ba      	b.n	801e0c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e14e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e14e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e152:	b08f      	sub	sp, #60	@ 0x3c
 801e154:	461d      	mov	r5, r3
 801e156:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e158:	920c      	str	r2, [sp, #48]	@ 0x30
 801e15a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801e15e:	9107      	str	r1, [sp, #28]
 801e160:	6859      	ldr	r1, [r3, #4]
 801e162:	681b      	ldr	r3, [r3, #0]
 801e164:	900d      	str	r0, [sp, #52]	@ 0x34
 801e166:	fb01 2707 	mla	r7, r1, r7, r2
 801e16a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e16e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e170:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801e174:	f8d3 8000 	ldr.w	r8, [r3]
 801e178:	9b07      	ldr	r3, [sp, #28]
 801e17a:	2b00      	cmp	r3, #0
 801e17c:	dc03      	bgt.n	801e186 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e17e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e180:	2b00      	cmp	r3, #0
 801e182:	f340 8181 	ble.w	801e488 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e186:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e188:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e18c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e190:	1e48      	subs	r0, r1, #1
 801e192:	f102 3cff 	add.w	ip, r2, #4294967295
 801e196:	2d00      	cmp	r5, #0
 801e198:	f340 809b 	ble.w	801e2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e19c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e1a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e1a4:	d406      	bmi.n	801e1b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e1a6:	4586      	cmp	lr, r0
 801e1a8:	da04      	bge.n	801e1b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e1aa:	2b00      	cmp	r3, #0
 801e1ac:	db02      	blt.n	801e1b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e1ae:	4563      	cmp	r3, ip
 801e1b0:	f2c0 8090 	blt.w	801e2d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e1b4:	f11e 0e01 	adds.w	lr, lr, #1
 801e1b8:	f100 8084 	bmi.w	801e2c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e1bc:	4571      	cmp	r1, lr
 801e1be:	f2c0 8081 	blt.w	801e2c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e1c2:	3301      	adds	r3, #1
 801e1c4:	d47e      	bmi.n	801e2c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e1c6:	429a      	cmp	r2, r3
 801e1c8:	db7c      	blt.n	801e2c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e1ca:	46aa      	mov	sl, r5
 801e1cc:	46b9      	mov	r9, r7
 801e1ce:	f1ba 0f00 	cmp.w	sl, #0
 801e1d2:	f340 8099 	ble.w	801e308 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e1d6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e1d8:	1421      	asrs	r1, r4, #16
 801e1da:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e1de:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e1e2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e1e6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e1ea:	f100 80d0 	bmi.w	801e38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e1ee:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e1f2:	4559      	cmp	r1, fp
 801e1f4:	f280 80cb 	bge.w	801e38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e1f8:	2800      	cmp	r0, #0
 801e1fa:	f2c0 80c8 	blt.w	801e38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e1fe:	f103 3bff 	add.w	fp, r3, #4294967295
 801e202:	4558      	cmp	r0, fp
 801e204:	f280 80c3 	bge.w	801e38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e208:	fa0f fe8e 	sxth.w	lr, lr
 801e20c:	fb00 110e 	mla	r1, r0, lr, r1
 801e210:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e214:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e218:	8841      	ldrh	r1, [r0, #2]
 801e21a:	f1bc 0f00 	cmp.w	ip, #0
 801e21e:	d00b      	beq.n	801e238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e220:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801e224:	3b01      	subs	r3, #1
 801e226:	005b      	lsls	r3, r3, #1
 801e228:	3302      	adds	r3, #2
 801e22a:	eb00 0e03 	add.w	lr, r0, r3
 801e22e:	5ac3      	ldrh	r3, [r0, r3]
 801e230:	9308      	str	r3, [sp, #32]
 801e232:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e236:	9309      	str	r3, [sp, #36]	@ 0x24
 801e238:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e23c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e240:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e244:	ea40 000b 	orr.w	r0, r0, fp
 801e248:	fb12 f30c 	smulbb	r3, r2, ip
 801e24c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e250:	10db      	asrs	r3, r3, #3
 801e252:	f1cc 0e10 	rsb	lr, ip, #16
 801e256:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e25a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e25e:	ebae 0e02 	sub.w	lr, lr, r2
 801e262:	ea4b 0101 	orr.w	r1, fp, r1
 801e266:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e26a:	4351      	muls	r1, r2
 801e26c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e26e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e272:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e276:	0410      	lsls	r0, r2, #16
 801e278:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e27c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e280:	4310      	orrs	r0, r2
 801e282:	9a08      	ldr	r2, [sp, #32]
 801e284:	9908      	ldr	r1, [sp, #32]
 801e286:	0412      	lsls	r2, r2, #16
 801e288:	fb03 e000 	mla	r0, r3, r0, lr
 801e28c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e290:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e294:	ea42 020e 	orr.w	r2, r2, lr
 801e298:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e29c:	fb03 0302 	mla	r3, r3, r2, r0
 801e2a0:	0d5a      	lsrs	r2, r3, #21
 801e2a2:	095b      	lsrs	r3, r3, #5
 801e2a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e2a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e2ac:	4313      	orrs	r3, r2
 801e2ae:	f8a9 3000 	strh.w	r3, [r9]
 801e2b2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e2b4:	441c      	add	r4, r3
 801e2b6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e2b8:	f109 0902 	add.w	r9, r9, #2
 801e2bc:	441e      	add	r6, r3
 801e2be:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e2c2:	e784      	b.n	801e1ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e2c4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e2c6:	441c      	add	r4, r3
 801e2c8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e2ca:	3d01      	subs	r5, #1
 801e2cc:	441e      	add	r6, r3
 801e2ce:	3702      	adds	r7, #2
 801e2d0:	e761      	b.n	801e196 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e2d2:	d01d      	beq.n	801e310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e2d4:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e2d6:	1e6b      	subs	r3, r5, #1
 801e2d8:	fb00 4003 	mla	r0, r0, r3, r4
 801e2dc:	1400      	asrs	r0, r0, #16
 801e2de:	f53f af74 	bmi.w	801e1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2e2:	3901      	subs	r1, #1
 801e2e4:	4288      	cmp	r0, r1
 801e2e6:	f6bf af70 	bge.w	801e1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2ea:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801e2ec:	fb01 6303 	mla	r3, r1, r3, r6
 801e2f0:	141b      	asrs	r3, r3, #16
 801e2f2:	f53f af6a 	bmi.w	801e1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2f6:	3a01      	subs	r2, #1
 801e2f8:	4293      	cmp	r3, r2
 801e2fa:	f6bf af66 	bge.w	801e1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2fe:	46a9      	mov	r9, r5
 801e300:	46ba      	mov	sl, r7
 801e302:	f1b9 0f00 	cmp.w	r9, #0
 801e306:	dc5a      	bgt.n	801e3be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e308:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e30c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e310:	9b07      	ldr	r3, [sp, #28]
 801e312:	2b00      	cmp	r3, #0
 801e314:	f340 80b8 	ble.w	801e488 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e318:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e31c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e320:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e324:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e326:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e32a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e32e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e332:	eef0 6a62 	vmov.f32	s13, s5
 801e336:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e33a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e33e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e342:	ee16 4a90 	vmov	r4, s13
 801e346:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e34a:	eef0 6a43 	vmov.f32	s13, s6
 801e34e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e352:	ee12 2a90 	vmov	r2, s5
 801e356:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e35a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e35e:	ee13 2a10 	vmov	r2, s6
 801e362:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e364:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e366:	fb92 f3f3 	sdiv	r3, r2, r3
 801e36a:	931c      	str	r3, [sp, #112]	@ 0x70
 801e36c:	9b07      	ldr	r3, [sp, #28]
 801e36e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e370:	3b01      	subs	r3, #1
 801e372:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e376:	9307      	str	r3, [sp, #28]
 801e378:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e37a:	ee16 6a90 	vmov	r6, s13
 801e37e:	bf14      	ite	ne
 801e380:	461d      	movne	r5, r3
 801e382:	4615      	moveq	r5, r2
 801e384:	eeb0 3a67 	vmov.f32	s6, s15
 801e388:	eef0 2a47 	vmov.f32	s5, s14
 801e38c:	e6f4      	b.n	801e178 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e38e:	f111 0b01 	adds.w	fp, r1, #1
 801e392:	d48e      	bmi.n	801e2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e394:	45de      	cmp	lr, fp
 801e396:	db8c      	blt.n	801e2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e398:	f110 0b01 	adds.w	fp, r0, #1
 801e39c:	d489      	bmi.n	801e2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e39e:	455b      	cmp	r3, fp
 801e3a0:	db87      	blt.n	801e2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3a2:	b21b      	sxth	r3, r3
 801e3a4:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e3a8:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e3ac:	9300      	str	r3, [sp, #0]
 801e3ae:	4642      	mov	r2, r8
 801e3b0:	fa0f f38e 	sxth.w	r3, lr
 801e3b4:	4649      	mov	r1, r9
 801e3b6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e3b8:	f7ff fe4d 	bl	801e056 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e3bc:	e779      	b.n	801e2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e3c0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e3c4:	1420      	asrs	r0, r4, #16
 801e3c6:	1431      	asrs	r1, r6, #16
 801e3c8:	fb03 0101 	mla	r1, r3, r1, r0
 801e3cc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e3d0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e3d4:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e3d8:	8841      	ldrh	r1, [r0, #2]
 801e3da:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e3de:	f1be 0f00 	cmp.w	lr, #0
 801e3e2:	d00b      	beq.n	801e3fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e3e4:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e3e8:	3b01      	subs	r3, #1
 801e3ea:	005b      	lsls	r3, r3, #1
 801e3ec:	3302      	adds	r3, #2
 801e3ee:	eb00 0b03 	add.w	fp, r0, r3
 801e3f2:	5ac3      	ldrh	r3, [r0, r3]
 801e3f4:	930a      	str	r3, [sp, #40]	@ 0x28
 801e3f6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e3fa:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e3fc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e400:	fb12 f30e 	smulbb	r3, r2, lr
 801e404:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e408:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e40c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e410:	10db      	asrs	r3, r3, #3
 801e412:	ea40 000c 	orr.w	r0, r0, ip
 801e416:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e41a:	f1ce 0c10 	rsb	ip, lr, #16
 801e41e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e422:	ebac 0c02 	sub.w	ip, ip, r2
 801e426:	ea4b 0101 	orr.w	r1, fp, r1
 801e42a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e42e:	4351      	muls	r1, r2
 801e430:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e432:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e436:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e43a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e43e:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e442:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e444:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e446:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e44a:	0412      	lsls	r2, r2, #16
 801e44c:	ea4b 0000 	orr.w	r0, fp, r0
 801e450:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e454:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e458:	fb03 c000 	mla	r0, r3, r0, ip
 801e45c:	ea42 0b0b 	orr.w	fp, r2, fp
 801e460:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e464:	fb03 000b 	mla	r0, r3, fp, r0
 801e468:	0d43      	lsrs	r3, r0, #21
 801e46a:	0940      	lsrs	r0, r0, #5
 801e46c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e470:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e474:	4318      	orrs	r0, r3
 801e476:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e478:	f82a 0b02 	strh.w	r0, [sl], #2
 801e47c:	441c      	add	r4, r3
 801e47e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e480:	f109 39ff 	add.w	r9, r9, #4294967295
 801e484:	441e      	add	r6, r3
 801e486:	e73c      	b.n	801e302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e488:	b00f      	add	sp, #60	@ 0x3c
 801e48a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e48e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e48e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e492:	b085      	sub	sp, #20
 801e494:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e498:	9102      	str	r1, [sp, #8]
 801e49a:	2c00      	cmp	r4, #0
 801e49c:	fb04 7103 	mla	r1, r4, r3, r7
 801e4a0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e4a4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e4a8:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e4ac:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e4b0:	f2c0 811b 	blt.w	801e6ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e4b4:	45a6      	cmp	lr, r4
 801e4b6:	f340 8118 	ble.w	801e6ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e4ba:	2f00      	cmp	r7, #0
 801e4bc:	f2c0 8113 	blt.w	801e6e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e4c0:	42bb      	cmp	r3, r7
 801e4c2:	f340 8110 	ble.w	801e6e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e4c6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e4ca:	1c7a      	adds	r2, r7, #1
 801e4cc:	f100 8110 	bmi.w	801e6f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e4d0:	4293      	cmp	r3, r2
 801e4d2:	f340 810d 	ble.w	801e6f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e4d6:	2e00      	cmp	r6, #0
 801e4d8:	f000 810c 	beq.w	801e6f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e4dc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e4e0:	3401      	adds	r4, #1
 801e4e2:	f100 810b 	bmi.w	801e6fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e4e6:	45a6      	cmp	lr, r4
 801e4e8:	f340 8108 	ble.w	801e6fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e4ec:	2800      	cmp	r0, #0
 801e4ee:	f000 8108 	beq.w	801e702 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e4f2:	2f00      	cmp	r7, #0
 801e4f4:	f2c0 8100 	blt.w	801e6f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e4f8:	42bb      	cmp	r3, r7
 801e4fa:	f340 80fd 	ble.w	801e6f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e4fe:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e502:	3701      	adds	r7, #1
 801e504:	f100 8100 	bmi.w	801e708 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e508:	42bb      	cmp	r3, r7
 801e50a:	f340 80fd 	ble.w	801e708 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e50e:	2e00      	cmp	r6, #0
 801e510:	f000 80fc 	beq.w	801e70c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e514:	3301      	adds	r3, #1
 801e516:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e51a:	b2b6      	uxth	r6, r6
 801e51c:	b280      	uxth	r0, r0
 801e51e:	fb00 fe06 	mul.w	lr, r0, r6
 801e522:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e526:	0136      	lsls	r6, r6, #4
 801e528:	eba6 070e 	sub.w	r7, r6, lr
 801e52c:	b280      	uxth	r0, r0
 801e52e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e532:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e536:	b2bf      	uxth	r7, r7
 801e538:	1a1b      	subs	r3, r3, r0
 801e53a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e53e:	b29b      	uxth	r3, r3
 801e540:	fb0a f607 	mul.w	r6, sl, r7
 801e544:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e548:	fb0b 6603 	mla	r6, fp, r3, r6
 801e54c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e550:	fb00 6609 	mla	r6, r0, r9, r6
 801e554:	fb0e 6608 	mla	r6, lr, r8, r6
 801e558:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e55c:	9600      	str	r6, [sp, #0]
 801e55e:	2e00      	cmp	r6, #0
 801e560:	f000 80be 	beq.w	801e6e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e564:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e568:	fb0b fc0c 	mul.w	ip, fp, ip
 801e56c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e570:	fb0b f505 	mul.w	r5, fp, r5
 801e574:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e578:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e57c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e580:	44dc      	add	ip, fp
 801e582:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e586:	9501      	str	r5, [sp, #4]
 801e588:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e58c:	9503      	str	r5, [sp, #12]
 801e58e:	9d01      	ldr	r5, [sp, #4]
 801e590:	9e02      	ldr	r6, [sp, #8]
 801e592:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e596:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e59a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e59e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e5a2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e5a6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e5aa:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e5ae:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e5b2:	4465      	add	r5, ip
 801e5b4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e5b8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e5bc:	fb09 fc0c 	mul.w	ip, r9, ip
 801e5c0:	fb09 f904 	mul.w	r9, r9, r4
 801e5c4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e5c8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e5cc:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e5d0:	fb08 f404 	mul.w	r4, r8, r4
 801e5d4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e5d8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e5dc:	fb08 f802 	mul.w	r8, r8, r2
 801e5e0:	fb0a fa01 	mul.w	sl, sl, r1
 801e5e4:	0a22      	lsrs	r2, r4, #8
 801e5e6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e5ea:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e5ee:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e5f2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e5f6:	4414      	add	r4, r2
 801e5f8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e5fc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e600:	0a2d      	lsrs	r5, r5, #8
 801e602:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e606:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e60a:	9a03      	ldr	r2, [sp, #12]
 801e60c:	8836      	ldrh	r6, [r6, #0]
 801e60e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e612:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e616:	437d      	muls	r5, r7
 801e618:	4461      	add	r1, ip
 801e61a:	0a24      	lsrs	r4, r4, #8
 801e61c:	fb02 5503 	mla	r5, r2, r3, r5
 801e620:	0a09      	lsrs	r1, r1, #8
 801e622:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e626:	fb04 540e 	mla	r4, r4, lr, r5
 801e62a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e62e:	fb01 4100 	mla	r1, r1, r0, r4
 801e632:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e636:	0a09      	lsrs	r1, r1, #8
 801e638:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e63c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e640:	fb07 f70a 	mul.w	r7, r7, sl
 801e644:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e648:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e64c:	fb03 7101 	mla	r1, r3, r1, r7
 801e650:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e654:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e658:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e65c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e660:	fb00 e101 	mla	r1, r0, r1, lr
 801e664:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e668:	9a00      	ldr	r2, [sp, #0]
 801e66a:	b287      	uxth	r7, r0
 801e66c:	437a      	muls	r2, r7
 801e66e:	0a09      	lsrs	r1, r1, #8
 801e670:	1c53      	adds	r3, r2, #1
 801e672:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e676:	4321      	orrs	r1, r4
 801e678:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e67c:	1235      	asrs	r5, r6, #8
 801e67e:	0c0a      	lsrs	r2, r1, #16
 801e680:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e684:	b2db      	uxtb	r3, r3
 801e686:	fb12 f207 	smulbb	r2, r2, r7
 801e68a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e68e:	fb05 2503 	mla	r5, r5, r3, r2
 801e692:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e696:	10f2      	asrs	r2, r6, #3
 801e698:	b2c8      	uxtb	r0, r1
 801e69a:	00f6      	lsls	r6, r6, #3
 801e69c:	fb14 f407 	smulbb	r4, r4, r7
 801e6a0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e6a4:	b2f6      	uxtb	r6, r6
 801e6a6:	fb10 f007 	smulbb	r0, r0, r7
 801e6aa:	fb02 4203 	mla	r2, r2, r3, r4
 801e6ae:	b2ad      	uxth	r5, r5
 801e6b0:	fb06 0303 	mla	r3, r6, r3, r0
 801e6b4:	b299      	uxth	r1, r3
 801e6b6:	b294      	uxth	r4, r2
 801e6b8:	1c6b      	adds	r3, r5, #1
 801e6ba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e6be:	1c62      	adds	r2, r4, #1
 801e6c0:	1c4b      	adds	r3, r1, #1
 801e6c2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e6c6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e6ca:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e6ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e6d2:	0952      	lsrs	r2, r2, #5
 801e6d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e6d8:	432b      	orrs	r3, r5
 801e6da:	4313      	orrs	r3, r2
 801e6dc:	9a02      	ldr	r2, [sp, #8]
 801e6de:	8013      	strh	r3, [r2, #0]
 801e6e0:	b005      	add	sp, #20
 801e6e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6e6:	2500      	movs	r5, #0
 801e6e8:	e6ef      	b.n	801e4ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e6ea:	2100      	movs	r1, #0
 801e6ec:	460d      	mov	r5, r1
 801e6ee:	e6f7      	b.n	801e4e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e6f0:	2100      	movs	r1, #0
 801e6f2:	e6f5      	b.n	801e4e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e6f4:	4631      	mov	r1, r6
 801e6f6:	e6f3      	b.n	801e4e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e6f8:	2400      	movs	r4, #0
 801e6fa:	e702      	b.n	801e502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e6fc:	2200      	movs	r2, #0
 801e6fe:	4614      	mov	r4, r2
 801e700:	e70b      	b.n	801e51a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e702:	4602      	mov	r2, r0
 801e704:	4604      	mov	r4, r0
 801e706:	e708      	b.n	801e51a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e708:	2200      	movs	r2, #0
 801e70a:	e706      	b.n	801e51a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e70c:	4632      	mov	r2, r6
 801e70e:	e704      	b.n	801e51a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e710 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e714:	b09d      	sub	sp, #116	@ 0x74
 801e716:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e71a:	9219      	str	r2, [sp, #100]	@ 0x64
 801e71c:	9307      	str	r3, [sp, #28]
 801e71e:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e720:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e724:	931a      	str	r3, [sp, #104]	@ 0x68
 801e726:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e728:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e72c:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e72e:	6850      	ldr	r0, [r2, #4]
 801e730:	6812      	ldr	r2, [r2, #0]
 801e732:	fb00 1303 	mla	r3, r0, r3, r1
 801e736:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e73a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e73c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e73e:	681b      	ldr	r3, [r3, #0]
 801e740:	9310      	str	r3, [sp, #64]	@ 0x40
 801e742:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e746:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e748:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e74a:	2b00      	cmp	r3, #0
 801e74c:	dc03      	bgt.n	801e756 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e74e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e750:	2b00      	cmp	r3, #0
 801e752:	f340 8375 	ble.w	801ee40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e756:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e758:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e75c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e760:	1e48      	subs	r0, r1, #1
 801e762:	1e57      	subs	r7, r2, #1
 801e764:	9b07      	ldr	r3, [sp, #28]
 801e766:	2b00      	cmp	r3, #0
 801e768:	f340 818e 	ble.w	801ea88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e76c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e770:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e774:	d406      	bmi.n	801e784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e776:	4584      	cmp	ip, r0
 801e778:	da04      	bge.n	801e784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e77a:	2b00      	cmp	r3, #0
 801e77c:	db02      	blt.n	801e784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e77e:	42bb      	cmp	r3, r7
 801e780:	f2c0 8183 	blt.w	801ea8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e784:	f11c 0c01 	adds.w	ip, ip, #1
 801e788:	f100 8173 	bmi.w	801ea72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e78c:	4561      	cmp	r1, ip
 801e78e:	f2c0 8170 	blt.w	801ea72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e792:	3301      	adds	r3, #1
 801e794:	f100 816d 	bmi.w	801ea72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e798:	429a      	cmp	r2, r3
 801e79a:	f2c0 816a 	blt.w	801ea72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e79e:	9b07      	ldr	r3, [sp, #28]
 801e7a0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e7a2:	9318      	str	r3, [sp, #96]	@ 0x60
 801e7a4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e7a6:	2b00      	cmp	r3, #0
 801e7a8:	f340 818c 	ble.w	801eac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e7ac:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801e7ae:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e7b0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e7b4:	689b      	ldr	r3, [r3, #8]
 801e7b6:	1422      	asrs	r2, r4, #16
 801e7b8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e7bc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e7c0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e7c4:	f100 81cd 	bmi.w	801eb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7c8:	f103 38ff 	add.w	r8, r3, #4294967295
 801e7cc:	4542      	cmp	r2, r8
 801e7ce:	f280 81c8 	bge.w	801eb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7d2:	f1bc 0f00 	cmp.w	ip, #0
 801e7d6:	f2c0 81c4 	blt.w	801eb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7da:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e7de:	45c4      	cmp	ip, r8
 801e7e0:	f280 81bf 	bge.w	801eb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7e4:	b21b      	sxth	r3, r3
 801e7e6:	fb0c 2203 	mla	r2, ip, r3, r2
 801e7ea:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e7ec:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e7f0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e7f4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e7f8:	2800      	cmp	r0, #0
 801e7fa:	f000 81a9 	beq.w	801eb50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e7fe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e802:	950c      	str	r5, [sp, #48]	@ 0x30
 801e804:	0e2d      	lsrs	r5, r5, #24
 801e806:	9513      	str	r5, [sp, #76]	@ 0x4c
 801e808:	b181      	cbz	r1, 801e82c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e80a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801e80e:	3b01      	subs	r3, #1
 801e810:	009b      	lsls	r3, r3, #2
 801e812:	3304      	adds	r3, #4
 801e814:	eb08 0c03 	add.w	ip, r8, r3
 801e818:	f858 3003 	ldr.w	r3, [r8, r3]
 801e81c:	9308      	str	r3, [sp, #32]
 801e81e:	0e1b      	lsrs	r3, r3, #24
 801e820:	9311      	str	r3, [sp, #68]	@ 0x44
 801e822:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e826:	930d      	str	r3, [sp, #52]	@ 0x34
 801e828:	0e1b      	lsrs	r3, r3, #24
 801e82a:	9314      	str	r3, [sp, #80]	@ 0x50
 801e82c:	b280      	uxth	r0, r0
 801e82e:	b289      	uxth	r1, r1
 801e830:	fb00 f901 	mul.w	r9, r0, r1
 801e834:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e838:	0100      	lsls	r0, r0, #4
 801e83a:	eba0 0809 	sub.w	r8, r0, r9
 801e83e:	b289      	uxth	r1, r1
 801e840:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e844:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e846:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e848:	fa1f f888 	uxth.w	r8, r8
 801e84c:	1a5b      	subs	r3, r3, r1
 801e84e:	b29b      	uxth	r3, r3
 801e850:	fb08 f000 	mul.w	r0, r8, r0
 801e854:	fb03 000e 	mla	r0, r3, lr, r0
 801e858:	fb01 0005 	mla	r0, r1, r5, r0
 801e85c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e85e:	fb09 0005 	mla	r0, r9, r5, r0
 801e862:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e866:	2800      	cmp	r0, #0
 801e868:	f000 80fa 	beq.w	801ea60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e86c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e870:	d01b      	beq.n	801e8aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e872:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e876:	fb0e fa0a 	mul.w	sl, lr, sl
 801e87a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e87e:	fb0e fe02 	mul.w	lr, lr, r2
 801e882:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e886:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e88a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e88e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e892:	4452      	add	r2, sl
 801e894:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e898:	0a12      	lsrs	r2, r2, #8
 801e89a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e89e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e8a2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e8a6:	ea42 020c 	orr.w	r2, r2, ip
 801e8aa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e8ac:	2dff      	cmp	r5, #255	@ 0xff
 801e8ae:	d021      	beq.n	801e8f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e8b0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e8b2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e8b6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e8b8:	fb05 fb0b 	mul.w	fp, r5, fp
 801e8bc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e8be:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e8c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e8c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8c8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e8cc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8d0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e8d4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e8d8:	44de      	add	lr, fp
 801e8da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e8de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e8e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8e6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8ea:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8ee:	ea4e 050a 	orr.w	r5, lr, sl
 801e8f2:	950c      	str	r5, [sp, #48]	@ 0x30
 801e8f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e8f6:	2dff      	cmp	r5, #255	@ 0xff
 801e8f8:	d021      	beq.n	801e93e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e8fa:	9d08      	ldr	r5, [sp, #32]
 801e8fc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e900:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e902:	fb05 fb0b 	mul.w	fp, r5, fp
 801e906:	9d08      	ldr	r5, [sp, #32]
 801e908:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e90c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e90e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e912:	fb05 fa0a 	mul.w	sl, r5, sl
 801e916:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e91a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e91e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e922:	44de      	add	lr, fp
 801e924:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e928:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e92c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e930:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e934:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e938:	ea4e 050a 	orr.w	r5, lr, sl
 801e93c:	9508      	str	r5, [sp, #32]
 801e93e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e940:	2dff      	cmp	r5, #255	@ 0xff
 801e942:	d021      	beq.n	801e988 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e944:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e946:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e94a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e94c:	fb05 fb0b 	mul.w	fp, r5, fp
 801e950:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e952:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e956:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e958:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e95c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e960:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e964:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e968:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e96c:	44de      	add	lr, fp
 801e96e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e972:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e976:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e97a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e97e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e982:	ea4e 050a 	orr.w	r5, lr, sl
 801e986:	950d      	str	r5, [sp, #52]	@ 0x34
 801e988:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e98a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e98e:	9d08      	ldr	r5, [sp, #32]
 801e990:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e994:	fb08 fc0c 	mul.w	ip, r8, ip
 801e998:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e99c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e9a0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e9a2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e9a6:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e9aa:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e9ac:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e9b0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e9b4:	fb08 f80e 	mul.w	r8, r8, lr
 801e9b8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e9bc:	fb03 8202 	mla	r2, r3, r2, r8
 801e9c0:	9b08      	ldr	r3, [sp, #32]
 801e9c2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e9c4:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801e9c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e9ca:	fb01 220a 	mla	r2, r1, sl, r2
 801e9ce:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801e9d2:	fb09 2901 	mla	r9, r9, r1, r2
 801e9d6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e9d8:	883b      	ldrh	r3, [r7, #0]
 801e9da:	4342      	muls	r2, r0
 801e9dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e9e4:	1c50      	adds	r0, r2, #1
 801e9e6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e9ea:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e9ee:	ea4c 0c09 	orr.w	ip, ip, r9
 801e9f2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e9f6:	1219      	asrs	r1, r3, #8
 801e9f8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e9fc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ea00:	b2c0      	uxtb	r0, r0
 801ea02:	fb12 f205 	smulbb	r2, r2, r5
 801ea06:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ea0a:	fb01 2100 	mla	r1, r1, r0, r2
 801ea0e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ea12:	10da      	asrs	r2, r3, #3
 801ea14:	fa5f fc8c 	uxtb.w	ip, ip
 801ea18:	00db      	lsls	r3, r3, #3
 801ea1a:	fb1c fc05 	smulbb	ip, ip, r5
 801ea1e:	b2db      	uxtb	r3, r3
 801ea20:	b289      	uxth	r1, r1
 801ea22:	fb03 c300 	mla	r3, r3, r0, ip
 801ea26:	fa1f fc83 	uxth.w	ip, r3
 801ea2a:	1c4b      	adds	r3, r1, #1
 801ea2c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ea30:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ea34:	fb1e fe05 	smulbb	lr, lr, r5
 801ea38:	f10c 0301 	add.w	r3, ip, #1
 801ea3c:	fb02 e200 	mla	r2, r2, r0, lr
 801ea40:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ea44:	b292      	uxth	r2, r2
 801ea46:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ea4a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ea4e:	430b      	orrs	r3, r1
 801ea50:	1c51      	adds	r1, r2, #1
 801ea52:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ea56:	0952      	lsrs	r2, r2, #5
 801ea58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ea5c:	4313      	orrs	r3, r2
 801ea5e:	803b      	strh	r3, [r7, #0]
 801ea60:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ea62:	441c      	add	r4, r3
 801ea64:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ea66:	441e      	add	r6, r3
 801ea68:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ea6a:	3b01      	subs	r3, #1
 801ea6c:	3702      	adds	r7, #2
 801ea6e:	9318      	str	r3, [sp, #96]	@ 0x60
 801ea70:	e698      	b.n	801e7a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea72:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ea74:	441c      	add	r4, r3
 801ea76:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ea78:	441e      	add	r6, r3
 801ea7a:	9b07      	ldr	r3, [sp, #28]
 801ea7c:	3b01      	subs	r3, #1
 801ea7e:	9307      	str	r3, [sp, #28]
 801ea80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ea82:	3302      	adds	r3, #2
 801ea84:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea86:	e66d      	b.n	801e764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ea88:	d023      	beq.n	801ead2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801ea8a:	9b07      	ldr	r3, [sp, #28]
 801ea8c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801ea8e:	3b01      	subs	r3, #1
 801ea90:	fb00 4003 	mla	r0, r0, r3, r4
 801ea94:	1400      	asrs	r0, r0, #16
 801ea96:	f53f ae82 	bmi.w	801e79e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea9a:	3901      	subs	r1, #1
 801ea9c:	4288      	cmp	r0, r1
 801ea9e:	f6bf ae7e 	bge.w	801e79e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eaa2:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801eaa4:	fb01 6303 	mla	r3, r1, r3, r6
 801eaa8:	141b      	asrs	r3, r3, #16
 801eaaa:	f53f ae78 	bmi.w	801e79e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eaae:	3a01      	subs	r2, #1
 801eab0:	4293      	cmp	r3, r2
 801eab2:	f6bf ae74 	bge.w	801e79e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eab6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801eaba:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801eabe:	f1bb 0f00 	cmp.w	fp, #0
 801eac2:	dc6c      	bgt.n	801eb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801eac4:	9b07      	ldr	r3, [sp, #28]
 801eac6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eaca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eacc:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ead0:	930a      	str	r3, [sp, #40]	@ 0x28
 801ead2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ead4:	2b00      	cmp	r3, #0
 801ead6:	f340 81b3 	ble.w	801ee40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801eada:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eade:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801eae2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eae6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eae8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eaec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eaf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eaf4:	eef0 6a62 	vmov.f32	s13, s5
 801eaf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eafc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb00:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb04:	ee16 4a90 	vmov	r4, s13
 801eb08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb0c:	eef0 6a43 	vmov.f32	s13, s6
 801eb10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb14:	ee12 2a90 	vmov	r2, s5
 801eb18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb20:	ee13 2a10 	vmov	r2, s6
 801eb24:	9329      	str	r3, [sp, #164]	@ 0xa4
 801eb26:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eb28:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb2c:	932a      	str	r3, [sp, #168]	@ 0xa8
 801eb2e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801eb30:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801eb32:	3b01      	subs	r3, #1
 801eb34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb38:	9317      	str	r3, [sp, #92]	@ 0x5c
 801eb3a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eb3c:	bf08      	it	eq
 801eb3e:	4613      	moveq	r3, r2
 801eb40:	ee16 6a90 	vmov	r6, s13
 801eb44:	9307      	str	r3, [sp, #28]
 801eb46:	eeb0 3a67 	vmov.f32	s6, s15
 801eb4a:	eef0 2a47 	vmov.f32	s5, s14
 801eb4e:	e5fb      	b.n	801e748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eb50:	2900      	cmp	r1, #0
 801eb52:	f43f ae6b 	beq.w	801e82c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eb56:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eb5a:	9308      	str	r3, [sp, #32]
 801eb5c:	0e1b      	lsrs	r3, r3, #24
 801eb5e:	9311      	str	r3, [sp, #68]	@ 0x44
 801eb60:	e664      	b.n	801e82c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eb62:	f112 0801 	adds.w	r8, r2, #1
 801eb66:	f53f af7b 	bmi.w	801ea60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb6a:	4543      	cmp	r3, r8
 801eb6c:	f6ff af78 	blt.w	801ea60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb70:	f11c 0801 	adds.w	r8, ip, #1
 801eb74:	f53f af74 	bmi.w	801ea60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb78:	45c6      	cmp	lr, r8
 801eb7a:	f6ff af71 	blt.w	801ea60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb7e:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801eb80:	9201      	str	r2, [sp, #4]
 801eb82:	fa0f f28e 	sxth.w	r2, lr
 801eb86:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801eb8a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801eb8e:	9200      	str	r2, [sp, #0]
 801eb90:	b21b      	sxth	r3, r3
 801eb92:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801eb94:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801eb96:	4639      	mov	r1, r7
 801eb98:	f7ff fc79 	bl	801e48e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801eb9c:	e760      	b.n	801ea60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb9e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801eba0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eba2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eba6:	1427      	asrs	r7, r4, #16
 801eba8:	1433      	asrs	r3, r6, #16
 801ebaa:	fb01 7303 	mla	r3, r1, r3, r7
 801ebae:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801ebb2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ebb6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ebba:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ebbe:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ebc2:	2a00      	cmp	r2, #0
 801ebc4:	f000 8133 	beq.w	801ee2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801ebc8:	687d      	ldr	r5, [r7, #4]
 801ebca:	950e      	str	r5, [sp, #56]	@ 0x38
 801ebcc:	0e2d      	lsrs	r5, r5, #24
 801ebce:	9515      	str	r5, [sp, #84]	@ 0x54
 801ebd0:	b178      	cbz	r0, 801ebf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ebd2:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801ebd6:	3901      	subs	r1, #1
 801ebd8:	0089      	lsls	r1, r1, #2
 801ebda:	3104      	adds	r1, #4
 801ebdc:	eb07 0e01 	add.w	lr, r7, r1
 801ebe0:	5879      	ldr	r1, [r7, r1]
 801ebe2:	9109      	str	r1, [sp, #36]	@ 0x24
 801ebe4:	0e09      	lsrs	r1, r1, #24
 801ebe6:	9112      	str	r1, [sp, #72]	@ 0x48
 801ebe8:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ebec:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ebee:	0e09      	lsrs	r1, r1, #24
 801ebf0:	9116      	str	r1, [sp, #88]	@ 0x58
 801ebf2:	b292      	uxth	r2, r2
 801ebf4:	b280      	uxth	r0, r0
 801ebf6:	fb02 f800 	mul.w	r8, r2, r0
 801ebfa:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ebfe:	0112      	lsls	r2, r2, #4
 801ec00:	eba2 0e08 	sub.w	lr, r2, r8
 801ec04:	b280      	uxth	r0, r0
 801ec06:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ec0a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ec0c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec0e:	fa1f fe8e 	uxth.w	lr, lr
 801ec12:	1a12      	subs	r2, r2, r0
 801ec14:	b292      	uxth	r2, r2
 801ec16:	fb0e f101 	mul.w	r1, lr, r1
 801ec1a:	fb02 110c 	mla	r1, r2, ip, r1
 801ec1e:	fb00 1105 	mla	r1, r0, r5, r1
 801ec22:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ec24:	fb08 1105 	mla	r1, r8, r5, r1
 801ec28:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ec2c:	2900      	cmp	r1, #0
 801ec2e:	f000 80f5 	beq.w	801ee1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ec32:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ec36:	d019      	beq.n	801ec6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801ec38:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ec3c:	fb0c fa0a 	mul.w	sl, ip, sl
 801ec40:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ec44:	fb0c fc03 	mul.w	ip, ip, r3
 801ec48:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec4c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ec50:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ec54:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ec58:	4453      	add	r3, sl
 801ec5a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ec5e:	0a1b      	lsrs	r3, r3, #8
 801ec60:	0a3f      	lsrs	r7, r7, #8
 801ec62:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ec66:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ec6a:	433b      	orrs	r3, r7
 801ec6c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec6e:	2dff      	cmp	r5, #255	@ 0xff
 801ec70:	d020      	beq.n	801ecb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801ec72:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ec74:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ec78:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec7a:	436f      	muls	r7, r5
 801ec7c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ec7e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ec82:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec84:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ec88:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec8c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ec90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec94:	44bc      	add	ip, r7
 801ec96:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ec9a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ec9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eca2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eca6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecaa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ecae:	ea4c 050a 	orr.w	r5, ip, sl
 801ecb2:	950e      	str	r5, [sp, #56]	@ 0x38
 801ecb4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ecb6:	2dff      	cmp	r5, #255	@ 0xff
 801ecb8:	d020      	beq.n	801ecfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ecba:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ecbc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ecc0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ecc2:	436f      	muls	r7, r5
 801ecc4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ecc6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ecca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801eccc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecd0:	fb05 fa0a 	mul.w	sl, r5, sl
 801ecd4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ecd8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecdc:	44bc      	add	ip, r7
 801ecde:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ece2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ece6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecf2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ecf6:	ea4c 050a 	orr.w	r5, ip, sl
 801ecfa:	9509      	str	r5, [sp, #36]	@ 0x24
 801ecfc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ecfe:	2dff      	cmp	r5, #255	@ 0xff
 801ed00:	d020      	beq.n	801ed44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801ed02:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ed04:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ed08:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ed0a:	436f      	muls	r7, r5
 801ed0c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ed0e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ed12:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ed14:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed18:	fb05 fa0a 	mul.w	sl, r5, sl
 801ed1c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ed20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed24:	44bc      	add	ip, r7
 801ed26:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ed2a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed3a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ed3e:	ea4c 050a 	orr.w	r5, ip, sl
 801ed42:	950f      	str	r5, [sp, #60]	@ 0x3c
 801ed44:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ed46:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ed4a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ed4c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ed50:	fb0e f707 	mul.w	r7, lr, r7
 801ed54:	fb02 770c 	mla	r7, r2, ip, r7
 801ed58:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ed5c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ed5e:	fb00 770c 	mla	r7, r0, ip, r7
 801ed62:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ed66:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ed68:	fb08 770c 	mla	r7, r8, ip, r7
 801ed6c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801ed70:	fb0e fe0c 	mul.w	lr, lr, ip
 801ed74:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ed78:	fb02 e303 	mla	r3, r2, r3, lr
 801ed7c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ed7e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ed80:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ed84:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ed86:	fb00 330a 	mla	r3, r0, sl, r3
 801ed8a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ed8e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ed92:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ed94:	f8b9 0000 	ldrh.w	r0, [r9]
 801ed98:	4359      	muls	r1, r3
 801ed9a:	0a3f      	lsrs	r7, r7, #8
 801ed9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eda0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801eda4:	1c4b      	adds	r3, r1, #1
 801eda6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801edaa:	ea47 070c 	orr.w	r7, r7, ip
 801edae:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801edb2:	1202      	asrs	r2, r0, #8
 801edb4:	0c3b      	lsrs	r3, r7, #16
 801edb6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801edba:	b2c9      	uxtb	r1, r1
 801edbc:	fb13 f305 	smulbb	r3, r3, r5
 801edc0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801edc4:	fb02 3201 	mla	r2, r2, r1, r3
 801edc8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801edcc:	10c3      	asrs	r3, r0, #3
 801edce:	b2ff      	uxtb	r7, r7
 801edd0:	00c0      	lsls	r0, r0, #3
 801edd2:	b2c0      	uxtb	r0, r0
 801edd4:	fb17 f705 	smulbb	r7, r7, r5
 801edd8:	fb00 7001 	mla	r0, r0, r1, r7
 801eddc:	b292      	uxth	r2, r2
 801edde:	fb1c fc05 	smulbb	ip, ip, r5
 801ede2:	b280      	uxth	r0, r0
 801ede4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ede8:	fb03 c301 	mla	r3, r3, r1, ip
 801edec:	1c51      	adds	r1, r2, #1
 801edee:	f100 0c01 	add.w	ip, r0, #1
 801edf2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801edf6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801edfa:	b29b      	uxth	r3, r3
 801edfc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee00:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ee04:	ea4c 0202 	orr.w	r2, ip, r2
 801ee08:	f103 0c01 	add.w	ip, r3, #1
 801ee0c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ee10:	095b      	lsrs	r3, r3, #5
 801ee12:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ee16:	431a      	orrs	r2, r3
 801ee18:	f8a9 2000 	strh.w	r2, [r9]
 801ee1c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ee1e:	441c      	add	r4, r3
 801ee20:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ee22:	f109 0902 	add.w	r9, r9, #2
 801ee26:	441e      	add	r6, r3
 801ee28:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ee2c:	e647      	b.n	801eabe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ee2e:	2800      	cmp	r0, #0
 801ee30:	f43f aedf 	beq.w	801ebf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ee34:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801ee38:	9109      	str	r1, [sp, #36]	@ 0x24
 801ee3a:	0e09      	lsrs	r1, r1, #24
 801ee3c:	9112      	str	r1, [sp, #72]	@ 0x48
 801ee3e:	e6d8      	b.n	801ebf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ee40:	b01d      	add	sp, #116	@ 0x74
 801ee42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ee46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee4a:	b085      	sub	sp, #20
 801ee4c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ee50:	9102      	str	r1, [sp, #8]
 801ee52:	2c00      	cmp	r4, #0
 801ee54:	fb04 7103 	mla	r1, r4, r3, r7
 801ee58:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ee5c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ee60:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ee64:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ee68:	f2c0 810c 	blt.w	801f084 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ee6c:	45a6      	cmp	lr, r4
 801ee6e:	f340 8109 	ble.w	801f084 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ee72:	2f00      	cmp	r7, #0
 801ee74:	f2c0 8104 	blt.w	801f080 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ee78:	42bb      	cmp	r3, r7
 801ee7a:	f340 8101 	ble.w	801f080 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ee7e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ee82:	1c7a      	adds	r2, r7, #1
 801ee84:	f100 8101 	bmi.w	801f08a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ee88:	4293      	cmp	r3, r2
 801ee8a:	f340 80fe 	ble.w	801f08a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ee8e:	2e00      	cmp	r6, #0
 801ee90:	f000 80fd 	beq.w	801f08e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801ee94:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ee98:	3401      	adds	r4, #1
 801ee9a:	f100 80fc 	bmi.w	801f096 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ee9e:	45a6      	cmp	lr, r4
 801eea0:	f340 80f9 	ble.w	801f096 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801eea4:	2800      	cmp	r0, #0
 801eea6:	f000 80f9 	beq.w	801f09c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801eeaa:	2f00      	cmp	r7, #0
 801eeac:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801eeb0:	f2c0 80ef 	blt.w	801f092 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eeb4:	42bb      	cmp	r3, r7
 801eeb6:	f340 80ec 	ble.w	801f092 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eeba:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801eebe:	3701      	adds	r7, #1
 801eec0:	f100 80ef 	bmi.w	801f0a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801eec4:	42bb      	cmp	r3, r7
 801eec6:	f340 80ec 	ble.w	801f0a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801eeca:	2e00      	cmp	r6, #0
 801eecc:	f000 80eb 	beq.w	801f0a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801eed0:	6852      	ldr	r2, [r2, #4]
 801eed2:	b2b6      	uxth	r6, r6
 801eed4:	b280      	uxth	r0, r0
 801eed6:	fb00 fe06 	mul.w	lr, r0, r6
 801eeda:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801eede:	0136      	lsls	r6, r6, #4
 801eee0:	eba6 070e 	sub.w	r7, r6, lr
 801eee4:	b280      	uxth	r0, r0
 801eee6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801eeea:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801eeee:	b2bf      	uxth	r7, r7
 801eef0:	1a1b      	subs	r3, r3, r0
 801eef2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801eef6:	b29b      	uxth	r3, r3
 801eef8:	fb07 f60a 	mul.w	r6, r7, sl
 801eefc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ef00:	fb0b 6603 	mla	r6, fp, r3, r6
 801ef04:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ef08:	fb00 6609 	mla	r6, r0, r9, r6
 801ef0c:	fb0e 6608 	mla	r6, lr, r8, r6
 801ef10:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ef14:	9600      	str	r6, [sp, #0]
 801ef16:	2e00      	cmp	r6, #0
 801ef18:	f000 80af 	beq.w	801f07a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ef1c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ef20:	fb0b fc0c 	mul.w	ip, fp, ip
 801ef24:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ef28:	fb0b f505 	mul.w	r5, fp, r5
 801ef2c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ef30:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ef34:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef38:	44dc      	add	ip, fp
 801ef3a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef3e:	9501      	str	r5, [sp, #4]
 801ef40:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ef44:	9503      	str	r5, [sp, #12]
 801ef46:	9d01      	ldr	r5, [sp, #4]
 801ef48:	9e02      	ldr	r6, [sp, #8]
 801ef4a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ef4e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef52:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ef56:	fb0a fc0c 	mul.w	ip, sl, ip
 801ef5a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ef5e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ef62:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ef66:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef6a:	4465      	add	r5, ip
 801ef6c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ef70:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ef74:	fb09 fc0c 	mul.w	ip, r9, ip
 801ef78:	fb09 f904 	mul.w	r9, r9, r4
 801ef7c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ef80:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ef84:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ef88:	fb08 f404 	mul.w	r4, r8, r4
 801ef8c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ef90:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ef94:	fb08 f802 	mul.w	r8, r8, r2
 801ef98:	fb0a fa01 	mul.w	sl, sl, r1
 801ef9c:	0a22      	lsrs	r2, r4, #8
 801ef9e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801efa2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801efa6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801efaa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801efae:	4414      	add	r4, r2
 801efb0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801efb4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801efb8:	0a2d      	lsrs	r5, r5, #8
 801efba:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801efbe:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801efc2:	9a03      	ldr	r2, [sp, #12]
 801efc4:	8836      	ldrh	r6, [r6, #0]
 801efc6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801efca:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801efce:	437d      	muls	r5, r7
 801efd0:	4461      	add	r1, ip
 801efd2:	0a24      	lsrs	r4, r4, #8
 801efd4:	fb02 5503 	mla	r5, r2, r3, r5
 801efd8:	0a09      	lsrs	r1, r1, #8
 801efda:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801efde:	fb04 540e 	mla	r4, r4, lr, r5
 801efe2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801efe6:	fb01 4100 	mla	r1, r1, r0, r4
 801efea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efee:	0a09      	lsrs	r1, r1, #8
 801eff0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eff4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801eff8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801effc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f000:	fb07 f70a 	mul.w	r7, r7, sl
 801f004:	fb03 7101 	mla	r1, r3, r1, r7
 801f008:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f00c:	9b00      	ldr	r3, [sp, #0]
 801f00e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f012:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f016:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f01a:	fb00 e101 	mla	r1, r0, r1, lr
 801f01e:	43da      	mvns	r2, r3
 801f020:	1233      	asrs	r3, r6, #8
 801f022:	b2d2      	uxtb	r2, r2
 801f024:	10f0      	asrs	r0, r6, #3
 801f026:	0a09      	lsrs	r1, r1, #8
 801f028:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f02c:	00f6      	lsls	r6, r6, #3
 801f02e:	4353      	muls	r3, r2
 801f030:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f034:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f038:	b2f6      	uxtb	r6, r6
 801f03a:	4321      	orrs	r1, r4
 801f03c:	4350      	muls	r0, r2
 801f03e:	4356      	muls	r6, r2
 801f040:	1c5a      	adds	r2, r3, #1
 801f042:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f046:	0c0b      	lsrs	r3, r1, #16
 801f048:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f04c:	1c42      	adds	r2, r0, #1
 801f04e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f052:	0a0a      	lsrs	r2, r1, #8
 801f054:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f058:	021b      	lsls	r3, r3, #8
 801f05a:	00d2      	lsls	r2, r2, #3
 801f05c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f060:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f064:	4313      	orrs	r3, r2
 801f066:	1c72      	adds	r2, r6, #1
 801f068:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f06c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f070:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f074:	4319      	orrs	r1, r3
 801f076:	9b02      	ldr	r3, [sp, #8]
 801f078:	8019      	strh	r1, [r3, #0]
 801f07a:	b005      	add	sp, #20
 801f07c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f080:	2500      	movs	r5, #0
 801f082:	e6fe      	b.n	801ee82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f084:	2100      	movs	r1, #0
 801f086:	460d      	mov	r5, r1
 801f088:	e706      	b.n	801ee98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f08a:	2100      	movs	r1, #0
 801f08c:	e704      	b.n	801ee98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f08e:	4631      	mov	r1, r6
 801f090:	e702      	b.n	801ee98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f092:	2400      	movs	r4, #0
 801f094:	e713      	b.n	801eebe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f096:	2200      	movs	r2, #0
 801f098:	4614      	mov	r4, r2
 801f09a:	e71a      	b.n	801eed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f09c:	4602      	mov	r2, r0
 801f09e:	4604      	mov	r4, r0
 801f0a0:	e717      	b.n	801eed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f0a2:	2200      	movs	r2, #0
 801f0a4:	e715      	b.n	801eed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f0a6:	4632      	mov	r2, r6
 801f0a8:	e713      	b.n	801eed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f0ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0b0:	b09b      	sub	sp, #108	@ 0x6c
 801f0b2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801f0b6:	9218      	str	r2, [sp, #96]	@ 0x60
 801f0b8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801f0ba:	9116      	str	r1, [sp, #88]	@ 0x58
 801f0bc:	9307      	str	r3, [sp, #28]
 801f0be:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801f0c2:	9019      	str	r0, [sp, #100]	@ 0x64
 801f0c4:	6850      	ldr	r0, [r2, #4]
 801f0c6:	6812      	ldr	r2, [r2, #0]
 801f0c8:	fb00 1303 	mla	r3, r0, r3, r1
 801f0cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f0d0:	930a      	str	r3, [sp, #40]	@ 0x28
 801f0d2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f0d4:	681b      	ldr	r3, [r3, #0]
 801f0d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f0d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f0da:	2b00      	cmp	r3, #0
 801f0dc:	dc03      	bgt.n	801f0e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f0de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f0e0:	2b00      	cmp	r3, #0
 801f0e2:	f340 8386 	ble.w	801f7f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f0e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f0e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f0f0:	1e48      	subs	r0, r1, #1
 801f0f2:	1e57      	subs	r7, r2, #1
 801f0f4:	9b07      	ldr	r3, [sp, #28]
 801f0f6:	2b00      	cmp	r3, #0
 801f0f8:	f340 8166 	ble.w	801f3c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f0fc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f100:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f104:	d406      	bmi.n	801f114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f106:	4584      	cmp	ip, r0
 801f108:	da04      	bge.n	801f114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f10a:	2b00      	cmp	r3, #0
 801f10c:	db02      	blt.n	801f114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f10e:	42bb      	cmp	r3, r7
 801f110:	f2c0 815b 	blt.w	801f3ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f114:	f11c 0c01 	adds.w	ip, ip, #1
 801f118:	f100 814b 	bmi.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f11c:	4561      	cmp	r1, ip
 801f11e:	f2c0 8148 	blt.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f122:	3301      	adds	r3, #1
 801f124:	f100 8145 	bmi.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f128:	429a      	cmp	r2, r3
 801f12a:	f2c0 8142 	blt.w	801f3b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f12e:	9b07      	ldr	r3, [sp, #28]
 801f130:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f132:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f134:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f136:	2b00      	cmp	r3, #0
 801f138:	f340 8165 	ble.w	801f406 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f13c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801f13e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f140:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f144:	689b      	ldr	r3, [r3, #8]
 801f146:	1422      	asrs	r2, r4, #16
 801f148:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f14c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f150:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f154:	f100 81d5 	bmi.w	801f502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f158:	f103 38ff 	add.w	r8, r3, #4294967295
 801f15c:	4542      	cmp	r2, r8
 801f15e:	f280 81d0 	bge.w	801f502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f162:	f1bc 0f00 	cmp.w	ip, #0
 801f166:	f2c0 81cc 	blt.w	801f502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f16a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f16e:	45c4      	cmp	ip, r8
 801f170:	f280 81c7 	bge.w	801f502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f174:	b21b      	sxth	r3, r3
 801f176:	fb0c 2203 	mla	r2, ip, r3, r2
 801f17a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f17c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f180:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f184:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f188:	2900      	cmp	r1, #0
 801f18a:	f000 8182 	beq.w	801f492 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f18e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f192:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f194:	0e2d      	lsrs	r5, r5, #24
 801f196:	9512      	str	r5, [sp, #72]	@ 0x48
 801f198:	b180      	cbz	r0, 801f1bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f19a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f19e:	3b01      	subs	r3, #1
 801f1a0:	009b      	lsls	r3, r3, #2
 801f1a2:	3304      	adds	r3, #4
 801f1a4:	eb08 0c03 	add.w	ip, r8, r3
 801f1a8:	f858 3003 	ldr.w	r3, [r8, r3]
 801f1ac:	9308      	str	r3, [sp, #32]
 801f1ae:	0e1b      	lsrs	r3, r3, #24
 801f1b0:	9310      	str	r3, [sp, #64]	@ 0x40
 801f1b2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f1b6:	930c      	str	r3, [sp, #48]	@ 0x30
 801f1b8:	0e1b      	lsrs	r3, r3, #24
 801f1ba:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f1bc:	b289      	uxth	r1, r1
 801f1be:	b280      	uxth	r0, r0
 801f1c0:	fb01 f900 	mul.w	r9, r1, r0
 801f1c4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f1c8:	0109      	lsls	r1, r1, #4
 801f1ca:	eba1 0809 	sub.w	r8, r1, r9
 801f1ce:	b280      	uxth	r0, r0
 801f1d0:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801f1d4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f1d6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f1d8:	fa1f f888 	uxth.w	r8, r8
 801f1dc:	1a09      	subs	r1, r1, r0
 801f1de:	b289      	uxth	r1, r1
 801f1e0:	fb08 f303 	mul.w	r3, r8, r3
 801f1e4:	fb01 330e 	mla	r3, r1, lr, r3
 801f1e8:	fb00 3305 	mla	r3, r0, r5, r3
 801f1ec:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f1ee:	fb09 3305 	mla	r3, r9, r5, r3
 801f1f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f1f6:	2b00      	cmp	r3, #0
 801f1f8:	f000 80d2 	beq.w	801f3a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f1fc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f200:	d01b      	beq.n	801f23a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f202:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f206:	fb0e fa0a 	mul.w	sl, lr, sl
 801f20a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f20e:	fb0e fe02 	mul.w	lr, lr, r2
 801f212:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f216:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f21a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f21e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f222:	4452      	add	r2, sl
 801f224:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f228:	0a12      	lsrs	r2, r2, #8
 801f22a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f22e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f232:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f236:	ea42 020c 	orr.w	r2, r2, ip
 801f23a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f23c:	2dff      	cmp	r5, #255	@ 0xff
 801f23e:	d021      	beq.n	801f284 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f240:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f242:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f246:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f248:	fb05 fb0b 	mul.w	fp, r5, fp
 801f24c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f24e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f252:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f254:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f258:	fb05 fa0a 	mul.w	sl, r5, sl
 801f25c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f260:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f264:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f268:	44de      	add	lr, fp
 801f26a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f26e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f272:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f276:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f27a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f27e:	ea4e 050a 	orr.w	r5, lr, sl
 801f282:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f284:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f286:	2dff      	cmp	r5, #255	@ 0xff
 801f288:	d021      	beq.n	801f2ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f28a:	9d08      	ldr	r5, [sp, #32]
 801f28c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f290:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f292:	fb05 fb0b 	mul.w	fp, r5, fp
 801f296:	9d08      	ldr	r5, [sp, #32]
 801f298:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f29c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f29e:	fb05 fa0e 	mul.w	sl, r5, lr
 801f2a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2aa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2ae:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2b2:	44de      	add	lr, fp
 801f2b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f2bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2c0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2c8:	ea4e 050a 	orr.w	r5, lr, sl
 801f2cc:	9508      	str	r5, [sp, #32]
 801f2ce:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f2d0:	2dff      	cmp	r5, #255	@ 0xff
 801f2d2:	d021      	beq.n	801f318 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f2d4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f2d6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f2da:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f2dc:	fb05 fb0b 	mul.w	fp, r5, fp
 801f2e0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f2e2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f2e6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f2e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2ec:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2f4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2f8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2fc:	44de      	add	lr, fp
 801f2fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f302:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f306:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f30a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f30e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f312:	ea4e 050a 	orr.w	r5, lr, sl
 801f316:	950c      	str	r5, [sp, #48]	@ 0x30
 801f318:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f31a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f31e:	9d08      	ldr	r5, [sp, #32]
 801f320:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f324:	fb08 fc0c 	mul.w	ip, r8, ip
 801f328:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f32c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f330:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f332:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f336:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f33a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f33c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f340:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f344:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f348:	fb08 f80e 	mul.w	r8, r8, lr
 801f34c:	fb01 8202 	mla	r2, r1, r2, r8
 801f350:	9908      	ldr	r1, [sp, #32]
 801f352:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f356:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f358:	fb00 220a 	mla	r2, r0, sl, r2
 801f35c:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801f360:	fb09 2900 	mla	r9, r9, r0, r2
 801f364:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f368:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f36c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f370:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f374:	ea4c 0c09 	orr.w	ip, ip, r9
 801f378:	2bff      	cmp	r3, #255	@ 0xff
 801f37a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f37e:	f040 8091 	bne.w	801f4a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f382:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f386:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801f38a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f38e:	f022 0207 	bic.w	r2, r2, #7
 801f392:	431a      	orrs	r2, r3
 801f394:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f398:	ea4c 0c02 	orr.w	ip, ip, r2
 801f39c:	f8a7 c000 	strh.w	ip, [r7]
 801f3a0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f3a2:	441c      	add	r4, r3
 801f3a4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f3a6:	441e      	add	r6, r3
 801f3a8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f3aa:	3b01      	subs	r3, #1
 801f3ac:	3702      	adds	r7, #2
 801f3ae:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f3b0:	e6c0      	b.n	801f134 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f3b2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f3b4:	441c      	add	r4, r3
 801f3b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f3b8:	441e      	add	r6, r3
 801f3ba:	9b07      	ldr	r3, [sp, #28]
 801f3bc:	3b01      	subs	r3, #1
 801f3be:	9307      	str	r3, [sp, #28]
 801f3c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3c2:	3302      	adds	r3, #2
 801f3c4:	930a      	str	r3, [sp, #40]	@ 0x28
 801f3c6:	e695      	b.n	801f0f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f3c8:	d024      	beq.n	801f414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f3ca:	9b07      	ldr	r3, [sp, #28]
 801f3cc:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801f3ce:	3b01      	subs	r3, #1
 801f3d0:	fb00 4003 	mla	r0, r0, r3, r4
 801f3d4:	1400      	asrs	r0, r0, #16
 801f3d6:	f53f aeaa 	bmi.w	801f12e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f3da:	3901      	subs	r1, #1
 801f3dc:	4288      	cmp	r0, r1
 801f3de:	f6bf aea6 	bge.w	801f12e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f3e2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f3e4:	fb01 6303 	mla	r3, r1, r3, r6
 801f3e8:	141b      	asrs	r3, r3, #16
 801f3ea:	f53f aea0 	bmi.w	801f12e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f3ee:	3a01      	subs	r2, #1
 801f3f0:	4293      	cmp	r3, r2
 801f3f2:	f6bf ae9c 	bge.w	801f12e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f3f6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f3fa:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f3fe:	f1bb 0f00 	cmp.w	fp, #0
 801f402:	f300 809a 	bgt.w	801f53a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f406:	9b07      	ldr	r3, [sp, #28]
 801f408:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f40c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f40e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f412:	930a      	str	r3, [sp, #40]	@ 0x28
 801f414:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f416:	2b00      	cmp	r3, #0
 801f418:	f340 81eb 	ble.w	801f7f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f41c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f420:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f424:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f428:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f42a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f42e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f432:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f436:	eef0 6a62 	vmov.f32	s13, s5
 801f43a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f43e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f442:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f446:	ee16 4a90 	vmov	r4, s13
 801f44a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f44e:	eef0 6a43 	vmov.f32	s13, s6
 801f452:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f456:	ee12 2a90 	vmov	r2, s5
 801f45a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f45e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f462:	ee13 2a10 	vmov	r2, s6
 801f466:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f468:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f46a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f46e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f470:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f472:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f474:	3b01      	subs	r3, #1
 801f476:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f47a:	9316      	str	r3, [sp, #88]	@ 0x58
 801f47c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f47e:	bf08      	it	eq
 801f480:	4613      	moveq	r3, r2
 801f482:	ee16 6a90 	vmov	r6, s13
 801f486:	9307      	str	r3, [sp, #28]
 801f488:	eeb0 3a67 	vmov.f32	s6, s15
 801f48c:	eef0 2a47 	vmov.f32	s5, s14
 801f490:	e622      	b.n	801f0d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f492:	2800      	cmp	r0, #0
 801f494:	f43f ae92 	beq.w	801f1bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f498:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f49c:	9308      	str	r3, [sp, #32]
 801f49e:	0e1b      	lsrs	r3, r3, #24
 801f4a0:	9310      	str	r3, [sp, #64]	@ 0x40
 801f4a2:	e68b      	b.n	801f1bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f4a4:	8839      	ldrh	r1, [r7, #0]
 801f4a6:	4dd4      	ldr	r5, [pc, #848]	@ (801f7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f4a8:	43db      	mvns	r3, r3
 801f4aa:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f4ae:	fa5f f883 	uxtb.w	r8, r3
 801f4b2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f4b6:	fb0e fe08 	mul.w	lr, lr, r8
 801f4ba:	10c8      	asrs	r0, r1, #3
 801f4bc:	00cb      	lsls	r3, r1, #3
 801f4be:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f4c2:	f10e 0101 	add.w	r1, lr, #1
 801f4c6:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f4ca:	fb00 f008 	mul.w	r0, r0, r8
 801f4ce:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f4d2:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f4d6:	f100 0e01 	add.w	lr, r0, #1
 801f4da:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f4de:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f4e2:	b2db      	uxtb	r3, r3
 801f4e4:	b2c9      	uxtb	r1, r1
 801f4e6:	00d2      	lsls	r2, r2, #3
 801f4e8:	fb03 f308 	mul.w	r3, r3, r8
 801f4ec:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f4f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f4f4:	430a      	orrs	r2, r1
 801f4f6:	1c59      	adds	r1, r3, #1
 801f4f8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f4fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f500:	e748      	b.n	801f394 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f502:	f112 0801 	adds.w	r8, r2, #1
 801f506:	f53f af4b 	bmi.w	801f3a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f50a:	4543      	cmp	r3, r8
 801f50c:	f6ff af48 	blt.w	801f3a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f510:	f11c 0801 	adds.w	r8, ip, #1
 801f514:	f53f af44 	bmi.w	801f3a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f518:	45c6      	cmp	lr, r8
 801f51a:	f6ff af41 	blt.w	801f3a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f51e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f522:	fa0f f28e 	sxth.w	r2, lr
 801f526:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f52a:	9200      	str	r2, [sp, #0]
 801f52c:	b21b      	sxth	r3, r3
 801f52e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f530:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f532:	4639      	mov	r1, r7
 801f534:	f7ff fc87 	bl	801ee46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f538:	e732      	b.n	801f3a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f53a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f53c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f53e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f542:	1421      	asrs	r1, r4, #16
 801f544:	1433      	asrs	r3, r6, #16
 801f546:	fb07 1303 	mla	r3, r7, r3, r1
 801f54a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f54c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f550:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f554:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f558:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f55c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f560:	2a00      	cmp	r2, #0
 801f562:	f000 8107 	beq.w	801f774 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f566:	684d      	ldr	r5, [r1, #4]
 801f568:	950d      	str	r5, [sp, #52]	@ 0x34
 801f56a:	0e2d      	lsrs	r5, r5, #24
 801f56c:	9514      	str	r5, [sp, #80]	@ 0x50
 801f56e:	b178      	cbz	r0, 801f590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f570:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f574:	3f01      	subs	r7, #1
 801f576:	00bf      	lsls	r7, r7, #2
 801f578:	3704      	adds	r7, #4
 801f57a:	eb01 0e07 	add.w	lr, r1, r7
 801f57e:	59c9      	ldr	r1, [r1, r7]
 801f580:	9109      	str	r1, [sp, #36]	@ 0x24
 801f582:	0e09      	lsrs	r1, r1, #24
 801f584:	9111      	str	r1, [sp, #68]	@ 0x44
 801f586:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f58a:	910e      	str	r1, [sp, #56]	@ 0x38
 801f58c:	0e09      	lsrs	r1, r1, #24
 801f58e:	9115      	str	r1, [sp, #84]	@ 0x54
 801f590:	b292      	uxth	r2, r2
 801f592:	b280      	uxth	r0, r0
 801f594:	fb02 f900 	mul.w	r9, r2, r0
 801f598:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f59c:	0112      	lsls	r2, r2, #4
 801f59e:	eba2 0e09 	sub.w	lr, r2, r9
 801f5a2:	b280      	uxth	r0, r0
 801f5a4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f5a8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f5aa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f5ac:	fa1f fe8e 	uxth.w	lr, lr
 801f5b0:	1a09      	subs	r1, r1, r0
 801f5b2:	b289      	uxth	r1, r1
 801f5b4:	fb0e f202 	mul.w	r2, lr, r2
 801f5b8:	fb01 220c 	mla	r2, r1, ip, r2
 801f5bc:	fb00 2205 	mla	r2, r0, r5, r2
 801f5c0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f5c2:	fb09 2205 	mla	r2, r9, r5, r2
 801f5c6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f5ca:	2a00      	cmp	r2, #0
 801f5cc:	f000 80c9 	beq.w	801f762 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f5d0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f5d4:	d019      	beq.n	801f60a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f5d6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f5da:	fb0c fa0a 	mul.w	sl, ip, sl
 801f5de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f5e2:	fb0c fc03 	mul.w	ip, ip, r3
 801f5e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f5ea:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f5ee:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f5f2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f5f6:	4453      	add	r3, sl
 801f5f8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f5fc:	0a1b      	lsrs	r3, r3, #8
 801f5fe:	0a3f      	lsrs	r7, r7, #8
 801f600:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f604:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f608:	433b      	orrs	r3, r7
 801f60a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f60c:	2dff      	cmp	r5, #255	@ 0xff
 801f60e:	d020      	beq.n	801f652 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f610:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f612:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f616:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f618:	436f      	muls	r7, r5
 801f61a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f61c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f620:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f622:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f626:	fb05 fa0a 	mul.w	sl, r5, sl
 801f62a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f62e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f632:	44bc      	add	ip, r7
 801f634:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f638:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f63c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f644:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f648:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f64c:	ea4c 050a 	orr.w	r5, ip, sl
 801f650:	950d      	str	r5, [sp, #52]	@ 0x34
 801f652:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f654:	2dff      	cmp	r5, #255	@ 0xff
 801f656:	d020      	beq.n	801f69a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f658:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f65a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f65e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f660:	436f      	muls	r7, r5
 801f662:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f664:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f668:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f66a:	fb05 fa0c 	mul.w	sl, r5, ip
 801f66e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f672:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f676:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f67a:	44bc      	add	ip, r7
 801f67c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f680:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f684:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f688:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f68c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f690:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f694:	ea4c 050a 	orr.w	r5, ip, sl
 801f698:	9509      	str	r5, [sp, #36]	@ 0x24
 801f69a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f69c:	2dff      	cmp	r5, #255	@ 0xff
 801f69e:	d020      	beq.n	801f6e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f6a0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6a2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6a6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f6a8:	436f      	muls	r7, r5
 801f6aa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6ac:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f6b0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f6b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f6b6:	fb05 fa0a 	mul.w	sl, r5, sl
 801f6ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f6be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6c2:	44bc      	add	ip, r7
 801f6c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f6c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f6cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f6d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f6dc:	ea4c 050a 	orr.w	r5, ip, sl
 801f6e0:	950e      	str	r5, [sp, #56]	@ 0x38
 801f6e2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f6e4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6e8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f6ea:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f6ee:	fb0e f707 	mul.w	r7, lr, r7
 801f6f2:	fb01 770c 	mla	r7, r1, ip, r7
 801f6f6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f6fa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6fc:	fb00 770c 	mla	r7, r0, ip, r7
 801f700:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f704:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f706:	fb09 770c 	mla	r7, r9, ip, r7
 801f70a:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f70e:	fb0e fe0c 	mul.w	lr, lr, ip
 801f712:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f716:	fb01 e303 	mla	r3, r1, r3, lr
 801f71a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f71c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f720:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f722:	fb00 330a 	mla	r3, r0, sl, r3
 801f726:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f72a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f72e:	0a3f      	lsrs	r7, r7, #8
 801f730:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f734:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f738:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f73c:	ea47 070c 	orr.w	r7, r7, ip
 801f740:	2aff      	cmp	r2, #255	@ 0xff
 801f742:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f746:	d11e      	bne.n	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f748:	097a      	lsrs	r2, r7, #5
 801f74a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f74e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f752:	f023 0307 	bic.w	r3, r3, #7
 801f756:	4313      	orrs	r3, r2
 801f758:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f75c:	431f      	orrs	r7, r3
 801f75e:	f8a8 7000 	strh.w	r7, [r8]
 801f762:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f764:	441c      	add	r4, r3
 801f766:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f768:	f108 0802 	add.w	r8, r8, #2
 801f76c:	441e      	add	r6, r3
 801f76e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f772:	e644      	b.n	801f3fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f774:	2800      	cmp	r0, #0
 801f776:	f43f af0b 	beq.w	801f590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f77a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f77e:	9109      	str	r1, [sp, #36]	@ 0x24
 801f780:	0e09      	lsrs	r1, r1, #24
 801f782:	9111      	str	r1, [sp, #68]	@ 0x44
 801f784:	e704      	b.n	801f590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f786:	f8b8 1000 	ldrh.w	r1, [r8]
 801f78a:	43d2      	mvns	r2, r2
 801f78c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f790:	fa5f fe82 	uxtb.w	lr, r2
 801f794:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f798:	fb0c fc0e 	mul.w	ip, ip, lr
 801f79c:	10c8      	asrs	r0, r1, #3
 801f79e:	00ca      	lsls	r2, r1, #3
 801f7a0:	f10c 0101 	add.w	r1, ip, #1
 801f7a4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f7a8:	0c39      	lsrs	r1, r7, #16
 801f7aa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f7ae:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f7b2:	4911      	ldr	r1, [pc, #68]	@ (801f7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f7b4:	fb00 f00e 	mul.w	r0, r0, lr
 801f7b8:	fa5f fc8c 	uxtb.w	ip, ip
 801f7bc:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f7c0:	b2d2      	uxtb	r2, r2
 801f7c2:	1c41      	adds	r1, r0, #1
 801f7c4:	fb02 f20e 	mul.w	r2, r2, lr
 801f7c8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f7cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f7d0:	1c51      	adds	r1, r2, #1
 801f7d2:	00c0      	lsls	r0, r0, #3
 801f7d4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f7d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f7dc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f7e0:	ea4c 0c00 	orr.w	ip, ip, r0
 801f7e4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f7e8:	ea47 0c0c 	orr.w	ip, r7, ip
 801f7ec:	f8a8 c000 	strh.w	ip, [r8]
 801f7f0:	e7b7      	b.n	801f762 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f7f2:	b01b      	add	sp, #108	@ 0x6c
 801f7f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f7f8:	fffff800 	.word	0xfffff800

0801f7fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f7fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f800:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f804:	2d00      	cmp	r5, #0
 801f806:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f80a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f80e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f812:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f816:	fb05 0e03 	mla	lr, r5, r3, r0
 801f81a:	f2c0 808c 	blt.w	801f936 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f81e:	45a9      	cmp	r9, r5
 801f820:	f340 8089 	ble.w	801f936 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f824:	2800      	cmp	r0, #0
 801f826:	f2c0 8084 	blt.w	801f932 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f82a:	4580      	cmp	r8, r0
 801f82c:	f340 8081 	ble.w	801f932 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f830:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f834:	f01e 0f01 	tst.w	lr, #1
 801f838:	5d16      	ldrb	r6, [r2, r4]
 801f83a:	bf0c      	ite	eq
 801f83c:	f006 060f 	andeq.w	r6, r6, #15
 801f840:	1136      	asrne	r6, r6, #4
 801f842:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f846:	b2f6      	uxtb	r6, r6
 801f848:	1c44      	adds	r4, r0, #1
 801f84a:	d477      	bmi.n	801f93c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f84c:	45a0      	cmp	r8, r4
 801f84e:	dd75      	ble.n	801f93c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f850:	2f00      	cmp	r7, #0
 801f852:	d075      	beq.n	801f940 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f854:	f10e 0a01 	add.w	sl, lr, #1
 801f858:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f85c:	f01a 0f01 	tst.w	sl, #1
 801f860:	5d14      	ldrb	r4, [r2, r4]
 801f862:	bf0c      	ite	eq
 801f864:	f004 040f 	andeq.w	r4, r4, #15
 801f868:	1124      	asrne	r4, r4, #4
 801f86a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f86e:	b2e4      	uxtb	r4, r4
 801f870:	3501      	adds	r5, #1
 801f872:	d469      	bmi.n	801f948 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f874:	45a9      	cmp	r9, r5
 801f876:	dd67      	ble.n	801f948 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f878:	f1bc 0f00 	cmp.w	ip, #0
 801f87c:	d067      	beq.n	801f94e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f87e:	2800      	cmp	r0, #0
 801f880:	db60      	blt.n	801f944 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f882:	4580      	cmp	r8, r0
 801f884:	dd5e      	ble.n	801f944 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f886:	eb03 090e 	add.w	r9, r3, lr
 801f88a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f88e:	f019 0f01 	tst.w	r9, #1
 801f892:	5d55      	ldrb	r5, [r2, r5]
 801f894:	bf0c      	ite	eq
 801f896:	f005 050f 	andeq.w	r5, r5, #15
 801f89a:	112d      	asrne	r5, r5, #4
 801f89c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f8a0:	b2ed      	uxtb	r5, r5
 801f8a2:	3001      	adds	r0, #1
 801f8a4:	d456      	bmi.n	801f954 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f8a6:	4580      	cmp	r8, r0
 801f8a8:	dd54      	ble.n	801f954 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f8aa:	2f00      	cmp	r7, #0
 801f8ac:	d054      	beq.n	801f958 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f8ae:	3301      	adds	r3, #1
 801f8b0:	449e      	add	lr, r3
 801f8b2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f8b6:	f01e 0f01 	tst.w	lr, #1
 801f8ba:	5cd0      	ldrb	r0, [r2, r3]
 801f8bc:	bf0c      	ite	eq
 801f8be:	f000 000f 	andeq.w	r0, r0, #15
 801f8c2:	1100      	asrne	r0, r0, #4
 801f8c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f8c8:	b2c3      	uxtb	r3, r0
 801f8ca:	b2ba      	uxth	r2, r7
 801f8cc:	fa1f fc8c 	uxth.w	ip, ip
 801f8d0:	fb02 f00c 	mul.w	r0, r2, ip
 801f8d4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f8d8:	0112      	lsls	r2, r2, #4
 801f8da:	fa1f fc8c 	uxth.w	ip, ip
 801f8de:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f8e2:	1a12      	subs	r2, r2, r0
 801f8e4:	eba7 070c 	sub.w	r7, r7, ip
 801f8e8:	b292      	uxth	r2, r2
 801f8ea:	b2bf      	uxth	r7, r7
 801f8ec:	4362      	muls	r2, r4
 801f8ee:	fb06 2207 	mla	r2, r6, r7, r2
 801f8f2:	fb0c 2505 	mla	r5, ip, r5, r2
 801f8f6:	fb00 5303 	mla	r3, r0, r3, r5
 801f8fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8fe:	b1b3      	cbz	r3, 801f92e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f900:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801f904:	435a      	muls	r2, r3
 801f906:	1c53      	adds	r3, r2, #1
 801f908:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f90c:	4a2d      	ldr	r2, [pc, #180]	@ (801f9c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f90e:	121b      	asrs	r3, r3, #8
 801f910:	6812      	ldr	r2, [r2, #0]
 801f912:	2bff      	cmp	r3, #255	@ 0xff
 801f914:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f918:	d120      	bne.n	801f95c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f91a:	4b2b      	ldr	r3, [pc, #172]	@ (801f9c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f91c:	0950      	lsrs	r0, r2, #5
 801f91e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f922:	4033      	ands	r3, r6
 801f924:	4318      	orrs	r0, r3
 801f926:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f92a:	4302      	orrs	r2, r0
 801f92c:	800a      	strh	r2, [r1, #0]
 801f92e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f932:	2600      	movs	r6, #0
 801f934:	e788      	b.n	801f848 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f936:	2400      	movs	r4, #0
 801f938:	4626      	mov	r6, r4
 801f93a:	e799      	b.n	801f870 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f93c:	2400      	movs	r4, #0
 801f93e:	e797      	b.n	801f870 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f940:	463c      	mov	r4, r7
 801f942:	e795      	b.n	801f870 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f944:	2500      	movs	r5, #0
 801f946:	e7ac      	b.n	801f8a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f948:	2300      	movs	r3, #0
 801f94a:	461d      	mov	r5, r3
 801f94c:	e7bd      	b.n	801f8ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f94e:	4663      	mov	r3, ip
 801f950:	4665      	mov	r5, ip
 801f952:	e7ba      	b.n	801f8ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f954:	2300      	movs	r3, #0
 801f956:	e7b8      	b.n	801f8ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f958:	463b      	mov	r3, r7
 801f95a:	e7b6      	b.n	801f8ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f95c:	880d      	ldrh	r5, [r1, #0]
 801f95e:	b29f      	uxth	r7, r3
 801f960:	122c      	asrs	r4, r5, #8
 801f962:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f966:	43db      	mvns	r3, r3
 801f968:	b2db      	uxtb	r3, r3
 801f96a:	fb10 f007 	smulbb	r0, r0, r7
 801f96e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f972:	fb04 0403 	mla	r4, r4, r3, r0
 801f976:	b2f6      	uxtb	r6, r6
 801f978:	10e8      	asrs	r0, r5, #3
 801f97a:	b2d2      	uxtb	r2, r2
 801f97c:	00ed      	lsls	r5, r5, #3
 801f97e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f982:	fb12 f207 	smulbb	r2, r2, r7
 801f986:	fb16 f607 	smulbb	r6, r6, r7
 801f98a:	b2ed      	uxtb	r5, r5
 801f98c:	b2a4      	uxth	r4, r4
 801f98e:	fb00 6603 	mla	r6, r0, r3, r6
 801f992:	fb05 2303 	mla	r3, r5, r3, r2
 801f996:	b29a      	uxth	r2, r3
 801f998:	1c63      	adds	r3, r4, #1
 801f99a:	b2b0      	uxth	r0, r6
 801f99c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f9a0:	1c53      	adds	r3, r2, #1
 801f9a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9a6:	1c42      	adds	r2, r0, #1
 801f9a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f9ac:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f9b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f9b4:	0940      	lsrs	r0, r0, #5
 801f9b6:	4323      	orrs	r3, r4
 801f9b8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f9bc:	4303      	orrs	r3, r0
 801f9be:	800b      	strh	r3, [r1, #0]
 801f9c0:	e7b5      	b.n	801f92e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f9c2:	bf00      	nop
 801f9c4:	20014008 	.word	0x20014008
 801f9c8:	00fff800 	.word	0x00fff800

0801f9cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9d0:	b097      	sub	sp, #92	@ 0x5c
 801f9d2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801f9d6:	9214      	str	r2, [sp, #80]	@ 0x50
 801f9d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801f9da:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f9dc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f9e0:	910d      	str	r1, [sp, #52]	@ 0x34
 801f9e2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f9e4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f9e8:	9015      	str	r0, [sp, #84]	@ 0x54
 801f9ea:	6850      	ldr	r0, [r2, #4]
 801f9ec:	6812      	ldr	r2, [r2, #0]
 801f9ee:	fb00 1303 	mla	r3, r0, r3, r1
 801f9f2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f9f6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f9f8:	689b      	ldr	r3, [r3, #8]
 801f9fa:	3301      	adds	r3, #1
 801f9fc:	f023 0301 	bic.w	r3, r3, #1
 801fa00:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa02:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa04:	681f      	ldr	r7, [r3, #0]
 801fa06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fa08:	2b00      	cmp	r3, #0
 801fa0a:	dc03      	bgt.n	801fa14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fa0c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801fa0e:	2b00      	cmp	r3, #0
 801fa10:	f340 8287 	ble.w	801ff22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fa14:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa1e:	1e48      	subs	r0, r1, #1
 801fa20:	f102 3cff 	add.w	ip, r2, #4294967295
 801fa24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa26:	2b00      	cmp	r3, #0
 801fa28:	f340 80c4 	ble.w	801fbb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801fa2c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fa30:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fa34:	d406      	bmi.n	801fa44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fa36:	4586      	cmp	lr, r0
 801fa38:	da04      	bge.n	801fa44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fa3a:	2b00      	cmp	r3, #0
 801fa3c:	db02      	blt.n	801fa44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fa3e:	4563      	cmp	r3, ip
 801fa40:	f2c0 80b9 	blt.w	801fbb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801fa44:	f11e 0e01 	adds.w	lr, lr, #1
 801fa48:	f100 80aa 	bmi.w	801fba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa4c:	4571      	cmp	r1, lr
 801fa4e:	f2c0 80a7 	blt.w	801fba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa52:	3301      	adds	r3, #1
 801fa54:	f100 80a4 	bmi.w	801fba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa58:	429a      	cmp	r2, r3
 801fa5a:	f2c0 80a1 	blt.w	801fba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa60:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801fa64:	930e      	str	r3, [sp, #56]	@ 0x38
 801fa66:	46c8      	mov	r8, r9
 801fa68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fa6a:	2b00      	cmp	r3, #0
 801fa6c:	f340 80c3 	ble.w	801fbf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fa70:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa72:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fa76:	1423      	asrs	r3, r4, #16
 801fa78:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fa7c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fa80:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fa84:	f100 814d 	bmi.w	801fd22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa88:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fa8c:	455b      	cmp	r3, fp
 801fa8e:	f280 8148 	bge.w	801fd22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa92:	2800      	cmp	r0, #0
 801fa94:	f2c0 8145 	blt.w	801fd22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa98:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fa9c:	4558      	cmp	r0, fp
 801fa9e:	f280 8140 	bge.w	801fd22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801faa2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801faa4:	fb00 3305 	mla	r3, r0, r5, r3
 801faa8:	0858      	lsrs	r0, r3, #1
 801faaa:	07dd      	lsls	r5, r3, #31
 801faac:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fab0:	bf54      	ite	pl
 801fab2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fab6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801faba:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fabe:	fa5f fc8c 	uxtb.w	ip, ip
 801fac2:	2a00      	cmp	r2, #0
 801fac4:	f000 80db 	beq.w	801fc7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801fac8:	1c58      	adds	r0, r3, #1
 801faca:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801face:	07c0      	lsls	r0, r0, #31
 801fad0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fad4:	bf54      	ite	pl
 801fad6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fada:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fade:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fae2:	fa5f f08e 	uxtb.w	r0, lr
 801fae6:	9010      	str	r0, [sp, #64]	@ 0x40
 801fae8:	b1c9      	cbz	r1, 801fb1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801faea:	4453      	add	r3, sl
 801faec:	0858      	lsrs	r0, r3, #1
 801faee:	07dd      	lsls	r5, r3, #31
 801faf0:	5c38      	ldrb	r0, [r7, r0]
 801faf2:	bf54      	ite	pl
 801faf4:	f000 000f 	andpl.w	r0, r0, #15
 801faf8:	1100      	asrmi	r0, r0, #4
 801fafa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fafe:	3301      	adds	r3, #1
 801fb00:	b2c0      	uxtb	r0, r0
 801fb02:	900b      	str	r0, [sp, #44]	@ 0x2c
 801fb04:	0858      	lsrs	r0, r3, #1
 801fb06:	07dd      	lsls	r5, r3, #31
 801fb08:	f817 e000 	ldrb.w	lr, [r7, r0]
 801fb0c:	bf54      	ite	pl
 801fb0e:	f00e 030f 	andpl.w	r3, lr, #15
 801fb12:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801fb16:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fb1a:	b2db      	uxtb	r3, r3
 801fb1c:	9311      	str	r3, [sp, #68]	@ 0x44
 801fb1e:	b292      	uxth	r2, r2
 801fb20:	b289      	uxth	r1, r1
 801fb22:	fb02 f301 	mul.w	r3, r2, r1
 801fb26:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fb2a:	0112      	lsls	r2, r2, #4
 801fb2c:	b289      	uxth	r1, r1
 801fb2e:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fb32:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fb34:	1ad2      	subs	r2, r2, r3
 801fb36:	1a40      	subs	r0, r0, r1
 801fb38:	b292      	uxth	r2, r2
 801fb3a:	436a      	muls	r2, r5
 801fb3c:	b280      	uxth	r0, r0
 801fb3e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fb42:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fb44:	fb01 c102 	mla	r1, r1, r2, ip
 801fb48:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fb4a:	fb03 1302 	mla	r3, r3, r2, r1
 801fb4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb52:	b1db      	cbz	r3, 801fb8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fb54:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fb56:	4353      	muls	r3, r2
 801fb58:	1c5a      	adds	r2, r3, #1
 801fb5a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fb5e:	4ac6      	ldr	r2, [pc, #792]	@ (801fe78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fb60:	121b      	asrs	r3, r3, #8
 801fb62:	6812      	ldr	r2, [r2, #0]
 801fb64:	2bff      	cmp	r3, #255	@ 0xff
 801fb66:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fb6a:	f040 8099 	bne.w	801fca0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801fb6e:	0953      	lsrs	r3, r2, #5
 801fb70:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fb74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fb78:	f02c 0c07 	bic.w	ip, ip, #7
 801fb7c:	ea43 0c0c 	orr.w	ip, r3, ip
 801fb80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb84:	ea4c 0202 	orr.w	r2, ip, r2
 801fb88:	f8a8 2000 	strh.w	r2, [r8]
 801fb8c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fb8e:	441c      	add	r4, r3
 801fb90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fb92:	441e      	add	r6, r3
 801fb94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fb96:	3b01      	subs	r3, #1
 801fb98:	f108 0802 	add.w	r8, r8, #2
 801fb9c:	930e      	str	r3, [sp, #56]	@ 0x38
 801fb9e:	e763      	b.n	801fa68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fba0:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fba2:	441c      	add	r4, r3
 801fba4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fba6:	441e      	add	r6, r3
 801fba8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbaa:	3b01      	subs	r3, #1
 801fbac:	9309      	str	r3, [sp, #36]	@ 0x24
 801fbae:	f109 0902 	add.w	r9, r9, #2
 801fbb2:	e737      	b.n	801fa24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fbb4:	d024      	beq.n	801fc00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fbb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbb8:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fbba:	3b01      	subs	r3, #1
 801fbbc:	fb00 4003 	mla	r0, r0, r3, r4
 801fbc0:	1400      	asrs	r0, r0, #16
 801fbc2:	f53f af4c 	bmi.w	801fa5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fbc6:	3901      	subs	r1, #1
 801fbc8:	4288      	cmp	r0, r1
 801fbca:	f6bf af48 	bge.w	801fa5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fbce:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801fbd0:	fb01 6303 	mla	r3, r1, r3, r6
 801fbd4:	141b      	asrs	r3, r3, #16
 801fbd6:	f53f af42 	bmi.w	801fa5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fbda:	3a01      	subs	r2, #1
 801fbdc:	4293      	cmp	r3, r2
 801fbde:	f6bf af3e 	bge.w	801fa5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fbe2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fbe6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801fbea:	930e      	str	r3, [sp, #56]	@ 0x38
 801fbec:	46c8      	mov	r8, r9
 801fbee:	f1bb 0f00 	cmp.w	fp, #0
 801fbf2:	f300 80b7 	bgt.w	801fd64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801fbf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbf8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fbfc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fc00:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fc02:	2b00      	cmp	r3, #0
 801fc04:	f340 818d 	ble.w	801ff22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fc08:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc0c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fc10:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc14:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc22:	eef0 6a62 	vmov.f32	s13, s5
 801fc26:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc32:	ee16 4a90 	vmov	r4, s13
 801fc36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc3a:	eef0 6a43 	vmov.f32	s13, s6
 801fc3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc42:	ee12 2a90 	vmov	r2, s5
 801fc46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc4e:	ee13 2a10 	vmov	r2, s6
 801fc52:	9323      	str	r3, [sp, #140]	@ 0x8c
 801fc54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc56:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc5a:	9324      	str	r3, [sp, #144]	@ 0x90
 801fc5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fc5e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fc60:	3b01      	subs	r3, #1
 801fc62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc66:	930d      	str	r3, [sp, #52]	@ 0x34
 801fc68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc6a:	bf08      	it	eq
 801fc6c:	4613      	moveq	r3, r2
 801fc6e:	ee16 6a90 	vmov	r6, s13
 801fc72:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc74:	eeb0 3a67 	vmov.f32	s6, s15
 801fc78:	eef0 2a47 	vmov.f32	s5, s14
 801fc7c:	e6c3      	b.n	801fa06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fc7e:	2900      	cmp	r1, #0
 801fc80:	f43f af4d 	beq.w	801fb1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fc84:	eb0a 0003 	add.w	r0, sl, r3
 801fc88:	0843      	lsrs	r3, r0, #1
 801fc8a:	07c0      	lsls	r0, r0, #31
 801fc8c:	5cfb      	ldrb	r3, [r7, r3]
 801fc8e:	bf54      	ite	pl
 801fc90:	f003 030f 	andpl.w	r3, r3, #15
 801fc94:	111b      	asrmi	r3, r3, #4
 801fc96:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fc9a:	b2db      	uxtb	r3, r3
 801fc9c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fc9e:	e73e      	b.n	801fb1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fca0:	f8b8 e000 	ldrh.w	lr, [r8]
 801fca4:	fa1f fb83 	uxth.w	fp, r3
 801fca8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fcac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fcb0:	43db      	mvns	r3, r3
 801fcb2:	b2db      	uxtb	r3, r3
 801fcb4:	fb11 f10b 	smulbb	r1, r1, fp
 801fcb8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fcbc:	fb00 1003 	mla	r0, r0, r3, r1
 801fcc0:	fa5f fc8c 	uxtb.w	ip, ip
 801fcc4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fcc8:	b2d2      	uxtb	r2, r2
 801fcca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fcce:	b280      	uxth	r0, r0
 801fcd0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fcd4:	fb1c fc0b 	smulbb	ip, ip, fp
 801fcd8:	fa5f fe8e 	uxtb.w	lr, lr
 801fcdc:	fb12 fb0b 	smulbb	fp, r2, fp
 801fce0:	fb01 cc03 	mla	ip, r1, r3, ip
 801fce4:	fb0e bb03 	mla	fp, lr, r3, fp
 801fce8:	1c43      	adds	r3, r0, #1
 801fcea:	fa1f fc8c 	uxth.w	ip, ip
 801fcee:	fa1f fb8b 	uxth.w	fp, fp
 801fcf2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fcf6:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801fcfa:	f10c 0101 	add.w	r1, ip, #1
 801fcfe:	f10b 0001 	add.w	r0, fp, #1
 801fd02:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801fd06:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fd0a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fd0e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fd12:	4318      	orrs	r0, r3
 801fd14:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fd18:	ea40 000c 	orr.w	r0, r0, ip
 801fd1c:	f8a8 0000 	strh.w	r0, [r8]
 801fd20:	e734      	b.n	801fb8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fd22:	f113 0b01 	adds.w	fp, r3, #1
 801fd26:	f53f af31 	bmi.w	801fb8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fd2a:	45dc      	cmp	ip, fp
 801fd2c:	f6ff af2e 	blt.w	801fb8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fd30:	f110 0b01 	adds.w	fp, r0, #1
 801fd34:	f53f af2a 	bmi.w	801fb8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fd38:	45de      	cmp	lr, fp
 801fd3a:	f6ff af27 	blt.w	801fb8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fd3e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fd40:	9302      	str	r3, [sp, #8]
 801fd42:	fa0f f38e 	sxth.w	r3, lr
 801fd46:	9301      	str	r3, [sp, #4]
 801fd48:	fa0f f38c 	sxth.w	r3, ip
 801fd4c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fd50:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fd54:	9300      	str	r3, [sp, #0]
 801fd56:	463a      	mov	r2, r7
 801fd58:	4653      	mov	r3, sl
 801fd5a:	4641      	mov	r1, r8
 801fd5c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fd5e:	f7ff fd4d 	bl	801f7fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801fd62:	e713      	b.n	801fb8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fd64:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fd66:	1422      	asrs	r2, r4, #16
 801fd68:	1433      	asrs	r3, r6, #16
 801fd6a:	fb05 2303 	mla	r3, r5, r3, r2
 801fd6e:	085a      	lsrs	r2, r3, #1
 801fd70:	07dd      	lsls	r5, r3, #31
 801fd72:	5cba      	ldrb	r2, [r7, r2]
 801fd74:	bf54      	ite	pl
 801fd76:	f002 020f 	andpl.w	r2, r2, #15
 801fd7a:	1112      	asrmi	r2, r2, #4
 801fd7c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fd80:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fd84:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fd88:	b2d2      	uxtb	r2, r2
 801fd8a:	2900      	cmp	r1, #0
 801fd8c:	d076      	beq.n	801fe7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fd8e:	f103 0e01 	add.w	lr, r3, #1
 801fd92:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fd96:	f01e 0f01 	tst.w	lr, #1
 801fd9a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fd9e:	bf0c      	ite	eq
 801fda0:	f00c 0c0f 	andeq.w	ip, ip, #15
 801fda4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801fda8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fdac:	fa5f f58c 	uxtb.w	r5, ip
 801fdb0:	9512      	str	r5, [sp, #72]	@ 0x48
 801fdb2:	b300      	cbz	r0, 801fdf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fdb4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fdb6:	442b      	add	r3, r5
 801fdb8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fdbc:	07dd      	lsls	r5, r3, #31
 801fdbe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fdc2:	bf54      	ite	pl
 801fdc4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fdc8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fdcc:	3301      	adds	r3, #1
 801fdce:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fdd2:	fa5f f58c 	uxtb.w	r5, ip
 801fdd6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fdda:	950c      	str	r5, [sp, #48]	@ 0x30
 801fddc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fde0:	07dd      	lsls	r5, r3, #31
 801fde2:	bf54      	ite	pl
 801fde4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fde8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fdec:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fdf0:	fa5f f38c 	uxtb.w	r3, ip
 801fdf4:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fdf6:	b289      	uxth	r1, r1
 801fdf8:	b280      	uxth	r0, r0
 801fdfa:	fb01 f300 	mul.w	r3, r1, r0
 801fdfe:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801fe02:	0109      	lsls	r1, r1, #4
 801fe04:	b280      	uxth	r0, r0
 801fe06:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801fe0a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fe0c:	1ac9      	subs	r1, r1, r3
 801fe0e:	ebac 0c00 	sub.w	ip, ip, r0
 801fe12:	b289      	uxth	r1, r1
 801fe14:	4369      	muls	r1, r5
 801fe16:	fa1f fc8c 	uxth.w	ip, ip
 801fe1a:	fb02 120c 	mla	r2, r2, ip, r1
 801fe1e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fe20:	fb00 2001 	mla	r0, r0, r1, r2
 801fe24:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fe26:	fb03 0302 	mla	r3, r3, r2, r0
 801fe2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe2e:	b1d3      	cbz	r3, 801fe66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fe30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fe32:	4353      	muls	r3, r2
 801fe34:	1c5a      	adds	r2, r3, #1
 801fe36:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fe3a:	4a0f      	ldr	r2, [pc, #60]	@ (801fe78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fe3c:	121b      	asrs	r3, r3, #8
 801fe3e:	6812      	ldr	r2, [r2, #0]
 801fe40:	2bff      	cmp	r3, #255	@ 0xff
 801fe42:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fe46:	d12d      	bne.n	801fea4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fe48:	0953      	lsrs	r3, r2, #5
 801fe4a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fe4e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe52:	f02c 0c07 	bic.w	ip, ip, #7
 801fe56:	ea43 0c0c 	orr.w	ip, r3, ip
 801fe5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe5e:	ea4c 0202 	orr.w	r2, ip, r2
 801fe62:	f8a8 2000 	strh.w	r2, [r8]
 801fe66:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fe68:	441c      	add	r4, r3
 801fe6a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe6c:	f108 0802 	add.w	r8, r8, #2
 801fe70:	441e      	add	r6, r3
 801fe72:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fe76:	e6ba      	b.n	801fbee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fe78:	20014008 	.word	0x20014008
 801fe7c:	2800      	cmp	r0, #0
 801fe7e:	d0ba      	beq.n	801fdf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fe80:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fe82:	442b      	add	r3, r5
 801fe84:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fe88:	07db      	lsls	r3, r3, #31
 801fe8a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fe8e:	bf54      	ite	pl
 801fe90:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fe94:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fe98:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fe9c:	fa5f f38c 	uxtb.w	r3, ip
 801fea0:	930c      	str	r3, [sp, #48]	@ 0x30
 801fea2:	e7a8      	b.n	801fdf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fea4:	f8b8 e000 	ldrh.w	lr, [r8]
 801fea8:	fa1f fa83 	uxth.w	sl, r3
 801feac:	ea4f 202e 	mov.w	r0, lr, asr #8
 801feb0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801feb4:	43db      	mvns	r3, r3
 801feb6:	b2db      	uxtb	r3, r3
 801feb8:	fb11 f10a 	smulbb	r1, r1, sl
 801febc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fec0:	fb00 1003 	mla	r0, r0, r3, r1
 801fec4:	b2d2      	uxtb	r2, r2
 801fec6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801feca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fece:	fa5f fe8e 	uxtb.w	lr, lr
 801fed2:	fb12 f20a 	smulbb	r2, r2, sl
 801fed6:	fb0e 2203 	mla	r2, lr, r3, r2
 801feda:	fa5f fc8c 	uxtb.w	ip, ip
 801fede:	b280      	uxth	r0, r0
 801fee0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fee4:	b292      	uxth	r2, r2
 801fee6:	fb1c fc0a 	smulbb	ip, ip, sl
 801feea:	fb01 cc03 	mla	ip, r1, r3, ip
 801feee:	1c43      	adds	r3, r0, #1
 801fef0:	1c51      	adds	r1, r2, #1
 801fef2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fef6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801fefa:	fa1f fc8c 	uxth.w	ip, ip
 801fefe:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ff02:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ff06:	4308      	orrs	r0, r1
 801ff08:	f10c 0101 	add.w	r1, ip, #1
 801ff0c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ff10:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ff14:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ff18:	ea40 000c 	orr.w	r0, r0, ip
 801ff1c:	f8a8 0000 	strh.w	r0, [r8]
 801ff20:	e7a1      	b.n	801fe66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801ff22:	b017      	add	sp, #92	@ 0x5c
 801ff24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ff28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801ff28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ff2c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801ff30:	2d00      	cmp	r5, #0
 801ff32:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ff36:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801ff3a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801ff3e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801ff42:	fb05 0e03 	mla	lr, r5, r3, r0
 801ff46:	f2c0 80b0 	blt.w	80200aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ff4a:	45a9      	cmp	r9, r5
 801ff4c:	f340 80ad 	ble.w	80200aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ff50:	2800      	cmp	r0, #0
 801ff52:	f2c0 80a8 	blt.w	80200a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ff56:	4580      	cmp	r8, r0
 801ff58:	f340 80a5 	ble.w	80200a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ff5c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ff60:	f01e 0f01 	tst.w	lr, #1
 801ff64:	5d16      	ldrb	r6, [r2, r4]
 801ff66:	bf0c      	ite	eq
 801ff68:	f006 060f 	andeq.w	r6, r6, #15
 801ff6c:	1136      	asrne	r6, r6, #4
 801ff6e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ff72:	b2f6      	uxtb	r6, r6
 801ff74:	1c44      	adds	r4, r0, #1
 801ff76:	f100 809b 	bmi.w	80200b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ff7a:	45a0      	cmp	r8, r4
 801ff7c:	f340 8098 	ble.w	80200b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ff80:	2f00      	cmp	r7, #0
 801ff82:	f000 8097 	beq.w	80200b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801ff86:	f10e 0a01 	add.w	sl, lr, #1
 801ff8a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ff8e:	f01a 0f01 	tst.w	sl, #1
 801ff92:	5d14      	ldrb	r4, [r2, r4]
 801ff94:	bf0c      	ite	eq
 801ff96:	f004 040f 	andeq.w	r4, r4, #15
 801ff9a:	1124      	asrne	r4, r4, #4
 801ff9c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ffa0:	b2e4      	uxtb	r4, r4
 801ffa2:	3501      	adds	r5, #1
 801ffa4:	f100 808a 	bmi.w	80200bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ffa8:	45a9      	cmp	r9, r5
 801ffaa:	f340 8087 	ble.w	80200bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ffae:	f1bc 0f00 	cmp.w	ip, #0
 801ffb2:	f000 8086 	beq.w	80200c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801ffb6:	2800      	cmp	r0, #0
 801ffb8:	db7e      	blt.n	80200b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ffba:	4580      	cmp	r8, r0
 801ffbc:	dd7c      	ble.n	80200b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ffbe:	eb03 090e 	add.w	r9, r3, lr
 801ffc2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801ffc6:	f019 0f01 	tst.w	r9, #1
 801ffca:	5d55      	ldrb	r5, [r2, r5]
 801ffcc:	bf0c      	ite	eq
 801ffce:	f005 050f 	andeq.w	r5, r5, #15
 801ffd2:	112d      	asrne	r5, r5, #4
 801ffd4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ffd8:	b2ed      	uxtb	r5, r5
 801ffda:	3001      	adds	r0, #1
 801ffdc:	d474      	bmi.n	80200c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ffde:	4580      	cmp	r8, r0
 801ffe0:	dd72      	ble.n	80200c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ffe2:	2f00      	cmp	r7, #0
 801ffe4:	d072      	beq.n	80200cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801ffe6:	3301      	adds	r3, #1
 801ffe8:	449e      	add	lr, r3
 801ffea:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ffee:	f01e 0f01 	tst.w	lr, #1
 801fff2:	5cd0      	ldrb	r0, [r2, r3]
 801fff4:	bf0c      	ite	eq
 801fff6:	f000 000f 	andeq.w	r0, r0, #15
 801fffa:	1100      	asrne	r0, r0, #4
 801fffc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020000:	b2c3      	uxtb	r3, r0
 8020002:	b2ba      	uxth	r2, r7
 8020004:	fa1f fc8c 	uxth.w	ip, ip
 8020008:	fb02 f00c 	mul.w	r0, r2, ip
 802000c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020010:	0112      	lsls	r2, r2, #4
 8020012:	fa1f fc8c 	uxth.w	ip, ip
 8020016:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802001a:	1a12      	subs	r2, r2, r0
 802001c:	eba7 070c 	sub.w	r7, r7, ip
 8020020:	b292      	uxth	r2, r2
 8020022:	b2bf      	uxth	r7, r7
 8020024:	4362      	muls	r2, r4
 8020026:	fb06 2207 	mla	r2, r6, r7, r2
 802002a:	fb0c 2505 	mla	r5, ip, r5, r2
 802002e:	fb00 5303 	mla	r3, r0, r3, r5
 8020032:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020036:	b3a3      	cbz	r3, 80200a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8020038:	4a25      	ldr	r2, [pc, #148]	@ (80200d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802003a:	880e      	ldrh	r6, [r1, #0]
 802003c:	6815      	ldr	r5, [r2, #0]
 802003e:	1234      	asrs	r4, r6, #8
 8020040:	b29a      	uxth	r2, r3
 8020042:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8020046:	43db      	mvns	r3, r3
 8020048:	b2db      	uxtb	r3, r3
 802004a:	fb10 f002 	smulbb	r0, r0, r2
 802004e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020052:	fb04 0403 	mla	r4, r4, r3, r0
 8020056:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802005a:	10f0      	asrs	r0, r6, #3
 802005c:	b2ed      	uxtb	r5, r5
 802005e:	00f6      	lsls	r6, r6, #3
 8020060:	fb17 f702 	smulbb	r7, r7, r2
 8020064:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020068:	fb15 f202 	smulbb	r2, r5, r2
 802006c:	b2f6      	uxtb	r6, r6
 802006e:	b2a4      	uxth	r4, r4
 8020070:	fb00 7003 	mla	r0, r0, r3, r7
 8020074:	fb06 2303 	mla	r3, r6, r3, r2
 8020078:	b29a      	uxth	r2, r3
 802007a:	1c63      	adds	r3, r4, #1
 802007c:	b280      	uxth	r0, r0
 802007e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020082:	1c53      	adds	r3, r2, #1
 8020084:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020088:	1c42      	adds	r2, r0, #1
 802008a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802008e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020092:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020096:	0940      	lsrs	r0, r0, #5
 8020098:	4323      	orrs	r3, r4
 802009a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802009e:	4303      	orrs	r3, r0
 80200a0:	800b      	strh	r3, [r1, #0]
 80200a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80200a6:	2600      	movs	r6, #0
 80200a8:	e764      	b.n	801ff74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80200aa:	2400      	movs	r4, #0
 80200ac:	4626      	mov	r6, r4
 80200ae:	e778      	b.n	801ffa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80200b0:	2400      	movs	r4, #0
 80200b2:	e776      	b.n	801ffa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80200b4:	463c      	mov	r4, r7
 80200b6:	e774      	b.n	801ffa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80200b8:	2500      	movs	r5, #0
 80200ba:	e78e      	b.n	801ffda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80200bc:	2300      	movs	r3, #0
 80200be:	461d      	mov	r5, r3
 80200c0:	e79f      	b.n	8020002 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80200c2:	4663      	mov	r3, ip
 80200c4:	4665      	mov	r5, ip
 80200c6:	e79c      	b.n	8020002 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80200c8:	2300      	movs	r3, #0
 80200ca:	e79a      	b.n	8020002 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80200cc:	463b      	mov	r3, r7
 80200ce:	e798      	b.n	8020002 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80200d0:	20014008 	.word	0x20014008

080200d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80200d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200d8:	b093      	sub	sp, #76	@ 0x4c
 80200da:	461d      	mov	r5, r3
 80200dc:	920c      	str	r2, [sp, #48]	@ 0x30
 80200de:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80200e0:	9107      	str	r1, [sp, #28]
 80200e2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80200e6:	9011      	str	r0, [sp, #68]	@ 0x44
 80200e8:	6850      	ldr	r0, [r2, #4]
 80200ea:	6812      	ldr	r2, [r2, #0]
 80200ec:	fb00 1303 	mla	r3, r0, r3, r1
 80200f0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80200f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80200f6:	689b      	ldr	r3, [r3, #8]
 80200f8:	3301      	adds	r3, #1
 80200fa:	f023 0301 	bic.w	r3, r3, #1
 80200fe:	9306      	str	r3, [sp, #24]
 8020100:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020102:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020106:	681f      	ldr	r7, [r3, #0]
 8020108:	9b07      	ldr	r3, [sp, #28]
 802010a:	2b00      	cmp	r3, #0
 802010c:	dc03      	bgt.n	8020116 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802010e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020110:	2b00      	cmp	r3, #0
 8020112:	f340 8267 	ble.w	80205e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020116:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020118:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802011c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020120:	1e48      	subs	r0, r1, #1
 8020122:	f102 3cff 	add.w	ip, r2, #4294967295
 8020126:	2d00      	cmp	r5, #0
 8020128:	f340 80b8 	ble.w	802029c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802012c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020130:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020134:	d406      	bmi.n	8020144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020136:	4586      	cmp	lr, r0
 8020138:	da04      	bge.n	8020144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802013a:	2b00      	cmp	r3, #0
 802013c:	db02      	blt.n	8020144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802013e:	4563      	cmp	r3, ip
 8020140:	f2c0 80ad 	blt.w	802029e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8020144:	f11e 0e01 	adds.w	lr, lr, #1
 8020148:	f100 80a0 	bmi.w	802028c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802014c:	4571      	cmp	r1, lr
 802014e:	f2c0 809d 	blt.w	802028c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020152:	3301      	adds	r3, #1
 8020154:	f100 809a 	bmi.w	802028c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020158:	429a      	cmp	r2, r3
 802015a:	f2c0 8097 	blt.w	802028c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802015e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020162:	9509      	str	r5, [sp, #36]	@ 0x24
 8020164:	46c8      	mov	r8, r9
 8020166:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020168:	2b00      	cmp	r3, #0
 802016a:	f340 80b6 	ble.w	80202da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802016e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020172:	9308      	str	r3, [sp, #32]
 8020174:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020176:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802017a:	1423      	asrs	r3, r4, #16
 802017c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020180:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020184:	f100 813e 	bmi.w	8020404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020188:	f10c 3bff 	add.w	fp, ip, #4294967295
 802018c:	455b      	cmp	r3, fp
 802018e:	f280 8139 	bge.w	8020404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020192:	2800      	cmp	r0, #0
 8020194:	f2c0 8136 	blt.w	8020404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020198:	f10e 3bff 	add.w	fp, lr, #4294967295
 802019c:	4558      	cmp	r0, fp
 802019e:	f280 8131 	bge.w	8020404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80201a2:	9a06      	ldr	r2, [sp, #24]
 80201a4:	fb00 3302 	mla	r3, r0, r2, r3
 80201a8:	0858      	lsrs	r0, r3, #1
 80201aa:	07da      	lsls	r2, r3, #31
 80201ac:	f817 c000 	ldrb.w	ip, [r7, r0]
 80201b0:	9a08      	ldr	r2, [sp, #32]
 80201b2:	bf54      	ite	pl
 80201b4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80201b8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80201bc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80201c0:	fa5f fc8c 	uxtb.w	ip, ip
 80201c4:	2a00      	cmp	r2, #0
 80201c6:	f000 80cb 	beq.w	8020360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80201ca:	1c58      	adds	r0, r3, #1
 80201cc:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80201d0:	07c0      	lsls	r0, r0, #31
 80201d2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80201d6:	bf54      	ite	pl
 80201d8:	f00e 0e0f 	andpl.w	lr, lr, #15
 80201dc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80201e0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80201e4:	fa5f fe8e 	uxtb.w	lr, lr
 80201e8:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 80201ec:	b1b9      	cbz	r1, 802021e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80201ee:	4453      	add	r3, sl
 80201f0:	0858      	lsrs	r0, r3, #1
 80201f2:	07da      	lsls	r2, r3, #31
 80201f4:	5c38      	ldrb	r0, [r7, r0]
 80201f6:	bf54      	ite	pl
 80201f8:	f000 000f 	andpl.w	r0, r0, #15
 80201fc:	1100      	asrmi	r0, r0, #4
 80201fe:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020202:	b2c0      	uxtb	r0, r0
 8020204:	900a      	str	r0, [sp, #40]	@ 0x28
 8020206:	1c58      	adds	r0, r3, #1
 8020208:	0843      	lsrs	r3, r0, #1
 802020a:	07c2      	lsls	r2, r0, #31
 802020c:	5cfb      	ldrb	r3, [r7, r3]
 802020e:	bf54      	ite	pl
 8020210:	f003 030f 	andpl.w	r3, r3, #15
 8020214:	111b      	asrmi	r3, r3, #4
 8020216:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802021a:	b2db      	uxtb	r3, r3
 802021c:	930e      	str	r3, [sp, #56]	@ 0x38
 802021e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020222:	b289      	uxth	r1, r1
 8020224:	fb02 f301 	mul.w	r3, r2, r1
 8020228:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802022c:	0112      	lsls	r2, r2, #4
 802022e:	b289      	uxth	r1, r1
 8020230:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8020234:	1a40      	subs	r0, r0, r1
 8020236:	fa1f fe80 	uxth.w	lr, r0
 802023a:	1ad2      	subs	r2, r2, r3
 802023c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802023e:	b292      	uxth	r2, r2
 8020240:	4342      	muls	r2, r0
 8020242:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8020246:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020248:	fb01 c102 	mla	r1, r1, r2, ip
 802024c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802024e:	fb03 1302 	mla	r3, r3, r2, r1
 8020252:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020256:	2bff      	cmp	r3, #255	@ 0xff
 8020258:	f040 8093 	bne.w	8020382 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802025c:	4bbe      	ldr	r3, [pc, #760]	@ (8020558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802025e:	681a      	ldr	r2, [r3, #0]
 8020260:	4bbe      	ldr	r3, [pc, #760]	@ (802055c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020262:	0951      	lsrs	r1, r2, #5
 8020264:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020268:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802026c:	430b      	orrs	r3, r1
 802026e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020272:	4313      	orrs	r3, r2
 8020274:	f8a8 3000 	strh.w	r3, [r8]
 8020278:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802027a:	441c      	add	r4, r3
 802027c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802027e:	441e      	add	r6, r3
 8020280:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020282:	3b01      	subs	r3, #1
 8020284:	f108 0802 	add.w	r8, r8, #2
 8020288:	9309      	str	r3, [sp, #36]	@ 0x24
 802028a:	e76c      	b.n	8020166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802028c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802028e:	441c      	add	r4, r3
 8020290:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020292:	3d01      	subs	r5, #1
 8020294:	441e      	add	r6, r3
 8020296:	f109 0902 	add.w	r9, r9, #2
 802029a:	e744      	b.n	8020126 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802029c:	d021      	beq.n	80202e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802029e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80202a0:	1e6b      	subs	r3, r5, #1
 80202a2:	fb00 4003 	mla	r0, r0, r3, r4
 80202a6:	1400      	asrs	r0, r0, #16
 80202a8:	f53f af59 	bmi.w	802015e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80202ac:	3901      	subs	r1, #1
 80202ae:	4288      	cmp	r0, r1
 80202b0:	f6bf af55 	bge.w	802015e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80202b4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80202b6:	fb01 6303 	mla	r3, r1, r3, r6
 80202ba:	141b      	asrs	r3, r3, #16
 80202bc:	f53f af4f 	bmi.w	802015e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80202c0:	3a01      	subs	r2, #1
 80202c2:	4293      	cmp	r3, r2
 80202c4:	f6bf af4b 	bge.w	802015e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80202c8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80202cc:	9308      	str	r3, [sp, #32]
 80202ce:	46a8      	mov	r8, r5
 80202d0:	46ce      	mov	lr, r9
 80202d2:	f1b8 0f00 	cmp.w	r8, #0
 80202d6:	f300 80b5 	bgt.w	8020444 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80202da:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80202de:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80202e2:	9b07      	ldr	r3, [sp, #28]
 80202e4:	2b00      	cmp	r3, #0
 80202e6:	f340 817d 	ble.w	80205e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80202ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80202ee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80202f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80202f6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80202f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020300:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020304:	eef0 6a62 	vmov.f32	s13, s5
 8020308:	ee61 7a27 	vmul.f32	s15, s2, s15
 802030c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020310:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020314:	ee16 4a90 	vmov	r4, s13
 8020318:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802031c:	eef0 6a43 	vmov.f32	s13, s6
 8020320:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020324:	ee12 2a90 	vmov	r2, s5
 8020328:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802032c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020330:	ee13 2a10 	vmov	r2, s6
 8020334:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020336:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020338:	fb92 f3f3 	sdiv	r3, r2, r3
 802033c:	9320      	str	r3, [sp, #128]	@ 0x80
 802033e:	9b07      	ldr	r3, [sp, #28]
 8020340:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020342:	3b01      	subs	r3, #1
 8020344:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020348:	9307      	str	r3, [sp, #28]
 802034a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802034c:	ee16 6a90 	vmov	r6, s13
 8020350:	bf14      	ite	ne
 8020352:	461d      	movne	r5, r3
 8020354:	4615      	moveq	r5, r2
 8020356:	eeb0 3a67 	vmov.f32	s6, s15
 802035a:	eef0 2a47 	vmov.f32	s5, s14
 802035e:	e6d3      	b.n	8020108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020360:	2900      	cmp	r1, #0
 8020362:	f43f af5c 	beq.w	802021e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020366:	eb0a 0003 	add.w	r0, sl, r3
 802036a:	0843      	lsrs	r3, r0, #1
 802036c:	07c0      	lsls	r0, r0, #31
 802036e:	5cfb      	ldrb	r3, [r7, r3]
 8020370:	bf54      	ite	pl
 8020372:	f003 030f 	andpl.w	r3, r3, #15
 8020376:	111b      	asrmi	r3, r3, #4
 8020378:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802037c:	b2db      	uxtb	r3, r3
 802037e:	930a      	str	r3, [sp, #40]	@ 0x28
 8020380:	e74d      	b.n	802021e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020382:	2b00      	cmp	r3, #0
 8020384:	f43f af78 	beq.w	8020278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020388:	4a73      	ldr	r2, [pc, #460]	@ (8020558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802038a:	f8b8 c000 	ldrh.w	ip, [r8]
 802038e:	6810      	ldr	r0, [r2, #0]
 8020390:	fa1f fe83 	uxth.w	lr, r3
 8020394:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020398:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802039c:	43db      	mvns	r3, r3
 802039e:	b2db      	uxtb	r3, r3
 80203a0:	fb12 f20e 	smulbb	r2, r2, lr
 80203a4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80203a8:	fb01 2103 	mla	r1, r1, r3, r2
 80203ac:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80203b0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80203b4:	b2c0      	uxtb	r0, r0
 80203b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80203ba:	fb1b fb0e 	smulbb	fp, fp, lr
 80203be:	b289      	uxth	r1, r1
 80203c0:	fb10 fe0e 	smulbb	lr, r0, lr
 80203c4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80203c8:	fa5f fc8c 	uxtb.w	ip, ip
 80203cc:	fb02 b203 	mla	r2, r2, r3, fp
 80203d0:	1c48      	adds	r0, r1, #1
 80203d2:	fb0c e303 	mla	r3, ip, r3, lr
 80203d6:	b292      	uxth	r2, r2
 80203d8:	b29b      	uxth	r3, r3
 80203da:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80203de:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 80203e2:	f102 0b01 	add.w	fp, r2, #1
 80203e6:	1c59      	adds	r1, r3, #1
 80203e8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80203ec:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80203f0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80203f4:	0952      	lsrs	r2, r2, #5
 80203f6:	4301      	orrs	r1, r0
 80203f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80203fc:	4311      	orrs	r1, r2
 80203fe:	f8a8 1000 	strh.w	r1, [r8]
 8020402:	e739      	b.n	8020278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020404:	f113 0b01 	adds.w	fp, r3, #1
 8020408:	f53f af36 	bmi.w	8020278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802040c:	45dc      	cmp	ip, fp
 802040e:	f6ff af33 	blt.w	8020278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020412:	f110 0b01 	adds.w	fp, r0, #1
 8020416:	f53f af2f 	bmi.w	8020278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802041a:	45de      	cmp	lr, fp
 802041c:	f6ff af2c 	blt.w	8020278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020420:	9a08      	ldr	r2, [sp, #32]
 8020422:	9302      	str	r3, [sp, #8]
 8020424:	fa0f f38e 	sxth.w	r3, lr
 8020428:	9301      	str	r3, [sp, #4]
 802042a:	fa0f f38c 	sxth.w	r3, ip
 802042e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020432:	9105      	str	r1, [sp, #20]
 8020434:	9300      	str	r3, [sp, #0]
 8020436:	463a      	mov	r2, r7
 8020438:	4653      	mov	r3, sl
 802043a:	4641      	mov	r1, r8
 802043c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802043e:	f7ff fd73 	bl	801ff28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020442:	e719      	b.n	8020278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020444:	9906      	ldr	r1, [sp, #24]
 8020446:	1422      	asrs	r2, r4, #16
 8020448:	1433      	asrs	r3, r6, #16
 802044a:	fb01 2303 	mla	r3, r1, r3, r2
 802044e:	085a      	lsrs	r2, r3, #1
 8020450:	07d9      	lsls	r1, r3, #31
 8020452:	5cba      	ldrb	r2, [r7, r2]
 8020454:	bf54      	ite	pl
 8020456:	f002 020f 	andpl.w	r2, r2, #15
 802045a:	1112      	asrmi	r2, r2, #4
 802045c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020460:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020464:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020468:	b2d2      	uxtb	r2, r2
 802046a:	2800      	cmp	r0, #0
 802046c:	d062      	beq.n	8020534 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802046e:	f103 0a01 	add.w	sl, r3, #1
 8020472:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020476:	f01a 0f01 	tst.w	sl, #1
 802047a:	5c79      	ldrb	r1, [r7, r1]
 802047c:	bf0c      	ite	eq
 802047e:	f001 010f 	andeq.w	r1, r1, #15
 8020482:	1109      	asrne	r1, r1, #4
 8020484:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020488:	b2c9      	uxtb	r1, r1
 802048a:	910f      	str	r1, [sp, #60]	@ 0x3c
 802048c:	f1bc 0f00 	cmp.w	ip, #0
 8020490:	d019      	beq.n	80204c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020492:	9908      	ldr	r1, [sp, #32]
 8020494:	440b      	add	r3, r1
 8020496:	0859      	lsrs	r1, r3, #1
 8020498:	f013 0f01 	tst.w	r3, #1
 802049c:	5c79      	ldrb	r1, [r7, r1]
 802049e:	bf0c      	ite	eq
 80204a0:	f001 010f 	andeq.w	r1, r1, #15
 80204a4:	1109      	asrne	r1, r1, #4
 80204a6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80204aa:	b2c9      	uxtb	r1, r1
 80204ac:	3301      	adds	r3, #1
 80204ae:	910b      	str	r1, [sp, #44]	@ 0x2c
 80204b0:	0859      	lsrs	r1, r3, #1
 80204b2:	07db      	lsls	r3, r3, #31
 80204b4:	5c79      	ldrb	r1, [r7, r1]
 80204b6:	bf54      	ite	pl
 80204b8:	f001 010f 	andpl.w	r1, r1, #15
 80204bc:	1109      	asrmi	r1, r1, #4
 80204be:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80204c2:	b2c9      	uxtb	r1, r1
 80204c4:	9110      	str	r1, [sp, #64]	@ 0x40
 80204c6:	b280      	uxth	r0, r0
 80204c8:	fa1f fc8c 	uxth.w	ip, ip
 80204cc:	fb00 f30c 	mul.w	r3, r0, ip
 80204d0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80204d4:	0100      	lsls	r0, r0, #4
 80204d6:	fa1f fc8c 	uxth.w	ip, ip
 80204da:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80204de:	eba1 010c 	sub.w	r1, r1, ip
 80204e2:	fa1f fa81 	uxth.w	sl, r1
 80204e6:	1ac0      	subs	r0, r0, r3
 80204e8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80204ea:	b280      	uxth	r0, r0
 80204ec:	4348      	muls	r0, r1
 80204ee:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80204f0:	fb02 020a 	mla	r2, r2, sl, r0
 80204f4:	fb0c 2c01 	mla	ip, ip, r1, r2
 80204f8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80204fa:	fb03 c302 	mla	r3, r3, r2, ip
 80204fe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020502:	2bff      	cmp	r3, #255	@ 0xff
 8020504:	d12c      	bne.n	8020560 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020506:	4b14      	ldr	r3, [pc, #80]	@ (8020558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020508:	681a      	ldr	r2, [r3, #0]
 802050a:	4b14      	ldr	r3, [pc, #80]	@ (802055c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802050c:	0951      	lsrs	r1, r2, #5
 802050e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020512:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020516:	430b      	orrs	r3, r1
 8020518:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802051c:	4313      	orrs	r3, r2
 802051e:	f8ae 3000 	strh.w	r3, [lr]
 8020522:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020524:	441c      	add	r4, r3
 8020526:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020528:	f10e 0e02 	add.w	lr, lr, #2
 802052c:	441e      	add	r6, r3
 802052e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020532:	e6ce      	b.n	80202d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8020534:	f1bc 0f00 	cmp.w	ip, #0
 8020538:	d0c5      	beq.n	80204c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802053a:	9908      	ldr	r1, [sp, #32]
 802053c:	440b      	add	r3, r1
 802053e:	0859      	lsrs	r1, r3, #1
 8020540:	07db      	lsls	r3, r3, #31
 8020542:	5c79      	ldrb	r1, [r7, r1]
 8020544:	bf54      	ite	pl
 8020546:	f001 010f 	andpl.w	r1, r1, #15
 802054a:	1109      	asrmi	r1, r1, #4
 802054c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020550:	b2c9      	uxtb	r1, r1
 8020552:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020554:	e7b7      	b.n	80204c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020556:	bf00      	nop
 8020558:	20014008 	.word	0x20014008
 802055c:	fffff800 	.word	0xfffff800
 8020560:	2b00      	cmp	r3, #0
 8020562:	d0de      	beq.n	8020522 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020564:	4a21      	ldr	r2, [pc, #132]	@ (80205ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020566:	f8be c000 	ldrh.w	ip, [lr]
 802056a:	6810      	ldr	r0, [r2, #0]
 802056c:	fa1f fa83 	uxth.w	sl, r3
 8020570:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020574:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020578:	43db      	mvns	r3, r3
 802057a:	b2db      	uxtb	r3, r3
 802057c:	fb12 f20a 	smulbb	r2, r2, sl
 8020580:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020584:	fb01 2103 	mla	r1, r1, r3, r2
 8020588:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802058c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020590:	b2c0      	uxtb	r0, r0
 8020592:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020596:	fa5f fc8c 	uxtb.w	ip, ip
 802059a:	fb10 f00a 	smulbb	r0, r0, sl
 802059e:	fb0c 0003 	mla	r0, ip, r3, r0
 80205a2:	b289      	uxth	r1, r1
 80205a4:	fb1b fb0a 	smulbb	fp, fp, sl
 80205a8:	b280      	uxth	r0, r0
 80205aa:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80205ae:	fb02 b203 	mla	r2, r2, r3, fp
 80205b2:	1c4b      	adds	r3, r1, #1
 80205b4:	f100 0b01 	add.w	fp, r0, #1
 80205b8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80205bc:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80205c0:	b292      	uxth	r2, r2
 80205c2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80205c6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80205ca:	ea4b 0101 	orr.w	r1, fp, r1
 80205ce:	f102 0b01 	add.w	fp, r2, #1
 80205d2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80205d6:	0952      	lsrs	r2, r2, #5
 80205d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80205dc:	4311      	orrs	r1, r2
 80205de:	f8ae 1000 	strh.w	r1, [lr]
 80205e2:	e79e      	b.n	8020522 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80205e4:	b013      	add	sp, #76	@ 0x4c
 80205e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205ea:	bf00      	nop
 80205ec:	20014008 	.word	0x20014008

080205f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80205f0:	b570      	push	{r4, r5, r6, lr}
 80205f2:	1208      	asrs	r0, r1, #8
 80205f4:	b29e      	uxth	r6, r3
 80205f6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80205fa:	1213      	asrs	r3, r2, #8
 80205fc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020600:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020604:	fb13 f305 	smulbb	r3, r3, r5
 8020608:	fb10 f006 	smulbb	r0, r0, r6
 802060c:	4418      	add	r0, r3
 802060e:	10cc      	asrs	r4, r1, #3
 8020610:	10d3      	asrs	r3, r2, #3
 8020612:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020616:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802061a:	fb13 f305 	smulbb	r3, r3, r5
 802061e:	fb14 f406 	smulbb	r4, r4, r6
 8020622:	00c9      	lsls	r1, r1, #3
 8020624:	00d2      	lsls	r2, r2, #3
 8020626:	441c      	add	r4, r3
 8020628:	b2d2      	uxtb	r2, r2
 802062a:	b2cb      	uxtb	r3, r1
 802062c:	fb12 f205 	smulbb	r2, r2, r5
 8020630:	b280      	uxth	r0, r0
 8020632:	fb13 f306 	smulbb	r3, r3, r6
 8020636:	4413      	add	r3, r2
 8020638:	1c42      	adds	r2, r0, #1
 802063a:	b29b      	uxth	r3, r3
 802063c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020640:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8020644:	1c58      	adds	r0, r3, #1
 8020646:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802064a:	b2a4      	uxth	r4, r4
 802064c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020650:	4310      	orrs	r0, r2
 8020652:	1c62      	adds	r2, r4, #1
 8020654:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020658:	0964      	lsrs	r4, r4, #5
 802065a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802065e:	4320      	orrs	r0, r4
 8020660:	bd70      	pop	{r4, r5, r6, pc}
	...

08020664 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8020664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020668:	b08f      	sub	sp, #60	@ 0x3c
 802066a:	461c      	mov	r4, r3
 802066c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020670:	9004      	str	r0, [sp, #16]
 8020672:	460d      	mov	r5, r1
 8020674:	4616      	mov	r6, r2
 8020676:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020678:	2f00      	cmp	r7, #0
 802067a:	f000 80f6 	beq.w	802086a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802067e:	6820      	ldr	r0, [r4, #0]
 8020680:	6861      	ldr	r1, [r4, #4]
 8020682:	aa0a      	add	r2, sp, #40	@ 0x28
 8020684:	c203      	stmia	r2!, {r0, r1}
 8020686:	6818      	ldr	r0, [r3, #0]
 8020688:	6859      	ldr	r1, [r3, #4]
 802068a:	aa0c      	add	r2, sp, #48	@ 0x30
 802068c:	c203      	stmia	r2!, {r0, r1}
 802068e:	a80a      	add	r0, sp, #40	@ 0x28
 8020690:	f7ee fdda 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020694:	4621      	mov	r1, r4
 8020696:	a80c      	add	r0, sp, #48	@ 0x30
 8020698:	f7ee fdfe 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802069c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80206a0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80206a4:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80206a8:	f002 0301 	and.w	r3, r2, #1
 80206ac:	9306      	str	r3, [sp, #24]
 80206ae:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80206b2:	f003 0101 	and.w	r1, r3, #1
 80206b6:	9105      	str	r1, [sp, #20]
 80206b8:	9805      	ldr	r0, [sp, #20]
 80206ba:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80206be:	4403      	add	r3, r0
 80206c0:	fb01 2303 	mla	r3, r1, r3, r2
 80206c4:	f04f 0802 	mov.w	r8, #2
 80206c8:	fb93 f3f8 	sdiv	r3, r3, r8
 80206cc:	441d      	add	r5, r3
 80206ce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80206d2:	441a      	add	r2, r3
 80206d4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80206d8:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80206dc:	4419      	add	r1, r3
 80206de:	4b64      	ldr	r3, [pc, #400]	@ (8020870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80206e0:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80206e4:	6818      	ldr	r0, [r3, #0]
 80206e6:	6803      	ldr	r3, [r0, #0]
 80206e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80206ea:	4798      	blx	r3
 80206ec:	4a61      	ldr	r2, [pc, #388]	@ (8020874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80206ee:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80206f2:	8813      	ldrh	r3, [r2, #0]
 80206f4:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 80206f8:	2fff      	cmp	r7, #255	@ 0xff
 80206fa:	fb03 a404 	mla	r4, r3, r4, sl
 80206fe:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020702:	f106 0604 	add.w	r6, r6, #4
 8020706:	4611      	mov	r1, r2
 8020708:	fb03 fb0b 	mul.w	fp, r3, fp
 802070c:	d06b      	beq.n	80207e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802070e:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8020712:	9303      	str	r3, [sp, #12]
 8020714:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8020718:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802071c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020720:	9b07      	ldr	r3, [sp, #28]
 8020722:	42a3      	cmp	r3, r4
 8020724:	f240 809c 	bls.w	8020860 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020728:	9b06      	ldr	r3, [sp, #24]
 802072a:	2b00      	cmp	r3, #0
 802072c:	d039      	beq.n	80207a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802072e:	782b      	ldrb	r3, [r5, #0]
 8020730:	8822      	ldrh	r2, [r4, #0]
 8020732:	9804      	ldr	r0, [sp, #16]
 8020734:	f003 030f 	and.w	r3, r3, #15
 8020738:	f105 0801 	add.w	r8, r5, #1
 802073c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020740:	9b03      	ldr	r3, [sp, #12]
 8020742:	9300      	str	r3, [sp, #0]
 8020744:	463b      	mov	r3, r7
 8020746:	f7ff ff53 	bl	80205f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802074a:	f824 0b02 	strh.w	r0, [r4], #2
 802074e:	f109 3bff 	add.w	fp, r9, #4294967295
 8020752:	f1bb 0f01 	cmp.w	fp, #1
 8020756:	46a2      	mov	sl, r4
 8020758:	f104 0404 	add.w	r4, r4, #4
 802075c:	dd24      	ble.n	80207a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802075e:	f898 3000 	ldrb.w	r3, [r8]
 8020762:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020766:	9804      	ldr	r0, [sp, #16]
 8020768:	091b      	lsrs	r3, r3, #4
 802076a:	f1ab 0b02 	sub.w	fp, fp, #2
 802076e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020772:	9b03      	ldr	r3, [sp, #12]
 8020774:	9300      	str	r3, [sp, #0]
 8020776:	463b      	mov	r3, r7
 8020778:	f7ff ff3a 	bl	80205f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802077c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020780:	f818 3b01 	ldrb.w	r3, [r8], #1
 8020784:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020788:	9804      	ldr	r0, [sp, #16]
 802078a:	f003 030f 	and.w	r3, r3, #15
 802078e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020792:	9b03      	ldr	r3, [sp, #12]
 8020794:	9300      	str	r3, [sp, #0]
 8020796:	463b      	mov	r3, r7
 8020798:	f7ff ff2a 	bl	80205f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802079c:	f824 0c02 	strh.w	r0, [r4, #-2]
 80207a0:	e7d7      	b.n	8020752 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80207a2:	46a8      	mov	r8, r5
 80207a4:	46cb      	mov	fp, r9
 80207a6:	e7d4      	b.n	8020752 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80207a8:	d10e      	bne.n	80207c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80207aa:	f898 3000 	ldrb.w	r3, [r8]
 80207ae:	f8ba 2000 	ldrh.w	r2, [sl]
 80207b2:	9804      	ldr	r0, [sp, #16]
 80207b4:	091b      	lsrs	r3, r3, #4
 80207b6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80207ba:	9b03      	ldr	r3, [sp, #12]
 80207bc:	9300      	str	r3, [sp, #0]
 80207be:	463b      	mov	r3, r7
 80207c0:	f7ff ff16 	bl	80205f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80207c4:	f82a 0b02 	strh.w	r0, [sl], #2
 80207c8:	9b08      	ldr	r3, [sp, #32]
 80207ca:	9a05      	ldr	r2, [sp, #20]
 80207cc:	881c      	ldrh	r4, [r3, #0]
 80207ce:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80207d2:	eba4 0409 	sub.w	r4, r4, r9
 80207d6:	4413      	add	r3, r2
 80207d8:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80207dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80207de:	fb93 f3f2 	sdiv	r3, r3, r2
 80207e2:	441d      	add	r5, r3
 80207e4:	e79c      	b.n	8020720 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80207e6:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80207ea:	45a3      	cmp	fp, r4
 80207ec:	d938      	bls.n	8020860 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80207ee:	9b06      	ldr	r3, [sp, #24]
 80207f0:	b1f3      	cbz	r3, 8020830 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80207f2:	782b      	ldrb	r3, [r5, #0]
 80207f4:	f003 030f 	and.w	r3, r3, #15
 80207f8:	1c6a      	adds	r2, r5, #1
 80207fa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207fe:	8023      	strh	r3, [r4, #0]
 8020800:	f109 30ff 	add.w	r0, r9, #4294967295
 8020804:	3402      	adds	r4, #2
 8020806:	2801      	cmp	r0, #1
 8020808:	4623      	mov	r3, r4
 802080a:	f104 0404 	add.w	r4, r4, #4
 802080e:	dd12      	ble.n	8020836 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020810:	7813      	ldrb	r3, [r2, #0]
 8020812:	091b      	lsrs	r3, r3, #4
 8020814:	3802      	subs	r0, #2
 8020816:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802081a:	f824 3c04 	strh.w	r3, [r4, #-4]
 802081e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020822:	f003 030f 	and.w	r3, r3, #15
 8020826:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802082a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802082e:	e7ea      	b.n	8020806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020830:	462a      	mov	r2, r5
 8020832:	4648      	mov	r0, r9
 8020834:	e7e7      	b.n	8020806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020836:	d106      	bne.n	8020846 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020838:	7812      	ldrb	r2, [r2, #0]
 802083a:	0912      	lsrs	r2, r2, #4
 802083c:	3302      	adds	r3, #2
 802083e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020842:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020846:	880c      	ldrh	r4, [r1, #0]
 8020848:	9a05      	ldr	r2, [sp, #20]
 802084a:	eba4 0409 	sub.w	r4, r4, r9
 802084e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020852:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020856:	4413      	add	r3, r2
 8020858:	fb93 f3f8 	sdiv	r3, r3, r8
 802085c:	441d      	add	r5, r3
 802085e:	e7c4      	b.n	80207ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8020860:	4b03      	ldr	r3, [pc, #12]	@ (8020870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020862:	6818      	ldr	r0, [r3, #0]
 8020864:	6803      	ldr	r3, [r0, #0]
 8020866:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020868:	4798      	blx	r3
 802086a:	b00f      	add	sp, #60	@ 0x3c
 802086c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020870:	20013ff8 	.word	0x20013ff8
 8020874:	20013ff0 	.word	0x20013ff0

08020878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020878:	b5f0      	push	{r4, r5, r6, r7, lr}
 802087a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802087e:	2dff      	cmp	r5, #255	@ 0xff
 8020880:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8020884:	d10c      	bne.n	80208a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020886:	2bff      	cmp	r3, #255	@ 0xff
 8020888:	d10a      	bne.n	80208a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802088a:	4b25      	ldr	r3, [pc, #148]	@ (8020920 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802088c:	0948      	lsrs	r0, r1, #5
 802088e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020892:	403b      	ands	r3, r7
 8020894:	4318      	orrs	r0, r3
 8020896:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802089a:	4308      	orrs	r0, r1
 802089c:	b280      	uxth	r0, r0
 802089e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80208a0:	fb15 f503 	smulbb	r5, r5, r3
 80208a4:	b2ab      	uxth	r3, r5
 80208a6:	1c5d      	adds	r5, r3, #1
 80208a8:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80208ac:	1214      	asrs	r4, r2, #8
 80208ae:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80208b2:	fa1f fc85 	uxth.w	ip, r5
 80208b6:	10d6      	asrs	r6, r2, #3
 80208b8:	00d0      	lsls	r0, r2, #3
 80208ba:	43ed      	mvns	r5, r5
 80208bc:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80208c0:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80208c4:	b2eb      	uxtb	r3, r5
 80208c6:	b2c0      	uxtb	r0, r0
 80208c8:	fb12 f20c 	smulbb	r2, r2, ip
 80208cc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80208d0:	fb04 2403 	mla	r4, r4, r3, r2
 80208d4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80208d8:	b2c8      	uxtb	r0, r1
 80208da:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80208de:	b2fd      	uxtb	r5, r7
 80208e0:	fb10 f00c 	smulbb	r0, r0, ip
 80208e4:	b2a4      	uxth	r4, r4
 80208e6:	fb02 0003 	mla	r0, r2, r3, r0
 80208ea:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80208ee:	fb15 f50c 	smulbb	r5, r5, ip
 80208f2:	fb06 5503 	mla	r5, r6, r3, r5
 80208f6:	b283      	uxth	r3, r0
 80208f8:	1c60      	adds	r0, r4, #1
 80208fa:	b2ad      	uxth	r5, r5
 80208fc:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8020900:	1c58      	adds	r0, r3, #1
 8020902:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020906:	1c6b      	adds	r3, r5, #1
 8020908:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802090c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020910:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020914:	096d      	lsrs	r5, r5, #5
 8020916:	4320      	orrs	r0, r4
 8020918:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802091c:	4328      	orrs	r0, r5
 802091e:	e7be      	b.n	802089e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020920:	00fff800 	.word	0x00fff800

08020924 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020928:	461c      	mov	r4, r3
 802092a:	b08d      	sub	sp, #52	@ 0x34
 802092c:	460d      	mov	r5, r1
 802092e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020930:	6861      	ldr	r1, [r4, #4]
 8020932:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8020936:	4680      	mov	r8, r0
 8020938:	6820      	ldr	r0, [r4, #0]
 802093a:	4616      	mov	r6, r2
 802093c:	aa08      	add	r2, sp, #32
 802093e:	c203      	stmia	r2!, {r0, r1}
 8020940:	6818      	ldr	r0, [r3, #0]
 8020942:	6859      	ldr	r1, [r3, #4]
 8020944:	aa0a      	add	r2, sp, #40	@ 0x28
 8020946:	c203      	stmia	r2!, {r0, r1}
 8020948:	a808      	add	r0, sp, #32
 802094a:	f7ee fc7d 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802094e:	4621      	mov	r1, r4
 8020950:	a80a      	add	r0, sp, #40	@ 0x28
 8020952:	f7ee fca1 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020956:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802095a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 802095e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8020962:	f002 0301 	and.w	r3, r2, #1
 8020966:	9303      	str	r3, [sp, #12]
 8020968:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802096c:	f003 0101 	and.w	r1, r3, #1
 8020970:	9102      	str	r1, [sp, #8]
 8020972:	9802      	ldr	r0, [sp, #8]
 8020974:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8020978:	4403      	add	r3, r0
 802097a:	fb01 2303 	mla	r3, r1, r3, r2
 802097e:	f04f 0a02 	mov.w	sl, #2
 8020982:	fb93 f3fa 	sdiv	r3, r3, sl
 8020986:	441d      	add	r5, r3
 8020988:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802098c:	441a      	add	r2, r3
 802098e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8020992:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8020996:	4a3f      	ldr	r2, [pc, #252]	@ (8020a94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8020998:	9205      	str	r2, [sp, #20]
 802099a:	4419      	add	r1, r3
 802099c:	6810      	ldr	r0, [r2, #0]
 802099e:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80209a2:	6803      	ldr	r3, [r0, #0]
 80209a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80209a6:	4798      	blx	r3
 80209a8:	4b3b      	ldr	r3, [pc, #236]	@ (8020a98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80209aa:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80209ae:	8819      	ldrh	r1, [r3, #0]
 80209b0:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 80209b4:	fb01 c404 	mla	r4, r1, r4, ip
 80209b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80209bc:	434f      	muls	r7, r1
 80209be:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80209c2:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80209c6:	3604      	adds	r6, #4
 80209c8:	9204      	str	r2, [sp, #16]
 80209ca:	9b04      	ldr	r3, [sp, #16]
 80209cc:	429c      	cmp	r4, r3
 80209ce:	d258      	bcs.n	8020a82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80209d0:	9b03      	ldr	r3, [sp, #12]
 80209d2:	2b00      	cmp	r3, #0
 80209d4:	d034      	beq.n	8020a40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80209d6:	782b      	ldrb	r3, [r5, #0]
 80209d8:	f003 030f 	and.w	r3, r3, #15
 80209dc:	1c6f      	adds	r7, r5, #1
 80209de:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80209e2:	0e0b      	lsrs	r3, r1, #24
 80209e4:	d006      	beq.n	80209f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80209e6:	8822      	ldrh	r2, [r4, #0]
 80209e8:	9300      	str	r3, [sp, #0]
 80209ea:	4640      	mov	r0, r8
 80209ec:	464b      	mov	r3, r9
 80209ee:	f7ff ff43 	bl	8020878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80209f2:	8020      	strh	r0, [r4, #0]
 80209f4:	3402      	adds	r4, #2
 80209f6:	f10b 3aff 	add.w	sl, fp, #4294967295
 80209fa:	f1ba 0f01 	cmp.w	sl, #1
 80209fe:	dd22      	ble.n	8020a46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020a00:	783b      	ldrb	r3, [r7, #0]
 8020a02:	091b      	lsrs	r3, r3, #4
 8020a04:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a08:	0e0b      	lsrs	r3, r1, #24
 8020a0a:	d006      	beq.n	8020a1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8020a0c:	8822      	ldrh	r2, [r4, #0]
 8020a0e:	9300      	str	r3, [sp, #0]
 8020a10:	4640      	mov	r0, r8
 8020a12:	464b      	mov	r3, r9
 8020a14:	f7ff ff30 	bl	8020878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020a18:	8020      	strh	r0, [r4, #0]
 8020a1a:	f817 3b01 	ldrb.w	r3, [r7], #1
 8020a1e:	f003 030f 	and.w	r3, r3, #15
 8020a22:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a26:	0e0b      	lsrs	r3, r1, #24
 8020a28:	d006      	beq.n	8020a38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8020a2a:	8862      	ldrh	r2, [r4, #2]
 8020a2c:	9300      	str	r3, [sp, #0]
 8020a2e:	4640      	mov	r0, r8
 8020a30:	464b      	mov	r3, r9
 8020a32:	f7ff ff21 	bl	8020878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020a36:	8060      	strh	r0, [r4, #2]
 8020a38:	3404      	adds	r4, #4
 8020a3a:	f1aa 0a02 	sub.w	sl, sl, #2
 8020a3e:	e7dc      	b.n	80209fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020a40:	462f      	mov	r7, r5
 8020a42:	46da      	mov	sl, fp
 8020a44:	e7d9      	b.n	80209fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020a46:	d10d      	bne.n	8020a64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020a48:	783b      	ldrb	r3, [r7, #0]
 8020a4a:	091b      	lsrs	r3, r3, #4
 8020a4c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a50:	0e0b      	lsrs	r3, r1, #24
 8020a52:	d006      	beq.n	8020a62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020a54:	8822      	ldrh	r2, [r4, #0]
 8020a56:	9300      	str	r3, [sp, #0]
 8020a58:	4640      	mov	r0, r8
 8020a5a:	464b      	mov	r3, r9
 8020a5c:	f7ff ff0c 	bl	8020878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020a60:	8020      	strh	r0, [r4, #0]
 8020a62:	3402      	adds	r4, #2
 8020a64:	9b06      	ldr	r3, [sp, #24]
 8020a66:	9a02      	ldr	r2, [sp, #8]
 8020a68:	881b      	ldrh	r3, [r3, #0]
 8020a6a:	eba3 030b 	sub.w	r3, r3, fp
 8020a6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020a72:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020a76:	4413      	add	r3, r2
 8020a78:	9a07      	ldr	r2, [sp, #28]
 8020a7a:	fb93 f3f2 	sdiv	r3, r3, r2
 8020a7e:	441d      	add	r5, r3
 8020a80:	e7a3      	b.n	80209ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020a82:	9b05      	ldr	r3, [sp, #20]
 8020a84:	6818      	ldr	r0, [r3, #0]
 8020a86:	6803      	ldr	r3, [r0, #0]
 8020a88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020a8a:	4798      	blx	r3
 8020a8c:	b00d      	add	sp, #52	@ 0x34
 8020a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a92:	bf00      	nop
 8020a94:	20013ff8 	.word	0x20013ff8
 8020a98:	20013ff0 	.word	0x20013ff0

08020a9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020a9c:	b570      	push	{r4, r5, r6, lr}
 8020a9e:	1214      	asrs	r4, r2, #8
 8020aa0:	788d      	ldrb	r5, [r1, #2]
 8020aa2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020aa6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020aaa:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020aae:	fb15 f503 	smulbb	r5, r5, r3
 8020ab2:	fb04 5506 	mla	r5, r4, r6, r5
 8020ab6:	10d0      	asrs	r0, r2, #3
 8020ab8:	784c      	ldrb	r4, [r1, #1]
 8020aba:	7809      	ldrb	r1, [r1, #0]
 8020abc:	00d2      	lsls	r2, r2, #3
 8020abe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020ac2:	b2d2      	uxtb	r2, r2
 8020ac4:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020ac8:	fb14 f403 	smulbb	r4, r4, r3
 8020acc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020ad0:	fb11 f303 	smulbb	r3, r1, r3
 8020ad4:	fb00 4406 	mla	r4, r0, r6, r4
 8020ad8:	fb02 3306 	mla	r3, r2, r6, r3
 8020adc:	b2ad      	uxth	r5, r5
 8020ade:	b29b      	uxth	r3, r3
 8020ae0:	b2a4      	uxth	r4, r4
 8020ae2:	1c68      	adds	r0, r5, #1
 8020ae4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020ae8:	1c62      	adds	r2, r4, #1
 8020aea:	1c58      	adds	r0, r3, #1
 8020aec:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020af0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020af4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020af8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020afc:	0964      	lsrs	r4, r4, #5
 8020afe:	4328      	orrs	r0, r5
 8020b00:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020b04:	4320      	orrs	r0, r4
 8020b06:	bd70      	pop	{r4, r5, r6, pc}

08020b08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b0c:	b08f      	sub	sp, #60	@ 0x3c
 8020b0e:	461c      	mov	r4, r3
 8020b10:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020b14:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020b16:	4682      	mov	sl, r0
 8020b18:	460e      	mov	r6, r1
 8020b1a:	4615      	mov	r5, r2
 8020b1c:	2f00      	cmp	r7, #0
 8020b1e:	f000 8142 	beq.w	8020da6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8020b22:	6820      	ldr	r0, [r4, #0]
 8020b24:	6861      	ldr	r1, [r4, #4]
 8020b26:	aa0a      	add	r2, sp, #40	@ 0x28
 8020b28:	c203      	stmia	r2!, {r0, r1}
 8020b2a:	6818      	ldr	r0, [r3, #0]
 8020b2c:	6859      	ldr	r1, [r3, #4]
 8020b2e:	aa0c      	add	r2, sp, #48	@ 0x30
 8020b30:	c203      	stmia	r2!, {r0, r1}
 8020b32:	a80a      	add	r0, sp, #40	@ 0x28
 8020b34:	f7ee fb88 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b38:	4621      	mov	r1, r4
 8020b3a:	a80c      	add	r0, sp, #48	@ 0x30
 8020b3c:	f7ee fbac 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b40:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020b44:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020b48:	f002 0301 	and.w	r3, r2, #1
 8020b4c:	9306      	str	r3, [sp, #24]
 8020b4e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020b52:	f003 0101 	and.w	r1, r3, #1
 8020b56:	9105      	str	r1, [sp, #20]
 8020b58:	9805      	ldr	r0, [sp, #20]
 8020b5a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020b5e:	4403      	add	r3, r0
 8020b60:	fb01 2303 	mla	r3, r1, r3, r2
 8020b64:	f04f 0802 	mov.w	r8, #2
 8020b68:	fb93 f3f8 	sdiv	r3, r3, r8
 8020b6c:	441e      	add	r6, r3
 8020b6e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020b72:	441a      	add	r2, r3
 8020b74:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020b78:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020b7c:	4419      	add	r1, r3
 8020b7e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020b82:	9303      	str	r3, [sp, #12]
 8020b84:	4b89      	ldr	r3, [pc, #548]	@ (8020dac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020b86:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020b8a:	6818      	ldr	r0, [r3, #0]
 8020b8c:	6803      	ldr	r3, [r0, #0]
 8020b8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020b90:	4798      	blx	r3
 8020b92:	4a87      	ldr	r2, [pc, #540]	@ (8020db0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020b94:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020b98:	8813      	ldrh	r3, [r2, #0]
 8020b9a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020b9e:	2fff      	cmp	r7, #255	@ 0xff
 8020ba0:	fb03 9404 	mla	r4, r3, r4, r9
 8020ba4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020ba8:	f105 0504 	add.w	r5, r5, #4
 8020bac:	4694      	mov	ip, r2
 8020bae:	fb03 f30b 	mul.w	r3, r3, fp
 8020bb2:	d071      	beq.n	8020c98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8020bb4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020bb8:	43f9      	mvns	r1, r7
 8020bba:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020bbe:	b2c9      	uxtb	r1, r1
 8020bc0:	9104      	str	r1, [sp, #16]
 8020bc2:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020bc6:	9b07      	ldr	r3, [sp, #28]
 8020bc8:	42a3      	cmp	r3, r4
 8020bca:	f240 80e7 	bls.w	8020d9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020bce:	9b06      	ldr	r3, [sp, #24]
 8020bd0:	2b00      	cmp	r3, #0
 8020bd2:	d03d      	beq.n	8020c50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8020bd4:	7831      	ldrb	r1, [r6, #0]
 8020bd6:	9b04      	ldr	r3, [sp, #16]
 8020bd8:	8822      	ldrh	r2, [r4, #0]
 8020bda:	9300      	str	r3, [sp, #0]
 8020bdc:	f001 010f 	and.w	r1, r1, #15
 8020be0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020be4:	463b      	mov	r3, r7
 8020be6:	4429      	add	r1, r5
 8020be8:	4650      	mov	r0, sl
 8020bea:	f7ff ff57 	bl	8020a9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020bee:	9b03      	ldr	r3, [sp, #12]
 8020bf0:	f824 0b02 	strh.w	r0, [r4], #2
 8020bf4:	f106 0801 	add.w	r8, r6, #1
 8020bf8:	f103 3bff 	add.w	fp, r3, #4294967295
 8020bfc:	f1bb 0f01 	cmp.w	fp, #1
 8020c00:	46a1      	mov	r9, r4
 8020c02:	f104 0404 	add.w	r4, r4, #4
 8020c06:	dd27      	ble.n	8020c58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8020c08:	f898 1000 	ldrb.w	r1, [r8]
 8020c0c:	9b04      	ldr	r3, [sp, #16]
 8020c0e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020c12:	9300      	str	r3, [sp, #0]
 8020c14:	0909      	lsrs	r1, r1, #4
 8020c16:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c1a:	463b      	mov	r3, r7
 8020c1c:	4429      	add	r1, r5
 8020c1e:	4650      	mov	r0, sl
 8020c20:	f7ff ff3c 	bl	8020a9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c24:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020c28:	f818 1b01 	ldrb.w	r1, [r8], #1
 8020c2c:	9b04      	ldr	r3, [sp, #16]
 8020c2e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020c32:	9300      	str	r3, [sp, #0]
 8020c34:	f001 010f 	and.w	r1, r1, #15
 8020c38:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c3c:	463b      	mov	r3, r7
 8020c3e:	4429      	add	r1, r5
 8020c40:	4650      	mov	r0, sl
 8020c42:	f7ff ff2b 	bl	8020a9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c46:	f1ab 0b02 	sub.w	fp, fp, #2
 8020c4a:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020c4e:	e7d5      	b.n	8020bfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020c50:	46b0      	mov	r8, r6
 8020c52:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020c56:	e7d1      	b.n	8020bfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020c58:	d10f      	bne.n	8020c7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8020c5a:	f898 1000 	ldrb.w	r1, [r8]
 8020c5e:	9b04      	ldr	r3, [sp, #16]
 8020c60:	f8b9 2000 	ldrh.w	r2, [r9]
 8020c64:	9300      	str	r3, [sp, #0]
 8020c66:	0909      	lsrs	r1, r1, #4
 8020c68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c6c:	463b      	mov	r3, r7
 8020c6e:	4429      	add	r1, r5
 8020c70:	4650      	mov	r0, sl
 8020c72:	f7ff ff13 	bl	8020a9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c76:	f829 0b02 	strh.w	r0, [r9], #2
 8020c7a:	9b08      	ldr	r3, [sp, #32]
 8020c7c:	9a05      	ldr	r2, [sp, #20]
 8020c7e:	881c      	ldrh	r4, [r3, #0]
 8020c80:	9b03      	ldr	r3, [sp, #12]
 8020c82:	1ae4      	subs	r4, r4, r3
 8020c84:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020c88:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020c8c:	4413      	add	r3, r2
 8020c8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020c90:	fb93 f3f2 	sdiv	r3, r3, r2
 8020c94:	441e      	add	r6, r3
 8020c96:	e796      	b.n	8020bc6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8020c98:	4f46      	ldr	r7, [pc, #280]	@ (8020db4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020c9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020c9e:	42a3      	cmp	r3, r4
 8020ca0:	d97c      	bls.n	8020d9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020ca2:	9a06      	ldr	r2, [sp, #24]
 8020ca4:	2a00      	cmp	r2, #0
 8020ca6:	d054      	beq.n	8020d52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020ca8:	7830      	ldrb	r0, [r6, #0]
 8020caa:	f000 000f 	and.w	r0, r0, #15
 8020cae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cb2:	eb05 0e00 	add.w	lr, r5, r0
 8020cb6:	5c28      	ldrb	r0, [r5, r0]
 8020cb8:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020cbc:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020cc0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020cc4:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020cc8:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020ccc:	ea42 020e 	orr.w	r2, r2, lr
 8020cd0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020cd4:	f824 2b02 	strh.w	r2, [r4], #2
 8020cd8:	9a03      	ldr	r2, [sp, #12]
 8020cda:	1c71      	adds	r1, r6, #1
 8020cdc:	f102 3eff 	add.w	lr, r2, #4294967295
 8020ce0:	f1be 0f01 	cmp.w	lr, #1
 8020ce4:	4620      	mov	r0, r4
 8020ce6:	f104 0404 	add.w	r4, r4, #4
 8020cea:	dd36      	ble.n	8020d5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8020cec:	7808      	ldrb	r0, [r1, #0]
 8020cee:	0900      	lsrs	r0, r0, #4
 8020cf0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cf4:	eb05 0a00 	add.w	sl, r5, r0
 8020cf8:	f1ae 0e02 	sub.w	lr, lr, #2
 8020cfc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020d00:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020d04:	00d2      	lsls	r2, r2, #3
 8020d06:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020d0a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d0e:	ea49 0202 	orr.w	r2, r9, r2
 8020d12:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020d16:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020d1a:	f824 2c04 	strh.w	r2, [r4, #-4]
 8020d1e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020d22:	f000 000f 	and.w	r0, r0, #15
 8020d26:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020d2a:	eb05 0a00 	add.w	sl, r5, r0
 8020d2e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020d32:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020d36:	00d2      	lsls	r2, r2, #3
 8020d38:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020d3c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d40:	ea49 0202 	orr.w	r2, r9, r2
 8020d44:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020d48:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020d4c:	f824 2c02 	strh.w	r2, [r4, #-2]
 8020d50:	e7c6      	b.n	8020ce0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020d52:	4631      	mov	r1, r6
 8020d54:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020d58:	e7c2      	b.n	8020ce0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020d5a:	d111      	bne.n	8020d80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8020d5c:	7809      	ldrb	r1, [r1, #0]
 8020d5e:	0909      	lsrs	r1, r1, #4
 8020d60:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020d64:	186c      	adds	r4, r5, r1
 8020d66:	5c69      	ldrb	r1, [r5, r1]
 8020d68:	78a2      	ldrb	r2, [r4, #2]
 8020d6a:	7864      	ldrb	r4, [r4, #1]
 8020d6c:	00e4      	lsls	r4, r4, #3
 8020d6e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020d72:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020d76:	4322      	orrs	r2, r4
 8020d78:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8020d7c:	f820 2b02 	strh.w	r2, [r0], #2
 8020d80:	9a03      	ldr	r2, [sp, #12]
 8020d82:	f8bc 4000 	ldrh.w	r4, [ip]
 8020d86:	9905      	ldr	r1, [sp, #20]
 8020d88:	1aa4      	subs	r4, r4, r2
 8020d8a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8020d8e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020d92:	440a      	add	r2, r1
 8020d94:	fb92 f2f8 	sdiv	r2, r2, r8
 8020d98:	4416      	add	r6, r2
 8020d9a:	e780      	b.n	8020c9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8020d9c:	4b03      	ldr	r3, [pc, #12]	@ (8020dac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020d9e:	6818      	ldr	r0, [r3, #0]
 8020da0:	6803      	ldr	r3, [r0, #0]
 8020da2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020da4:	4798      	blx	r3
 8020da6:	b00f      	add	sp, #60	@ 0x3c
 8020da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dac:	20013ff8 	.word	0x20013ff8
 8020db0:	20013ff0 	.word	0x20013ff0
 8020db4:	fffff800 	.word	0xfffff800

08020db8 <CRC_Lock>:
 8020db8:	b530      	push	{r4, r5, lr}
 8020dba:	4a2d      	ldr	r2, [pc, #180]	@ (8020e70 <CRC_Lock+0xb8>)
 8020dbc:	6813      	ldr	r3, [r2, #0]
 8020dbe:	f023 0301 	bic.w	r3, r3, #1
 8020dc2:	6013      	str	r3, [r2, #0]
 8020dc4:	4b2b      	ldr	r3, [pc, #172]	@ (8020e74 <CRC_Lock+0xbc>)
 8020dc6:	681c      	ldr	r4, [r3, #0]
 8020dc8:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8020dcc:	4014      	ands	r4, r2
 8020dce:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8020dd2:	42ac      	cmp	r4, r5
 8020dd4:	d005      	beq.n	8020de2 <CRC_Lock+0x2a>
 8020dd6:	681c      	ldr	r4, [r3, #0]
 8020dd8:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8020ddc:	4014      	ands	r4, r2
 8020dde:	42ac      	cmp	r4, r5
 8020de0:	d125      	bne.n	8020e2e <CRC_Lock+0x76>
 8020de2:	4b25      	ldr	r3, [pc, #148]	@ (8020e78 <CRC_Lock+0xc0>)
 8020de4:	681b      	ldr	r3, [r3, #0]
 8020de6:	2b00      	cmp	r3, #0
 8020de8:	d139      	bne.n	8020e5e <CRC_Lock+0xa6>
 8020dea:	4b24      	ldr	r3, [pc, #144]	@ (8020e7c <CRC_Lock+0xc4>)
 8020dec:	681a      	ldr	r2, [r3, #0]
 8020dee:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020df2:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8020df6:	d00d      	beq.n	8020e14 <CRC_Lock+0x5c>
 8020df8:	681a      	ldr	r2, [r3, #0]
 8020dfa:	f240 4483 	movw	r4, #1155	@ 0x483
 8020dfe:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020e02:	42a2      	cmp	r2, r4
 8020e04:	d006      	beq.n	8020e14 <CRC_Lock+0x5c>
 8020e06:	681b      	ldr	r3, [r3, #0]
 8020e08:	f240 4285 	movw	r2, #1157	@ 0x485
 8020e0c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020e10:	4293      	cmp	r3, r2
 8020e12:	d124      	bne.n	8020e5e <CRC_Lock+0xa6>
 8020e14:	4b1a      	ldr	r3, [pc, #104]	@ (8020e80 <CRC_Lock+0xc8>)
 8020e16:	2201      	movs	r2, #1
 8020e18:	601a      	str	r2, [r3, #0]
 8020e1a:	681a      	ldr	r2, [r3, #0]
 8020e1c:	2a00      	cmp	r2, #0
 8020e1e:	d1fc      	bne.n	8020e1a <CRC_Lock+0x62>
 8020e20:	4b18      	ldr	r3, [pc, #96]	@ (8020e84 <CRC_Lock+0xcc>)
 8020e22:	6018      	str	r0, [r3, #0]
 8020e24:	6818      	ldr	r0, [r3, #0]
 8020e26:	1a43      	subs	r3, r0, r1
 8020e28:	4258      	negs	r0, r3
 8020e2a:	4158      	adcs	r0, r3
 8020e2c:	e00e      	b.n	8020e4c <CRC_Lock+0x94>
 8020e2e:	681b      	ldr	r3, [r3, #0]
 8020e30:	4013      	ands	r3, r2
 8020e32:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8020e36:	4293      	cmp	r3, r2
 8020e38:	d111      	bne.n	8020e5e <CRC_Lock+0xa6>
 8020e3a:	4b13      	ldr	r3, [pc, #76]	@ (8020e88 <CRC_Lock+0xd0>)
 8020e3c:	681b      	ldr	r3, [r3, #0]
 8020e3e:	f240 4286 	movw	r2, #1158	@ 0x486
 8020e42:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020e46:	4293      	cmp	r3, r2
 8020e48:	d001      	beq.n	8020e4e <CRC_Lock+0x96>
 8020e4a:	2000      	movs	r0, #0
 8020e4c:	bd30      	pop	{r4, r5, pc}
 8020e4e:	4b0f      	ldr	r3, [pc, #60]	@ (8020e8c <CRC_Lock+0xd4>)
 8020e50:	2201      	movs	r2, #1
 8020e52:	601a      	str	r2, [r3, #0]
 8020e54:	681a      	ldr	r2, [r3, #0]
 8020e56:	2a00      	cmp	r2, #0
 8020e58:	d1fc      	bne.n	8020e54 <CRC_Lock+0x9c>
 8020e5a:	4b0d      	ldr	r3, [pc, #52]	@ (8020e90 <CRC_Lock+0xd8>)
 8020e5c:	e7e1      	b.n	8020e22 <CRC_Lock+0x6a>
 8020e5e:	4b0d      	ldr	r3, [pc, #52]	@ (8020e94 <CRC_Lock+0xdc>)
 8020e60:	2201      	movs	r2, #1
 8020e62:	601a      	str	r2, [r3, #0]
 8020e64:	681a      	ldr	r2, [r3, #0]
 8020e66:	2a00      	cmp	r2, #0
 8020e68:	d1fc      	bne.n	8020e64 <CRC_Lock+0xac>
 8020e6a:	4b0b      	ldr	r3, [pc, #44]	@ (8020e98 <CRC_Lock+0xe0>)
 8020e6c:	e7d9      	b.n	8020e22 <CRC_Lock+0x6a>
 8020e6e:	bf00      	nop
 8020e70:	e0002000 	.word	0xe0002000
 8020e74:	e000ed00 	.word	0xe000ed00
 8020e78:	e0042000 	.word	0xe0042000
 8020e7c:	5c001000 	.word	0x5c001000
 8020e80:	58024c08 	.word	0x58024c08
 8020e84:	58024c00 	.word	0x58024c00
 8020e88:	46008ff0 	.word	0x46008ff0
 8020e8c:	46024c08 	.word	0x46024c08
 8020e90:	46024c00 	.word	0x46024c00
 8020e94:	40023008 	.word	0x40023008
 8020e98:	40023000 	.word	0x40023000

08020e9c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020e9c:	6101      	str	r1, [r0, #16]
 8020e9e:	4770      	bx	lr

08020ea0 <_ZN8touchgfx8Gestures4tickEv>:
 8020ea0:	7b83      	ldrb	r3, [r0, #14]
 8020ea2:	b14b      	cbz	r3, 8020eb8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020ea4:	8903      	ldrh	r3, [r0, #8]
 8020ea6:	3301      	adds	r3, #1
 8020ea8:	b29b      	uxth	r3, r3
 8020eaa:	2b07      	cmp	r3, #7
 8020eac:	8103      	strh	r3, [r0, #8]
 8020eae:	bf81      	itttt	hi
 8020eb0:	2300      	movhi	r3, #0
 8020eb2:	8143      	strhhi	r3, [r0, #10]
 8020eb4:	8183      	strhhi	r3, [r0, #12]
 8020eb6:	7383      	strbhi	r3, [r0, #14]
 8020eb8:	4770      	bx	lr
	...

08020ebc <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020ebc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020ec0:	4698      	mov	r8, r3
 8020ec2:	8883      	ldrh	r3, [r0, #4]
 8020ec4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020ec8:	eba8 0303 	sub.w	r3, r8, r3
 8020ecc:	b21b      	sxth	r3, r3
 8020ece:	4604      	mov	r4, r0
 8020ed0:	2b00      	cmp	r3, #0
 8020ed2:	4617      	mov	r7, r2
 8020ed4:	4a18      	ldr	r2, [pc, #96]	@ (8020f38 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020ed6:	9200      	str	r2, [sp, #0]
 8020ed8:	bfb8      	it	lt
 8020eda:	425b      	neglt	r3, r3
 8020edc:	8aa2      	ldrh	r2, [r4, #20]
 8020ede:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8020ee2:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020ee6:	b21b      	sxth	r3, r3
 8020ee8:	460e      	mov	r6, r1
 8020eea:	4293      	cmp	r3, r2
 8020eec:	88c1      	ldrh	r1, [r0, #6]
 8020eee:	f8ad 1008 	strh.w	r1, [sp, #8]
 8020ef2:	f04f 0000 	mov.w	r0, #0
 8020ef6:	f88d 0004 	strb.w	r0, [sp, #4]
 8020efa:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020efe:	dc07      	bgt.n	8020f10 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020f00:	1a69      	subs	r1, r5, r1
 8020f02:	b209      	sxth	r1, r1
 8020f04:	2900      	cmp	r1, #0
 8020f06:	bfb8      	it	lt
 8020f08:	4249      	neglt	r1, r1
 8020f0a:	b209      	sxth	r1, r1
 8020f0c:	428a      	cmp	r2, r1
 8020f0e:	da10      	bge.n	8020f32 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8020f10:	6920      	ldr	r0, [r4, #16]
 8020f12:	6803      	ldr	r3, [r0, #0]
 8020f14:	4669      	mov	r1, sp
 8020f16:	685b      	ldr	r3, [r3, #4]
 8020f18:	4798      	blx	r3
 8020f1a:	eba8 0606 	sub.w	r6, r8, r6
 8020f1e:	2300      	movs	r3, #0
 8020f20:	1bef      	subs	r7, r5, r7
 8020f22:	2001      	movs	r0, #1
 8020f24:	8123      	strh	r3, [r4, #8]
 8020f26:	8166      	strh	r6, [r4, #10]
 8020f28:	81a7      	strh	r7, [r4, #12]
 8020f2a:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020f2e:	80e5      	strh	r5, [r4, #6]
 8020f30:	73a0      	strb	r0, [r4, #14]
 8020f32:	b004      	add	sp, #16
 8020f34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020f38:	080252f0 	.word	0x080252f0

08020f3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8020f3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020f3e:	461e      	mov	r6, r3
 8020f40:	1e4b      	subs	r3, r1, #1
 8020f42:	2b01      	cmp	r3, #1
 8020f44:	b085      	sub	sp, #20
 8020f46:	4604      	mov	r4, r0
 8020f48:	460d      	mov	r5, r1
 8020f4a:	4617      	mov	r7, r2
 8020f4c:	d84b      	bhi.n	8020fe6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8020f4e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020f52:	1cd3      	adds	r3, r2, #3
 8020f54:	b29b      	uxth	r3, r3
 8020f56:	2b06      	cmp	r3, #6
 8020f58:	d916      	bls.n	8020f88 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020f5a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8020ffc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020f5e:	f8cd c004 	str.w	ip, [sp, #4]
 8020f62:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020f66:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020f6a:	6900      	ldr	r0, [r0, #16]
 8020f6c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020f70:	f04f 0c00 	mov.w	ip, #0
 8020f74:	f88d c008 	strb.w	ip, [sp, #8]
 8020f78:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020f7c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020f80:	6803      	ldr	r3, [r0, #0]
 8020f82:	a901      	add	r1, sp, #4
 8020f84:	689b      	ldr	r3, [r3, #8]
 8020f86:	4798      	blx	r3
 8020f88:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020f8c:	1cd3      	adds	r3, r2, #3
 8020f8e:	b29b      	uxth	r3, r3
 8020f90:	2b06      	cmp	r3, #6
 8020f92:	d916      	bls.n	8020fc2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020f94:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8020ffc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020f98:	f8cd c004 	str.w	ip, [sp, #4]
 8020f9c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020fa0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020fa4:	6920      	ldr	r0, [r4, #16]
 8020fa6:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020faa:	f04f 0c01 	mov.w	ip, #1
 8020fae:	f88d c008 	strb.w	ip, [sp, #8]
 8020fb2:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020fb6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020fba:	6803      	ldr	r3, [r0, #0]
 8020fbc:	a901      	add	r1, sp, #4
 8020fbe:	689b      	ldr	r3, [r3, #8]
 8020fc0:	4798      	blx	r3
 8020fc2:	4b0d      	ldr	r3, [pc, #52]	@ (8020ff8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020fc4:	9301      	str	r3, [sp, #4]
 8020fc6:	6920      	ldr	r0, [r4, #16]
 8020fc8:	f88d 5008 	strb.w	r5, [sp, #8]
 8020fcc:	2300      	movs	r3, #0
 8020fce:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020fd2:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020fd6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020fda:	6803      	ldr	r3, [r0, #0]
 8020fdc:	a901      	add	r1, sp, #4
 8020fde:	681b      	ldr	r3, [r3, #0]
 8020fe0:	4798      	blx	r3
 8020fe2:	b005      	add	sp, #20
 8020fe4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020fe6:	2900      	cmp	r1, #0
 8020fe8:	d1eb      	bne.n	8020fc2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020fea:	80a2      	strh	r2, [r4, #4]
 8020fec:	80c6      	strh	r6, [r0, #6]
 8020fee:	60a1      	str	r1, [r4, #8]
 8020ff0:	81a1      	strh	r1, [r4, #12]
 8020ff2:	73a1      	strb	r1, [r4, #14]
 8020ff4:	e7e5      	b.n	8020fc2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020ff6:	bf00      	nop
 8020ff8:	080252dc 	.word	0x080252dc
 8020ffc:	08025304 	.word	0x08025304

08021000 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8021000:	10c9      	asrs	r1, r1, #3
 8021002:	2900      	cmp	r1, #0
 8021004:	bfb8      	it	lt
 8021006:	4249      	neglt	r1, r1
 8021008:	2801      	cmp	r0, #1
 802100a:	d108      	bne.n	802101e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802100c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8021010:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8021014:	4601      	mov	r1, r0
 8021016:	dd02      	ble.n	802101e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8021018:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 802101c:	4770      	bx	lr
 802101e:	29ff      	cmp	r1, #255	@ 0xff
 8021020:	bfa8      	it	ge
 8021022:	21ff      	movge	r1, #255	@ 0xff
 8021024:	4608      	mov	r0, r1
 8021026:	4770      	bx	lr

08021028 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8021028:	b410      	push	{r4}
 802102a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802102e:	429c      	cmp	r4, r3
 8021030:	d803      	bhi.n	802103a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8021032:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021036:	f7ed b8ad 	b.w	800e194 <_ZN8touchgfx7Outline6lineToEii>
 802103a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802103e:	4770      	bx	lr

08021040 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8021040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021044:	b08b      	sub	sp, #44	@ 0x2c
 8021046:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802104a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 802104e:	9308      	str	r3, [sp, #32]
 8021050:	4606      	mov	r6, r0
 8021052:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8021056:	9309      	str	r3, [sp, #36]	@ 0x24
 8021058:	468a      	mov	sl, r1
 802105a:	f7ed fa08 	bl	800e46e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802105e:	68b5      	ldr	r5, [r6, #8]
 8021060:	4604      	mov	r4, r0
 8021062:	2d00      	cmp	r5, #0
 8021064:	d044      	beq.n	80210f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021066:	6873      	ldr	r3, [r6, #4]
 8021068:	42ab      	cmp	r3, r5
 802106a:	d33d      	bcc.n	80210e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802106c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8021070:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8021074:	eb02 0b03 	add.w	fp, r2, r3
 8021078:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802107c:	fb02 1203 	mla	r2, r2, r3, r1
 8021080:	9205      	str	r2, [sp, #20]
 8021082:	1e6a      	subs	r2, r5, #1
 8021084:	9204      	str	r2, [sp, #16]
 8021086:	f04f 0800 	mov.w	r8, #0
 802108a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802108e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021092:	454b      	cmp	r3, r9
 8021094:	463a      	mov	r2, r7
 8021096:	d008      	beq.n	80210aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8021098:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 802109c:	eb03 0b09 	add.w	fp, r3, r9
 80210a0:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80210a4:	fb03 1309 	mla	r3, r3, r9, r1
 80210a8:	9305      	str	r3, [sp, #20]
 80210aa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80210ae:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80210b2:	4498      	add	r8, r3
 80210b4:	9b04      	ldr	r3, [sp, #16]
 80210b6:	3b01      	subs	r3, #1
 80210b8:	9304      	str	r3, [sp, #16]
 80210ba:	9b04      	ldr	r3, [sp, #16]
 80210bc:	3301      	adds	r3, #1
 80210be:	d015      	beq.n	80210ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80210c0:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80210c4:	42bb      	cmp	r3, r7
 80210c6:	d117      	bne.n	80210f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80210c8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80210cc:	9b04      	ldr	r3, [sp, #16]
 80210ce:	4548      	cmp	r0, r9
 80210d0:	f103 33ff 	add.w	r3, r3, #4294967295
 80210d4:	d17f      	bne.n	80211d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80210d6:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80210da:	4401      	add	r1, r0
 80210dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80210e0:	4480      	add	r8, r0
 80210e2:	e7e9      	b.n	80210b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80210e4:	461f      	mov	r7, r3
 80210e6:	e044      	b.n	8021172 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80210e8:	2000      	movs	r0, #0
 80210ea:	e002      	b.n	80210f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80210ec:	2900      	cmp	r1, #0
 80210ee:	d16f      	bne.n	80211d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80210f0:	2001      	movs	r0, #1
 80210f2:	b00b      	add	sp, #44	@ 0x2c
 80210f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210f8:	2900      	cmp	r1, #0
 80210fa:	d030      	beq.n	802115e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80210fc:	2f00      	cmp	r7, #0
 80210fe:	db29      	blt.n	8021154 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021100:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021104:	42bb      	cmp	r3, r7
 8021106:	dd25      	ble.n	8021154 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021108:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802110c:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021110:	f7ff ff76 	bl	8021000 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021114:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021116:	fb10 f003 	smulbb	r0, r0, r3
 802111a:	b280      	uxth	r0, r0
 802111c:	1c41      	adds	r1, r0, #1
 802111e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021122:	1209      	asrs	r1, r1, #8
 8021124:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021128:	d014      	beq.n	8021154 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802112a:	9808      	ldr	r0, [sp, #32]
 802112c:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802112e:	b2c9      	uxtb	r1, r1
 8021130:	b2ba      	uxth	r2, r7
 8021132:	9102      	str	r1, [sp, #8]
 8021134:	2101      	movs	r1, #1
 8021136:	4413      	add	r3, r2
 8021138:	9101      	str	r1, [sp, #4]
 802113a:	4402      	add	r2, r0
 802113c:	fa0f f18b 	sxth.w	r1, fp
 8021140:	f8da 0000 	ldr.w	r0, [sl]
 8021144:	9100      	str	r1, [sp, #0]
 8021146:	6941      	ldr	r1, [r0, #20]
 8021148:	b21b      	sxth	r3, r3
 802114a:	460d      	mov	r5, r1
 802114c:	b212      	sxth	r2, r2
 802114e:	9905      	ldr	r1, [sp, #20]
 8021150:	4650      	mov	r0, sl
 8021152:	47a8      	blx	r5
 8021154:	9b04      	ldr	r3, [sp, #16]
 8021156:	3301      	adds	r3, #1
 8021158:	f107 0201 	add.w	r2, r7, #1
 802115c:	d0c8      	beq.n	80210f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802115e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021162:	1abb      	subs	r3, r7, r2
 8021164:	2b00      	cmp	r3, #0
 8021166:	dd31      	ble.n	80211cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021168:	2a00      	cmp	r2, #0
 802116a:	dabb      	bge.n	80210e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802116c:	2f00      	cmp	r7, #0
 802116e:	dd2d      	ble.n	80211cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021170:	2200      	movs	r2, #0
 8021172:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021176:	19d1      	adds	r1, r2, r7
 8021178:	4299      	cmp	r1, r3
 802117a:	db02      	blt.n	8021182 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802117c:	1a9f      	subs	r7, r3, r2
 802117e:	2f00      	cmp	r7, #0
 8021180:	dd24      	ble.n	80211cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021182:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8021186:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802118a:	f7ff ff39 	bl	8021000 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802118e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021190:	fb10 f003 	smulbb	r0, r0, r3
 8021194:	b280      	uxth	r0, r0
 8021196:	1c41      	adds	r1, r0, #1
 8021198:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802119c:	1209      	asrs	r1, r1, #8
 802119e:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80211a2:	d013      	beq.n	80211cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80211a4:	9808      	ldr	r0, [sp, #32]
 80211a6:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 80211a8:	b292      	uxth	r2, r2
 80211aa:	b2c9      	uxtb	r1, r1
 80211ac:	4413      	add	r3, r2
 80211ae:	9102      	str	r1, [sp, #8]
 80211b0:	4402      	add	r2, r0
 80211b2:	b23f      	sxth	r7, r7
 80211b4:	f8da 0000 	ldr.w	r0, [sl]
 80211b8:	9701      	str	r7, [sp, #4]
 80211ba:	fa0f f18b 	sxth.w	r1, fp
 80211be:	9100      	str	r1, [sp, #0]
 80211c0:	6947      	ldr	r7, [r0, #20]
 80211c2:	9905      	ldr	r1, [sp, #20]
 80211c4:	b21b      	sxth	r3, r3
 80211c6:	b212      	sxth	r2, r2
 80211c8:	4650      	mov	r0, sl
 80211ca:	47b8      	blx	r7
 80211cc:	464b      	mov	r3, r9
 80211ce:	e75c      	b.n	802108a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80211d0:	2f00      	cmp	r7, #0
 80211d2:	da95      	bge.n	8021100 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80211d4:	e78c      	b.n	80210f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80211d6:	2900      	cmp	r1, #0
 80211d8:	d0f8      	beq.n	80211cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80211da:	e78f      	b.n	80210fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080211dc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 80211dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80211e0:	461e      	mov	r6, r3
 80211e2:	4b36      	ldr	r3, [pc, #216]	@ (80212bc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 80211e4:	e9c0 3100 	strd	r3, r1, [r0]
 80211e8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80211ec:	8103      	strh	r3, [r0, #8]
 80211ee:	2500      	movs	r5, #0
 80211f0:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80211f4:	7283      	strb	r3, [r0, #10]
 80211f6:	f100 0814 	add.w	r8, r0, #20
 80211fa:	4604      	mov	r4, r0
 80211fc:	8185      	strh	r5, [r0, #12]
 80211fe:	81c5      	strh	r5, [r0, #14]
 8021200:	8205      	strh	r5, [r0, #16]
 8021202:	8245      	strh	r5, [r0, #18]
 8021204:	4640      	mov	r0, r8
 8021206:	4617      	mov	r7, r2
 8021208:	f7ec fafc 	bl	800d804 <_ZN8touchgfx7OutlineC1Ev>
 802120c:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8021210:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8021214:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8021218:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 802121c:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8021220:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8021224:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8021228:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 802122c:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8021230:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8021234:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8021238:	6830      	ldr	r0, [r6, #0]
 802123a:	6871      	ldr	r1, [r6, #4]
 802123c:	8872      	ldrh	r2, [r6, #2]
 802123e:	8835      	ldrh	r5, [r6, #0]
 8021240:	466b      	mov	r3, sp
 8021242:	c303      	stmia	r3!, {r0, r1}
 8021244:	887b      	ldrh	r3, [r7, #2]
 8021246:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 802124a:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 802124e:	4413      	add	r3, r2
 8021250:	883a      	ldrh	r2, [r7, #0]
 8021252:	81e3      	strh	r3, [r4, #14]
 8021254:	442a      	add	r2, r5
 8021256:	81a2      	strh	r2, [r4, #12]
 8021258:	8220      	strh	r0, [r4, #16]
 802125a:	8261      	strh	r1, [r4, #18]
 802125c:	4668      	mov	r0, sp
 802125e:	4639      	mov	r1, r7
 8021260:	f7ee f81a 	bl	800f298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021264:	f104 000c 	add.w	r0, r4, #12
 8021268:	f7ed ffee 	bl	800f248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802126c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021270:	f8bd 2000 	ldrh.w	r2, [sp]
 8021274:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8021278:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 802127c:	4640      	mov	r0, r8
 802127e:	f7ec faa5 	bl	800d7cc <_ZN8touchgfx7Outline5resetEv>
 8021282:	f9bd 3000 	ldrsh.w	r3, [sp]
 8021286:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802128a:	015b      	lsls	r3, r3, #5
 802128c:	64e3      	str	r3, [r4, #76]	@ 0x4c
 802128e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021292:	015b      	lsls	r3, r3, #5
 8021294:	6523      	str	r3, [r4, #80]	@ 0x50
 8021296:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802129a:	015b      	lsls	r3, r3, #5
 802129c:	6563      	str	r3, [r4, #84]	@ 0x54
 802129e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80212a2:	015b      	lsls	r3, r3, #5
 80212a4:	65a3      	str	r3, [r4, #88]	@ 0x58
 80212a6:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 80212aa:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 80212ae:	4620      	mov	r0, r4
 80212b0:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 80212b4:	b002      	add	sp, #8
 80212b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80212ba:	bf00      	nop
 80212bc:	08025640 	.word	0x08025640

080212c0 <_ZN8touchgfx6Canvas5closeEv>:
 80212c0:	b538      	push	{r3, r4, r5, lr}
 80212c2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80212c6:	4604      	mov	r4, r0
 80212c8:	b193      	cbz	r3, 80212f0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80212ca:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 80212ce:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 80212d2:	4213      	tst	r3, r2
 80212d4:	d10c      	bne.n	80212f0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80212d6:	f100 0514 	add.w	r5, r0, #20
 80212da:	b123      	cbz	r3, 80212e6 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80212dc:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 80212e0:	4628      	mov	r0, r5
 80212e2:	f7ff fea1 	bl	8021028 <_ZN8touchgfx10Rasterizer6lineToEii>
 80212e6:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 80212ea:	4628      	mov	r0, r5
 80212ec:	f7ff fe9c 	bl	8021028 <_ZN8touchgfx10Rasterizer6lineToEii>
 80212f0:	2300      	movs	r3, #0
 80212f2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80212f6:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 80212fa:	4298      	cmp	r0, r3
 80212fc:	bf34      	ite	cc
 80212fe:	2000      	movcc	r0, #0
 8021300:	2001      	movcs	r0, #1
 8021302:	bd38      	pop	{r3, r4, r5, pc}

08021304 <_ZN8touchgfx6Canvas6renderEh>:
 8021304:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021308:	7a85      	ldrb	r5, [r0, #10]
 802130a:	4369      	muls	r1, r5
 802130c:	1c4d      	adds	r5, r1, #1
 802130e:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021312:	122d      	asrs	r5, r5, #8
 8021314:	4604      	mov	r4, r0
 8021316:	f000 8099 	beq.w	802144c <_ZN8touchgfx6Canvas6renderEh+0x148>
 802131a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 802131e:	2b00      	cmp	r3, #0
 8021320:	f000 8094 	beq.w	802144c <_ZN8touchgfx6Canvas6renderEh+0x148>
 8021324:	f7ff ffcc 	bl	80212c0 <_ZN8touchgfx6Canvas5closeEv>
 8021328:	4607      	mov	r7, r0
 802132a:	2800      	cmp	r0, #0
 802132c:	d045      	beq.n	80213ba <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802132e:	6860      	ldr	r0, [r4, #4]
 8021330:	4e47      	ldr	r6, [pc, #284]	@ (8021450 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8021332:	6803      	ldr	r3, [r0, #0]
 8021334:	6837      	ldr	r7, [r6, #0]
 8021336:	689b      	ldr	r3, [r3, #8]
 8021338:	4798      	blx	r3
 802133a:	4601      	mov	r1, r0
 802133c:	4638      	mov	r0, r7
 802133e:	f7e9 ff4b 	bl	800b1d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8021342:	4607      	mov	r7, r0
 8021344:	f7e1 fbae 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8021348:	6803      	ldr	r3, [r0, #0]
 802134a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802134c:	4798      	blx	r3
 802134e:	4680      	mov	r8, r0
 8021350:	f7e1 fba8 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8021354:	6803      	ldr	r3, [r0, #0]
 8021356:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021358:	4798      	blx	r3
 802135a:	280b      	cmp	r0, #11
 802135c:	d85b      	bhi.n	8021416 <_ZN8touchgfx6Canvas6renderEh+0x112>
 802135e:	e8df f000 	tbb	[pc, r0]
 8021362:	5c51      	.short	0x5c51
 8021364:	305a066c 	.word	0x305a066c
 8021368:	65656540 	.word	0x65656540
 802136c:	6565      	.short	0x6565
 802136e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021372:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021376:	2208      	movs	r2, #8
 8021378:	fb91 f2f2 	sdiv	r2, r1, r2
 802137c:	fb08 2303 	mla	r3, r8, r3, r2
 8021380:	441f      	add	r7, r3
 8021382:	424b      	negs	r3, r1
 8021384:	f003 0307 	and.w	r3, r3, #7
 8021388:	f001 0107 	and.w	r1, r1, #7
 802138c:	bf58      	it	pl
 802138e:	4259      	negpl	r1, r3
 8021390:	b2c9      	uxtb	r1, r1
 8021392:	b2ed      	uxtb	r5, r5
 8021394:	463a      	mov	r2, r7
 8021396:	e9cd 1500 	strd	r1, r5, [sp]
 802139a:	fa0f f388 	sxth.w	r3, r8
 802139e:	6861      	ldr	r1, [r4, #4]
 80213a0:	f104 0014 	add.w	r0, r4, #20
 80213a4:	f7ff fe4c 	bl	8021040 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80213a8:	4607      	mov	r7, r0
 80213aa:	6860      	ldr	r0, [r4, #4]
 80213ac:	6803      	ldr	r3, [r0, #0]
 80213ae:	691b      	ldr	r3, [r3, #16]
 80213b0:	4798      	blx	r3
 80213b2:	6830      	ldr	r0, [r6, #0]
 80213b4:	6803      	ldr	r3, [r0, #0]
 80213b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80213b8:	4798      	blx	r3
 80213ba:	4638      	mov	r0, r7
 80213bc:	b002      	add	sp, #8
 80213be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80213c2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213c6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80213ca:	2204      	movs	r2, #4
 80213cc:	fb91 f2f2 	sdiv	r2, r1, r2
 80213d0:	fb08 2303 	mla	r3, r8, r3, r2
 80213d4:	441f      	add	r7, r3
 80213d6:	424b      	negs	r3, r1
 80213d8:	f003 0303 	and.w	r3, r3, #3
 80213dc:	f001 0103 	and.w	r1, r1, #3
 80213e0:	e7d4      	b.n	802138c <_ZN8touchgfx6Canvas6renderEh+0x88>
 80213e2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80213e6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213ea:	2900      	cmp	r1, #0
 80213ec:	f04f 0202 	mov.w	r2, #2
 80213f0:	fb91 f2f2 	sdiv	r2, r1, r2
 80213f4:	f001 0101 	and.w	r1, r1, #1
 80213f8:	fb08 2303 	mla	r3, r8, r3, r2
 80213fc:	441f      	add	r7, r3
 80213fe:	bfb8      	it	lt
 8021400:	4249      	neglt	r1, r1
 8021402:	e7c5      	b.n	8021390 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8021404:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021408:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802140c:	fb08 f303 	mul.w	r3, r8, r3
 8021410:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8021414:	441f      	add	r7, r3
 8021416:	2100      	movs	r1, #0
 8021418:	e7bb      	b.n	8021392 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802141a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802141e:	fb08 f203 	mul.w	r2, r8, r3
 8021422:	89a3      	ldrh	r3, [r4, #12]
 8021424:	2103      	movs	r1, #3
 8021426:	fb13 2301 	smlabb	r3, r3, r1, r2
 802142a:	e7f3      	b.n	8021414 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802142c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021430:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021434:	fb08 2303 	mla	r3, r8, r3, r2
 8021438:	e7ec      	b.n	8021414 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802143a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802143e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021442:	fb08 f303 	mul.w	r3, r8, r3
 8021446:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802144a:	e7e3      	b.n	8021414 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802144c:	2701      	movs	r7, #1
 802144e:	e7b4      	b.n	80213ba <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021450:	20013ff8 	.word	0x20013ff8

08021454 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8021454:	b510      	push	{r4, lr}
 8021456:	4b06      	ldr	r3, [pc, #24]	@ (8021470 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8021458:	781b      	ldrb	r3, [r3, #0]
 802145a:	2b01      	cmp	r3, #1
 802145c:	d107      	bne.n	802146e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 802145e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8021462:	680b      	ldr	r3, [r1, #0]
 8021464:	6814      	ldr	r4, [r2, #0]
 8021466:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802146a:	6013      	str	r3, [r2, #0]
 802146c:	600c      	str	r4, [r1, #0]
 802146e:	bd10      	pop	{r4, pc}
 8021470:	20013fee 	.word	0x20013fee

08021474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8021474:	b513      	push	{r0, r1, r4, lr}
 8021476:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802147a:	4604      	mov	r4, r0
 802147c:	e9cd 2100 	strd	r2, r1, [sp]
 8021480:	b9a3      	cbnz	r3, 80214ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8021482:	466a      	mov	r2, sp
 8021484:	a901      	add	r1, sp, #4
 8021486:	4620      	mov	r0, r4
 8021488:	f7ff ffe4 	bl	8021454 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802148c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802148e:	9901      	ldr	r1, [sp, #4]
 8021490:	9a00      	ldr	r2, [sp, #0]
 8021492:	1ac9      	subs	r1, r1, r3
 8021494:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021496:	9101      	str	r1, [sp, #4]
 8021498:	1ad2      	subs	r2, r2, r3
 802149a:	2a00      	cmp	r2, #0
 802149c:	9200      	str	r2, [sp, #0]
 802149e:	da0b      	bge.n	80214b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80214a0:	2301      	movs	r3, #1
 80214a2:	2900      	cmp	r1, #0
 80214a4:	da0e      	bge.n	80214c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80214a6:	f043 0304 	orr.w	r3, r3, #4
 80214aa:	e013      	b.n	80214d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80214ac:	f7ff ff08 	bl	80212c0 <_ZN8touchgfx6Canvas5closeEv>
 80214b0:	2800      	cmp	r0, #0
 80214b2:	d1e6      	bne.n	8021482 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80214b4:	b002      	add	sp, #8
 80214b6:	bd10      	pop	{r4, pc}
 80214b8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80214ba:	429a      	cmp	r2, r3
 80214bc:	bfac      	ite	ge
 80214be:	2302      	movge	r3, #2
 80214c0:	2300      	movlt	r3, #0
 80214c2:	e7ee      	b.n	80214a2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80214c4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80214c6:	4281      	cmp	r1, r0
 80214c8:	bfac      	ite	ge
 80214ca:	2008      	movge	r0, #8
 80214cc:	2000      	movlt	r0, #0
 80214ce:	4318      	orrs	r0, r3
 80214d0:	b2c3      	uxtb	r3, r0
 80214d2:	b158      	cbz	r0, 80214ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80214d4:	2200      	movs	r2, #0
 80214d6:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 80214da:	9901      	ldr	r1, [sp, #4]
 80214dc:	9a00      	ldr	r2, [sp, #0]
 80214de:	66e1      	str	r1, [r4, #108]	@ 0x6c
 80214e0:	6722      	str	r2, [r4, #112]	@ 0x70
 80214e2:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 80214e6:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 80214ea:	e7e3      	b.n	80214b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80214ec:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80214f0:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80214f4:	4298      	cmp	r0, r3
 80214f6:	d803      	bhi.n	8021500 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80214f8:	f104 0014 	add.w	r0, r4, #20
 80214fc:	f7ec fe64 	bl	800e1c8 <_ZN8touchgfx7Outline6moveToEii>
 8021500:	2301      	movs	r3, #1
 8021502:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021506:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802150a:	2300      	movs	r3, #0
 802150c:	e7e5      	b.n	80214da <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802150e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021510:	ab02      	add	r3, sp, #8
 8021512:	4604      	mov	r4, r0
 8021514:	f843 2d08 	str.w	r2, [r3, #-8]!
 8021518:	9101      	str	r1, [sp, #4]
 802151a:	461a      	mov	r2, r3
 802151c:	a901      	add	r1, sp, #4
 802151e:	f7ff ff99 	bl	8021454 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021522:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021524:	9901      	ldr	r1, [sp, #4]
 8021526:	9a00      	ldr	r2, [sp, #0]
 8021528:	1ac9      	subs	r1, r1, r3
 802152a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802152c:	9101      	str	r1, [sp, #4]
 802152e:	1ad2      	subs	r2, r2, r3
 8021530:	2a00      	cmp	r2, #0
 8021532:	9200      	str	r2, [sp, #0]
 8021534:	db1c      	blt.n	8021570 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8021536:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021538:	429a      	cmp	r2, r3
 802153a:	bfac      	ite	ge
 802153c:	2002      	movge	r0, #2
 802153e:	2000      	movlt	r0, #0
 8021540:	2900      	cmp	r1, #0
 8021542:	db17      	blt.n	8021574 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8021544:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8021546:	4299      	cmp	r1, r3
 8021548:	bfac      	ite	ge
 802154a:	2308      	movge	r3, #8
 802154c:	2300      	movlt	r3, #0
 802154e:	4303      	orrs	r3, r0
 8021550:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8021554:	b2dd      	uxtb	r5, r3
 8021556:	b978      	cbnz	r0, 8021578 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8021558:	f104 0014 	add.w	r0, r4, #20
 802155c:	f7ff fd64 	bl	8021028 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021560:	9b01      	ldr	r3, [sp, #4]
 8021562:	6623      	str	r3, [r4, #96]	@ 0x60
 8021564:	9b00      	ldr	r3, [sp, #0]
 8021566:	6663      	str	r3, [r4, #100]	@ 0x64
 8021568:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 802156c:	b002      	add	sp, #8
 802156e:	bd70      	pop	{r4, r5, r6, pc}
 8021570:	2001      	movs	r0, #1
 8021572:	e7e5      	b.n	8021540 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8021574:	2304      	movs	r3, #4
 8021576:	e7ea      	b.n	802154e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8021578:	b113      	cbz	r3, 8021580 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802157a:	ea10 0305 	ands.w	r3, r0, r5
 802157e:	d11c      	bne.n	80215ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021580:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8021584:	f104 0614 	add.w	r6, r4, #20
 8021588:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 802158c:	b98b      	cbnz	r3, 80215b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802158e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021592:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021596:	4298      	cmp	r0, r3
 8021598:	d802      	bhi.n	80215a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802159a:	4630      	mov	r0, r6
 802159c:	f7ec fe14 	bl	800e1c8 <_ZN8touchgfx7Outline6moveToEii>
 80215a0:	2301      	movs	r3, #1
 80215a2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80215a6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80215aa:	e9dd 2100 	ldrd	r2, r1, [sp]
 80215ae:	4630      	mov	r0, r6
 80215b0:	e7d4      	b.n	802155c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80215b2:	4630      	mov	r0, r6
 80215b4:	f7ff fd38 	bl	8021028 <_ZN8touchgfx10Rasterizer6lineToEii>
 80215b8:	e7f7      	b.n	80215aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80215ba:	461d      	mov	r5, r3
 80215bc:	e7d0      	b.n	8021560 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080215c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 80215c0:	b538      	push	{r3, r4, r5, lr}
 80215c2:	ed2d 8b10 	vpush	{d8-d15}
 80215c6:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 80215ca:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 8021734 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 80215ce:	4605      	mov	r5, r0
 80215d0:	eeb0 ca40 	vmov.f32	s24, s0
 80215d4:	eef0 ca60 	vmov.f32	s25, s1
 80215d8:	eeb0 da41 	vmov.f32	s26, s2
 80215dc:	eef0 da61 	vmov.f32	s27, s3
 80215e0:	eeb0 ea42 	vmov.f32	s28, s4
 80215e4:	eef0 ea62 	vmov.f32	s29, s5
 80215e8:	460c      	mov	r4, r1
 80215ea:	eef0 aa6b 	vmov.f32	s21, s23
 80215ee:	2c08      	cmp	r4, #8
 80215f0:	d86e      	bhi.n	80216d0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 80215f2:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 80215f6:	ee7d 7aee 	vsub.f32	s15, s27, s29
 80215fa:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 80215fe:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8021602:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 8021606:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802160a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802160e:	ee7c faad 	vadd.f32	s31, s25, s27
 8021612:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 8021616:	ee3d aaae 	vadd.f32	s20, s27, s29
 802161a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802161e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021622:	ee2f fa2b 	vmul.f32	s30, s30, s23
 8021626:	ee6f faab 	vmul.f32	s31, s31, s23
 802162a:	ee69 9aab 	vmul.f32	s19, s19, s23
 802162e:	ee2a aa2b 	vmul.f32	s20, s20, s23
 8021632:	bf48      	it	mi
 8021634:	eef1 7a67 	vnegmi.f32	s15, s15
 8021638:	ee7f 8a29 	vadd.f32	s17, s30, s19
 802163c:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8021640:	eef4 7acb 	vcmpe.f32	s15, s22
 8021644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021648:	ee68 8aab 	vmul.f32	s17, s17, s23
 802164c:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8021650:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8021654:	dd3f      	ble.n	80216d6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 8021656:	ee27 7a07 	vmul.f32	s14, s14, s14
 802165a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802165e:	eea6 7aa6 	vfma.f32	s14, s13, s13
 8021662:	ee27 7a06 	vmul.f32	s14, s14, s12
 8021666:	eef4 7ac7 	vcmpe.f32	s15, s14
 802166a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802166e:	d847      	bhi.n	8021700 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8021670:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 8021674:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8021678:	f000 fa3b 	bl	8021af2 <atan2f>
 802167c:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8021680:	eeb0 8a40 	vmov.f32	s16, s0
 8021684:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8021688:	f000 fa33 	bl	8021af2 <atan2f>
 802168c:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021690:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8021738 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 8021694:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021698:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802169c:	bf48      	it	mi
 802169e:	eeb1 0a40 	vnegmi.f32	s0, s0
 80216a2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80216a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80216aa:	bfa4      	itt	ge
 80216ac:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 802173c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 80216b0:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80216b4:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8021740 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 80216b8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80216bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80216c0:	d51e      	bpl.n	8021700 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80216c2:	eef0 0a49 	vmov.f32	s1, s18
 80216c6:	eeb0 0a68 	vmov.f32	s0, s17
 80216ca:	4628      	mov	r0, r5
 80216cc:	f7ea ff8c 	bl	800c5e8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80216d0:	ecbd 8b10 	vpop	{d8-d15}
 80216d4:	bd38      	pop	{r3, r4, r5, pc}
 80216d6:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 80216da:	eeb0 7a68 	vmov.f32	s14, s17
 80216de:	eea7 7aea 	vfms.f32	s14, s15, s21
 80216e2:	ee7c 7aae 	vadd.f32	s15, s25, s29
 80216e6:	eef0 6a49 	vmov.f32	s13, s18
 80216ea:	eee7 6aea 	vfms.f32	s13, s15, s21
 80216ee:	ee66 7aa6 	vmul.f32	s15, s13, s13
 80216f2:	eee7 7a07 	vfma.f32	s15, s14, s14
 80216f6:	eef4 7ac6 	vcmpe.f32	s15, s12
 80216fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80216fe:	d9e0      	bls.n	80216c2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8021700:	3401      	adds	r4, #1
 8021702:	eef0 0a6c 	vmov.f32	s1, s25
 8021706:	eeb0 0a4c 	vmov.f32	s0, s24
 802170a:	4621      	mov	r1, r4
 802170c:	eef0 2a49 	vmov.f32	s5, s18
 8021710:	eeb0 2a68 	vmov.f32	s4, s17
 8021714:	eef0 1a6f 	vmov.f32	s3, s31
 8021718:	eeb0 1a4f 	vmov.f32	s2, s30
 802171c:	4628      	mov	r0, r5
 802171e:	f7ff ff4f 	bl	80215c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8021722:	eef0 da4a 	vmov.f32	s27, s20
 8021726:	eeb0 da69 	vmov.f32	s26, s19
 802172a:	eef0 ca49 	vmov.f32	s25, s18
 802172e:	eeb0 ca68 	vmov.f32	s24, s17
 8021732:	e75c      	b.n	80215ee <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 8021734:	2edbe6ff 	.word	0x2edbe6ff
 8021738:	40490fdb 	.word	0x40490fdb
 802173c:	40c90fdb 	.word	0x40c90fdb
 8021740:	3dcccccd 	.word	0x3dcccccd

08021744 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 8021744:	b530      	push	{r4, r5, lr}
 8021746:	ed2d 8b10 	vpush	{d8-d15}
 802174a:	4604      	mov	r4, r0
 802174c:	b085      	sub	sp, #20
 802174e:	eef0 8a40 	vmov.f32	s17, s0
 8021752:	eef0 9a60 	vmov.f32	s19, s1
 8021756:	eef0 fa41 	vmov.f32	s31, s2
 802175a:	eeb0 fa61 	vmov.f32	s30, s3
 802175e:	eef0 ba42 	vmov.f32	s23, s4
 8021762:	eeb0 ca62 	vmov.f32	s24, s5
 8021766:	eef0 aa43 	vmov.f32	s21, s6
 802176a:	eeb0 ba63 	vmov.f32	s22, s7
 802176e:	460d      	mov	r5, r1
 8021770:	2d08      	cmp	r5, #8
 8021772:	f200 8115 	bhi.w	80219a0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 8021776:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 802177a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802177e:	ee7f 6aab 	vadd.f32	s13, s31, s23
 8021782:	ee26 6a27 	vmul.f32	s12, s12, s15
 8021786:	ee38 daaf 	vadd.f32	s26, s17, s31
 802178a:	ed8d 6a01 	vstr	s12, [sp, #4]
 802178e:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8021792:	ee2d da27 	vmul.f32	s26, s26, s15
 8021796:	ee7c ca0b 	vadd.f32	s25, s24, s22
 802179a:	eeb0 ea4d 	vmov.f32	s28, s26
 802179e:	eea6 eaa7 	vfma.f32	s28, s13, s15
 80217a2:	ee6c caa7 	vmul.f32	s25, s25, s15
 80217a6:	ee66 6a27 	vmul.f32	s13, s12, s15
 80217aa:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 80217ae:	edcd 6a03 	vstr	s13, [sp, #12]
 80217b2:	ee79 da8f 	vadd.f32	s27, s19, s30
 80217b6:	eef0 6a6c 	vmov.f32	s13, s25
 80217ba:	eee7 6a27 	vfma.f32	s13, s14, s15
 80217be:	ee6d daa7 	vmul.f32	s27, s27, s15
 80217c2:	ee2e ea27 	vmul.f32	s28, s28, s15
 80217c6:	eef0 ea6d 	vmov.f32	s29, s27
 80217ca:	eee7 ea27 	vfma.f32	s29, s14, s15
 80217ce:	ee26 7aa7 	vmul.f32	s14, s13, s15
 80217d2:	ee6e eaa7 	vmul.f32	s29, s29, s15
 80217d6:	ed8d 7a02 	vstr	s14, [sp, #8]
 80217da:	ed9d 7a03 	vldr	s14, [sp, #12]
 80217de:	ee3e 9a07 	vadd.f32	s18, s28, s14
 80217e2:	ed9d 7a02 	vldr	s14, [sp, #8]
 80217e6:	ee3e aa87 	vadd.f32	s20, s29, s14
 80217ea:	ee29 9a27 	vmul.f32	s18, s18, s15
 80217ee:	ee2a aa27 	vmul.f32	s20, s20, s15
 80217f2:	eef0 6a67 	vmov.f32	s13, s15
 80217f6:	2d00      	cmp	r5, #0
 80217f8:	f000 810d 	beq.w	8021a16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80217fc:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8021800:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8021804:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8021808:	ee3f 6aea 	vsub.f32	s12, s31, s21
 802180c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8021810:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8021814:	eea6 7a27 	vfma.f32	s14, s12, s15
 8021818:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 802181c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8021820:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8021824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021828:	eea5 6a27 	vfma.f32	s12, s10, s15
 802182c:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8021a5c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8021830:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8021834:	bf48      	it	mi
 8021836:	eeb1 7a47 	vnegmi.f32	s14, s14
 802183a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802183e:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8021842:	bf48      	it	mi
 8021844:	eeb1 6a46 	vnegmi.f32	s12, s12
 8021848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802184c:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8021850:	f340 80aa 	ble.w	80219a8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8021854:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8021858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802185c:	dd5c      	ble.n	8021918 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 802185e:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8021862:	ee37 7a06 	vadd.f32	s14, s14, s12
 8021866:	eee7 5aa7 	vfma.f32	s11, s15, s15
 802186a:	ee27 7a07 	vmul.f32	s14, s14, s14
 802186e:	ee65 7a85 	vmul.f32	s15, s11, s10
 8021872:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021876:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802187a:	f200 80cc 	bhi.w	8021a16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802187e:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021882:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021886:	f000 f934 	bl	8021af2 <atan2f>
 802188a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802188e:	eeb0 8a40 	vmov.f32	s16, s0
 8021892:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8021896:	f000 f92c 	bl	8021af2 <atan2f>
 802189a:	ee38 fa40 	vsub.f32	s30, s16, s0
 802189e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 80218a2:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 80218a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218aa:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 80218ae:	bf48      	it	mi
 80218b0:	eeb1 fa4f 	vnegmi.f32	s30, s30
 80218b4:	f000 f91d 	bl	8021af2 <atan2f>
 80218b8:	ee30 0a48 	vsub.f32	s0, s0, s16
 80218bc:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8021a60 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80218c0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80218c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218c8:	eeb4 fae7 	vcmpe.f32	s30, s15
 80218cc:	bf48      	it	mi
 80218ce:	eeb1 0a40 	vnegmi.f32	s0, s0
 80218d2:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8021a60 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80218d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218da:	bfa8      	it	ge
 80218dc:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8021a64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80218e0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80218e4:	bfa8      	it	ge
 80218e6:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 80218ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218ee:	bfa8      	it	ge
 80218f0:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8021a64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80218f4:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8021a68 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80218f8:	bfa8      	it	ge
 80218fa:	ee37 0a40 	vsubge.f32	s0, s14, s0
 80218fe:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8021902:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802190a:	f140 8084 	bpl.w	8021a16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802190e:	eef0 0a4a 	vmov.f32	s1, s20
 8021912:	eeb0 0a49 	vmov.f32	s0, s18
 8021916:	e040      	b.n	802199a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8021918:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802191c:	ee27 7a07 	vmul.f32	s14, s14, s14
 8021920:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8021924:	ee67 7a85 	vmul.f32	s15, s15, s10
 8021928:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802192c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021930:	d871      	bhi.n	8021a16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021932:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021936:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802193a:	f000 f8da 	bl	8021af2 <atan2f>
 802193e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8021942:	eeb0 8a40 	vmov.f32	s16, s0
 8021946:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802194a:	f000 f8d2 	bl	8021af2 <atan2f>
 802194e:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021952:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8021a60 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021956:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802195a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802195e:	bf48      	it	mi
 8021960:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021964:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021968:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802196c:	bfa4      	itt	ge
 802196e:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8021a64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021972:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8021976:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8021a68 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802197a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802197e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021982:	d548      	bpl.n	8021a16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021984:	eef0 0a4f 	vmov.f32	s1, s30
 8021988:	eeb0 0a6f 	vmov.f32	s0, s31
 802198c:	4620      	mov	r0, r4
 802198e:	f7ea fe2b 	bl	800c5e8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021992:	eef0 0a4c 	vmov.f32	s1, s24
 8021996:	eeb0 0a6b 	vmov.f32	s0, s23
 802199a:	4620      	mov	r0, r4
 802199c:	f7ea fe24 	bl	800c5e8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80219a0:	b005      	add	sp, #20
 80219a2:	ecbd 8b10 	vpop	{d8-d15}
 80219a6:	bd30      	pop	{r4, r5, pc}
 80219a8:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8021a5c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80219ac:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80219b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80219b4:	dd19      	ble.n	80219ea <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 80219b6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80219ba:	ee26 7a06 	vmul.f32	s14, s12, s12
 80219be:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80219c2:	ee67 7a85 	vmul.f32	s15, s15, s10
 80219c6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80219ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80219ce:	d822      	bhi.n	8021a16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80219d0:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 80219d4:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 80219d8:	f000 f88b 	bl	8021af2 <atan2f>
 80219dc:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80219e0:	eeb0 8a40 	vmov.f32	s16, s0
 80219e4:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80219e8:	e7af      	b.n	802194a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 80219ea:	ee78 7aaa 	vadd.f32	s15, s17, s21
 80219ee:	eeb0 7a49 	vmov.f32	s14, s18
 80219f2:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80219f6:	ee79 7a8b 	vadd.f32	s15, s19, s22
 80219fa:	eeb0 6a4a 	vmov.f32	s12, s20
 80219fe:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8021a02:	ee66 7a06 	vmul.f32	s15, s12, s12
 8021a06:	eee7 7a07 	vfma.f32	s15, s14, s14
 8021a0a:	eef4 7ac5 	vcmpe.f32	s15, s10
 8021a0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021a12:	f67f af7c 	bls.w	802190e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8021a16:	3501      	adds	r5, #1
 8021a18:	eef0 0a69 	vmov.f32	s1, s19
 8021a1c:	eeb0 0a68 	vmov.f32	s0, s17
 8021a20:	4629      	mov	r1, r5
 8021a22:	eef0 3a4a 	vmov.f32	s7, s20
 8021a26:	eeb0 3a49 	vmov.f32	s6, s18
 8021a2a:	eef0 2a6e 	vmov.f32	s5, s29
 8021a2e:	eeb0 2a4e 	vmov.f32	s4, s28
 8021a32:	eef0 1a6d 	vmov.f32	s3, s27
 8021a36:	eeb0 1a4d 	vmov.f32	s2, s26
 8021a3a:	4620      	mov	r0, r4
 8021a3c:	f7ff fe82 	bl	8021744 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8021a40:	eeb0 ca6c 	vmov.f32	s24, s25
 8021a44:	eddd ba01 	vldr	s23, [sp, #4]
 8021a48:	ed9d fa02 	vldr	s30, [sp, #8]
 8021a4c:	eddd fa03 	vldr	s31, [sp, #12]
 8021a50:	eef0 9a4a 	vmov.f32	s19, s20
 8021a54:	eef0 8a49 	vmov.f32	s17, s18
 8021a58:	e68a      	b.n	8021770 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8021a5a:	bf00      	nop
 8021a5c:	2edbe6ff 	.word	0x2edbe6ff
 8021a60:	40490fdb 	.word	0x40490fdb
 8021a64:	40c90fdb 	.word	0x40c90fdb
 8021a68:	3dcccccd 	.word	0x3dcccccd

08021a6c <_ZN8touchgfx6CanvasD1Ev>:
 8021a6c:	b510      	push	{r4, lr}
 8021a6e:	4b04      	ldr	r3, [pc, #16]	@ (8021a80 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8021a70:	4604      	mov	r4, r0
 8021a72:	f840 3b14 	str.w	r3, [r0], #20
 8021a76:	f7eb fea1 	bl	800d7bc <_ZN8touchgfx7OutlineD1Ev>
 8021a7a:	4620      	mov	r0, r4
 8021a7c:	bd10      	pop	{r4, pc}
 8021a7e:	bf00      	nop
 8021a80:	08025640 	.word	0x08025640

08021a84 <_ZN8touchgfx6CanvasD0Ev>:
 8021a84:	b510      	push	{r4, lr}
 8021a86:	4604      	mov	r4, r0
 8021a88:	f7ff fff0 	bl	8021a6c <_ZN8touchgfx6CanvasD1Ev>
 8021a8c:	4620      	mov	r0, r4
 8021a8e:	2174      	movs	r1, #116	@ 0x74
 8021a90:	f000 f807 	bl	8021aa2 <_ZdlPvj>
 8021a94:	4620      	mov	r0, r4
 8021a96:	bd10      	pop	{r4, pc}

08021a98 <__aeabi_atexit>:
 8021a98:	460b      	mov	r3, r1
 8021a9a:	4601      	mov	r1, r0
 8021a9c:	4618      	mov	r0, r3
 8021a9e:	f001 b81f 	b.w	8022ae0 <__cxa_atexit>

08021aa2 <_ZdlPvj>:
 8021aa2:	f000 b812 	b.w	8021aca <_ZdlPv>

08021aa6 <__cxa_guard_acquire>:
 8021aa6:	6802      	ldr	r2, [r0, #0]
 8021aa8:	07d2      	lsls	r2, r2, #31
 8021aaa:	4603      	mov	r3, r0
 8021aac:	d405      	bmi.n	8021aba <__cxa_guard_acquire+0x14>
 8021aae:	7842      	ldrb	r2, [r0, #1]
 8021ab0:	b102      	cbz	r2, 8021ab4 <__cxa_guard_acquire+0xe>
 8021ab2:	deff      	udf	#255	@ 0xff
 8021ab4:	2001      	movs	r0, #1
 8021ab6:	7058      	strb	r0, [r3, #1]
 8021ab8:	4770      	bx	lr
 8021aba:	2000      	movs	r0, #0
 8021abc:	4770      	bx	lr

08021abe <__cxa_guard_release>:
 8021abe:	2301      	movs	r3, #1
 8021ac0:	6003      	str	r3, [r0, #0]
 8021ac2:	4770      	bx	lr

08021ac4 <__cxa_pure_virtual>:
 8021ac4:	b508      	push	{r3, lr}
 8021ac6:	f000 f80f 	bl	8021ae8 <_ZSt9terminatev>

08021aca <_ZdlPv>:
 8021aca:	f000 bf53 	b.w	8022974 <free>

08021ace <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021ace:	b508      	push	{r3, lr}
 8021ad0:	4780      	blx	r0
 8021ad2:	f000 ff1b 	bl	802290c <abort>
	...

08021ad8 <_ZSt13get_terminatev>:
 8021ad8:	4b02      	ldr	r3, [pc, #8]	@ (8021ae4 <_ZSt13get_terminatev+0xc>)
 8021ada:	6818      	ldr	r0, [r3, #0]
 8021adc:	f3bf 8f5b 	dmb	ish
 8021ae0:	4770      	bx	lr
 8021ae2:	bf00      	nop
 8021ae4:	2000021c 	.word	0x2000021c

08021ae8 <_ZSt9terminatev>:
 8021ae8:	b508      	push	{r3, lr}
 8021aea:	f7ff fff5 	bl	8021ad8 <_ZSt13get_terminatev>
 8021aee:	f7ff ffee 	bl	8021ace <_ZN10__cxxabiv111__terminateEPFvvE>

08021af2 <atan2f>:
 8021af2:	f000 b94d 	b.w	8021d90 <__ieee754_atan2f>
	...

08021af8 <sqrtf>:
 8021af8:	b508      	push	{r3, lr}
 8021afa:	ed2d 8b02 	vpush	{d8}
 8021afe:	eeb0 8a40 	vmov.f32	s16, s0
 8021b02:	f000 f8a1 	bl	8021c48 <__ieee754_sqrtf>
 8021b06:	eeb4 8a48 	vcmp.f32	s16, s16
 8021b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b0e:	d60c      	bvs.n	8021b2a <sqrtf+0x32>
 8021b10:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8021b30 <sqrtf+0x38>
 8021b14:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8021b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b1c:	d505      	bpl.n	8021b2a <sqrtf+0x32>
 8021b1e:	f001 fa3b 	bl	8022f98 <__errno>
 8021b22:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8021b26:	2321      	movs	r3, #33	@ 0x21
 8021b28:	6003      	str	r3, [r0, #0]
 8021b2a:	ecbd 8b02 	vpop	{d8}
 8021b2e:	bd08      	pop	{r3, pc}
 8021b30:	00000000 	.word	0x00000000

08021b34 <cosf>:
 8021b34:	ee10 3a10 	vmov	r3, s0
 8021b38:	b507      	push	{r0, r1, r2, lr}
 8021b3a:	4a1e      	ldr	r2, [pc, #120]	@ (8021bb4 <cosf+0x80>)
 8021b3c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021b40:	4293      	cmp	r3, r2
 8021b42:	d806      	bhi.n	8021b52 <cosf+0x1e>
 8021b44:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8021bb8 <cosf+0x84>
 8021b48:	b003      	add	sp, #12
 8021b4a:	f85d eb04 	ldr.w	lr, [sp], #4
 8021b4e:	f000 b87f 	b.w	8021c50 <__kernel_cosf>
 8021b52:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021b56:	d304      	bcc.n	8021b62 <cosf+0x2e>
 8021b58:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021b5c:	b003      	add	sp, #12
 8021b5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8021b62:	4668      	mov	r0, sp
 8021b64:	f000 f9b4 	bl	8021ed0 <__ieee754_rem_pio2f>
 8021b68:	f000 0003 	and.w	r0, r0, #3
 8021b6c:	2801      	cmp	r0, #1
 8021b6e:	d009      	beq.n	8021b84 <cosf+0x50>
 8021b70:	2802      	cmp	r0, #2
 8021b72:	d010      	beq.n	8021b96 <cosf+0x62>
 8021b74:	b9b0      	cbnz	r0, 8021ba4 <cosf+0x70>
 8021b76:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b7a:	ed9d 0a00 	vldr	s0, [sp]
 8021b7e:	f000 f867 	bl	8021c50 <__kernel_cosf>
 8021b82:	e7eb      	b.n	8021b5c <cosf+0x28>
 8021b84:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b88:	ed9d 0a00 	vldr	s0, [sp]
 8021b8c:	f000 f8b8 	bl	8021d00 <__kernel_sinf>
 8021b90:	eeb1 0a40 	vneg.f32	s0, s0
 8021b94:	e7e2      	b.n	8021b5c <cosf+0x28>
 8021b96:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b9a:	ed9d 0a00 	vldr	s0, [sp]
 8021b9e:	f000 f857 	bl	8021c50 <__kernel_cosf>
 8021ba2:	e7f5      	b.n	8021b90 <cosf+0x5c>
 8021ba4:	eddd 0a01 	vldr	s1, [sp, #4]
 8021ba8:	ed9d 0a00 	vldr	s0, [sp]
 8021bac:	2001      	movs	r0, #1
 8021bae:	f000 f8a7 	bl	8021d00 <__kernel_sinf>
 8021bb2:	e7d3      	b.n	8021b5c <cosf+0x28>
 8021bb4:	3f490fd8 	.word	0x3f490fd8
 8021bb8:	00000000 	.word	0x00000000

08021bbc <sinf>:
 8021bbc:	ee10 3a10 	vmov	r3, s0
 8021bc0:	b507      	push	{r0, r1, r2, lr}
 8021bc2:	4a1f      	ldr	r2, [pc, #124]	@ (8021c40 <sinf+0x84>)
 8021bc4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021bc8:	4293      	cmp	r3, r2
 8021bca:	d807      	bhi.n	8021bdc <sinf+0x20>
 8021bcc:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8021c44 <sinf+0x88>
 8021bd0:	2000      	movs	r0, #0
 8021bd2:	b003      	add	sp, #12
 8021bd4:	f85d eb04 	ldr.w	lr, [sp], #4
 8021bd8:	f000 b892 	b.w	8021d00 <__kernel_sinf>
 8021bdc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021be0:	d304      	bcc.n	8021bec <sinf+0x30>
 8021be2:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021be6:	b003      	add	sp, #12
 8021be8:	f85d fb04 	ldr.w	pc, [sp], #4
 8021bec:	4668      	mov	r0, sp
 8021bee:	f000 f96f 	bl	8021ed0 <__ieee754_rem_pio2f>
 8021bf2:	f000 0003 	and.w	r0, r0, #3
 8021bf6:	2801      	cmp	r0, #1
 8021bf8:	d00a      	beq.n	8021c10 <sinf+0x54>
 8021bfa:	2802      	cmp	r0, #2
 8021bfc:	d00f      	beq.n	8021c1e <sinf+0x62>
 8021bfe:	b9c0      	cbnz	r0, 8021c32 <sinf+0x76>
 8021c00:	eddd 0a01 	vldr	s1, [sp, #4]
 8021c04:	ed9d 0a00 	vldr	s0, [sp]
 8021c08:	2001      	movs	r0, #1
 8021c0a:	f000 f879 	bl	8021d00 <__kernel_sinf>
 8021c0e:	e7ea      	b.n	8021be6 <sinf+0x2a>
 8021c10:	eddd 0a01 	vldr	s1, [sp, #4]
 8021c14:	ed9d 0a00 	vldr	s0, [sp]
 8021c18:	f000 f81a 	bl	8021c50 <__kernel_cosf>
 8021c1c:	e7e3      	b.n	8021be6 <sinf+0x2a>
 8021c1e:	eddd 0a01 	vldr	s1, [sp, #4]
 8021c22:	ed9d 0a00 	vldr	s0, [sp]
 8021c26:	2001      	movs	r0, #1
 8021c28:	f000 f86a 	bl	8021d00 <__kernel_sinf>
 8021c2c:	eeb1 0a40 	vneg.f32	s0, s0
 8021c30:	e7d9      	b.n	8021be6 <sinf+0x2a>
 8021c32:	eddd 0a01 	vldr	s1, [sp, #4]
 8021c36:	ed9d 0a00 	vldr	s0, [sp]
 8021c3a:	f000 f809 	bl	8021c50 <__kernel_cosf>
 8021c3e:	e7f5      	b.n	8021c2c <sinf+0x70>
 8021c40:	3f490fd8 	.word	0x3f490fd8
 8021c44:	00000000 	.word	0x00000000

08021c48 <__ieee754_sqrtf>:
 8021c48:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8021c4c:	4770      	bx	lr
	...

08021c50 <__kernel_cosf>:
 8021c50:	ee10 3a10 	vmov	r3, s0
 8021c54:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021c58:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021c5c:	eef0 6a40 	vmov.f32	s13, s0
 8021c60:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021c64:	d204      	bcs.n	8021c70 <__kernel_cosf+0x20>
 8021c66:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8021c6a:	ee17 2a90 	vmov	r2, s15
 8021c6e:	b342      	cbz	r2, 8021cc2 <__kernel_cosf+0x72>
 8021c70:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8021c74:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8021ce0 <__kernel_cosf+0x90>
 8021c78:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8021ce4 <__kernel_cosf+0x94>
 8021c7c:	4a1a      	ldr	r2, [pc, #104]	@ (8021ce8 <__kernel_cosf+0x98>)
 8021c7e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021c82:	4293      	cmp	r3, r2
 8021c84:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8021cec <__kernel_cosf+0x9c>
 8021c88:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021c8c:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8021cf0 <__kernel_cosf+0xa0>
 8021c90:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021c94:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8021cf4 <__kernel_cosf+0xa4>
 8021c98:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021c9c:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8021cf8 <__kernel_cosf+0xa8>
 8021ca0:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021ca4:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8021ca8:	ee26 6a07 	vmul.f32	s12, s12, s14
 8021cac:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021cb0:	eee7 0a06 	vfma.f32	s1, s14, s12
 8021cb4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021cb8:	d804      	bhi.n	8021cc4 <__kernel_cosf+0x74>
 8021cba:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8021cbe:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021cc2:	4770      	bx	lr
 8021cc4:	4a0d      	ldr	r2, [pc, #52]	@ (8021cfc <__kernel_cosf+0xac>)
 8021cc6:	4293      	cmp	r3, r2
 8021cc8:	bf9a      	itte	ls
 8021cca:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8021cce:	ee07 3a10 	vmovls	s14, r3
 8021cd2:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8021cd6:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021cda:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021cde:	e7ec      	b.n	8021cba <__kernel_cosf+0x6a>
 8021ce0:	ad47d74e 	.word	0xad47d74e
 8021ce4:	310f74f6 	.word	0x310f74f6
 8021ce8:	3e999999 	.word	0x3e999999
 8021cec:	b493f27c 	.word	0xb493f27c
 8021cf0:	37d00d01 	.word	0x37d00d01
 8021cf4:	bab60b61 	.word	0xbab60b61
 8021cf8:	3d2aaaab 	.word	0x3d2aaaab
 8021cfc:	3f480000 	.word	0x3f480000

08021d00 <__kernel_sinf>:
 8021d00:	ee10 3a10 	vmov	r3, s0
 8021d04:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021d08:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021d0c:	d204      	bcs.n	8021d18 <__kernel_sinf+0x18>
 8021d0e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8021d12:	ee17 3a90 	vmov	r3, s15
 8021d16:	b35b      	cbz	r3, 8021d70 <__kernel_sinf+0x70>
 8021d18:	ee20 7a00 	vmul.f32	s14, s0, s0
 8021d1c:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021d74 <__kernel_sinf+0x74>
 8021d20:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8021d78 <__kernel_sinf+0x78>
 8021d24:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021d28:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8021d7c <__kernel_sinf+0x7c>
 8021d2c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021d30:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8021d80 <__kernel_sinf+0x80>
 8021d34:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021d38:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8021d84 <__kernel_sinf+0x84>
 8021d3c:	ee60 6a07 	vmul.f32	s13, s0, s14
 8021d40:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021d44:	b930      	cbnz	r0, 8021d54 <__kernel_sinf+0x54>
 8021d46:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8021d88 <__kernel_sinf+0x88>
 8021d4a:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021d4e:	eea6 0a26 	vfma.f32	s0, s12, s13
 8021d52:	4770      	bx	lr
 8021d54:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8021d58:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8021d5c:	eee0 7a86 	vfma.f32	s15, s1, s12
 8021d60:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8021d64:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8021d8c <__kernel_sinf+0x8c>
 8021d68:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8021d6c:	ee30 0a60 	vsub.f32	s0, s0, s1
 8021d70:	4770      	bx	lr
 8021d72:	bf00      	nop
 8021d74:	2f2ec9d3 	.word	0x2f2ec9d3
 8021d78:	b2d72f34 	.word	0xb2d72f34
 8021d7c:	3638ef1b 	.word	0x3638ef1b
 8021d80:	b9500d01 	.word	0xb9500d01
 8021d84:	3c088889 	.word	0x3c088889
 8021d88:	be2aaaab 	.word	0xbe2aaaab
 8021d8c:	3e2aaaab 	.word	0x3e2aaaab

08021d90 <__ieee754_atan2f>:
 8021d90:	ee10 2a90 	vmov	r2, s1
 8021d94:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8021d98:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8021d9c:	b510      	push	{r4, lr}
 8021d9e:	eef0 7a40 	vmov.f32	s15, s0
 8021da2:	d806      	bhi.n	8021db2 <__ieee754_atan2f+0x22>
 8021da4:	ee10 0a10 	vmov	r0, s0
 8021da8:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8021dac:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021db0:	d904      	bls.n	8021dbc <__ieee754_atan2f+0x2c>
 8021db2:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8021db6:	eeb0 0a67 	vmov.f32	s0, s15
 8021dba:	bd10      	pop	{r4, pc}
 8021dbc:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8021dc0:	d103      	bne.n	8021dca <__ieee754_atan2f+0x3a>
 8021dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021dc6:	f000 b9b3 	b.w	8022130 <atanf>
 8021dca:	1794      	asrs	r4, r2, #30
 8021dcc:	f004 0402 	and.w	r4, r4, #2
 8021dd0:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8021dd4:	b943      	cbnz	r3, 8021de8 <__ieee754_atan2f+0x58>
 8021dd6:	2c02      	cmp	r4, #2
 8021dd8:	d05e      	beq.n	8021e98 <__ieee754_atan2f+0x108>
 8021dda:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8021eac <__ieee754_atan2f+0x11c>
 8021dde:	2c03      	cmp	r4, #3
 8021de0:	bf08      	it	eq
 8021de2:	eef0 7a47 	vmoveq.f32	s15, s14
 8021de6:	e7e6      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021de8:	b941      	cbnz	r1, 8021dfc <__ieee754_atan2f+0x6c>
 8021dea:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8021eb0 <__ieee754_atan2f+0x120>
 8021dee:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8021eb4 <__ieee754_atan2f+0x124>
 8021df2:	2800      	cmp	r0, #0
 8021df4:	bfa8      	it	ge
 8021df6:	eef0 7a47 	vmovge.f32	s15, s14
 8021dfa:	e7dc      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021dfc:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8021e00:	d110      	bne.n	8021e24 <__ieee754_atan2f+0x94>
 8021e02:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021e06:	f104 34ff 	add.w	r4, r4, #4294967295
 8021e0a:	d107      	bne.n	8021e1c <__ieee754_atan2f+0x8c>
 8021e0c:	2c02      	cmp	r4, #2
 8021e0e:	d846      	bhi.n	8021e9e <__ieee754_atan2f+0x10e>
 8021e10:	4b29      	ldr	r3, [pc, #164]	@ (8021eb8 <__ieee754_atan2f+0x128>)
 8021e12:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8021e16:	edd3 7a00 	vldr	s15, [r3]
 8021e1a:	e7cc      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021e1c:	2c02      	cmp	r4, #2
 8021e1e:	d841      	bhi.n	8021ea4 <__ieee754_atan2f+0x114>
 8021e20:	4b26      	ldr	r3, [pc, #152]	@ (8021ebc <__ieee754_atan2f+0x12c>)
 8021e22:	e7f6      	b.n	8021e12 <__ieee754_atan2f+0x82>
 8021e24:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021e28:	d0df      	beq.n	8021dea <__ieee754_atan2f+0x5a>
 8021e2a:	1a5b      	subs	r3, r3, r1
 8021e2c:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8021e30:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8021e34:	da1a      	bge.n	8021e6c <__ieee754_atan2f+0xdc>
 8021e36:	2a00      	cmp	r2, #0
 8021e38:	da01      	bge.n	8021e3e <__ieee754_atan2f+0xae>
 8021e3a:	313c      	adds	r1, #60	@ 0x3c
 8021e3c:	db19      	blt.n	8021e72 <__ieee754_atan2f+0xe2>
 8021e3e:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8021e42:	f000 fa49 	bl	80222d8 <fabsf>
 8021e46:	f000 f973 	bl	8022130 <atanf>
 8021e4a:	eef0 7a40 	vmov.f32	s15, s0
 8021e4e:	2c01      	cmp	r4, #1
 8021e50:	d012      	beq.n	8021e78 <__ieee754_atan2f+0xe8>
 8021e52:	2c02      	cmp	r4, #2
 8021e54:	d017      	beq.n	8021e86 <__ieee754_atan2f+0xf6>
 8021e56:	2c00      	cmp	r4, #0
 8021e58:	d0ad      	beq.n	8021db6 <__ieee754_atan2f+0x26>
 8021e5a:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8021ec0 <__ieee754_atan2f+0x130>
 8021e5e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021e62:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8021ec4 <__ieee754_atan2f+0x134>
 8021e66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021e6a:	e7a4      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021e6c:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8021eb4 <__ieee754_atan2f+0x124>
 8021e70:	e7ed      	b.n	8021e4e <__ieee754_atan2f+0xbe>
 8021e72:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021ec8 <__ieee754_atan2f+0x138>
 8021e76:	e7ea      	b.n	8021e4e <__ieee754_atan2f+0xbe>
 8021e78:	ee17 3a90 	vmov	r3, s15
 8021e7c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8021e80:	ee07 3a90 	vmov	s15, r3
 8021e84:	e797      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021e86:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8021ec0 <__ieee754_atan2f+0x130>
 8021e8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021e8e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8021ec4 <__ieee754_atan2f+0x134>
 8021e92:	ee77 7a67 	vsub.f32	s15, s14, s15
 8021e96:	e78e      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021e98:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8021ec4 <__ieee754_atan2f+0x134>
 8021e9c:	e78b      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021e9e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8021ecc <__ieee754_atan2f+0x13c>
 8021ea2:	e788      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021ea4:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8021ec8 <__ieee754_atan2f+0x138>
 8021ea8:	e785      	b.n	8021db6 <__ieee754_atan2f+0x26>
 8021eaa:	bf00      	nop
 8021eac:	c0490fdb 	.word	0xc0490fdb
 8021eb0:	bfc90fdb 	.word	0xbfc90fdb
 8021eb4:	3fc90fdb 	.word	0x3fc90fdb
 8021eb8:	08025658 	.word	0x08025658
 8021ebc:	0802564c 	.word	0x0802564c
 8021ec0:	33bbbd2e 	.word	0x33bbbd2e
 8021ec4:	40490fdb 	.word	0x40490fdb
 8021ec8:	00000000 	.word	0x00000000
 8021ecc:	3f490fdb 	.word	0x3f490fdb

08021ed0 <__ieee754_rem_pio2f>:
 8021ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021ed2:	ee10 6a10 	vmov	r6, s0
 8021ed6:	4b88      	ldr	r3, [pc, #544]	@ (80220f8 <__ieee754_rem_pio2f+0x228>)
 8021ed8:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8021edc:	429d      	cmp	r5, r3
 8021ede:	b087      	sub	sp, #28
 8021ee0:	4604      	mov	r4, r0
 8021ee2:	d805      	bhi.n	8021ef0 <__ieee754_rem_pio2f+0x20>
 8021ee4:	2300      	movs	r3, #0
 8021ee6:	ed80 0a00 	vstr	s0, [r0]
 8021eea:	6043      	str	r3, [r0, #4]
 8021eec:	2000      	movs	r0, #0
 8021eee:	e022      	b.n	8021f36 <__ieee754_rem_pio2f+0x66>
 8021ef0:	4b82      	ldr	r3, [pc, #520]	@ (80220fc <__ieee754_rem_pio2f+0x22c>)
 8021ef2:	429d      	cmp	r5, r3
 8021ef4:	d83a      	bhi.n	8021f6c <__ieee754_rem_pio2f+0x9c>
 8021ef6:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021efa:	2e00      	cmp	r6, #0
 8021efc:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8022100 <__ieee754_rem_pio2f+0x230>
 8021f00:	4a80      	ldr	r2, [pc, #512]	@ (8022104 <__ieee754_rem_pio2f+0x234>)
 8021f02:	f023 030f 	bic.w	r3, r3, #15
 8021f06:	dd18      	ble.n	8021f3a <__ieee754_rem_pio2f+0x6a>
 8021f08:	4293      	cmp	r3, r2
 8021f0a:	ee70 7a47 	vsub.f32	s15, s0, s14
 8021f0e:	bf09      	itett	eq
 8021f10:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8022108 <__ieee754_rem_pio2f+0x238>
 8021f14:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 802210c <__ieee754_rem_pio2f+0x23c>
 8021f18:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8022110 <__ieee754_rem_pio2f+0x240>
 8021f1c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8021f20:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8021f24:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021f28:	ed80 7a00 	vstr	s14, [r0]
 8021f2c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8021f30:	edc0 7a01 	vstr	s15, [r0, #4]
 8021f34:	2001      	movs	r0, #1
 8021f36:	b007      	add	sp, #28
 8021f38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021f3a:	4293      	cmp	r3, r2
 8021f3c:	ee70 7a07 	vadd.f32	s15, s0, s14
 8021f40:	bf09      	itett	eq
 8021f42:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8022108 <__ieee754_rem_pio2f+0x238>
 8021f46:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 802210c <__ieee754_rem_pio2f+0x23c>
 8021f4a:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8022110 <__ieee754_rem_pio2f+0x240>
 8021f4e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8021f52:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021f56:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021f5a:	ed80 7a00 	vstr	s14, [r0]
 8021f5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021f62:	edc0 7a01 	vstr	s15, [r0, #4]
 8021f66:	f04f 30ff 	mov.w	r0, #4294967295
 8021f6a:	e7e4      	b.n	8021f36 <__ieee754_rem_pio2f+0x66>
 8021f6c:	4b69      	ldr	r3, [pc, #420]	@ (8022114 <__ieee754_rem_pio2f+0x244>)
 8021f6e:	429d      	cmp	r5, r3
 8021f70:	d873      	bhi.n	802205a <__ieee754_rem_pio2f+0x18a>
 8021f72:	f000 f9b1 	bl	80222d8 <fabsf>
 8021f76:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8022118 <__ieee754_rem_pio2f+0x248>
 8021f7a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021f7e:	eee0 7a07 	vfma.f32	s15, s0, s14
 8021f82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021f86:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8021f8a:	ee17 0a90 	vmov	r0, s15
 8021f8e:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022100 <__ieee754_rem_pio2f+0x230>
 8021f92:	eea7 0a67 	vfms.f32	s0, s14, s15
 8021f96:	281f      	cmp	r0, #31
 8021f98:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802210c <__ieee754_rem_pio2f+0x23c>
 8021f9c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021fa0:	eeb1 6a47 	vneg.f32	s12, s14
 8021fa4:	ee70 6a67 	vsub.f32	s13, s0, s15
 8021fa8:	ee16 1a90 	vmov	r1, s13
 8021fac:	dc09      	bgt.n	8021fc2 <__ieee754_rem_pio2f+0xf2>
 8021fae:	4a5b      	ldr	r2, [pc, #364]	@ (802211c <__ieee754_rem_pio2f+0x24c>)
 8021fb0:	1e47      	subs	r7, r0, #1
 8021fb2:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021fb6:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8021fba:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8021fbe:	4293      	cmp	r3, r2
 8021fc0:	d107      	bne.n	8021fd2 <__ieee754_rem_pio2f+0x102>
 8021fc2:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8021fc6:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8021fca:	2a08      	cmp	r2, #8
 8021fcc:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8021fd0:	dc14      	bgt.n	8021ffc <__ieee754_rem_pio2f+0x12c>
 8021fd2:	6021      	str	r1, [r4, #0]
 8021fd4:	ed94 7a00 	vldr	s14, [r4]
 8021fd8:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021fdc:	2e00      	cmp	r6, #0
 8021fde:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021fe2:	ed84 0a01 	vstr	s0, [r4, #4]
 8021fe6:	daa6      	bge.n	8021f36 <__ieee754_rem_pio2f+0x66>
 8021fe8:	eeb1 7a47 	vneg.f32	s14, s14
 8021fec:	eeb1 0a40 	vneg.f32	s0, s0
 8021ff0:	ed84 7a00 	vstr	s14, [r4]
 8021ff4:	ed84 0a01 	vstr	s0, [r4, #4]
 8021ff8:	4240      	negs	r0, r0
 8021ffa:	e79c      	b.n	8021f36 <__ieee754_rem_pio2f+0x66>
 8021ffc:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8022108 <__ieee754_rem_pio2f+0x238>
 8022000:	eef0 6a40 	vmov.f32	s13, s0
 8022004:	eee6 6a25 	vfma.f32	s13, s12, s11
 8022008:	ee70 7a66 	vsub.f32	s15, s0, s13
 802200c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022010:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8022110 <__ieee754_rem_pio2f+0x240>
 8022014:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8022018:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802201c:	ee15 2a90 	vmov	r2, s11
 8022020:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8022024:	1a5b      	subs	r3, r3, r1
 8022026:	2b19      	cmp	r3, #25
 8022028:	dc04      	bgt.n	8022034 <__ieee754_rem_pio2f+0x164>
 802202a:	edc4 5a00 	vstr	s11, [r4]
 802202e:	eeb0 0a66 	vmov.f32	s0, s13
 8022032:	e7cf      	b.n	8021fd4 <__ieee754_rem_pio2f+0x104>
 8022034:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8022120 <__ieee754_rem_pio2f+0x250>
 8022038:	eeb0 0a66 	vmov.f32	s0, s13
 802203c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8022040:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8022044:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8022124 <__ieee754_rem_pio2f+0x254>
 8022048:	eee6 7a25 	vfma.f32	s15, s12, s11
 802204c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8022050:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022054:	ed84 7a00 	vstr	s14, [r4]
 8022058:	e7bc      	b.n	8021fd4 <__ieee754_rem_pio2f+0x104>
 802205a:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 802205e:	d306      	bcc.n	802206e <__ieee754_rem_pio2f+0x19e>
 8022060:	ee70 7a40 	vsub.f32	s15, s0, s0
 8022064:	edc0 7a01 	vstr	s15, [r0, #4]
 8022068:	edc0 7a00 	vstr	s15, [r0]
 802206c:	e73e      	b.n	8021eec <__ieee754_rem_pio2f+0x1c>
 802206e:	15ea      	asrs	r2, r5, #23
 8022070:	3a86      	subs	r2, #134	@ 0x86
 8022072:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8022076:	ee07 3a90 	vmov	s15, r3
 802207a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802207e:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8022128 <__ieee754_rem_pio2f+0x258>
 8022082:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022086:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802208a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802208e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022092:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022096:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802209a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802209e:	ed8d 7a04 	vstr	s14, [sp, #16]
 80220a2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80220a6:	eef5 7a40 	vcmp.f32	s15, #0.0
 80220aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80220ae:	edcd 7a05 	vstr	s15, [sp, #20]
 80220b2:	d11e      	bne.n	80220f2 <__ieee754_rem_pio2f+0x222>
 80220b4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80220b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80220bc:	bf0c      	ite	eq
 80220be:	2301      	moveq	r3, #1
 80220c0:	2302      	movne	r3, #2
 80220c2:	491a      	ldr	r1, [pc, #104]	@ (802212c <__ieee754_rem_pio2f+0x25c>)
 80220c4:	9101      	str	r1, [sp, #4]
 80220c6:	2102      	movs	r1, #2
 80220c8:	9100      	str	r1, [sp, #0]
 80220ca:	a803      	add	r0, sp, #12
 80220cc:	4621      	mov	r1, r4
 80220ce:	f000 f90b 	bl	80222e8 <__kernel_rem_pio2f>
 80220d2:	2e00      	cmp	r6, #0
 80220d4:	f6bf af2f 	bge.w	8021f36 <__ieee754_rem_pio2f+0x66>
 80220d8:	edd4 7a00 	vldr	s15, [r4]
 80220dc:	eef1 7a67 	vneg.f32	s15, s15
 80220e0:	edc4 7a00 	vstr	s15, [r4]
 80220e4:	edd4 7a01 	vldr	s15, [r4, #4]
 80220e8:	eef1 7a67 	vneg.f32	s15, s15
 80220ec:	edc4 7a01 	vstr	s15, [r4, #4]
 80220f0:	e782      	b.n	8021ff8 <__ieee754_rem_pio2f+0x128>
 80220f2:	2303      	movs	r3, #3
 80220f4:	e7e5      	b.n	80220c2 <__ieee754_rem_pio2f+0x1f2>
 80220f6:	bf00      	nop
 80220f8:	3f490fd8 	.word	0x3f490fd8
 80220fc:	4016cbe3 	.word	0x4016cbe3
 8022100:	3fc90f80 	.word	0x3fc90f80
 8022104:	3fc90fd0 	.word	0x3fc90fd0
 8022108:	37354400 	.word	0x37354400
 802210c:	37354443 	.word	0x37354443
 8022110:	2e85a308 	.word	0x2e85a308
 8022114:	43490f80 	.word	0x43490f80
 8022118:	3f22f984 	.word	0x3f22f984
 802211c:	08025664 	.word	0x08025664
 8022120:	2e85a300 	.word	0x2e85a300
 8022124:	248d3132 	.word	0x248d3132
 8022128:	43800000 	.word	0x43800000
 802212c:	080256e4 	.word	0x080256e4

08022130 <atanf>:
 8022130:	b538      	push	{r3, r4, r5, lr}
 8022132:	ee10 5a10 	vmov	r5, s0
 8022136:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 802213a:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 802213e:	eef0 7a40 	vmov.f32	s15, s0
 8022142:	d310      	bcc.n	8022166 <atanf+0x36>
 8022144:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8022148:	d904      	bls.n	8022154 <atanf+0x24>
 802214a:	ee70 7a00 	vadd.f32	s15, s0, s0
 802214e:	eeb0 0a67 	vmov.f32	s0, s15
 8022152:	bd38      	pop	{r3, r4, r5, pc}
 8022154:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 802228c <atanf+0x15c>
 8022158:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8022290 <atanf+0x160>
 802215c:	2d00      	cmp	r5, #0
 802215e:	bfc8      	it	gt
 8022160:	eef0 7a47 	vmovgt.f32	s15, s14
 8022164:	e7f3      	b.n	802214e <atanf+0x1e>
 8022166:	4b4b      	ldr	r3, [pc, #300]	@ (8022294 <atanf+0x164>)
 8022168:	429c      	cmp	r4, r3
 802216a:	d810      	bhi.n	802218e <atanf+0x5e>
 802216c:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8022170:	d20a      	bcs.n	8022188 <atanf+0x58>
 8022172:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8022298 <atanf+0x168>
 8022176:	ee30 7a07 	vadd.f32	s14, s0, s14
 802217a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802217e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8022182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022186:	dce2      	bgt.n	802214e <atanf+0x1e>
 8022188:	f04f 33ff 	mov.w	r3, #4294967295
 802218c:	e013      	b.n	80221b6 <atanf+0x86>
 802218e:	f000 f8a3 	bl	80222d8 <fabsf>
 8022192:	4b42      	ldr	r3, [pc, #264]	@ (802229c <atanf+0x16c>)
 8022194:	429c      	cmp	r4, r3
 8022196:	d84f      	bhi.n	8022238 <atanf+0x108>
 8022198:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802219c:	429c      	cmp	r4, r3
 802219e:	d841      	bhi.n	8022224 <atanf+0xf4>
 80221a0:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80221a4:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80221a8:	eea0 7a27 	vfma.f32	s14, s0, s15
 80221ac:	2300      	movs	r3, #0
 80221ae:	ee30 0a27 	vadd.f32	s0, s0, s15
 80221b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80221b6:	1c5a      	adds	r2, r3, #1
 80221b8:	ee27 6aa7 	vmul.f32	s12, s15, s15
 80221bc:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 80222a0 <atanf+0x170>
 80221c0:	eddf 5a38 	vldr	s11, [pc, #224]	@ 80222a4 <atanf+0x174>
 80221c4:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 80222a8 <atanf+0x178>
 80221c8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80221cc:	eee6 5a87 	vfma.f32	s11, s13, s14
 80221d0:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 80222ac <atanf+0x17c>
 80221d4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80221d8:	eddf 5a35 	vldr	s11, [pc, #212]	@ 80222b0 <atanf+0x180>
 80221dc:	eee7 5a26 	vfma.f32	s11, s14, s13
 80221e0:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 80222b4 <atanf+0x184>
 80221e4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80221e8:	eddf 5a33 	vldr	s11, [pc, #204]	@ 80222b8 <atanf+0x188>
 80221ec:	eee7 5a26 	vfma.f32	s11, s14, s13
 80221f0:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 80222bc <atanf+0x18c>
 80221f4:	eea6 5a87 	vfma.f32	s10, s13, s14
 80221f8:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 80222c0 <atanf+0x190>
 80221fc:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022200:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 80222c4 <atanf+0x194>
 8022204:	eea7 5a26 	vfma.f32	s10, s14, s13
 8022208:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 80222c8 <atanf+0x198>
 802220c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022210:	ee27 7a26 	vmul.f32	s14, s14, s13
 8022214:	eea5 7a86 	vfma.f32	s14, s11, s12
 8022218:	ee27 7a87 	vmul.f32	s14, s15, s14
 802221c:	d121      	bne.n	8022262 <atanf+0x132>
 802221e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022222:	e794      	b.n	802214e <atanf+0x1e>
 8022224:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8022228:	ee30 7a67 	vsub.f32	s14, s0, s15
 802222c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022230:	2301      	movs	r3, #1
 8022232:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022236:	e7be      	b.n	80221b6 <atanf+0x86>
 8022238:	4b24      	ldr	r3, [pc, #144]	@ (80222cc <atanf+0x19c>)
 802223a:	429c      	cmp	r4, r3
 802223c:	d80b      	bhi.n	8022256 <atanf+0x126>
 802223e:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8022242:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022246:	eea0 7a27 	vfma.f32	s14, s0, s15
 802224a:	2302      	movs	r3, #2
 802224c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022250:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8022254:	e7af      	b.n	80221b6 <atanf+0x86>
 8022256:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802225a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802225e:	2303      	movs	r3, #3
 8022260:	e7a9      	b.n	80221b6 <atanf+0x86>
 8022262:	4a1b      	ldr	r2, [pc, #108]	@ (80222d0 <atanf+0x1a0>)
 8022264:	491b      	ldr	r1, [pc, #108]	@ (80222d4 <atanf+0x1a4>)
 8022266:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802226a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802226e:	edd3 6a00 	vldr	s13, [r3]
 8022272:	ee37 7a66 	vsub.f32	s14, s14, s13
 8022276:	2d00      	cmp	r5, #0
 8022278:	ee37 7a67 	vsub.f32	s14, s14, s15
 802227c:	edd2 7a00 	vldr	s15, [r2]
 8022280:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022284:	bfb8      	it	lt
 8022286:	eef1 7a67 	vneglt.f32	s15, s15
 802228a:	e760      	b.n	802214e <atanf+0x1e>
 802228c:	bfc90fdb 	.word	0xbfc90fdb
 8022290:	3fc90fdb 	.word	0x3fc90fdb
 8022294:	3edfffff 	.word	0x3edfffff
 8022298:	7149f2ca 	.word	0x7149f2ca
 802229c:	3f97ffff 	.word	0x3f97ffff
 80222a0:	3c8569d7 	.word	0x3c8569d7
 80222a4:	3d4bda59 	.word	0x3d4bda59
 80222a8:	bd6ef16b 	.word	0xbd6ef16b
 80222ac:	3d886b35 	.word	0x3d886b35
 80222b0:	3dba2e6e 	.word	0x3dba2e6e
 80222b4:	3e124925 	.word	0x3e124925
 80222b8:	3eaaaaab 	.word	0x3eaaaaab
 80222bc:	bd15a221 	.word	0xbd15a221
 80222c0:	bd9d8795 	.word	0xbd9d8795
 80222c4:	bde38e38 	.word	0xbde38e38
 80222c8:	be4ccccd 	.word	0xbe4ccccd
 80222cc:	401bffff 	.word	0x401bffff
 80222d0:	08025a0c 	.word	0x08025a0c
 80222d4:	080259fc 	.word	0x080259fc

080222d8 <fabsf>:
 80222d8:	ee10 3a10 	vmov	r3, s0
 80222dc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80222e0:	ee00 3a10 	vmov	s0, r3
 80222e4:	4770      	bx	lr
	...

080222e8 <__kernel_rem_pio2f>:
 80222e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222ec:	ed2d 8b04 	vpush	{d8-d9}
 80222f0:	b0d9      	sub	sp, #356	@ 0x164
 80222f2:	4690      	mov	r8, r2
 80222f4:	9001      	str	r0, [sp, #4]
 80222f6:	4ab6      	ldr	r2, [pc, #728]	@ (80225d0 <__kernel_rem_pio2f+0x2e8>)
 80222f8:	9866      	ldr	r0, [sp, #408]	@ 0x198
 80222fa:	f118 0f04 	cmn.w	r8, #4
 80222fe:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8022302:	460f      	mov	r7, r1
 8022304:	f103 3bff 	add.w	fp, r3, #4294967295
 8022308:	db26      	blt.n	8022358 <__kernel_rem_pio2f+0x70>
 802230a:	f1b8 0203 	subs.w	r2, r8, #3
 802230e:	bf48      	it	mi
 8022310:	f108 0204 	addmi.w	r2, r8, #4
 8022314:	10d2      	asrs	r2, r2, #3
 8022316:	1c55      	adds	r5, r2, #1
 8022318:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802231a:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80225e0 <__kernel_rem_pio2f+0x2f8>
 802231e:	00e8      	lsls	r0, r5, #3
 8022320:	eba2 060b 	sub.w	r6, r2, fp
 8022324:	9002      	str	r0, [sp, #8]
 8022326:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802232a:	eb0a 0c0b 	add.w	ip, sl, fp
 802232e:	ac1c      	add	r4, sp, #112	@ 0x70
 8022330:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8022334:	2000      	movs	r0, #0
 8022336:	4560      	cmp	r0, ip
 8022338:	dd10      	ble.n	802235c <__kernel_rem_pio2f+0x74>
 802233a:	a91c      	add	r1, sp, #112	@ 0x70
 802233c:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8022340:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8022344:	2600      	movs	r6, #0
 8022346:	4556      	cmp	r6, sl
 8022348:	dc24      	bgt.n	8022394 <__kernel_rem_pio2f+0xac>
 802234a:	f8dd e004 	ldr.w	lr, [sp, #4]
 802234e:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 80225e0 <__kernel_rem_pio2f+0x2f8>
 8022352:	4684      	mov	ip, r0
 8022354:	2400      	movs	r4, #0
 8022356:	e016      	b.n	8022386 <__kernel_rem_pio2f+0x9e>
 8022358:	2200      	movs	r2, #0
 802235a:	e7dc      	b.n	8022316 <__kernel_rem_pio2f+0x2e>
 802235c:	42c6      	cmn	r6, r0
 802235e:	bf5d      	ittte	pl
 8022360:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8022364:	ee07 1a90 	vmovpl	s15, r1
 8022368:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802236c:	eef0 7a47 	vmovmi.f32	s15, s14
 8022370:	ece4 7a01 	vstmia	r4!, {s15}
 8022374:	3001      	adds	r0, #1
 8022376:	e7de      	b.n	8022336 <__kernel_rem_pio2f+0x4e>
 8022378:	ecfe 6a01 	vldmia	lr!, {s13}
 802237c:	ed3c 7a01 	vldmdb	ip!, {s14}
 8022380:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022384:	3401      	adds	r4, #1
 8022386:	455c      	cmp	r4, fp
 8022388:	ddf6      	ble.n	8022378 <__kernel_rem_pio2f+0x90>
 802238a:	ece9 7a01 	vstmia	r9!, {s15}
 802238e:	3601      	adds	r6, #1
 8022390:	3004      	adds	r0, #4
 8022392:	e7d8      	b.n	8022346 <__kernel_rem_pio2f+0x5e>
 8022394:	a908      	add	r1, sp, #32
 8022396:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802239a:	9104      	str	r1, [sp, #16]
 802239c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802239e:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 80225dc <__kernel_rem_pio2f+0x2f4>
 80223a2:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 80225d8 <__kernel_rem_pio2f+0x2f0>
 80223a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80223aa:	9203      	str	r2, [sp, #12]
 80223ac:	4654      	mov	r4, sl
 80223ae:	00a2      	lsls	r2, r4, #2
 80223b0:	9205      	str	r2, [sp, #20]
 80223b2:	aa58      	add	r2, sp, #352	@ 0x160
 80223b4:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80223b8:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 80223bc:	a944      	add	r1, sp, #272	@ 0x110
 80223be:	aa08      	add	r2, sp, #32
 80223c0:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 80223c4:	4694      	mov	ip, r2
 80223c6:	4626      	mov	r6, r4
 80223c8:	2e00      	cmp	r6, #0
 80223ca:	dc4c      	bgt.n	8022466 <__kernel_rem_pio2f+0x17e>
 80223cc:	4628      	mov	r0, r5
 80223ce:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80223d2:	f000 f9f1 	bl	80227b8 <scalbnf>
 80223d6:	eeb0 8a40 	vmov.f32	s16, s0
 80223da:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 80223de:	ee28 0a00 	vmul.f32	s0, s16, s0
 80223e2:	f000 fa4f 	bl	8022884 <floorf>
 80223e6:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 80223ea:	eea0 8a67 	vfms.f32	s16, s0, s15
 80223ee:	2d00      	cmp	r5, #0
 80223f0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80223f4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80223f8:	ee17 9a90 	vmov	r9, s15
 80223fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022400:	ee38 8a67 	vsub.f32	s16, s16, s15
 8022404:	dd41      	ble.n	802248a <__kernel_rem_pio2f+0x1a2>
 8022406:	f104 3cff 	add.w	ip, r4, #4294967295
 802240a:	a908      	add	r1, sp, #32
 802240c:	f1c5 0e08 	rsb	lr, r5, #8
 8022410:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8022414:	fa46 f00e 	asr.w	r0, r6, lr
 8022418:	4481      	add	r9, r0
 802241a:	fa00 f00e 	lsl.w	r0, r0, lr
 802241e:	1a36      	subs	r6, r6, r0
 8022420:	f1c5 0007 	rsb	r0, r5, #7
 8022424:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8022428:	4106      	asrs	r6, r0
 802242a:	2e00      	cmp	r6, #0
 802242c:	dd3c      	ble.n	80224a8 <__kernel_rem_pio2f+0x1c0>
 802242e:	f04f 0e00 	mov.w	lr, #0
 8022432:	f109 0901 	add.w	r9, r9, #1
 8022436:	4670      	mov	r0, lr
 8022438:	4574      	cmp	r4, lr
 802243a:	dc68      	bgt.n	802250e <__kernel_rem_pio2f+0x226>
 802243c:	2d00      	cmp	r5, #0
 802243e:	dd03      	ble.n	8022448 <__kernel_rem_pio2f+0x160>
 8022440:	2d01      	cmp	r5, #1
 8022442:	d074      	beq.n	802252e <__kernel_rem_pio2f+0x246>
 8022444:	2d02      	cmp	r5, #2
 8022446:	d07d      	beq.n	8022544 <__kernel_rem_pio2f+0x25c>
 8022448:	2e02      	cmp	r6, #2
 802244a:	d12d      	bne.n	80224a8 <__kernel_rem_pio2f+0x1c0>
 802244c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022450:	ee30 8a48 	vsub.f32	s16, s0, s16
 8022454:	b340      	cbz	r0, 80224a8 <__kernel_rem_pio2f+0x1c0>
 8022456:	4628      	mov	r0, r5
 8022458:	9306      	str	r3, [sp, #24]
 802245a:	f000 f9ad 	bl	80227b8 <scalbnf>
 802245e:	9b06      	ldr	r3, [sp, #24]
 8022460:	ee38 8a40 	vsub.f32	s16, s16, s0
 8022464:	e020      	b.n	80224a8 <__kernel_rem_pio2f+0x1c0>
 8022466:	ee60 7a28 	vmul.f32	s15, s0, s17
 802246a:	3e01      	subs	r6, #1
 802246c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022470:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022474:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8022478:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802247c:	ecac 0a01 	vstmia	ip!, {s0}
 8022480:	ed30 0a01 	vldmdb	r0!, {s0}
 8022484:	ee37 0a80 	vadd.f32	s0, s15, s0
 8022488:	e79e      	b.n	80223c8 <__kernel_rem_pio2f+0xe0>
 802248a:	d105      	bne.n	8022498 <__kernel_rem_pio2f+0x1b0>
 802248c:	1e60      	subs	r0, r4, #1
 802248e:	a908      	add	r1, sp, #32
 8022490:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8022494:	11f6      	asrs	r6, r6, #7
 8022496:	e7c8      	b.n	802242a <__kernel_rem_pio2f+0x142>
 8022498:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802249c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80224a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224a4:	da31      	bge.n	802250a <__kernel_rem_pio2f+0x222>
 80224a6:	2600      	movs	r6, #0
 80224a8:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80224ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224b0:	f040 8098 	bne.w	80225e4 <__kernel_rem_pio2f+0x2fc>
 80224b4:	1e60      	subs	r0, r4, #1
 80224b6:	2200      	movs	r2, #0
 80224b8:	4550      	cmp	r0, sl
 80224ba:	da4b      	bge.n	8022554 <__kernel_rem_pio2f+0x26c>
 80224bc:	2a00      	cmp	r2, #0
 80224be:	d065      	beq.n	802258c <__kernel_rem_pio2f+0x2a4>
 80224c0:	3c01      	subs	r4, #1
 80224c2:	ab08      	add	r3, sp, #32
 80224c4:	3d08      	subs	r5, #8
 80224c6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80224ca:	2b00      	cmp	r3, #0
 80224cc:	d0f8      	beq.n	80224c0 <__kernel_rem_pio2f+0x1d8>
 80224ce:	4628      	mov	r0, r5
 80224d0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80224d4:	f000 f970 	bl	80227b8 <scalbnf>
 80224d8:	1c63      	adds	r3, r4, #1
 80224da:	aa44      	add	r2, sp, #272	@ 0x110
 80224dc:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 80225dc <__kernel_rem_pio2f+0x2f4>
 80224e0:	0099      	lsls	r1, r3, #2
 80224e2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80224e6:	4623      	mov	r3, r4
 80224e8:	2b00      	cmp	r3, #0
 80224ea:	f280 80a9 	bge.w	8022640 <__kernel_rem_pio2f+0x358>
 80224ee:	4623      	mov	r3, r4
 80224f0:	2b00      	cmp	r3, #0
 80224f2:	f2c0 80c7 	blt.w	8022684 <__kernel_rem_pio2f+0x39c>
 80224f6:	aa44      	add	r2, sp, #272	@ 0x110
 80224f8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80224fc:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 80225d4 <__kernel_rem_pio2f+0x2ec>
 8022500:	eddf 7a37 	vldr	s15, [pc, #220]	@ 80225e0 <__kernel_rem_pio2f+0x2f8>
 8022504:	2000      	movs	r0, #0
 8022506:	1ae2      	subs	r2, r4, r3
 8022508:	e0b1      	b.n	802266e <__kernel_rem_pio2f+0x386>
 802250a:	2602      	movs	r6, #2
 802250c:	e78f      	b.n	802242e <__kernel_rem_pio2f+0x146>
 802250e:	f852 1b04 	ldr.w	r1, [r2], #4
 8022512:	b948      	cbnz	r0, 8022528 <__kernel_rem_pio2f+0x240>
 8022514:	b121      	cbz	r1, 8022520 <__kernel_rem_pio2f+0x238>
 8022516:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802251a:	f842 1c04 	str.w	r1, [r2, #-4]
 802251e:	2101      	movs	r1, #1
 8022520:	f10e 0e01 	add.w	lr, lr, #1
 8022524:	4608      	mov	r0, r1
 8022526:	e787      	b.n	8022438 <__kernel_rem_pio2f+0x150>
 8022528:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 802252c:	e7f5      	b.n	802251a <__kernel_rem_pio2f+0x232>
 802252e:	f104 3cff 	add.w	ip, r4, #4294967295
 8022532:	aa08      	add	r2, sp, #32
 8022534:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8022538:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 802253c:	a908      	add	r1, sp, #32
 802253e:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8022542:	e781      	b.n	8022448 <__kernel_rem_pio2f+0x160>
 8022544:	f104 3cff 	add.w	ip, r4, #4294967295
 8022548:	aa08      	add	r2, sp, #32
 802254a:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802254e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8022552:	e7f3      	b.n	802253c <__kernel_rem_pio2f+0x254>
 8022554:	a908      	add	r1, sp, #32
 8022556:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802255a:	3801      	subs	r0, #1
 802255c:	430a      	orrs	r2, r1
 802255e:	e7ab      	b.n	80224b8 <__kernel_rem_pio2f+0x1d0>
 8022560:	3201      	adds	r2, #1
 8022562:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8022566:	2e00      	cmp	r6, #0
 8022568:	d0fa      	beq.n	8022560 <__kernel_rem_pio2f+0x278>
 802256a:	9905      	ldr	r1, [sp, #20]
 802256c:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8022570:	eb0d 0001 	add.w	r0, sp, r1
 8022574:	18e6      	adds	r6, r4, r3
 8022576:	a91c      	add	r1, sp, #112	@ 0x70
 8022578:	f104 0c01 	add.w	ip, r4, #1
 802257c:	384c      	subs	r0, #76	@ 0x4c
 802257e:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8022582:	4422      	add	r2, r4
 8022584:	4562      	cmp	r2, ip
 8022586:	da04      	bge.n	8022592 <__kernel_rem_pio2f+0x2aa>
 8022588:	4614      	mov	r4, r2
 802258a:	e710      	b.n	80223ae <__kernel_rem_pio2f+0xc6>
 802258c:	9804      	ldr	r0, [sp, #16]
 802258e:	2201      	movs	r2, #1
 8022590:	e7e7      	b.n	8022562 <__kernel_rem_pio2f+0x27a>
 8022592:	9903      	ldr	r1, [sp, #12]
 8022594:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022598:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802259c:	9105      	str	r1, [sp, #20]
 802259e:	ee07 1a90 	vmov	s15, r1
 80225a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80225a6:	2400      	movs	r4, #0
 80225a8:	ece6 7a01 	vstmia	r6!, {s15}
 80225ac:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80225e0 <__kernel_rem_pio2f+0x2f8>
 80225b0:	46b1      	mov	r9, r6
 80225b2:	455c      	cmp	r4, fp
 80225b4:	dd04      	ble.n	80225c0 <__kernel_rem_pio2f+0x2d8>
 80225b6:	ece0 7a01 	vstmia	r0!, {s15}
 80225ba:	f10c 0c01 	add.w	ip, ip, #1
 80225be:	e7e1      	b.n	8022584 <__kernel_rem_pio2f+0x29c>
 80225c0:	ecfe 6a01 	vldmia	lr!, {s13}
 80225c4:	ed39 7a01 	vldmdb	r9!, {s14}
 80225c8:	3401      	adds	r4, #1
 80225ca:	eee6 7a87 	vfma.f32	s15, s13, s14
 80225ce:	e7f0      	b.n	80225b2 <__kernel_rem_pio2f+0x2ca>
 80225d0:	08025a48 	.word	0x08025a48
 80225d4:	08025a1c 	.word	0x08025a1c
 80225d8:	43800000 	.word	0x43800000
 80225dc:	3b800000 	.word	0x3b800000
 80225e0:	00000000 	.word	0x00000000
 80225e4:	9b02      	ldr	r3, [sp, #8]
 80225e6:	eeb0 0a48 	vmov.f32	s0, s16
 80225ea:	eba3 0008 	sub.w	r0, r3, r8
 80225ee:	f000 f8e3 	bl	80227b8 <scalbnf>
 80225f2:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 80225d8 <__kernel_rem_pio2f+0x2f0>
 80225f6:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80225fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80225fe:	db19      	blt.n	8022634 <__kernel_rem_pio2f+0x34c>
 8022600:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 80225dc <__kernel_rem_pio2f+0x2f4>
 8022604:	ee60 7a27 	vmul.f32	s15, s0, s15
 8022608:	aa08      	add	r2, sp, #32
 802260a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802260e:	3508      	adds	r5, #8
 8022610:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022614:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8022618:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802261c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022620:	ee10 3a10 	vmov	r3, s0
 8022624:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8022628:	ee17 3a90 	vmov	r3, s15
 802262c:	3401      	adds	r4, #1
 802262e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8022632:	e74c      	b.n	80224ce <__kernel_rem_pio2f+0x1e6>
 8022634:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022638:	aa08      	add	r2, sp, #32
 802263a:	ee10 3a10 	vmov	r3, s0
 802263e:	e7f6      	b.n	802262e <__kernel_rem_pio2f+0x346>
 8022640:	a808      	add	r0, sp, #32
 8022642:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8022646:	9001      	str	r0, [sp, #4]
 8022648:	ee07 0a90 	vmov	s15, r0
 802264c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022650:	3b01      	subs	r3, #1
 8022652:	ee67 7a80 	vmul.f32	s15, s15, s0
 8022656:	ee20 0a07 	vmul.f32	s0, s0, s14
 802265a:	ed62 7a01 	vstmdb	r2!, {s15}
 802265e:	e743      	b.n	80224e8 <__kernel_rem_pio2f+0x200>
 8022660:	ecfc 6a01 	vldmia	ip!, {s13}
 8022664:	ecb5 7a01 	vldmia	r5!, {s14}
 8022668:	eee6 7a87 	vfma.f32	s15, s13, s14
 802266c:	3001      	adds	r0, #1
 802266e:	4550      	cmp	r0, sl
 8022670:	dc01      	bgt.n	8022676 <__kernel_rem_pio2f+0x38e>
 8022672:	4290      	cmp	r0, r2
 8022674:	ddf4      	ble.n	8022660 <__kernel_rem_pio2f+0x378>
 8022676:	a858      	add	r0, sp, #352	@ 0x160
 8022678:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802267c:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8022680:	3b01      	subs	r3, #1
 8022682:	e735      	b.n	80224f0 <__kernel_rem_pio2f+0x208>
 8022684:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022686:	2b02      	cmp	r3, #2
 8022688:	dc09      	bgt.n	802269e <__kernel_rem_pio2f+0x3b6>
 802268a:	2b00      	cmp	r3, #0
 802268c:	dc27      	bgt.n	80226de <__kernel_rem_pio2f+0x3f6>
 802268e:	d040      	beq.n	8022712 <__kernel_rem_pio2f+0x42a>
 8022690:	f009 0007 	and.w	r0, r9, #7
 8022694:	b059      	add	sp, #356	@ 0x164
 8022696:	ecbd 8b04 	vpop	{d8-d9}
 802269a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802269e:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80226a0:	2b03      	cmp	r3, #3
 80226a2:	d1f5      	bne.n	8022690 <__kernel_rem_pio2f+0x3a8>
 80226a4:	aa30      	add	r2, sp, #192	@ 0xc0
 80226a6:	1f0b      	subs	r3, r1, #4
 80226a8:	4413      	add	r3, r2
 80226aa:	461a      	mov	r2, r3
 80226ac:	4620      	mov	r0, r4
 80226ae:	2800      	cmp	r0, #0
 80226b0:	dc50      	bgt.n	8022754 <__kernel_rem_pio2f+0x46c>
 80226b2:	4622      	mov	r2, r4
 80226b4:	2a01      	cmp	r2, #1
 80226b6:	dc5d      	bgt.n	8022774 <__kernel_rem_pio2f+0x48c>
 80226b8:	ab30      	add	r3, sp, #192	@ 0xc0
 80226ba:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 80225e0 <__kernel_rem_pio2f+0x2f8>
 80226be:	440b      	add	r3, r1
 80226c0:	2c01      	cmp	r4, #1
 80226c2:	dc67      	bgt.n	8022794 <__kernel_rem_pio2f+0x4ac>
 80226c4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80226c8:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 80226cc:	2e00      	cmp	r6, #0
 80226ce:	d167      	bne.n	80227a0 <__kernel_rem_pio2f+0x4b8>
 80226d0:	edc7 6a00 	vstr	s13, [r7]
 80226d4:	ed87 7a01 	vstr	s14, [r7, #4]
 80226d8:	edc7 7a02 	vstr	s15, [r7, #8]
 80226dc:	e7d8      	b.n	8022690 <__kernel_rem_pio2f+0x3a8>
 80226de:	ab30      	add	r3, sp, #192	@ 0xc0
 80226e0:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 80225e0 <__kernel_rem_pio2f+0x2f8>
 80226e4:	440b      	add	r3, r1
 80226e6:	4622      	mov	r2, r4
 80226e8:	2a00      	cmp	r2, #0
 80226ea:	da24      	bge.n	8022736 <__kernel_rem_pio2f+0x44e>
 80226ec:	b34e      	cbz	r6, 8022742 <__kernel_rem_pio2f+0x45a>
 80226ee:	eef1 7a47 	vneg.f32	s15, s14
 80226f2:	edc7 7a00 	vstr	s15, [r7]
 80226f6:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 80226fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80226fe:	aa31      	add	r2, sp, #196	@ 0xc4
 8022700:	2301      	movs	r3, #1
 8022702:	429c      	cmp	r4, r3
 8022704:	da20      	bge.n	8022748 <__kernel_rem_pio2f+0x460>
 8022706:	b10e      	cbz	r6, 802270c <__kernel_rem_pio2f+0x424>
 8022708:	eef1 7a67 	vneg.f32	s15, s15
 802270c:	edc7 7a01 	vstr	s15, [r7, #4]
 8022710:	e7be      	b.n	8022690 <__kernel_rem_pio2f+0x3a8>
 8022712:	ab30      	add	r3, sp, #192	@ 0xc0
 8022714:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 80225e0 <__kernel_rem_pio2f+0x2f8>
 8022718:	440b      	add	r3, r1
 802271a:	2c00      	cmp	r4, #0
 802271c:	da05      	bge.n	802272a <__kernel_rem_pio2f+0x442>
 802271e:	b10e      	cbz	r6, 8022724 <__kernel_rem_pio2f+0x43c>
 8022720:	eef1 7a67 	vneg.f32	s15, s15
 8022724:	edc7 7a00 	vstr	s15, [r7]
 8022728:	e7b2      	b.n	8022690 <__kernel_rem_pio2f+0x3a8>
 802272a:	ed33 7a01 	vldmdb	r3!, {s14}
 802272e:	3c01      	subs	r4, #1
 8022730:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022734:	e7f1      	b.n	802271a <__kernel_rem_pio2f+0x432>
 8022736:	ed73 7a01 	vldmdb	r3!, {s15}
 802273a:	3a01      	subs	r2, #1
 802273c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8022740:	e7d2      	b.n	80226e8 <__kernel_rem_pio2f+0x400>
 8022742:	eef0 7a47 	vmov.f32	s15, s14
 8022746:	e7d4      	b.n	80226f2 <__kernel_rem_pio2f+0x40a>
 8022748:	ecb2 7a01 	vldmia	r2!, {s14}
 802274c:	3301      	adds	r3, #1
 802274e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022752:	e7d6      	b.n	8022702 <__kernel_rem_pio2f+0x41a>
 8022754:	ed72 7a01 	vldmdb	r2!, {s15}
 8022758:	edd2 6a01 	vldr	s13, [r2, #4]
 802275c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022760:	3801      	subs	r0, #1
 8022762:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022766:	ed82 7a00 	vstr	s14, [r2]
 802276a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802276e:	edc2 7a01 	vstr	s15, [r2, #4]
 8022772:	e79c      	b.n	80226ae <__kernel_rem_pio2f+0x3c6>
 8022774:	ed73 7a01 	vldmdb	r3!, {s15}
 8022778:	edd3 6a01 	vldr	s13, [r3, #4]
 802277c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022780:	3a01      	subs	r2, #1
 8022782:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022786:	ed83 7a00 	vstr	s14, [r3]
 802278a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802278e:	edc3 7a01 	vstr	s15, [r3, #4]
 8022792:	e78f      	b.n	80226b4 <__kernel_rem_pio2f+0x3cc>
 8022794:	ed33 7a01 	vldmdb	r3!, {s14}
 8022798:	3c01      	subs	r4, #1
 802279a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802279e:	e78f      	b.n	80226c0 <__kernel_rem_pio2f+0x3d8>
 80227a0:	eef1 6a66 	vneg.f32	s13, s13
 80227a4:	eeb1 7a47 	vneg.f32	s14, s14
 80227a8:	edc7 6a00 	vstr	s13, [r7]
 80227ac:	ed87 7a01 	vstr	s14, [r7, #4]
 80227b0:	eef1 7a67 	vneg.f32	s15, s15
 80227b4:	e790      	b.n	80226d8 <__kernel_rem_pio2f+0x3f0>
 80227b6:	bf00      	nop

080227b8 <scalbnf>:
 80227b8:	ee10 3a10 	vmov	r3, s0
 80227bc:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80227c0:	d02b      	beq.n	802281a <scalbnf+0x62>
 80227c2:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 80227c6:	d302      	bcc.n	80227ce <scalbnf+0x16>
 80227c8:	ee30 0a00 	vadd.f32	s0, s0, s0
 80227cc:	4770      	bx	lr
 80227ce:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 80227d2:	d123      	bne.n	802281c <scalbnf+0x64>
 80227d4:	4b24      	ldr	r3, [pc, #144]	@ (8022868 <scalbnf+0xb0>)
 80227d6:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802286c <scalbnf+0xb4>
 80227da:	4298      	cmp	r0, r3
 80227dc:	ee20 0a27 	vmul.f32	s0, s0, s15
 80227e0:	db17      	blt.n	8022812 <scalbnf+0x5a>
 80227e2:	ee10 3a10 	vmov	r3, s0
 80227e6:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80227ea:	3a19      	subs	r2, #25
 80227ec:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80227f0:	4288      	cmp	r0, r1
 80227f2:	dd15      	ble.n	8022820 <scalbnf+0x68>
 80227f4:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8022870 <scalbnf+0xb8>
 80227f8:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8022874 <scalbnf+0xbc>
 80227fc:	ee10 3a10 	vmov	r3, s0
 8022800:	eeb0 7a67 	vmov.f32	s14, s15
 8022804:	2b00      	cmp	r3, #0
 8022806:	bfb8      	it	lt
 8022808:	eef0 7a66 	vmovlt.f32	s15, s13
 802280c:	ee27 0a87 	vmul.f32	s0, s15, s14
 8022810:	4770      	bx	lr
 8022812:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022878 <scalbnf+0xc0>
 8022816:	ee27 0a80 	vmul.f32	s0, s15, s0
 802281a:	4770      	bx	lr
 802281c:	0dd2      	lsrs	r2, r2, #23
 802281e:	e7e5      	b.n	80227ec <scalbnf+0x34>
 8022820:	4410      	add	r0, r2
 8022822:	28fe      	cmp	r0, #254	@ 0xfe
 8022824:	dce6      	bgt.n	80227f4 <scalbnf+0x3c>
 8022826:	2800      	cmp	r0, #0
 8022828:	dd06      	ble.n	8022838 <scalbnf+0x80>
 802282a:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802282e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8022832:	ee00 3a10 	vmov	s0, r3
 8022836:	4770      	bx	lr
 8022838:	f110 0f16 	cmn.w	r0, #22
 802283c:	da09      	bge.n	8022852 <scalbnf+0x9a>
 802283e:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8022878 <scalbnf+0xc0>
 8022842:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802287c <scalbnf+0xc4>
 8022846:	ee10 3a10 	vmov	r3, s0
 802284a:	eeb0 7a67 	vmov.f32	s14, s15
 802284e:	2b00      	cmp	r3, #0
 8022850:	e7d9      	b.n	8022806 <scalbnf+0x4e>
 8022852:	3019      	adds	r0, #25
 8022854:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8022858:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802285c:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8022880 <scalbnf+0xc8>
 8022860:	ee07 3a90 	vmov	s15, r3
 8022864:	e7d7      	b.n	8022816 <scalbnf+0x5e>
 8022866:	bf00      	nop
 8022868:	ffff3cb0 	.word	0xffff3cb0
 802286c:	4c000000 	.word	0x4c000000
 8022870:	7149f2ca 	.word	0x7149f2ca
 8022874:	f149f2ca 	.word	0xf149f2ca
 8022878:	0da24260 	.word	0x0da24260
 802287c:	8da24260 	.word	0x8da24260
 8022880:	33000000 	.word	0x33000000

08022884 <floorf>:
 8022884:	ee10 3a10 	vmov	r3, s0
 8022888:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802288c:	3a7f      	subs	r2, #127	@ 0x7f
 802288e:	2a16      	cmp	r2, #22
 8022890:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8022894:	dc2b      	bgt.n	80228ee <floorf+0x6a>
 8022896:	2a00      	cmp	r2, #0
 8022898:	da12      	bge.n	80228c0 <floorf+0x3c>
 802289a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022900 <floorf+0x7c>
 802289e:	ee30 0a27 	vadd.f32	s0, s0, s15
 80228a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80228a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80228aa:	dd06      	ble.n	80228ba <floorf+0x36>
 80228ac:	2b00      	cmp	r3, #0
 80228ae:	da24      	bge.n	80228fa <floorf+0x76>
 80228b0:	2900      	cmp	r1, #0
 80228b2:	4b14      	ldr	r3, [pc, #80]	@ (8022904 <floorf+0x80>)
 80228b4:	bf08      	it	eq
 80228b6:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 80228ba:	ee00 3a10 	vmov	s0, r3
 80228be:	4770      	bx	lr
 80228c0:	4911      	ldr	r1, [pc, #68]	@ (8022908 <floorf+0x84>)
 80228c2:	4111      	asrs	r1, r2
 80228c4:	420b      	tst	r3, r1
 80228c6:	d0fa      	beq.n	80228be <floorf+0x3a>
 80228c8:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8022900 <floorf+0x7c>
 80228cc:	ee30 0a27 	vadd.f32	s0, s0, s15
 80228d0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80228d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80228d8:	ddef      	ble.n	80228ba <floorf+0x36>
 80228da:	2b00      	cmp	r3, #0
 80228dc:	bfbe      	ittt	lt
 80228de:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 80228e2:	fa40 f202 	asrlt.w	r2, r0, r2
 80228e6:	189b      	addlt	r3, r3, r2
 80228e8:	ea23 0301 	bic.w	r3, r3, r1
 80228ec:	e7e5      	b.n	80228ba <floorf+0x36>
 80228ee:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80228f2:	d3e4      	bcc.n	80228be <floorf+0x3a>
 80228f4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80228f8:	4770      	bx	lr
 80228fa:	2300      	movs	r3, #0
 80228fc:	e7dd      	b.n	80228ba <floorf+0x36>
 80228fe:	bf00      	nop
 8022900:	7149f2ca 	.word	0x7149f2ca
 8022904:	bf800000 	.word	0xbf800000
 8022908:	007fffff 	.word	0x007fffff

0802290c <abort>:
 802290c:	b508      	push	{r3, lr}
 802290e:	2006      	movs	r0, #6
 8022910:	f000 fa72 	bl	8022df8 <raise>
 8022914:	2001      	movs	r0, #1
 8022916:	f7df ff1f 	bl	8002758 <_exit>
	...

0802291c <__assert_func>:
 802291c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802291e:	4614      	mov	r4, r2
 8022920:	461a      	mov	r2, r3
 8022922:	4b09      	ldr	r3, [pc, #36]	@ (8022948 <__assert_func+0x2c>)
 8022924:	681b      	ldr	r3, [r3, #0]
 8022926:	4605      	mov	r5, r0
 8022928:	68d8      	ldr	r0, [r3, #12]
 802292a:	b14c      	cbz	r4, 8022940 <__assert_func+0x24>
 802292c:	4b07      	ldr	r3, [pc, #28]	@ (802294c <__assert_func+0x30>)
 802292e:	9100      	str	r1, [sp, #0]
 8022930:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022934:	4906      	ldr	r1, [pc, #24]	@ (8022950 <__assert_func+0x34>)
 8022936:	462b      	mov	r3, r5
 8022938:	f000 f984 	bl	8022c44 <fiprintf>
 802293c:	f7ff ffe6 	bl	802290c <abort>
 8022940:	4b04      	ldr	r3, [pc, #16]	@ (8022954 <__assert_func+0x38>)
 8022942:	461c      	mov	r4, r3
 8022944:	e7f3      	b.n	802292e <__assert_func+0x12>
 8022946:	bf00      	nop
 8022948:	2000022c 	.word	0x2000022c
 802294c:	08024875 	.word	0x08024875
 8022950:	08024882 	.word	0x08024882
 8022954:	0802482f 	.word	0x0802482f

08022958 <atexit>:
 8022958:	2300      	movs	r3, #0
 802295a:	4601      	mov	r1, r0
 802295c:	461a      	mov	r2, r3
 802295e:	4618      	mov	r0, r3
 8022960:	f000 bb56 	b.w	8023010 <__register_exitproc>

08022964 <malloc>:
 8022964:	4b02      	ldr	r3, [pc, #8]	@ (8022970 <malloc+0xc>)
 8022966:	4601      	mov	r1, r0
 8022968:	6818      	ldr	r0, [r3, #0]
 802296a:	f000 b82d 	b.w	80229c8 <_malloc_r>
 802296e:	bf00      	nop
 8022970:	2000022c 	.word	0x2000022c

08022974 <free>:
 8022974:	4b02      	ldr	r3, [pc, #8]	@ (8022980 <free+0xc>)
 8022976:	4601      	mov	r1, r0
 8022978:	6818      	ldr	r0, [r3, #0]
 802297a:	f000 bba5 	b.w	80230c8 <_free_r>
 802297e:	bf00      	nop
 8022980:	2000022c 	.word	0x2000022c

08022984 <sbrk_aligned>:
 8022984:	b570      	push	{r4, r5, r6, lr}
 8022986:	4e0f      	ldr	r6, [pc, #60]	@ (80229c4 <sbrk_aligned+0x40>)
 8022988:	460c      	mov	r4, r1
 802298a:	6831      	ldr	r1, [r6, #0]
 802298c:	4605      	mov	r5, r0
 802298e:	b911      	cbnz	r1, 8022996 <sbrk_aligned+0x12>
 8022990:	f000 fae0 	bl	8022f54 <_sbrk_r>
 8022994:	6030      	str	r0, [r6, #0]
 8022996:	4621      	mov	r1, r4
 8022998:	4628      	mov	r0, r5
 802299a:	f000 fadb 	bl	8022f54 <_sbrk_r>
 802299e:	1c43      	adds	r3, r0, #1
 80229a0:	d103      	bne.n	80229aa <sbrk_aligned+0x26>
 80229a2:	f04f 34ff 	mov.w	r4, #4294967295
 80229a6:	4620      	mov	r0, r4
 80229a8:	bd70      	pop	{r4, r5, r6, pc}
 80229aa:	1cc4      	adds	r4, r0, #3
 80229ac:	f024 0403 	bic.w	r4, r4, #3
 80229b0:	42a0      	cmp	r0, r4
 80229b2:	d0f8      	beq.n	80229a6 <sbrk_aligned+0x22>
 80229b4:	1a21      	subs	r1, r4, r0
 80229b6:	4628      	mov	r0, r5
 80229b8:	f000 facc 	bl	8022f54 <_sbrk_r>
 80229bc:	3001      	adds	r0, #1
 80229be:	d1f2      	bne.n	80229a6 <sbrk_aligned+0x22>
 80229c0:	e7ef      	b.n	80229a2 <sbrk_aligned+0x1e>
 80229c2:	bf00      	nop
 80229c4:	20014a54 	.word	0x20014a54

080229c8 <_malloc_r>:
 80229c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80229cc:	1ccd      	adds	r5, r1, #3
 80229ce:	f025 0503 	bic.w	r5, r5, #3
 80229d2:	3508      	adds	r5, #8
 80229d4:	2d0c      	cmp	r5, #12
 80229d6:	bf38      	it	cc
 80229d8:	250c      	movcc	r5, #12
 80229da:	2d00      	cmp	r5, #0
 80229dc:	4606      	mov	r6, r0
 80229de:	db01      	blt.n	80229e4 <_malloc_r+0x1c>
 80229e0:	42a9      	cmp	r1, r5
 80229e2:	d904      	bls.n	80229ee <_malloc_r+0x26>
 80229e4:	230c      	movs	r3, #12
 80229e6:	6033      	str	r3, [r6, #0]
 80229e8:	2000      	movs	r0, #0
 80229ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80229ee:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8022ac4 <_malloc_r+0xfc>
 80229f2:	f000 f869 	bl	8022ac8 <__malloc_lock>
 80229f6:	f8d8 3000 	ldr.w	r3, [r8]
 80229fa:	461c      	mov	r4, r3
 80229fc:	bb44      	cbnz	r4, 8022a50 <_malloc_r+0x88>
 80229fe:	4629      	mov	r1, r5
 8022a00:	4630      	mov	r0, r6
 8022a02:	f7ff ffbf 	bl	8022984 <sbrk_aligned>
 8022a06:	1c43      	adds	r3, r0, #1
 8022a08:	4604      	mov	r4, r0
 8022a0a:	d158      	bne.n	8022abe <_malloc_r+0xf6>
 8022a0c:	f8d8 4000 	ldr.w	r4, [r8]
 8022a10:	4627      	mov	r7, r4
 8022a12:	2f00      	cmp	r7, #0
 8022a14:	d143      	bne.n	8022a9e <_malloc_r+0xd6>
 8022a16:	2c00      	cmp	r4, #0
 8022a18:	d04b      	beq.n	8022ab2 <_malloc_r+0xea>
 8022a1a:	6823      	ldr	r3, [r4, #0]
 8022a1c:	4639      	mov	r1, r7
 8022a1e:	4630      	mov	r0, r6
 8022a20:	eb04 0903 	add.w	r9, r4, r3
 8022a24:	f000 fa96 	bl	8022f54 <_sbrk_r>
 8022a28:	4581      	cmp	r9, r0
 8022a2a:	d142      	bne.n	8022ab2 <_malloc_r+0xea>
 8022a2c:	6821      	ldr	r1, [r4, #0]
 8022a2e:	1a6d      	subs	r5, r5, r1
 8022a30:	4629      	mov	r1, r5
 8022a32:	4630      	mov	r0, r6
 8022a34:	f7ff ffa6 	bl	8022984 <sbrk_aligned>
 8022a38:	3001      	adds	r0, #1
 8022a3a:	d03a      	beq.n	8022ab2 <_malloc_r+0xea>
 8022a3c:	6823      	ldr	r3, [r4, #0]
 8022a3e:	442b      	add	r3, r5
 8022a40:	6023      	str	r3, [r4, #0]
 8022a42:	f8d8 3000 	ldr.w	r3, [r8]
 8022a46:	685a      	ldr	r2, [r3, #4]
 8022a48:	bb62      	cbnz	r2, 8022aa4 <_malloc_r+0xdc>
 8022a4a:	f8c8 7000 	str.w	r7, [r8]
 8022a4e:	e00f      	b.n	8022a70 <_malloc_r+0xa8>
 8022a50:	6822      	ldr	r2, [r4, #0]
 8022a52:	1b52      	subs	r2, r2, r5
 8022a54:	d420      	bmi.n	8022a98 <_malloc_r+0xd0>
 8022a56:	2a0b      	cmp	r2, #11
 8022a58:	d917      	bls.n	8022a8a <_malloc_r+0xc2>
 8022a5a:	1961      	adds	r1, r4, r5
 8022a5c:	42a3      	cmp	r3, r4
 8022a5e:	6025      	str	r5, [r4, #0]
 8022a60:	bf18      	it	ne
 8022a62:	6059      	strne	r1, [r3, #4]
 8022a64:	6863      	ldr	r3, [r4, #4]
 8022a66:	bf08      	it	eq
 8022a68:	f8c8 1000 	streq.w	r1, [r8]
 8022a6c:	5162      	str	r2, [r4, r5]
 8022a6e:	604b      	str	r3, [r1, #4]
 8022a70:	4630      	mov	r0, r6
 8022a72:	f000 f82f 	bl	8022ad4 <__malloc_unlock>
 8022a76:	f104 000b 	add.w	r0, r4, #11
 8022a7a:	1d23      	adds	r3, r4, #4
 8022a7c:	f020 0007 	bic.w	r0, r0, #7
 8022a80:	1ac2      	subs	r2, r0, r3
 8022a82:	bf1c      	itt	ne
 8022a84:	1a1b      	subne	r3, r3, r0
 8022a86:	50a3      	strne	r3, [r4, r2]
 8022a88:	e7af      	b.n	80229ea <_malloc_r+0x22>
 8022a8a:	6862      	ldr	r2, [r4, #4]
 8022a8c:	42a3      	cmp	r3, r4
 8022a8e:	bf0c      	ite	eq
 8022a90:	f8c8 2000 	streq.w	r2, [r8]
 8022a94:	605a      	strne	r2, [r3, #4]
 8022a96:	e7eb      	b.n	8022a70 <_malloc_r+0xa8>
 8022a98:	4623      	mov	r3, r4
 8022a9a:	6864      	ldr	r4, [r4, #4]
 8022a9c:	e7ae      	b.n	80229fc <_malloc_r+0x34>
 8022a9e:	463c      	mov	r4, r7
 8022aa0:	687f      	ldr	r7, [r7, #4]
 8022aa2:	e7b6      	b.n	8022a12 <_malloc_r+0x4a>
 8022aa4:	461a      	mov	r2, r3
 8022aa6:	685b      	ldr	r3, [r3, #4]
 8022aa8:	42a3      	cmp	r3, r4
 8022aaa:	d1fb      	bne.n	8022aa4 <_malloc_r+0xdc>
 8022aac:	2300      	movs	r3, #0
 8022aae:	6053      	str	r3, [r2, #4]
 8022ab0:	e7de      	b.n	8022a70 <_malloc_r+0xa8>
 8022ab2:	230c      	movs	r3, #12
 8022ab4:	6033      	str	r3, [r6, #0]
 8022ab6:	4630      	mov	r0, r6
 8022ab8:	f000 f80c 	bl	8022ad4 <__malloc_unlock>
 8022abc:	e794      	b.n	80229e8 <_malloc_r+0x20>
 8022abe:	6005      	str	r5, [r0, #0]
 8022ac0:	e7d6      	b.n	8022a70 <_malloc_r+0xa8>
 8022ac2:	bf00      	nop
 8022ac4:	20014a58 	.word	0x20014a58

08022ac8 <__malloc_lock>:
 8022ac8:	4801      	ldr	r0, [pc, #4]	@ (8022ad0 <__malloc_lock+0x8>)
 8022aca:	f000 ba90 	b.w	8022fee <__retarget_lock_acquire_recursive>
 8022ace:	bf00      	nop
 8022ad0:	20014b9c 	.word	0x20014b9c

08022ad4 <__malloc_unlock>:
 8022ad4:	4801      	ldr	r0, [pc, #4]	@ (8022adc <__malloc_unlock+0x8>)
 8022ad6:	f000 ba8b 	b.w	8022ff0 <__retarget_lock_release_recursive>
 8022ada:	bf00      	nop
 8022adc:	20014b9c 	.word	0x20014b9c

08022ae0 <__cxa_atexit>:
 8022ae0:	b510      	push	{r4, lr}
 8022ae2:	4604      	mov	r4, r0
 8022ae4:	4804      	ldr	r0, [pc, #16]	@ (8022af8 <__cxa_atexit+0x18>)
 8022ae6:	4613      	mov	r3, r2
 8022ae8:	b120      	cbz	r0, 8022af4 <__cxa_atexit+0x14>
 8022aea:	460a      	mov	r2, r1
 8022aec:	2002      	movs	r0, #2
 8022aee:	4621      	mov	r1, r4
 8022af0:	f000 fa8e 	bl	8023010 <__register_exitproc>
 8022af4:	bd10      	pop	{r4, pc}
 8022af6:	bf00      	nop
 8022af8:	08023011 	.word	0x08023011

08022afc <std>:
 8022afc:	2300      	movs	r3, #0
 8022afe:	b510      	push	{r4, lr}
 8022b00:	4604      	mov	r4, r0
 8022b02:	e9c0 3300 	strd	r3, r3, [r0]
 8022b06:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022b0a:	6083      	str	r3, [r0, #8]
 8022b0c:	8181      	strh	r1, [r0, #12]
 8022b0e:	6643      	str	r3, [r0, #100]	@ 0x64
 8022b10:	81c2      	strh	r2, [r0, #14]
 8022b12:	6183      	str	r3, [r0, #24]
 8022b14:	4619      	mov	r1, r3
 8022b16:	2208      	movs	r2, #8
 8022b18:	305c      	adds	r0, #92	@ 0x5c
 8022b1a:	f000 f93c 	bl	8022d96 <memset>
 8022b1e:	4b0d      	ldr	r3, [pc, #52]	@ (8022b54 <std+0x58>)
 8022b20:	6263      	str	r3, [r4, #36]	@ 0x24
 8022b22:	4b0d      	ldr	r3, [pc, #52]	@ (8022b58 <std+0x5c>)
 8022b24:	62a3      	str	r3, [r4, #40]	@ 0x28
 8022b26:	4b0d      	ldr	r3, [pc, #52]	@ (8022b5c <std+0x60>)
 8022b28:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8022b2a:	4b0d      	ldr	r3, [pc, #52]	@ (8022b60 <std+0x64>)
 8022b2c:	6323      	str	r3, [r4, #48]	@ 0x30
 8022b2e:	4b0d      	ldr	r3, [pc, #52]	@ (8022b64 <std+0x68>)
 8022b30:	6224      	str	r4, [r4, #32]
 8022b32:	429c      	cmp	r4, r3
 8022b34:	d006      	beq.n	8022b44 <std+0x48>
 8022b36:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8022b3a:	4294      	cmp	r4, r2
 8022b3c:	d002      	beq.n	8022b44 <std+0x48>
 8022b3e:	33d0      	adds	r3, #208	@ 0xd0
 8022b40:	429c      	cmp	r4, r3
 8022b42:	d105      	bne.n	8022b50 <std+0x54>
 8022b44:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8022b48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b4c:	f000 ba4e 	b.w	8022fec <__retarget_lock_init_recursive>
 8022b50:	bd10      	pop	{r4, pc}
 8022b52:	bf00      	nop
 8022b54:	08022d11 	.word	0x08022d11
 8022b58:	08022d33 	.word	0x08022d33
 8022b5c:	08022d6b 	.word	0x08022d6b
 8022b60:	08022d8f 	.word	0x08022d8f
 8022b64:	20014a5c 	.word	0x20014a5c

08022b68 <stdio_exit_handler>:
 8022b68:	4a02      	ldr	r2, [pc, #8]	@ (8022b74 <stdio_exit_handler+0xc>)
 8022b6a:	4903      	ldr	r1, [pc, #12]	@ (8022b78 <stdio_exit_handler+0x10>)
 8022b6c:	4803      	ldr	r0, [pc, #12]	@ (8022b7c <stdio_exit_handler+0x14>)
 8022b6e:	f000 b87b 	b.w	8022c68 <_fwalk_sglue>
 8022b72:	bf00      	nop
 8022b74:	20000220 	.word	0x20000220
 8022b78:	08023ab1 	.word	0x08023ab1
 8022b7c:	20000230 	.word	0x20000230

08022b80 <cleanup_stdio>:
 8022b80:	6841      	ldr	r1, [r0, #4]
 8022b82:	4b0c      	ldr	r3, [pc, #48]	@ (8022bb4 <cleanup_stdio+0x34>)
 8022b84:	4299      	cmp	r1, r3
 8022b86:	b510      	push	{r4, lr}
 8022b88:	4604      	mov	r4, r0
 8022b8a:	d001      	beq.n	8022b90 <cleanup_stdio+0x10>
 8022b8c:	f000 ff90 	bl	8023ab0 <_fflush_r>
 8022b90:	68a1      	ldr	r1, [r4, #8]
 8022b92:	4b09      	ldr	r3, [pc, #36]	@ (8022bb8 <cleanup_stdio+0x38>)
 8022b94:	4299      	cmp	r1, r3
 8022b96:	d002      	beq.n	8022b9e <cleanup_stdio+0x1e>
 8022b98:	4620      	mov	r0, r4
 8022b9a:	f000 ff89 	bl	8023ab0 <_fflush_r>
 8022b9e:	68e1      	ldr	r1, [r4, #12]
 8022ba0:	4b06      	ldr	r3, [pc, #24]	@ (8022bbc <cleanup_stdio+0x3c>)
 8022ba2:	4299      	cmp	r1, r3
 8022ba4:	d004      	beq.n	8022bb0 <cleanup_stdio+0x30>
 8022ba6:	4620      	mov	r0, r4
 8022ba8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022bac:	f000 bf80 	b.w	8023ab0 <_fflush_r>
 8022bb0:	bd10      	pop	{r4, pc}
 8022bb2:	bf00      	nop
 8022bb4:	20014a5c 	.word	0x20014a5c
 8022bb8:	20014ac4 	.word	0x20014ac4
 8022bbc:	20014b2c 	.word	0x20014b2c

08022bc0 <global_stdio_init.part.0>:
 8022bc0:	b510      	push	{r4, lr}
 8022bc2:	4b0b      	ldr	r3, [pc, #44]	@ (8022bf0 <global_stdio_init.part.0+0x30>)
 8022bc4:	4c0b      	ldr	r4, [pc, #44]	@ (8022bf4 <global_stdio_init.part.0+0x34>)
 8022bc6:	4a0c      	ldr	r2, [pc, #48]	@ (8022bf8 <global_stdio_init.part.0+0x38>)
 8022bc8:	601a      	str	r2, [r3, #0]
 8022bca:	4620      	mov	r0, r4
 8022bcc:	2200      	movs	r2, #0
 8022bce:	2104      	movs	r1, #4
 8022bd0:	f7ff ff94 	bl	8022afc <std>
 8022bd4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8022bd8:	2201      	movs	r2, #1
 8022bda:	2109      	movs	r1, #9
 8022bdc:	f7ff ff8e 	bl	8022afc <std>
 8022be0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8022be4:	2202      	movs	r2, #2
 8022be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022bea:	2112      	movs	r1, #18
 8022bec:	f7ff bf86 	b.w	8022afc <std>
 8022bf0:	20014b94 	.word	0x20014b94
 8022bf4:	20014a5c 	.word	0x20014a5c
 8022bf8:	08022b69 	.word	0x08022b69

08022bfc <__sfp_lock_acquire>:
 8022bfc:	4801      	ldr	r0, [pc, #4]	@ (8022c04 <__sfp_lock_acquire+0x8>)
 8022bfe:	f000 b9f6 	b.w	8022fee <__retarget_lock_acquire_recursive>
 8022c02:	bf00      	nop
 8022c04:	20014b9e 	.word	0x20014b9e

08022c08 <__sfp_lock_release>:
 8022c08:	4801      	ldr	r0, [pc, #4]	@ (8022c10 <__sfp_lock_release+0x8>)
 8022c0a:	f000 b9f1 	b.w	8022ff0 <__retarget_lock_release_recursive>
 8022c0e:	bf00      	nop
 8022c10:	20014b9e 	.word	0x20014b9e

08022c14 <__sinit>:
 8022c14:	b510      	push	{r4, lr}
 8022c16:	4604      	mov	r4, r0
 8022c18:	f7ff fff0 	bl	8022bfc <__sfp_lock_acquire>
 8022c1c:	6a23      	ldr	r3, [r4, #32]
 8022c1e:	b11b      	cbz	r3, 8022c28 <__sinit+0x14>
 8022c20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022c24:	f7ff bff0 	b.w	8022c08 <__sfp_lock_release>
 8022c28:	4b04      	ldr	r3, [pc, #16]	@ (8022c3c <__sinit+0x28>)
 8022c2a:	6223      	str	r3, [r4, #32]
 8022c2c:	4b04      	ldr	r3, [pc, #16]	@ (8022c40 <__sinit+0x2c>)
 8022c2e:	681b      	ldr	r3, [r3, #0]
 8022c30:	2b00      	cmp	r3, #0
 8022c32:	d1f5      	bne.n	8022c20 <__sinit+0xc>
 8022c34:	f7ff ffc4 	bl	8022bc0 <global_stdio_init.part.0>
 8022c38:	e7f2      	b.n	8022c20 <__sinit+0xc>
 8022c3a:	bf00      	nop
 8022c3c:	08022b81 	.word	0x08022b81
 8022c40:	20014b94 	.word	0x20014b94

08022c44 <fiprintf>:
 8022c44:	b40e      	push	{r1, r2, r3}
 8022c46:	b503      	push	{r0, r1, lr}
 8022c48:	4601      	mov	r1, r0
 8022c4a:	ab03      	add	r3, sp, #12
 8022c4c:	4805      	ldr	r0, [pc, #20]	@ (8022c64 <fiprintf+0x20>)
 8022c4e:	f853 2b04 	ldr.w	r2, [r3], #4
 8022c52:	6800      	ldr	r0, [r0, #0]
 8022c54:	9301      	str	r3, [sp, #4]
 8022c56:	f000 fc03 	bl	8023460 <_vfiprintf_r>
 8022c5a:	b002      	add	sp, #8
 8022c5c:	f85d eb04 	ldr.w	lr, [sp], #4
 8022c60:	b003      	add	sp, #12
 8022c62:	4770      	bx	lr
 8022c64:	2000022c 	.word	0x2000022c

08022c68 <_fwalk_sglue>:
 8022c68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022c6c:	4607      	mov	r7, r0
 8022c6e:	4688      	mov	r8, r1
 8022c70:	4614      	mov	r4, r2
 8022c72:	2600      	movs	r6, #0
 8022c74:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022c78:	f1b9 0901 	subs.w	r9, r9, #1
 8022c7c:	d505      	bpl.n	8022c8a <_fwalk_sglue+0x22>
 8022c7e:	6824      	ldr	r4, [r4, #0]
 8022c80:	2c00      	cmp	r4, #0
 8022c82:	d1f7      	bne.n	8022c74 <_fwalk_sglue+0xc>
 8022c84:	4630      	mov	r0, r6
 8022c86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022c8a:	89ab      	ldrh	r3, [r5, #12]
 8022c8c:	2b01      	cmp	r3, #1
 8022c8e:	d907      	bls.n	8022ca0 <_fwalk_sglue+0x38>
 8022c90:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022c94:	3301      	adds	r3, #1
 8022c96:	d003      	beq.n	8022ca0 <_fwalk_sglue+0x38>
 8022c98:	4629      	mov	r1, r5
 8022c9a:	4638      	mov	r0, r7
 8022c9c:	47c0      	blx	r8
 8022c9e:	4306      	orrs	r6, r0
 8022ca0:	3568      	adds	r5, #104	@ 0x68
 8022ca2:	e7e9      	b.n	8022c78 <_fwalk_sglue+0x10>

08022ca4 <sniprintf>:
 8022ca4:	b40c      	push	{r2, r3}
 8022ca6:	b530      	push	{r4, r5, lr}
 8022ca8:	4b18      	ldr	r3, [pc, #96]	@ (8022d0c <sniprintf+0x68>)
 8022caa:	1e0c      	subs	r4, r1, #0
 8022cac:	681d      	ldr	r5, [r3, #0]
 8022cae:	b09d      	sub	sp, #116	@ 0x74
 8022cb0:	da08      	bge.n	8022cc4 <sniprintf+0x20>
 8022cb2:	238b      	movs	r3, #139	@ 0x8b
 8022cb4:	602b      	str	r3, [r5, #0]
 8022cb6:	f04f 30ff 	mov.w	r0, #4294967295
 8022cba:	b01d      	add	sp, #116	@ 0x74
 8022cbc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8022cc0:	b002      	add	sp, #8
 8022cc2:	4770      	bx	lr
 8022cc4:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8022cc8:	f8ad 3014 	strh.w	r3, [sp, #20]
 8022ccc:	f04f 0300 	mov.w	r3, #0
 8022cd0:	931b      	str	r3, [sp, #108]	@ 0x6c
 8022cd2:	bf14      	ite	ne
 8022cd4:	f104 33ff 	addne.w	r3, r4, #4294967295
 8022cd8:	4623      	moveq	r3, r4
 8022cda:	9304      	str	r3, [sp, #16]
 8022cdc:	9307      	str	r3, [sp, #28]
 8022cde:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8022ce2:	9002      	str	r0, [sp, #8]
 8022ce4:	9006      	str	r0, [sp, #24]
 8022ce6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8022cea:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8022cec:	ab21      	add	r3, sp, #132	@ 0x84
 8022cee:	a902      	add	r1, sp, #8
 8022cf0:	4628      	mov	r0, r5
 8022cf2:	9301      	str	r3, [sp, #4]
 8022cf4:	f000 fa8e 	bl	8023214 <_svfiprintf_r>
 8022cf8:	1c43      	adds	r3, r0, #1
 8022cfa:	bfbc      	itt	lt
 8022cfc:	238b      	movlt	r3, #139	@ 0x8b
 8022cfe:	602b      	strlt	r3, [r5, #0]
 8022d00:	2c00      	cmp	r4, #0
 8022d02:	d0da      	beq.n	8022cba <sniprintf+0x16>
 8022d04:	9b02      	ldr	r3, [sp, #8]
 8022d06:	2200      	movs	r2, #0
 8022d08:	701a      	strb	r2, [r3, #0]
 8022d0a:	e7d6      	b.n	8022cba <sniprintf+0x16>
 8022d0c:	2000022c 	.word	0x2000022c

08022d10 <__sread>:
 8022d10:	b510      	push	{r4, lr}
 8022d12:	460c      	mov	r4, r1
 8022d14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d18:	f000 f8f6 	bl	8022f08 <_read_r>
 8022d1c:	2800      	cmp	r0, #0
 8022d1e:	bfab      	itete	ge
 8022d20:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8022d22:	89a3      	ldrhlt	r3, [r4, #12]
 8022d24:	181b      	addge	r3, r3, r0
 8022d26:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8022d2a:	bfac      	ite	ge
 8022d2c:	6563      	strge	r3, [r4, #84]	@ 0x54
 8022d2e:	81a3      	strhlt	r3, [r4, #12]
 8022d30:	bd10      	pop	{r4, pc}

08022d32 <__swrite>:
 8022d32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022d36:	461f      	mov	r7, r3
 8022d38:	898b      	ldrh	r3, [r1, #12]
 8022d3a:	05db      	lsls	r3, r3, #23
 8022d3c:	4605      	mov	r5, r0
 8022d3e:	460c      	mov	r4, r1
 8022d40:	4616      	mov	r6, r2
 8022d42:	d505      	bpl.n	8022d50 <__swrite+0x1e>
 8022d44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d48:	2302      	movs	r3, #2
 8022d4a:	2200      	movs	r2, #0
 8022d4c:	f000 f8ca 	bl	8022ee4 <_lseek_r>
 8022d50:	89a3      	ldrh	r3, [r4, #12]
 8022d52:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022d56:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8022d5a:	81a3      	strh	r3, [r4, #12]
 8022d5c:	4632      	mov	r2, r6
 8022d5e:	463b      	mov	r3, r7
 8022d60:	4628      	mov	r0, r5
 8022d62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8022d66:	f000 b905 	b.w	8022f74 <_write_r>

08022d6a <__sseek>:
 8022d6a:	b510      	push	{r4, lr}
 8022d6c:	460c      	mov	r4, r1
 8022d6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d72:	f000 f8b7 	bl	8022ee4 <_lseek_r>
 8022d76:	1c43      	adds	r3, r0, #1
 8022d78:	89a3      	ldrh	r3, [r4, #12]
 8022d7a:	bf15      	itete	ne
 8022d7c:	6560      	strne	r0, [r4, #84]	@ 0x54
 8022d7e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8022d82:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8022d86:	81a3      	strheq	r3, [r4, #12]
 8022d88:	bf18      	it	ne
 8022d8a:	81a3      	strhne	r3, [r4, #12]
 8022d8c:	bd10      	pop	{r4, pc}

08022d8e <__sclose>:
 8022d8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d92:	f000 b839 	b.w	8022e08 <_close_r>

08022d96 <memset>:
 8022d96:	4402      	add	r2, r0
 8022d98:	4603      	mov	r3, r0
 8022d9a:	4293      	cmp	r3, r2
 8022d9c:	d100      	bne.n	8022da0 <memset+0xa>
 8022d9e:	4770      	bx	lr
 8022da0:	f803 1b01 	strb.w	r1, [r3], #1
 8022da4:	e7f9      	b.n	8022d9a <memset+0x4>

08022da6 <_raise_r>:
 8022da6:	291f      	cmp	r1, #31
 8022da8:	b538      	push	{r3, r4, r5, lr}
 8022daa:	4605      	mov	r5, r0
 8022dac:	460c      	mov	r4, r1
 8022dae:	d904      	bls.n	8022dba <_raise_r+0x14>
 8022db0:	2316      	movs	r3, #22
 8022db2:	6003      	str	r3, [r0, #0]
 8022db4:	f04f 30ff 	mov.w	r0, #4294967295
 8022db8:	bd38      	pop	{r3, r4, r5, pc}
 8022dba:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8022dbc:	b112      	cbz	r2, 8022dc4 <_raise_r+0x1e>
 8022dbe:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022dc2:	b94b      	cbnz	r3, 8022dd8 <_raise_r+0x32>
 8022dc4:	4628      	mov	r0, r5
 8022dc6:	f000 f8c3 	bl	8022f50 <_getpid_r>
 8022dca:	4622      	mov	r2, r4
 8022dcc:	4601      	mov	r1, r0
 8022dce:	4628      	mov	r0, r5
 8022dd0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022dd4:	f000 b8aa 	b.w	8022f2c <_kill_r>
 8022dd8:	2b01      	cmp	r3, #1
 8022dda:	d00a      	beq.n	8022df2 <_raise_r+0x4c>
 8022ddc:	1c59      	adds	r1, r3, #1
 8022dde:	d103      	bne.n	8022de8 <_raise_r+0x42>
 8022de0:	2316      	movs	r3, #22
 8022de2:	6003      	str	r3, [r0, #0]
 8022de4:	2001      	movs	r0, #1
 8022de6:	e7e7      	b.n	8022db8 <_raise_r+0x12>
 8022de8:	2100      	movs	r1, #0
 8022dea:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8022dee:	4620      	mov	r0, r4
 8022df0:	4798      	blx	r3
 8022df2:	2000      	movs	r0, #0
 8022df4:	e7e0      	b.n	8022db8 <_raise_r+0x12>
	...

08022df8 <raise>:
 8022df8:	4b02      	ldr	r3, [pc, #8]	@ (8022e04 <raise+0xc>)
 8022dfa:	4601      	mov	r1, r0
 8022dfc:	6818      	ldr	r0, [r3, #0]
 8022dfe:	f7ff bfd2 	b.w	8022da6 <_raise_r>
 8022e02:	bf00      	nop
 8022e04:	2000022c 	.word	0x2000022c

08022e08 <_close_r>:
 8022e08:	b538      	push	{r3, r4, r5, lr}
 8022e0a:	4d06      	ldr	r5, [pc, #24]	@ (8022e24 <_close_r+0x1c>)
 8022e0c:	2300      	movs	r3, #0
 8022e0e:	4604      	mov	r4, r0
 8022e10:	4608      	mov	r0, r1
 8022e12:	602b      	str	r3, [r5, #0]
 8022e14:	f7df fcc2 	bl	800279c <_close>
 8022e18:	1c43      	adds	r3, r0, #1
 8022e1a:	d102      	bne.n	8022e22 <_close_r+0x1a>
 8022e1c:	682b      	ldr	r3, [r5, #0]
 8022e1e:	b103      	cbz	r3, 8022e22 <_close_r+0x1a>
 8022e20:	6023      	str	r3, [r4, #0]
 8022e22:	bd38      	pop	{r3, r4, r5, pc}
 8022e24:	20014b98 	.word	0x20014b98

08022e28 <_reclaim_reent>:
 8022e28:	4b2d      	ldr	r3, [pc, #180]	@ (8022ee0 <_reclaim_reent+0xb8>)
 8022e2a:	681b      	ldr	r3, [r3, #0]
 8022e2c:	4283      	cmp	r3, r0
 8022e2e:	b570      	push	{r4, r5, r6, lr}
 8022e30:	4604      	mov	r4, r0
 8022e32:	d053      	beq.n	8022edc <_reclaim_reent+0xb4>
 8022e34:	69c3      	ldr	r3, [r0, #28]
 8022e36:	b31b      	cbz	r3, 8022e80 <_reclaim_reent+0x58>
 8022e38:	68db      	ldr	r3, [r3, #12]
 8022e3a:	b163      	cbz	r3, 8022e56 <_reclaim_reent+0x2e>
 8022e3c:	2500      	movs	r5, #0
 8022e3e:	69e3      	ldr	r3, [r4, #28]
 8022e40:	68db      	ldr	r3, [r3, #12]
 8022e42:	5959      	ldr	r1, [r3, r5]
 8022e44:	b9b1      	cbnz	r1, 8022e74 <_reclaim_reent+0x4c>
 8022e46:	3504      	adds	r5, #4
 8022e48:	2d80      	cmp	r5, #128	@ 0x80
 8022e4a:	d1f8      	bne.n	8022e3e <_reclaim_reent+0x16>
 8022e4c:	69e3      	ldr	r3, [r4, #28]
 8022e4e:	4620      	mov	r0, r4
 8022e50:	68d9      	ldr	r1, [r3, #12]
 8022e52:	f000 f939 	bl	80230c8 <_free_r>
 8022e56:	69e3      	ldr	r3, [r4, #28]
 8022e58:	6819      	ldr	r1, [r3, #0]
 8022e5a:	b111      	cbz	r1, 8022e62 <_reclaim_reent+0x3a>
 8022e5c:	4620      	mov	r0, r4
 8022e5e:	f000 f933 	bl	80230c8 <_free_r>
 8022e62:	69e3      	ldr	r3, [r4, #28]
 8022e64:	689d      	ldr	r5, [r3, #8]
 8022e66:	b15d      	cbz	r5, 8022e80 <_reclaim_reent+0x58>
 8022e68:	4629      	mov	r1, r5
 8022e6a:	4620      	mov	r0, r4
 8022e6c:	682d      	ldr	r5, [r5, #0]
 8022e6e:	f000 f92b 	bl	80230c8 <_free_r>
 8022e72:	e7f8      	b.n	8022e66 <_reclaim_reent+0x3e>
 8022e74:	680e      	ldr	r6, [r1, #0]
 8022e76:	4620      	mov	r0, r4
 8022e78:	f000 f926 	bl	80230c8 <_free_r>
 8022e7c:	4631      	mov	r1, r6
 8022e7e:	e7e1      	b.n	8022e44 <_reclaim_reent+0x1c>
 8022e80:	6961      	ldr	r1, [r4, #20]
 8022e82:	b111      	cbz	r1, 8022e8a <_reclaim_reent+0x62>
 8022e84:	4620      	mov	r0, r4
 8022e86:	f000 f91f 	bl	80230c8 <_free_r>
 8022e8a:	69e1      	ldr	r1, [r4, #28]
 8022e8c:	b111      	cbz	r1, 8022e94 <_reclaim_reent+0x6c>
 8022e8e:	4620      	mov	r0, r4
 8022e90:	f000 f91a 	bl	80230c8 <_free_r>
 8022e94:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8022e96:	b111      	cbz	r1, 8022e9e <_reclaim_reent+0x76>
 8022e98:	4620      	mov	r0, r4
 8022e9a:	f000 f915 	bl	80230c8 <_free_r>
 8022e9e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8022ea0:	b111      	cbz	r1, 8022ea8 <_reclaim_reent+0x80>
 8022ea2:	4620      	mov	r0, r4
 8022ea4:	f000 f910 	bl	80230c8 <_free_r>
 8022ea8:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8022eaa:	b111      	cbz	r1, 8022eb2 <_reclaim_reent+0x8a>
 8022eac:	4620      	mov	r0, r4
 8022eae:	f000 f90b 	bl	80230c8 <_free_r>
 8022eb2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8022eb4:	b111      	cbz	r1, 8022ebc <_reclaim_reent+0x94>
 8022eb6:	4620      	mov	r0, r4
 8022eb8:	f000 f906 	bl	80230c8 <_free_r>
 8022ebc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8022ebe:	b111      	cbz	r1, 8022ec6 <_reclaim_reent+0x9e>
 8022ec0:	4620      	mov	r0, r4
 8022ec2:	f000 f901 	bl	80230c8 <_free_r>
 8022ec6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8022ec8:	b111      	cbz	r1, 8022ed0 <_reclaim_reent+0xa8>
 8022eca:	4620      	mov	r0, r4
 8022ecc:	f000 f8fc 	bl	80230c8 <_free_r>
 8022ed0:	6a23      	ldr	r3, [r4, #32]
 8022ed2:	b11b      	cbz	r3, 8022edc <_reclaim_reent+0xb4>
 8022ed4:	4620      	mov	r0, r4
 8022ed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8022eda:	4718      	bx	r3
 8022edc:	bd70      	pop	{r4, r5, r6, pc}
 8022ede:	bf00      	nop
 8022ee0:	2000022c 	.word	0x2000022c

08022ee4 <_lseek_r>:
 8022ee4:	b538      	push	{r3, r4, r5, lr}
 8022ee6:	4d07      	ldr	r5, [pc, #28]	@ (8022f04 <_lseek_r+0x20>)
 8022ee8:	4604      	mov	r4, r0
 8022eea:	4608      	mov	r0, r1
 8022eec:	4611      	mov	r1, r2
 8022eee:	2200      	movs	r2, #0
 8022ef0:	602a      	str	r2, [r5, #0]
 8022ef2:	461a      	mov	r2, r3
 8022ef4:	f7df fc5c 	bl	80027b0 <_lseek>
 8022ef8:	1c43      	adds	r3, r0, #1
 8022efa:	d102      	bne.n	8022f02 <_lseek_r+0x1e>
 8022efc:	682b      	ldr	r3, [r5, #0]
 8022efe:	b103      	cbz	r3, 8022f02 <_lseek_r+0x1e>
 8022f00:	6023      	str	r3, [r4, #0]
 8022f02:	bd38      	pop	{r3, r4, r5, pc}
 8022f04:	20014b98 	.word	0x20014b98

08022f08 <_read_r>:
 8022f08:	b538      	push	{r3, r4, r5, lr}
 8022f0a:	4d07      	ldr	r5, [pc, #28]	@ (8022f28 <_read_r+0x20>)
 8022f0c:	4604      	mov	r4, r0
 8022f0e:	4608      	mov	r0, r1
 8022f10:	4611      	mov	r1, r2
 8022f12:	2200      	movs	r2, #0
 8022f14:	602a      	str	r2, [r5, #0]
 8022f16:	461a      	mov	r2, r3
 8022f18:	f7df fc24 	bl	8002764 <_read>
 8022f1c:	1c43      	adds	r3, r0, #1
 8022f1e:	d102      	bne.n	8022f26 <_read_r+0x1e>
 8022f20:	682b      	ldr	r3, [r5, #0]
 8022f22:	b103      	cbz	r3, 8022f26 <_read_r+0x1e>
 8022f24:	6023      	str	r3, [r4, #0]
 8022f26:	bd38      	pop	{r3, r4, r5, pc}
 8022f28:	20014b98 	.word	0x20014b98

08022f2c <_kill_r>:
 8022f2c:	b538      	push	{r3, r4, r5, lr}
 8022f2e:	4d07      	ldr	r5, [pc, #28]	@ (8022f4c <_kill_r+0x20>)
 8022f30:	2300      	movs	r3, #0
 8022f32:	4604      	mov	r4, r0
 8022f34:	4608      	mov	r0, r1
 8022f36:	4611      	mov	r1, r2
 8022f38:	602b      	str	r3, [r5, #0]
 8022f3a:	f7df fc05 	bl	8002748 <_kill>
 8022f3e:	1c43      	adds	r3, r0, #1
 8022f40:	d102      	bne.n	8022f48 <_kill_r+0x1c>
 8022f42:	682b      	ldr	r3, [r5, #0]
 8022f44:	b103      	cbz	r3, 8022f48 <_kill_r+0x1c>
 8022f46:	6023      	str	r3, [r4, #0]
 8022f48:	bd38      	pop	{r3, r4, r5, pc}
 8022f4a:	bf00      	nop
 8022f4c:	20014b98 	.word	0x20014b98

08022f50 <_getpid_r>:
 8022f50:	f7df bbf8 	b.w	8002744 <_getpid>

08022f54 <_sbrk_r>:
 8022f54:	b538      	push	{r3, r4, r5, lr}
 8022f56:	4d06      	ldr	r5, [pc, #24]	@ (8022f70 <_sbrk_r+0x1c>)
 8022f58:	2300      	movs	r3, #0
 8022f5a:	4604      	mov	r4, r0
 8022f5c:	4608      	mov	r0, r1
 8022f5e:	602b      	str	r3, [r5, #0]
 8022f60:	f7df fc28 	bl	80027b4 <_sbrk>
 8022f64:	1c43      	adds	r3, r0, #1
 8022f66:	d102      	bne.n	8022f6e <_sbrk_r+0x1a>
 8022f68:	682b      	ldr	r3, [r5, #0]
 8022f6a:	b103      	cbz	r3, 8022f6e <_sbrk_r+0x1a>
 8022f6c:	6023      	str	r3, [r4, #0]
 8022f6e:	bd38      	pop	{r3, r4, r5, pc}
 8022f70:	20014b98 	.word	0x20014b98

08022f74 <_write_r>:
 8022f74:	b538      	push	{r3, r4, r5, lr}
 8022f76:	4d07      	ldr	r5, [pc, #28]	@ (8022f94 <_write_r+0x20>)
 8022f78:	4604      	mov	r4, r0
 8022f7a:	4608      	mov	r0, r1
 8022f7c:	4611      	mov	r1, r2
 8022f7e:	2200      	movs	r2, #0
 8022f80:	602a      	str	r2, [r5, #0]
 8022f82:	461a      	mov	r2, r3
 8022f84:	f7df fbfc 	bl	8002780 <_write>
 8022f88:	1c43      	adds	r3, r0, #1
 8022f8a:	d102      	bne.n	8022f92 <_write_r+0x1e>
 8022f8c:	682b      	ldr	r3, [r5, #0]
 8022f8e:	b103      	cbz	r3, 8022f92 <_write_r+0x1e>
 8022f90:	6023      	str	r3, [r4, #0]
 8022f92:	bd38      	pop	{r3, r4, r5, pc}
 8022f94:	20014b98 	.word	0x20014b98

08022f98 <__errno>:
 8022f98:	4b01      	ldr	r3, [pc, #4]	@ (8022fa0 <__errno+0x8>)
 8022f9a:	6818      	ldr	r0, [r3, #0]
 8022f9c:	4770      	bx	lr
 8022f9e:	bf00      	nop
 8022fa0:	2000022c 	.word	0x2000022c

08022fa4 <__libc_init_array>:
 8022fa4:	b570      	push	{r4, r5, r6, lr}
 8022fa6:	4d0d      	ldr	r5, [pc, #52]	@ (8022fdc <__libc_init_array+0x38>)
 8022fa8:	4c0d      	ldr	r4, [pc, #52]	@ (8022fe0 <__libc_init_array+0x3c>)
 8022faa:	1b64      	subs	r4, r4, r5
 8022fac:	10a4      	asrs	r4, r4, #2
 8022fae:	2600      	movs	r6, #0
 8022fb0:	42a6      	cmp	r6, r4
 8022fb2:	d109      	bne.n	8022fc8 <__libc_init_array+0x24>
 8022fb4:	4d0b      	ldr	r5, [pc, #44]	@ (8022fe4 <__libc_init_array+0x40>)
 8022fb6:	4c0c      	ldr	r4, [pc, #48]	@ (8022fe8 <__libc_init_array+0x44>)
 8022fb8:	f000 ff0a 	bl	8023dd0 <_init>
 8022fbc:	1b64      	subs	r4, r4, r5
 8022fbe:	10a4      	asrs	r4, r4, #2
 8022fc0:	2600      	movs	r6, #0
 8022fc2:	42a6      	cmp	r6, r4
 8022fc4:	d105      	bne.n	8022fd2 <__libc_init_array+0x2e>
 8022fc6:	bd70      	pop	{r4, r5, r6, pc}
 8022fc8:	f855 3b04 	ldr.w	r3, [r5], #4
 8022fcc:	4798      	blx	r3
 8022fce:	3601      	adds	r6, #1
 8022fd0:	e7ee      	b.n	8022fb0 <__libc_init_array+0xc>
 8022fd2:	f855 3b04 	ldr.w	r3, [r5], #4
 8022fd6:	4798      	blx	r3
 8022fd8:	3601      	adds	r6, #1
 8022fda:	e7f2      	b.n	8022fc2 <__libc_init_array+0x1e>
 8022fdc:	08025c30 	.word	0x08025c30
 8022fe0:	08025c30 	.word	0x08025c30
 8022fe4:	08025c30 	.word	0x08025c30
 8022fe8:	08025c44 	.word	0x08025c44

08022fec <__retarget_lock_init_recursive>:
 8022fec:	4770      	bx	lr

08022fee <__retarget_lock_acquire_recursive>:
 8022fee:	4770      	bx	lr

08022ff0 <__retarget_lock_release_recursive>:
 8022ff0:	4770      	bx	lr

08022ff2 <memcpy>:
 8022ff2:	440a      	add	r2, r1
 8022ff4:	4291      	cmp	r1, r2
 8022ff6:	f100 33ff 	add.w	r3, r0, #4294967295
 8022ffa:	d100      	bne.n	8022ffe <memcpy+0xc>
 8022ffc:	4770      	bx	lr
 8022ffe:	b510      	push	{r4, lr}
 8023000:	f811 4b01 	ldrb.w	r4, [r1], #1
 8023004:	f803 4f01 	strb.w	r4, [r3, #1]!
 8023008:	4291      	cmp	r1, r2
 802300a:	d1f9      	bne.n	8023000 <memcpy+0xe>
 802300c:	bd10      	pop	{r4, pc}
	...

08023010 <__register_exitproc>:
 8023010:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023014:	4d27      	ldr	r5, [pc, #156]	@ (80230b4 <__register_exitproc+0xa4>)
 8023016:	4607      	mov	r7, r0
 8023018:	6828      	ldr	r0, [r5, #0]
 802301a:	4691      	mov	r9, r2
 802301c:	460e      	mov	r6, r1
 802301e:	4698      	mov	r8, r3
 8023020:	f7ff ffe5 	bl	8022fee <__retarget_lock_acquire_recursive>
 8023024:	4a24      	ldr	r2, [pc, #144]	@ (80230b8 <__register_exitproc+0xa8>)
 8023026:	6814      	ldr	r4, [r2, #0]
 8023028:	b93c      	cbnz	r4, 802303a <__register_exitproc+0x2a>
 802302a:	4b24      	ldr	r3, [pc, #144]	@ (80230bc <__register_exitproc+0xac>)
 802302c:	6013      	str	r3, [r2, #0]
 802302e:	4a24      	ldr	r2, [pc, #144]	@ (80230c0 <__register_exitproc+0xb0>)
 8023030:	b112      	cbz	r2, 8023038 <__register_exitproc+0x28>
 8023032:	6812      	ldr	r2, [r2, #0]
 8023034:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8023038:	4c20      	ldr	r4, [pc, #128]	@ (80230bc <__register_exitproc+0xac>)
 802303a:	6863      	ldr	r3, [r4, #4]
 802303c:	2b1f      	cmp	r3, #31
 802303e:	dd06      	ble.n	802304e <__register_exitproc+0x3e>
 8023040:	6828      	ldr	r0, [r5, #0]
 8023042:	f7ff ffd5 	bl	8022ff0 <__retarget_lock_release_recursive>
 8023046:	f04f 30ff 	mov.w	r0, #4294967295
 802304a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802304e:	b32f      	cbz	r7, 802309c <__register_exitproc+0x8c>
 8023050:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8023054:	b968      	cbnz	r0, 8023072 <__register_exitproc+0x62>
 8023056:	4b1b      	ldr	r3, [pc, #108]	@ (80230c4 <__register_exitproc+0xb4>)
 8023058:	2b00      	cmp	r3, #0
 802305a:	d0f1      	beq.n	8023040 <__register_exitproc+0x30>
 802305c:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8023060:	f7ff fc80 	bl	8022964 <malloc>
 8023064:	2800      	cmp	r0, #0
 8023066:	d0eb      	beq.n	8023040 <__register_exitproc+0x30>
 8023068:	2300      	movs	r3, #0
 802306a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802306e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8023072:	6863      	ldr	r3, [r4, #4]
 8023074:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8023078:	2201      	movs	r2, #1
 802307a:	409a      	lsls	r2, r3
 802307c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8023080:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8023084:	4313      	orrs	r3, r2
 8023086:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802308a:	2f02      	cmp	r7, #2
 802308c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8023090:	bf02      	ittt	eq
 8023092:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8023096:	4313      	orreq	r3, r2
 8023098:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802309c:	6863      	ldr	r3, [r4, #4]
 802309e:	6828      	ldr	r0, [r5, #0]
 80230a0:	1c5a      	adds	r2, r3, #1
 80230a2:	3302      	adds	r3, #2
 80230a4:	6062      	str	r2, [r4, #4]
 80230a6:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80230aa:	f7ff ffa1 	bl	8022ff0 <__retarget_lock_release_recursive>
 80230ae:	2000      	movs	r0, #0
 80230b0:	e7cb      	b.n	802304a <__register_exitproc+0x3a>
 80230b2:	bf00      	nop
 80230b4:	2000027c 	.word	0x2000027c
 80230b8:	20014c2c 	.word	0x20014c2c
 80230bc:	20014ba0 	.word	0x20014ba0
 80230c0:	08025a54 	.word	0x08025a54
 80230c4:	08022965 	.word	0x08022965

080230c8 <_free_r>:
 80230c8:	b538      	push	{r3, r4, r5, lr}
 80230ca:	4605      	mov	r5, r0
 80230cc:	2900      	cmp	r1, #0
 80230ce:	d041      	beq.n	8023154 <_free_r+0x8c>
 80230d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80230d4:	1f0c      	subs	r4, r1, #4
 80230d6:	2b00      	cmp	r3, #0
 80230d8:	bfb8      	it	lt
 80230da:	18e4      	addlt	r4, r4, r3
 80230dc:	f7ff fcf4 	bl	8022ac8 <__malloc_lock>
 80230e0:	4a1d      	ldr	r2, [pc, #116]	@ (8023158 <_free_r+0x90>)
 80230e2:	6813      	ldr	r3, [r2, #0]
 80230e4:	b933      	cbnz	r3, 80230f4 <_free_r+0x2c>
 80230e6:	6063      	str	r3, [r4, #4]
 80230e8:	6014      	str	r4, [r2, #0]
 80230ea:	4628      	mov	r0, r5
 80230ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80230f0:	f7ff bcf0 	b.w	8022ad4 <__malloc_unlock>
 80230f4:	42a3      	cmp	r3, r4
 80230f6:	d908      	bls.n	802310a <_free_r+0x42>
 80230f8:	6820      	ldr	r0, [r4, #0]
 80230fa:	1821      	adds	r1, r4, r0
 80230fc:	428b      	cmp	r3, r1
 80230fe:	bf01      	itttt	eq
 8023100:	6819      	ldreq	r1, [r3, #0]
 8023102:	685b      	ldreq	r3, [r3, #4]
 8023104:	1809      	addeq	r1, r1, r0
 8023106:	6021      	streq	r1, [r4, #0]
 8023108:	e7ed      	b.n	80230e6 <_free_r+0x1e>
 802310a:	461a      	mov	r2, r3
 802310c:	685b      	ldr	r3, [r3, #4]
 802310e:	b10b      	cbz	r3, 8023114 <_free_r+0x4c>
 8023110:	42a3      	cmp	r3, r4
 8023112:	d9fa      	bls.n	802310a <_free_r+0x42>
 8023114:	6811      	ldr	r1, [r2, #0]
 8023116:	1850      	adds	r0, r2, r1
 8023118:	42a0      	cmp	r0, r4
 802311a:	d10b      	bne.n	8023134 <_free_r+0x6c>
 802311c:	6820      	ldr	r0, [r4, #0]
 802311e:	4401      	add	r1, r0
 8023120:	1850      	adds	r0, r2, r1
 8023122:	4283      	cmp	r3, r0
 8023124:	6011      	str	r1, [r2, #0]
 8023126:	d1e0      	bne.n	80230ea <_free_r+0x22>
 8023128:	6818      	ldr	r0, [r3, #0]
 802312a:	685b      	ldr	r3, [r3, #4]
 802312c:	6053      	str	r3, [r2, #4]
 802312e:	4408      	add	r0, r1
 8023130:	6010      	str	r0, [r2, #0]
 8023132:	e7da      	b.n	80230ea <_free_r+0x22>
 8023134:	d902      	bls.n	802313c <_free_r+0x74>
 8023136:	230c      	movs	r3, #12
 8023138:	602b      	str	r3, [r5, #0]
 802313a:	e7d6      	b.n	80230ea <_free_r+0x22>
 802313c:	6820      	ldr	r0, [r4, #0]
 802313e:	1821      	adds	r1, r4, r0
 8023140:	428b      	cmp	r3, r1
 8023142:	bf04      	itt	eq
 8023144:	6819      	ldreq	r1, [r3, #0]
 8023146:	685b      	ldreq	r3, [r3, #4]
 8023148:	6063      	str	r3, [r4, #4]
 802314a:	bf04      	itt	eq
 802314c:	1809      	addeq	r1, r1, r0
 802314e:	6021      	streq	r1, [r4, #0]
 8023150:	6054      	str	r4, [r2, #4]
 8023152:	e7ca      	b.n	80230ea <_free_r+0x22>
 8023154:	bd38      	pop	{r3, r4, r5, pc}
 8023156:	bf00      	nop
 8023158:	20014a58 	.word	0x20014a58

0802315c <__ssputs_r>:
 802315c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023160:	688e      	ldr	r6, [r1, #8]
 8023162:	461f      	mov	r7, r3
 8023164:	42be      	cmp	r6, r7
 8023166:	680b      	ldr	r3, [r1, #0]
 8023168:	4682      	mov	sl, r0
 802316a:	460c      	mov	r4, r1
 802316c:	4690      	mov	r8, r2
 802316e:	d82d      	bhi.n	80231cc <__ssputs_r+0x70>
 8023170:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8023174:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8023178:	d026      	beq.n	80231c8 <__ssputs_r+0x6c>
 802317a:	6965      	ldr	r5, [r4, #20]
 802317c:	6909      	ldr	r1, [r1, #16]
 802317e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023182:	eba3 0901 	sub.w	r9, r3, r1
 8023186:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802318a:	1c7b      	adds	r3, r7, #1
 802318c:	444b      	add	r3, r9
 802318e:	106d      	asrs	r5, r5, #1
 8023190:	429d      	cmp	r5, r3
 8023192:	bf38      	it	cc
 8023194:	461d      	movcc	r5, r3
 8023196:	0553      	lsls	r3, r2, #21
 8023198:	d527      	bpl.n	80231ea <__ssputs_r+0x8e>
 802319a:	4629      	mov	r1, r5
 802319c:	f7ff fc14 	bl	80229c8 <_malloc_r>
 80231a0:	4606      	mov	r6, r0
 80231a2:	b360      	cbz	r0, 80231fe <__ssputs_r+0xa2>
 80231a4:	6921      	ldr	r1, [r4, #16]
 80231a6:	464a      	mov	r2, r9
 80231a8:	f7ff ff23 	bl	8022ff2 <memcpy>
 80231ac:	89a3      	ldrh	r3, [r4, #12]
 80231ae:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80231b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80231b6:	81a3      	strh	r3, [r4, #12]
 80231b8:	6126      	str	r6, [r4, #16]
 80231ba:	6165      	str	r5, [r4, #20]
 80231bc:	444e      	add	r6, r9
 80231be:	eba5 0509 	sub.w	r5, r5, r9
 80231c2:	6026      	str	r6, [r4, #0]
 80231c4:	60a5      	str	r5, [r4, #8]
 80231c6:	463e      	mov	r6, r7
 80231c8:	42be      	cmp	r6, r7
 80231ca:	d900      	bls.n	80231ce <__ssputs_r+0x72>
 80231cc:	463e      	mov	r6, r7
 80231ce:	6820      	ldr	r0, [r4, #0]
 80231d0:	4632      	mov	r2, r6
 80231d2:	4641      	mov	r1, r8
 80231d4:	f000 fd28 	bl	8023c28 <memmove>
 80231d8:	68a3      	ldr	r3, [r4, #8]
 80231da:	1b9b      	subs	r3, r3, r6
 80231dc:	60a3      	str	r3, [r4, #8]
 80231de:	6823      	ldr	r3, [r4, #0]
 80231e0:	4433      	add	r3, r6
 80231e2:	6023      	str	r3, [r4, #0]
 80231e4:	2000      	movs	r0, #0
 80231e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80231ea:	462a      	mov	r2, r5
 80231ec:	f000 fd36 	bl	8023c5c <_realloc_r>
 80231f0:	4606      	mov	r6, r0
 80231f2:	2800      	cmp	r0, #0
 80231f4:	d1e0      	bne.n	80231b8 <__ssputs_r+0x5c>
 80231f6:	6921      	ldr	r1, [r4, #16]
 80231f8:	4650      	mov	r0, sl
 80231fa:	f7ff ff65 	bl	80230c8 <_free_r>
 80231fe:	230c      	movs	r3, #12
 8023200:	f8ca 3000 	str.w	r3, [sl]
 8023204:	89a3      	ldrh	r3, [r4, #12]
 8023206:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802320a:	81a3      	strh	r3, [r4, #12]
 802320c:	f04f 30ff 	mov.w	r0, #4294967295
 8023210:	e7e9      	b.n	80231e6 <__ssputs_r+0x8a>
	...

08023214 <_svfiprintf_r>:
 8023214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023218:	4698      	mov	r8, r3
 802321a:	898b      	ldrh	r3, [r1, #12]
 802321c:	061b      	lsls	r3, r3, #24
 802321e:	b09d      	sub	sp, #116	@ 0x74
 8023220:	4607      	mov	r7, r0
 8023222:	460d      	mov	r5, r1
 8023224:	4614      	mov	r4, r2
 8023226:	d510      	bpl.n	802324a <_svfiprintf_r+0x36>
 8023228:	690b      	ldr	r3, [r1, #16]
 802322a:	b973      	cbnz	r3, 802324a <_svfiprintf_r+0x36>
 802322c:	2140      	movs	r1, #64	@ 0x40
 802322e:	f7ff fbcb 	bl	80229c8 <_malloc_r>
 8023232:	6028      	str	r0, [r5, #0]
 8023234:	6128      	str	r0, [r5, #16]
 8023236:	b930      	cbnz	r0, 8023246 <_svfiprintf_r+0x32>
 8023238:	230c      	movs	r3, #12
 802323a:	603b      	str	r3, [r7, #0]
 802323c:	f04f 30ff 	mov.w	r0, #4294967295
 8023240:	b01d      	add	sp, #116	@ 0x74
 8023242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023246:	2340      	movs	r3, #64	@ 0x40
 8023248:	616b      	str	r3, [r5, #20]
 802324a:	2300      	movs	r3, #0
 802324c:	9309      	str	r3, [sp, #36]	@ 0x24
 802324e:	2320      	movs	r3, #32
 8023250:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023254:	f8cd 800c 	str.w	r8, [sp, #12]
 8023258:	2330      	movs	r3, #48	@ 0x30
 802325a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80233f8 <_svfiprintf_r+0x1e4>
 802325e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023262:	f04f 0901 	mov.w	r9, #1
 8023266:	4623      	mov	r3, r4
 8023268:	469a      	mov	sl, r3
 802326a:	f813 2b01 	ldrb.w	r2, [r3], #1
 802326e:	b10a      	cbz	r2, 8023274 <_svfiprintf_r+0x60>
 8023270:	2a25      	cmp	r2, #37	@ 0x25
 8023272:	d1f9      	bne.n	8023268 <_svfiprintf_r+0x54>
 8023274:	ebba 0b04 	subs.w	fp, sl, r4
 8023278:	d00b      	beq.n	8023292 <_svfiprintf_r+0x7e>
 802327a:	465b      	mov	r3, fp
 802327c:	4622      	mov	r2, r4
 802327e:	4629      	mov	r1, r5
 8023280:	4638      	mov	r0, r7
 8023282:	f7ff ff6b 	bl	802315c <__ssputs_r>
 8023286:	3001      	adds	r0, #1
 8023288:	f000 80a7 	beq.w	80233da <_svfiprintf_r+0x1c6>
 802328c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802328e:	445a      	add	r2, fp
 8023290:	9209      	str	r2, [sp, #36]	@ 0x24
 8023292:	f89a 3000 	ldrb.w	r3, [sl]
 8023296:	2b00      	cmp	r3, #0
 8023298:	f000 809f 	beq.w	80233da <_svfiprintf_r+0x1c6>
 802329c:	2300      	movs	r3, #0
 802329e:	f04f 32ff 	mov.w	r2, #4294967295
 80232a2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80232a6:	f10a 0a01 	add.w	sl, sl, #1
 80232aa:	9304      	str	r3, [sp, #16]
 80232ac:	9307      	str	r3, [sp, #28]
 80232ae:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80232b2:	931a      	str	r3, [sp, #104]	@ 0x68
 80232b4:	4654      	mov	r4, sl
 80232b6:	2205      	movs	r2, #5
 80232b8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80232bc:	484e      	ldr	r0, [pc, #312]	@ (80233f8 <_svfiprintf_r+0x1e4>)
 80232be:	f7dc ff9f 	bl	8000200 <memchr>
 80232c2:	9a04      	ldr	r2, [sp, #16]
 80232c4:	b9d8      	cbnz	r0, 80232fe <_svfiprintf_r+0xea>
 80232c6:	06d0      	lsls	r0, r2, #27
 80232c8:	bf44      	itt	mi
 80232ca:	2320      	movmi	r3, #32
 80232cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80232d0:	0711      	lsls	r1, r2, #28
 80232d2:	bf44      	itt	mi
 80232d4:	232b      	movmi	r3, #43	@ 0x2b
 80232d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80232da:	f89a 3000 	ldrb.w	r3, [sl]
 80232de:	2b2a      	cmp	r3, #42	@ 0x2a
 80232e0:	d015      	beq.n	802330e <_svfiprintf_r+0xfa>
 80232e2:	9a07      	ldr	r2, [sp, #28]
 80232e4:	4654      	mov	r4, sl
 80232e6:	2000      	movs	r0, #0
 80232e8:	f04f 0c0a 	mov.w	ip, #10
 80232ec:	4621      	mov	r1, r4
 80232ee:	f811 3b01 	ldrb.w	r3, [r1], #1
 80232f2:	3b30      	subs	r3, #48	@ 0x30
 80232f4:	2b09      	cmp	r3, #9
 80232f6:	d94b      	bls.n	8023390 <_svfiprintf_r+0x17c>
 80232f8:	b1b0      	cbz	r0, 8023328 <_svfiprintf_r+0x114>
 80232fa:	9207      	str	r2, [sp, #28]
 80232fc:	e014      	b.n	8023328 <_svfiprintf_r+0x114>
 80232fe:	eba0 0308 	sub.w	r3, r0, r8
 8023302:	fa09 f303 	lsl.w	r3, r9, r3
 8023306:	4313      	orrs	r3, r2
 8023308:	9304      	str	r3, [sp, #16]
 802330a:	46a2      	mov	sl, r4
 802330c:	e7d2      	b.n	80232b4 <_svfiprintf_r+0xa0>
 802330e:	9b03      	ldr	r3, [sp, #12]
 8023310:	1d19      	adds	r1, r3, #4
 8023312:	681b      	ldr	r3, [r3, #0]
 8023314:	9103      	str	r1, [sp, #12]
 8023316:	2b00      	cmp	r3, #0
 8023318:	bfbb      	ittet	lt
 802331a:	425b      	neglt	r3, r3
 802331c:	f042 0202 	orrlt.w	r2, r2, #2
 8023320:	9307      	strge	r3, [sp, #28]
 8023322:	9307      	strlt	r3, [sp, #28]
 8023324:	bfb8      	it	lt
 8023326:	9204      	strlt	r2, [sp, #16]
 8023328:	7823      	ldrb	r3, [r4, #0]
 802332a:	2b2e      	cmp	r3, #46	@ 0x2e
 802332c:	d10a      	bne.n	8023344 <_svfiprintf_r+0x130>
 802332e:	7863      	ldrb	r3, [r4, #1]
 8023330:	2b2a      	cmp	r3, #42	@ 0x2a
 8023332:	d132      	bne.n	802339a <_svfiprintf_r+0x186>
 8023334:	9b03      	ldr	r3, [sp, #12]
 8023336:	1d1a      	adds	r2, r3, #4
 8023338:	681b      	ldr	r3, [r3, #0]
 802333a:	9203      	str	r2, [sp, #12]
 802333c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8023340:	3402      	adds	r4, #2
 8023342:	9305      	str	r3, [sp, #20]
 8023344:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8023408 <_svfiprintf_r+0x1f4>
 8023348:	7821      	ldrb	r1, [r4, #0]
 802334a:	2203      	movs	r2, #3
 802334c:	4650      	mov	r0, sl
 802334e:	f7dc ff57 	bl	8000200 <memchr>
 8023352:	b138      	cbz	r0, 8023364 <_svfiprintf_r+0x150>
 8023354:	9b04      	ldr	r3, [sp, #16]
 8023356:	eba0 000a 	sub.w	r0, r0, sl
 802335a:	2240      	movs	r2, #64	@ 0x40
 802335c:	4082      	lsls	r2, r0
 802335e:	4313      	orrs	r3, r2
 8023360:	3401      	adds	r4, #1
 8023362:	9304      	str	r3, [sp, #16]
 8023364:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023368:	4824      	ldr	r0, [pc, #144]	@ (80233fc <_svfiprintf_r+0x1e8>)
 802336a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802336e:	2206      	movs	r2, #6
 8023370:	f7dc ff46 	bl	8000200 <memchr>
 8023374:	2800      	cmp	r0, #0
 8023376:	d036      	beq.n	80233e6 <_svfiprintf_r+0x1d2>
 8023378:	4b21      	ldr	r3, [pc, #132]	@ (8023400 <_svfiprintf_r+0x1ec>)
 802337a:	bb1b      	cbnz	r3, 80233c4 <_svfiprintf_r+0x1b0>
 802337c:	9b03      	ldr	r3, [sp, #12]
 802337e:	3307      	adds	r3, #7
 8023380:	f023 0307 	bic.w	r3, r3, #7
 8023384:	3308      	adds	r3, #8
 8023386:	9303      	str	r3, [sp, #12]
 8023388:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802338a:	4433      	add	r3, r6
 802338c:	9309      	str	r3, [sp, #36]	@ 0x24
 802338e:	e76a      	b.n	8023266 <_svfiprintf_r+0x52>
 8023390:	fb0c 3202 	mla	r2, ip, r2, r3
 8023394:	460c      	mov	r4, r1
 8023396:	2001      	movs	r0, #1
 8023398:	e7a8      	b.n	80232ec <_svfiprintf_r+0xd8>
 802339a:	2300      	movs	r3, #0
 802339c:	3401      	adds	r4, #1
 802339e:	9305      	str	r3, [sp, #20]
 80233a0:	4619      	mov	r1, r3
 80233a2:	f04f 0c0a 	mov.w	ip, #10
 80233a6:	4620      	mov	r0, r4
 80233a8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80233ac:	3a30      	subs	r2, #48	@ 0x30
 80233ae:	2a09      	cmp	r2, #9
 80233b0:	d903      	bls.n	80233ba <_svfiprintf_r+0x1a6>
 80233b2:	2b00      	cmp	r3, #0
 80233b4:	d0c6      	beq.n	8023344 <_svfiprintf_r+0x130>
 80233b6:	9105      	str	r1, [sp, #20]
 80233b8:	e7c4      	b.n	8023344 <_svfiprintf_r+0x130>
 80233ba:	fb0c 2101 	mla	r1, ip, r1, r2
 80233be:	4604      	mov	r4, r0
 80233c0:	2301      	movs	r3, #1
 80233c2:	e7f0      	b.n	80233a6 <_svfiprintf_r+0x192>
 80233c4:	ab03      	add	r3, sp, #12
 80233c6:	9300      	str	r3, [sp, #0]
 80233c8:	462a      	mov	r2, r5
 80233ca:	4b0e      	ldr	r3, [pc, #56]	@ (8023404 <_svfiprintf_r+0x1f0>)
 80233cc:	a904      	add	r1, sp, #16
 80233ce:	4638      	mov	r0, r7
 80233d0:	f3af 8000 	nop.w
 80233d4:	1c42      	adds	r2, r0, #1
 80233d6:	4606      	mov	r6, r0
 80233d8:	d1d6      	bne.n	8023388 <_svfiprintf_r+0x174>
 80233da:	89ab      	ldrh	r3, [r5, #12]
 80233dc:	065b      	lsls	r3, r3, #25
 80233de:	f53f af2d 	bmi.w	802323c <_svfiprintf_r+0x28>
 80233e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80233e4:	e72c      	b.n	8023240 <_svfiprintf_r+0x2c>
 80233e6:	ab03      	add	r3, sp, #12
 80233e8:	9300      	str	r3, [sp, #0]
 80233ea:	462a      	mov	r2, r5
 80233ec:	4b05      	ldr	r3, [pc, #20]	@ (8023404 <_svfiprintf_r+0x1f0>)
 80233ee:	a904      	add	r1, sp, #16
 80233f0:	4638      	mov	r0, r7
 80233f2:	f000 f9bb 	bl	802376c <_printf_i>
 80233f6:	e7ed      	b.n	80233d4 <_svfiprintf_r+0x1c0>
 80233f8:	080248b1 	.word	0x080248b1
 80233fc:	080248bb 	.word	0x080248bb
 8023400:	00000000 	.word	0x00000000
 8023404:	0802315d 	.word	0x0802315d
 8023408:	080248b7 	.word	0x080248b7

0802340c <__sfputc_r>:
 802340c:	6893      	ldr	r3, [r2, #8]
 802340e:	3b01      	subs	r3, #1
 8023410:	2b00      	cmp	r3, #0
 8023412:	b410      	push	{r4}
 8023414:	6093      	str	r3, [r2, #8]
 8023416:	da08      	bge.n	802342a <__sfputc_r+0x1e>
 8023418:	6994      	ldr	r4, [r2, #24]
 802341a:	42a3      	cmp	r3, r4
 802341c:	db01      	blt.n	8023422 <__sfputc_r+0x16>
 802341e:	290a      	cmp	r1, #10
 8023420:	d103      	bne.n	802342a <__sfputc_r+0x1e>
 8023422:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023426:	f000 bb6b 	b.w	8023b00 <__swbuf_r>
 802342a:	6813      	ldr	r3, [r2, #0]
 802342c:	1c58      	adds	r0, r3, #1
 802342e:	6010      	str	r0, [r2, #0]
 8023430:	7019      	strb	r1, [r3, #0]
 8023432:	4608      	mov	r0, r1
 8023434:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023438:	4770      	bx	lr

0802343a <__sfputs_r>:
 802343a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802343c:	4606      	mov	r6, r0
 802343e:	460f      	mov	r7, r1
 8023440:	4614      	mov	r4, r2
 8023442:	18d5      	adds	r5, r2, r3
 8023444:	42ac      	cmp	r4, r5
 8023446:	d101      	bne.n	802344c <__sfputs_r+0x12>
 8023448:	2000      	movs	r0, #0
 802344a:	e007      	b.n	802345c <__sfputs_r+0x22>
 802344c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023450:	463a      	mov	r2, r7
 8023452:	4630      	mov	r0, r6
 8023454:	f7ff ffda 	bl	802340c <__sfputc_r>
 8023458:	1c43      	adds	r3, r0, #1
 802345a:	d1f3      	bne.n	8023444 <__sfputs_r+0xa>
 802345c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023460 <_vfiprintf_r>:
 8023460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023464:	460d      	mov	r5, r1
 8023466:	b09d      	sub	sp, #116	@ 0x74
 8023468:	4614      	mov	r4, r2
 802346a:	4698      	mov	r8, r3
 802346c:	4606      	mov	r6, r0
 802346e:	b118      	cbz	r0, 8023478 <_vfiprintf_r+0x18>
 8023470:	6a03      	ldr	r3, [r0, #32]
 8023472:	b90b      	cbnz	r3, 8023478 <_vfiprintf_r+0x18>
 8023474:	f7ff fbce 	bl	8022c14 <__sinit>
 8023478:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802347a:	07d9      	lsls	r1, r3, #31
 802347c:	d405      	bmi.n	802348a <_vfiprintf_r+0x2a>
 802347e:	89ab      	ldrh	r3, [r5, #12]
 8023480:	059a      	lsls	r2, r3, #22
 8023482:	d402      	bmi.n	802348a <_vfiprintf_r+0x2a>
 8023484:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023486:	f7ff fdb2 	bl	8022fee <__retarget_lock_acquire_recursive>
 802348a:	89ab      	ldrh	r3, [r5, #12]
 802348c:	071b      	lsls	r3, r3, #28
 802348e:	d501      	bpl.n	8023494 <_vfiprintf_r+0x34>
 8023490:	692b      	ldr	r3, [r5, #16]
 8023492:	b99b      	cbnz	r3, 80234bc <_vfiprintf_r+0x5c>
 8023494:	4629      	mov	r1, r5
 8023496:	4630      	mov	r0, r6
 8023498:	f000 fb70 	bl	8023b7c <__swsetup_r>
 802349c:	b170      	cbz	r0, 80234bc <_vfiprintf_r+0x5c>
 802349e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80234a0:	07dc      	lsls	r4, r3, #31
 80234a2:	d504      	bpl.n	80234ae <_vfiprintf_r+0x4e>
 80234a4:	f04f 30ff 	mov.w	r0, #4294967295
 80234a8:	b01d      	add	sp, #116	@ 0x74
 80234aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80234ae:	89ab      	ldrh	r3, [r5, #12]
 80234b0:	0598      	lsls	r0, r3, #22
 80234b2:	d4f7      	bmi.n	80234a4 <_vfiprintf_r+0x44>
 80234b4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80234b6:	f7ff fd9b 	bl	8022ff0 <__retarget_lock_release_recursive>
 80234ba:	e7f3      	b.n	80234a4 <_vfiprintf_r+0x44>
 80234bc:	2300      	movs	r3, #0
 80234be:	9309      	str	r3, [sp, #36]	@ 0x24
 80234c0:	2320      	movs	r3, #32
 80234c2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80234c6:	f8cd 800c 	str.w	r8, [sp, #12]
 80234ca:	2330      	movs	r3, #48	@ 0x30
 80234cc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802367c <_vfiprintf_r+0x21c>
 80234d0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80234d4:	f04f 0901 	mov.w	r9, #1
 80234d8:	4623      	mov	r3, r4
 80234da:	469a      	mov	sl, r3
 80234dc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80234e0:	b10a      	cbz	r2, 80234e6 <_vfiprintf_r+0x86>
 80234e2:	2a25      	cmp	r2, #37	@ 0x25
 80234e4:	d1f9      	bne.n	80234da <_vfiprintf_r+0x7a>
 80234e6:	ebba 0b04 	subs.w	fp, sl, r4
 80234ea:	d00b      	beq.n	8023504 <_vfiprintf_r+0xa4>
 80234ec:	465b      	mov	r3, fp
 80234ee:	4622      	mov	r2, r4
 80234f0:	4629      	mov	r1, r5
 80234f2:	4630      	mov	r0, r6
 80234f4:	f7ff ffa1 	bl	802343a <__sfputs_r>
 80234f8:	3001      	adds	r0, #1
 80234fa:	f000 80a7 	beq.w	802364c <_vfiprintf_r+0x1ec>
 80234fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023500:	445a      	add	r2, fp
 8023502:	9209      	str	r2, [sp, #36]	@ 0x24
 8023504:	f89a 3000 	ldrb.w	r3, [sl]
 8023508:	2b00      	cmp	r3, #0
 802350a:	f000 809f 	beq.w	802364c <_vfiprintf_r+0x1ec>
 802350e:	2300      	movs	r3, #0
 8023510:	f04f 32ff 	mov.w	r2, #4294967295
 8023514:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023518:	f10a 0a01 	add.w	sl, sl, #1
 802351c:	9304      	str	r3, [sp, #16]
 802351e:	9307      	str	r3, [sp, #28]
 8023520:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8023524:	931a      	str	r3, [sp, #104]	@ 0x68
 8023526:	4654      	mov	r4, sl
 8023528:	2205      	movs	r2, #5
 802352a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802352e:	4853      	ldr	r0, [pc, #332]	@ (802367c <_vfiprintf_r+0x21c>)
 8023530:	f7dc fe66 	bl	8000200 <memchr>
 8023534:	9a04      	ldr	r2, [sp, #16]
 8023536:	b9d8      	cbnz	r0, 8023570 <_vfiprintf_r+0x110>
 8023538:	06d1      	lsls	r1, r2, #27
 802353a:	bf44      	itt	mi
 802353c:	2320      	movmi	r3, #32
 802353e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023542:	0713      	lsls	r3, r2, #28
 8023544:	bf44      	itt	mi
 8023546:	232b      	movmi	r3, #43	@ 0x2b
 8023548:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802354c:	f89a 3000 	ldrb.w	r3, [sl]
 8023550:	2b2a      	cmp	r3, #42	@ 0x2a
 8023552:	d015      	beq.n	8023580 <_vfiprintf_r+0x120>
 8023554:	9a07      	ldr	r2, [sp, #28]
 8023556:	4654      	mov	r4, sl
 8023558:	2000      	movs	r0, #0
 802355a:	f04f 0c0a 	mov.w	ip, #10
 802355e:	4621      	mov	r1, r4
 8023560:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023564:	3b30      	subs	r3, #48	@ 0x30
 8023566:	2b09      	cmp	r3, #9
 8023568:	d94b      	bls.n	8023602 <_vfiprintf_r+0x1a2>
 802356a:	b1b0      	cbz	r0, 802359a <_vfiprintf_r+0x13a>
 802356c:	9207      	str	r2, [sp, #28]
 802356e:	e014      	b.n	802359a <_vfiprintf_r+0x13a>
 8023570:	eba0 0308 	sub.w	r3, r0, r8
 8023574:	fa09 f303 	lsl.w	r3, r9, r3
 8023578:	4313      	orrs	r3, r2
 802357a:	9304      	str	r3, [sp, #16]
 802357c:	46a2      	mov	sl, r4
 802357e:	e7d2      	b.n	8023526 <_vfiprintf_r+0xc6>
 8023580:	9b03      	ldr	r3, [sp, #12]
 8023582:	1d19      	adds	r1, r3, #4
 8023584:	681b      	ldr	r3, [r3, #0]
 8023586:	9103      	str	r1, [sp, #12]
 8023588:	2b00      	cmp	r3, #0
 802358a:	bfbb      	ittet	lt
 802358c:	425b      	neglt	r3, r3
 802358e:	f042 0202 	orrlt.w	r2, r2, #2
 8023592:	9307      	strge	r3, [sp, #28]
 8023594:	9307      	strlt	r3, [sp, #28]
 8023596:	bfb8      	it	lt
 8023598:	9204      	strlt	r2, [sp, #16]
 802359a:	7823      	ldrb	r3, [r4, #0]
 802359c:	2b2e      	cmp	r3, #46	@ 0x2e
 802359e:	d10a      	bne.n	80235b6 <_vfiprintf_r+0x156>
 80235a0:	7863      	ldrb	r3, [r4, #1]
 80235a2:	2b2a      	cmp	r3, #42	@ 0x2a
 80235a4:	d132      	bne.n	802360c <_vfiprintf_r+0x1ac>
 80235a6:	9b03      	ldr	r3, [sp, #12]
 80235a8:	1d1a      	adds	r2, r3, #4
 80235aa:	681b      	ldr	r3, [r3, #0]
 80235ac:	9203      	str	r2, [sp, #12]
 80235ae:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80235b2:	3402      	adds	r4, #2
 80235b4:	9305      	str	r3, [sp, #20]
 80235b6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802368c <_vfiprintf_r+0x22c>
 80235ba:	7821      	ldrb	r1, [r4, #0]
 80235bc:	2203      	movs	r2, #3
 80235be:	4650      	mov	r0, sl
 80235c0:	f7dc fe1e 	bl	8000200 <memchr>
 80235c4:	b138      	cbz	r0, 80235d6 <_vfiprintf_r+0x176>
 80235c6:	9b04      	ldr	r3, [sp, #16]
 80235c8:	eba0 000a 	sub.w	r0, r0, sl
 80235cc:	2240      	movs	r2, #64	@ 0x40
 80235ce:	4082      	lsls	r2, r0
 80235d0:	4313      	orrs	r3, r2
 80235d2:	3401      	adds	r4, #1
 80235d4:	9304      	str	r3, [sp, #16]
 80235d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80235da:	4829      	ldr	r0, [pc, #164]	@ (8023680 <_vfiprintf_r+0x220>)
 80235dc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80235e0:	2206      	movs	r2, #6
 80235e2:	f7dc fe0d 	bl	8000200 <memchr>
 80235e6:	2800      	cmp	r0, #0
 80235e8:	d03f      	beq.n	802366a <_vfiprintf_r+0x20a>
 80235ea:	4b26      	ldr	r3, [pc, #152]	@ (8023684 <_vfiprintf_r+0x224>)
 80235ec:	bb1b      	cbnz	r3, 8023636 <_vfiprintf_r+0x1d6>
 80235ee:	9b03      	ldr	r3, [sp, #12]
 80235f0:	3307      	adds	r3, #7
 80235f2:	f023 0307 	bic.w	r3, r3, #7
 80235f6:	3308      	adds	r3, #8
 80235f8:	9303      	str	r3, [sp, #12]
 80235fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80235fc:	443b      	add	r3, r7
 80235fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8023600:	e76a      	b.n	80234d8 <_vfiprintf_r+0x78>
 8023602:	fb0c 3202 	mla	r2, ip, r2, r3
 8023606:	460c      	mov	r4, r1
 8023608:	2001      	movs	r0, #1
 802360a:	e7a8      	b.n	802355e <_vfiprintf_r+0xfe>
 802360c:	2300      	movs	r3, #0
 802360e:	3401      	adds	r4, #1
 8023610:	9305      	str	r3, [sp, #20]
 8023612:	4619      	mov	r1, r3
 8023614:	f04f 0c0a 	mov.w	ip, #10
 8023618:	4620      	mov	r0, r4
 802361a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802361e:	3a30      	subs	r2, #48	@ 0x30
 8023620:	2a09      	cmp	r2, #9
 8023622:	d903      	bls.n	802362c <_vfiprintf_r+0x1cc>
 8023624:	2b00      	cmp	r3, #0
 8023626:	d0c6      	beq.n	80235b6 <_vfiprintf_r+0x156>
 8023628:	9105      	str	r1, [sp, #20]
 802362a:	e7c4      	b.n	80235b6 <_vfiprintf_r+0x156>
 802362c:	fb0c 2101 	mla	r1, ip, r1, r2
 8023630:	4604      	mov	r4, r0
 8023632:	2301      	movs	r3, #1
 8023634:	e7f0      	b.n	8023618 <_vfiprintf_r+0x1b8>
 8023636:	ab03      	add	r3, sp, #12
 8023638:	9300      	str	r3, [sp, #0]
 802363a:	462a      	mov	r2, r5
 802363c:	4b12      	ldr	r3, [pc, #72]	@ (8023688 <_vfiprintf_r+0x228>)
 802363e:	a904      	add	r1, sp, #16
 8023640:	4630      	mov	r0, r6
 8023642:	f3af 8000 	nop.w
 8023646:	4607      	mov	r7, r0
 8023648:	1c78      	adds	r0, r7, #1
 802364a:	d1d6      	bne.n	80235fa <_vfiprintf_r+0x19a>
 802364c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802364e:	07d9      	lsls	r1, r3, #31
 8023650:	d405      	bmi.n	802365e <_vfiprintf_r+0x1fe>
 8023652:	89ab      	ldrh	r3, [r5, #12]
 8023654:	059a      	lsls	r2, r3, #22
 8023656:	d402      	bmi.n	802365e <_vfiprintf_r+0x1fe>
 8023658:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802365a:	f7ff fcc9 	bl	8022ff0 <__retarget_lock_release_recursive>
 802365e:	89ab      	ldrh	r3, [r5, #12]
 8023660:	065b      	lsls	r3, r3, #25
 8023662:	f53f af1f 	bmi.w	80234a4 <_vfiprintf_r+0x44>
 8023666:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8023668:	e71e      	b.n	80234a8 <_vfiprintf_r+0x48>
 802366a:	ab03      	add	r3, sp, #12
 802366c:	9300      	str	r3, [sp, #0]
 802366e:	462a      	mov	r2, r5
 8023670:	4b05      	ldr	r3, [pc, #20]	@ (8023688 <_vfiprintf_r+0x228>)
 8023672:	a904      	add	r1, sp, #16
 8023674:	4630      	mov	r0, r6
 8023676:	f000 f879 	bl	802376c <_printf_i>
 802367a:	e7e4      	b.n	8023646 <_vfiprintf_r+0x1e6>
 802367c:	080248b1 	.word	0x080248b1
 8023680:	080248bb 	.word	0x080248bb
 8023684:	00000000 	.word	0x00000000
 8023688:	0802343b 	.word	0x0802343b
 802368c:	080248b7 	.word	0x080248b7

08023690 <_printf_common>:
 8023690:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023694:	4616      	mov	r6, r2
 8023696:	4698      	mov	r8, r3
 8023698:	688a      	ldr	r2, [r1, #8]
 802369a:	690b      	ldr	r3, [r1, #16]
 802369c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80236a0:	4293      	cmp	r3, r2
 80236a2:	bfb8      	it	lt
 80236a4:	4613      	movlt	r3, r2
 80236a6:	6033      	str	r3, [r6, #0]
 80236a8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80236ac:	4607      	mov	r7, r0
 80236ae:	460c      	mov	r4, r1
 80236b0:	b10a      	cbz	r2, 80236b6 <_printf_common+0x26>
 80236b2:	3301      	adds	r3, #1
 80236b4:	6033      	str	r3, [r6, #0]
 80236b6:	6823      	ldr	r3, [r4, #0]
 80236b8:	0699      	lsls	r1, r3, #26
 80236ba:	bf42      	ittt	mi
 80236bc:	6833      	ldrmi	r3, [r6, #0]
 80236be:	3302      	addmi	r3, #2
 80236c0:	6033      	strmi	r3, [r6, #0]
 80236c2:	6825      	ldr	r5, [r4, #0]
 80236c4:	f015 0506 	ands.w	r5, r5, #6
 80236c8:	d106      	bne.n	80236d8 <_printf_common+0x48>
 80236ca:	f104 0a19 	add.w	sl, r4, #25
 80236ce:	68e3      	ldr	r3, [r4, #12]
 80236d0:	6832      	ldr	r2, [r6, #0]
 80236d2:	1a9b      	subs	r3, r3, r2
 80236d4:	42ab      	cmp	r3, r5
 80236d6:	dc26      	bgt.n	8023726 <_printf_common+0x96>
 80236d8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80236dc:	6822      	ldr	r2, [r4, #0]
 80236de:	3b00      	subs	r3, #0
 80236e0:	bf18      	it	ne
 80236e2:	2301      	movne	r3, #1
 80236e4:	0692      	lsls	r2, r2, #26
 80236e6:	d42b      	bmi.n	8023740 <_printf_common+0xb0>
 80236e8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80236ec:	4641      	mov	r1, r8
 80236ee:	4638      	mov	r0, r7
 80236f0:	47c8      	blx	r9
 80236f2:	3001      	adds	r0, #1
 80236f4:	d01e      	beq.n	8023734 <_printf_common+0xa4>
 80236f6:	6823      	ldr	r3, [r4, #0]
 80236f8:	6922      	ldr	r2, [r4, #16]
 80236fa:	f003 0306 	and.w	r3, r3, #6
 80236fe:	2b04      	cmp	r3, #4
 8023700:	bf02      	ittt	eq
 8023702:	68e5      	ldreq	r5, [r4, #12]
 8023704:	6833      	ldreq	r3, [r6, #0]
 8023706:	1aed      	subeq	r5, r5, r3
 8023708:	68a3      	ldr	r3, [r4, #8]
 802370a:	bf0c      	ite	eq
 802370c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023710:	2500      	movne	r5, #0
 8023712:	4293      	cmp	r3, r2
 8023714:	bfc4      	itt	gt
 8023716:	1a9b      	subgt	r3, r3, r2
 8023718:	18ed      	addgt	r5, r5, r3
 802371a:	2600      	movs	r6, #0
 802371c:	341a      	adds	r4, #26
 802371e:	42b5      	cmp	r5, r6
 8023720:	d11a      	bne.n	8023758 <_printf_common+0xc8>
 8023722:	2000      	movs	r0, #0
 8023724:	e008      	b.n	8023738 <_printf_common+0xa8>
 8023726:	2301      	movs	r3, #1
 8023728:	4652      	mov	r2, sl
 802372a:	4641      	mov	r1, r8
 802372c:	4638      	mov	r0, r7
 802372e:	47c8      	blx	r9
 8023730:	3001      	adds	r0, #1
 8023732:	d103      	bne.n	802373c <_printf_common+0xac>
 8023734:	f04f 30ff 	mov.w	r0, #4294967295
 8023738:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802373c:	3501      	adds	r5, #1
 802373e:	e7c6      	b.n	80236ce <_printf_common+0x3e>
 8023740:	18e1      	adds	r1, r4, r3
 8023742:	1c5a      	adds	r2, r3, #1
 8023744:	2030      	movs	r0, #48	@ 0x30
 8023746:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802374a:	4422      	add	r2, r4
 802374c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8023750:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8023754:	3302      	adds	r3, #2
 8023756:	e7c7      	b.n	80236e8 <_printf_common+0x58>
 8023758:	2301      	movs	r3, #1
 802375a:	4622      	mov	r2, r4
 802375c:	4641      	mov	r1, r8
 802375e:	4638      	mov	r0, r7
 8023760:	47c8      	blx	r9
 8023762:	3001      	adds	r0, #1
 8023764:	d0e6      	beq.n	8023734 <_printf_common+0xa4>
 8023766:	3601      	adds	r6, #1
 8023768:	e7d9      	b.n	802371e <_printf_common+0x8e>
	...

0802376c <_printf_i>:
 802376c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023770:	7e0f      	ldrb	r7, [r1, #24]
 8023772:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023774:	2f78      	cmp	r7, #120	@ 0x78
 8023776:	4691      	mov	r9, r2
 8023778:	4680      	mov	r8, r0
 802377a:	460c      	mov	r4, r1
 802377c:	469a      	mov	sl, r3
 802377e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8023782:	d807      	bhi.n	8023794 <_printf_i+0x28>
 8023784:	2f62      	cmp	r7, #98	@ 0x62
 8023786:	d80a      	bhi.n	802379e <_printf_i+0x32>
 8023788:	2f00      	cmp	r7, #0
 802378a:	f000 80d1 	beq.w	8023930 <_printf_i+0x1c4>
 802378e:	2f58      	cmp	r7, #88	@ 0x58
 8023790:	f000 80b8 	beq.w	8023904 <_printf_i+0x198>
 8023794:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023798:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802379c:	e03a      	b.n	8023814 <_printf_i+0xa8>
 802379e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80237a2:	2b15      	cmp	r3, #21
 80237a4:	d8f6      	bhi.n	8023794 <_printf_i+0x28>
 80237a6:	a101      	add	r1, pc, #4	@ (adr r1, 80237ac <_printf_i+0x40>)
 80237a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80237ac:	08023805 	.word	0x08023805
 80237b0:	08023819 	.word	0x08023819
 80237b4:	08023795 	.word	0x08023795
 80237b8:	08023795 	.word	0x08023795
 80237bc:	08023795 	.word	0x08023795
 80237c0:	08023795 	.word	0x08023795
 80237c4:	08023819 	.word	0x08023819
 80237c8:	08023795 	.word	0x08023795
 80237cc:	08023795 	.word	0x08023795
 80237d0:	08023795 	.word	0x08023795
 80237d4:	08023795 	.word	0x08023795
 80237d8:	08023917 	.word	0x08023917
 80237dc:	08023843 	.word	0x08023843
 80237e0:	080238d1 	.word	0x080238d1
 80237e4:	08023795 	.word	0x08023795
 80237e8:	08023795 	.word	0x08023795
 80237ec:	08023939 	.word	0x08023939
 80237f0:	08023795 	.word	0x08023795
 80237f4:	08023843 	.word	0x08023843
 80237f8:	08023795 	.word	0x08023795
 80237fc:	08023795 	.word	0x08023795
 8023800:	080238d9 	.word	0x080238d9
 8023804:	6833      	ldr	r3, [r6, #0]
 8023806:	1d1a      	adds	r2, r3, #4
 8023808:	681b      	ldr	r3, [r3, #0]
 802380a:	6032      	str	r2, [r6, #0]
 802380c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023810:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8023814:	2301      	movs	r3, #1
 8023816:	e09c      	b.n	8023952 <_printf_i+0x1e6>
 8023818:	6833      	ldr	r3, [r6, #0]
 802381a:	6820      	ldr	r0, [r4, #0]
 802381c:	1d19      	adds	r1, r3, #4
 802381e:	6031      	str	r1, [r6, #0]
 8023820:	0606      	lsls	r6, r0, #24
 8023822:	d501      	bpl.n	8023828 <_printf_i+0xbc>
 8023824:	681d      	ldr	r5, [r3, #0]
 8023826:	e003      	b.n	8023830 <_printf_i+0xc4>
 8023828:	0645      	lsls	r5, r0, #25
 802382a:	d5fb      	bpl.n	8023824 <_printf_i+0xb8>
 802382c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8023830:	2d00      	cmp	r5, #0
 8023832:	da03      	bge.n	802383c <_printf_i+0xd0>
 8023834:	232d      	movs	r3, #45	@ 0x2d
 8023836:	426d      	negs	r5, r5
 8023838:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802383c:	4858      	ldr	r0, [pc, #352]	@ (80239a0 <_printf_i+0x234>)
 802383e:	230a      	movs	r3, #10
 8023840:	e011      	b.n	8023866 <_printf_i+0xfa>
 8023842:	6821      	ldr	r1, [r4, #0]
 8023844:	6833      	ldr	r3, [r6, #0]
 8023846:	0608      	lsls	r0, r1, #24
 8023848:	f853 5b04 	ldr.w	r5, [r3], #4
 802384c:	d402      	bmi.n	8023854 <_printf_i+0xe8>
 802384e:	0649      	lsls	r1, r1, #25
 8023850:	bf48      	it	mi
 8023852:	b2ad      	uxthmi	r5, r5
 8023854:	2f6f      	cmp	r7, #111	@ 0x6f
 8023856:	4852      	ldr	r0, [pc, #328]	@ (80239a0 <_printf_i+0x234>)
 8023858:	6033      	str	r3, [r6, #0]
 802385a:	bf14      	ite	ne
 802385c:	230a      	movne	r3, #10
 802385e:	2308      	moveq	r3, #8
 8023860:	2100      	movs	r1, #0
 8023862:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8023866:	6866      	ldr	r6, [r4, #4]
 8023868:	60a6      	str	r6, [r4, #8]
 802386a:	2e00      	cmp	r6, #0
 802386c:	db05      	blt.n	802387a <_printf_i+0x10e>
 802386e:	6821      	ldr	r1, [r4, #0]
 8023870:	432e      	orrs	r6, r5
 8023872:	f021 0104 	bic.w	r1, r1, #4
 8023876:	6021      	str	r1, [r4, #0]
 8023878:	d04b      	beq.n	8023912 <_printf_i+0x1a6>
 802387a:	4616      	mov	r6, r2
 802387c:	fbb5 f1f3 	udiv	r1, r5, r3
 8023880:	fb03 5711 	mls	r7, r3, r1, r5
 8023884:	5dc7      	ldrb	r7, [r0, r7]
 8023886:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802388a:	462f      	mov	r7, r5
 802388c:	42bb      	cmp	r3, r7
 802388e:	460d      	mov	r5, r1
 8023890:	d9f4      	bls.n	802387c <_printf_i+0x110>
 8023892:	2b08      	cmp	r3, #8
 8023894:	d10b      	bne.n	80238ae <_printf_i+0x142>
 8023896:	6823      	ldr	r3, [r4, #0]
 8023898:	07df      	lsls	r7, r3, #31
 802389a:	d508      	bpl.n	80238ae <_printf_i+0x142>
 802389c:	6923      	ldr	r3, [r4, #16]
 802389e:	6861      	ldr	r1, [r4, #4]
 80238a0:	4299      	cmp	r1, r3
 80238a2:	bfde      	ittt	le
 80238a4:	2330      	movle	r3, #48	@ 0x30
 80238a6:	f806 3c01 	strble.w	r3, [r6, #-1]
 80238aa:	f106 36ff 	addle.w	r6, r6, #4294967295
 80238ae:	1b92      	subs	r2, r2, r6
 80238b0:	6122      	str	r2, [r4, #16]
 80238b2:	f8cd a000 	str.w	sl, [sp]
 80238b6:	464b      	mov	r3, r9
 80238b8:	aa03      	add	r2, sp, #12
 80238ba:	4621      	mov	r1, r4
 80238bc:	4640      	mov	r0, r8
 80238be:	f7ff fee7 	bl	8023690 <_printf_common>
 80238c2:	3001      	adds	r0, #1
 80238c4:	d14a      	bne.n	802395c <_printf_i+0x1f0>
 80238c6:	f04f 30ff 	mov.w	r0, #4294967295
 80238ca:	b004      	add	sp, #16
 80238cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80238d0:	6823      	ldr	r3, [r4, #0]
 80238d2:	f043 0320 	orr.w	r3, r3, #32
 80238d6:	6023      	str	r3, [r4, #0]
 80238d8:	4832      	ldr	r0, [pc, #200]	@ (80239a4 <_printf_i+0x238>)
 80238da:	2778      	movs	r7, #120	@ 0x78
 80238dc:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80238e0:	6823      	ldr	r3, [r4, #0]
 80238e2:	6831      	ldr	r1, [r6, #0]
 80238e4:	061f      	lsls	r7, r3, #24
 80238e6:	f851 5b04 	ldr.w	r5, [r1], #4
 80238ea:	d402      	bmi.n	80238f2 <_printf_i+0x186>
 80238ec:	065f      	lsls	r7, r3, #25
 80238ee:	bf48      	it	mi
 80238f0:	b2ad      	uxthmi	r5, r5
 80238f2:	6031      	str	r1, [r6, #0]
 80238f4:	07d9      	lsls	r1, r3, #31
 80238f6:	bf44      	itt	mi
 80238f8:	f043 0320 	orrmi.w	r3, r3, #32
 80238fc:	6023      	strmi	r3, [r4, #0]
 80238fe:	b11d      	cbz	r5, 8023908 <_printf_i+0x19c>
 8023900:	2310      	movs	r3, #16
 8023902:	e7ad      	b.n	8023860 <_printf_i+0xf4>
 8023904:	4826      	ldr	r0, [pc, #152]	@ (80239a0 <_printf_i+0x234>)
 8023906:	e7e9      	b.n	80238dc <_printf_i+0x170>
 8023908:	6823      	ldr	r3, [r4, #0]
 802390a:	f023 0320 	bic.w	r3, r3, #32
 802390e:	6023      	str	r3, [r4, #0]
 8023910:	e7f6      	b.n	8023900 <_printf_i+0x194>
 8023912:	4616      	mov	r6, r2
 8023914:	e7bd      	b.n	8023892 <_printf_i+0x126>
 8023916:	6833      	ldr	r3, [r6, #0]
 8023918:	6825      	ldr	r5, [r4, #0]
 802391a:	6961      	ldr	r1, [r4, #20]
 802391c:	1d18      	adds	r0, r3, #4
 802391e:	6030      	str	r0, [r6, #0]
 8023920:	062e      	lsls	r6, r5, #24
 8023922:	681b      	ldr	r3, [r3, #0]
 8023924:	d501      	bpl.n	802392a <_printf_i+0x1be>
 8023926:	6019      	str	r1, [r3, #0]
 8023928:	e002      	b.n	8023930 <_printf_i+0x1c4>
 802392a:	0668      	lsls	r0, r5, #25
 802392c:	d5fb      	bpl.n	8023926 <_printf_i+0x1ba>
 802392e:	8019      	strh	r1, [r3, #0]
 8023930:	2300      	movs	r3, #0
 8023932:	6123      	str	r3, [r4, #16]
 8023934:	4616      	mov	r6, r2
 8023936:	e7bc      	b.n	80238b2 <_printf_i+0x146>
 8023938:	6833      	ldr	r3, [r6, #0]
 802393a:	1d1a      	adds	r2, r3, #4
 802393c:	6032      	str	r2, [r6, #0]
 802393e:	681e      	ldr	r6, [r3, #0]
 8023940:	6862      	ldr	r2, [r4, #4]
 8023942:	2100      	movs	r1, #0
 8023944:	4630      	mov	r0, r6
 8023946:	f7dc fc5b 	bl	8000200 <memchr>
 802394a:	b108      	cbz	r0, 8023950 <_printf_i+0x1e4>
 802394c:	1b80      	subs	r0, r0, r6
 802394e:	6060      	str	r0, [r4, #4]
 8023950:	6863      	ldr	r3, [r4, #4]
 8023952:	6123      	str	r3, [r4, #16]
 8023954:	2300      	movs	r3, #0
 8023956:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802395a:	e7aa      	b.n	80238b2 <_printf_i+0x146>
 802395c:	6923      	ldr	r3, [r4, #16]
 802395e:	4632      	mov	r2, r6
 8023960:	4649      	mov	r1, r9
 8023962:	4640      	mov	r0, r8
 8023964:	47d0      	blx	sl
 8023966:	3001      	adds	r0, #1
 8023968:	d0ad      	beq.n	80238c6 <_printf_i+0x15a>
 802396a:	6823      	ldr	r3, [r4, #0]
 802396c:	079b      	lsls	r3, r3, #30
 802396e:	d413      	bmi.n	8023998 <_printf_i+0x22c>
 8023970:	68e0      	ldr	r0, [r4, #12]
 8023972:	9b03      	ldr	r3, [sp, #12]
 8023974:	4298      	cmp	r0, r3
 8023976:	bfb8      	it	lt
 8023978:	4618      	movlt	r0, r3
 802397a:	e7a6      	b.n	80238ca <_printf_i+0x15e>
 802397c:	2301      	movs	r3, #1
 802397e:	4632      	mov	r2, r6
 8023980:	4649      	mov	r1, r9
 8023982:	4640      	mov	r0, r8
 8023984:	47d0      	blx	sl
 8023986:	3001      	adds	r0, #1
 8023988:	d09d      	beq.n	80238c6 <_printf_i+0x15a>
 802398a:	3501      	adds	r5, #1
 802398c:	68e3      	ldr	r3, [r4, #12]
 802398e:	9903      	ldr	r1, [sp, #12]
 8023990:	1a5b      	subs	r3, r3, r1
 8023992:	42ab      	cmp	r3, r5
 8023994:	dcf2      	bgt.n	802397c <_printf_i+0x210>
 8023996:	e7eb      	b.n	8023970 <_printf_i+0x204>
 8023998:	2500      	movs	r5, #0
 802399a:	f104 0619 	add.w	r6, r4, #25
 802399e:	e7f5      	b.n	802398c <_printf_i+0x220>
 80239a0:	080248c2 	.word	0x080248c2
 80239a4:	080248d3 	.word	0x080248d3

080239a8 <__sflush_r>:
 80239a8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80239ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80239b0:	0716      	lsls	r6, r2, #28
 80239b2:	4605      	mov	r5, r0
 80239b4:	460c      	mov	r4, r1
 80239b6:	d454      	bmi.n	8023a62 <__sflush_r+0xba>
 80239b8:	684b      	ldr	r3, [r1, #4]
 80239ba:	2b00      	cmp	r3, #0
 80239bc:	dc02      	bgt.n	80239c4 <__sflush_r+0x1c>
 80239be:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80239c0:	2b00      	cmp	r3, #0
 80239c2:	dd48      	ble.n	8023a56 <__sflush_r+0xae>
 80239c4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80239c6:	2e00      	cmp	r6, #0
 80239c8:	d045      	beq.n	8023a56 <__sflush_r+0xae>
 80239ca:	2300      	movs	r3, #0
 80239cc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80239d0:	682f      	ldr	r7, [r5, #0]
 80239d2:	6a21      	ldr	r1, [r4, #32]
 80239d4:	602b      	str	r3, [r5, #0]
 80239d6:	d030      	beq.n	8023a3a <__sflush_r+0x92>
 80239d8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80239da:	89a3      	ldrh	r3, [r4, #12]
 80239dc:	0759      	lsls	r1, r3, #29
 80239de:	d505      	bpl.n	80239ec <__sflush_r+0x44>
 80239e0:	6863      	ldr	r3, [r4, #4]
 80239e2:	1ad2      	subs	r2, r2, r3
 80239e4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80239e6:	b10b      	cbz	r3, 80239ec <__sflush_r+0x44>
 80239e8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80239ea:	1ad2      	subs	r2, r2, r3
 80239ec:	2300      	movs	r3, #0
 80239ee:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80239f0:	6a21      	ldr	r1, [r4, #32]
 80239f2:	4628      	mov	r0, r5
 80239f4:	47b0      	blx	r6
 80239f6:	1c43      	adds	r3, r0, #1
 80239f8:	89a3      	ldrh	r3, [r4, #12]
 80239fa:	d106      	bne.n	8023a0a <__sflush_r+0x62>
 80239fc:	6829      	ldr	r1, [r5, #0]
 80239fe:	291d      	cmp	r1, #29
 8023a00:	d82b      	bhi.n	8023a5a <__sflush_r+0xb2>
 8023a02:	4a2a      	ldr	r2, [pc, #168]	@ (8023aac <__sflush_r+0x104>)
 8023a04:	40ca      	lsrs	r2, r1
 8023a06:	07d6      	lsls	r6, r2, #31
 8023a08:	d527      	bpl.n	8023a5a <__sflush_r+0xb2>
 8023a0a:	2200      	movs	r2, #0
 8023a0c:	6062      	str	r2, [r4, #4]
 8023a0e:	04d9      	lsls	r1, r3, #19
 8023a10:	6922      	ldr	r2, [r4, #16]
 8023a12:	6022      	str	r2, [r4, #0]
 8023a14:	d504      	bpl.n	8023a20 <__sflush_r+0x78>
 8023a16:	1c42      	adds	r2, r0, #1
 8023a18:	d101      	bne.n	8023a1e <__sflush_r+0x76>
 8023a1a:	682b      	ldr	r3, [r5, #0]
 8023a1c:	b903      	cbnz	r3, 8023a20 <__sflush_r+0x78>
 8023a1e:	6560      	str	r0, [r4, #84]	@ 0x54
 8023a20:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023a22:	602f      	str	r7, [r5, #0]
 8023a24:	b1b9      	cbz	r1, 8023a56 <__sflush_r+0xae>
 8023a26:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023a2a:	4299      	cmp	r1, r3
 8023a2c:	d002      	beq.n	8023a34 <__sflush_r+0x8c>
 8023a2e:	4628      	mov	r0, r5
 8023a30:	f7ff fb4a 	bl	80230c8 <_free_r>
 8023a34:	2300      	movs	r3, #0
 8023a36:	6363      	str	r3, [r4, #52]	@ 0x34
 8023a38:	e00d      	b.n	8023a56 <__sflush_r+0xae>
 8023a3a:	2301      	movs	r3, #1
 8023a3c:	4628      	mov	r0, r5
 8023a3e:	47b0      	blx	r6
 8023a40:	4602      	mov	r2, r0
 8023a42:	1c50      	adds	r0, r2, #1
 8023a44:	d1c9      	bne.n	80239da <__sflush_r+0x32>
 8023a46:	682b      	ldr	r3, [r5, #0]
 8023a48:	2b00      	cmp	r3, #0
 8023a4a:	d0c6      	beq.n	80239da <__sflush_r+0x32>
 8023a4c:	2b1d      	cmp	r3, #29
 8023a4e:	d001      	beq.n	8023a54 <__sflush_r+0xac>
 8023a50:	2b16      	cmp	r3, #22
 8023a52:	d11e      	bne.n	8023a92 <__sflush_r+0xea>
 8023a54:	602f      	str	r7, [r5, #0]
 8023a56:	2000      	movs	r0, #0
 8023a58:	e022      	b.n	8023aa0 <__sflush_r+0xf8>
 8023a5a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023a5e:	b21b      	sxth	r3, r3
 8023a60:	e01b      	b.n	8023a9a <__sflush_r+0xf2>
 8023a62:	690f      	ldr	r7, [r1, #16]
 8023a64:	2f00      	cmp	r7, #0
 8023a66:	d0f6      	beq.n	8023a56 <__sflush_r+0xae>
 8023a68:	0793      	lsls	r3, r2, #30
 8023a6a:	680e      	ldr	r6, [r1, #0]
 8023a6c:	bf08      	it	eq
 8023a6e:	694b      	ldreq	r3, [r1, #20]
 8023a70:	600f      	str	r7, [r1, #0]
 8023a72:	bf18      	it	ne
 8023a74:	2300      	movne	r3, #0
 8023a76:	eba6 0807 	sub.w	r8, r6, r7
 8023a7a:	608b      	str	r3, [r1, #8]
 8023a7c:	f1b8 0f00 	cmp.w	r8, #0
 8023a80:	dde9      	ble.n	8023a56 <__sflush_r+0xae>
 8023a82:	6a21      	ldr	r1, [r4, #32]
 8023a84:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8023a86:	4643      	mov	r3, r8
 8023a88:	463a      	mov	r2, r7
 8023a8a:	4628      	mov	r0, r5
 8023a8c:	47b0      	blx	r6
 8023a8e:	2800      	cmp	r0, #0
 8023a90:	dc08      	bgt.n	8023aa4 <__sflush_r+0xfc>
 8023a92:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023a96:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023a9a:	81a3      	strh	r3, [r4, #12]
 8023a9c:	f04f 30ff 	mov.w	r0, #4294967295
 8023aa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023aa4:	4407      	add	r7, r0
 8023aa6:	eba8 0800 	sub.w	r8, r8, r0
 8023aaa:	e7e7      	b.n	8023a7c <__sflush_r+0xd4>
 8023aac:	20400001 	.word	0x20400001

08023ab0 <_fflush_r>:
 8023ab0:	b538      	push	{r3, r4, r5, lr}
 8023ab2:	690b      	ldr	r3, [r1, #16]
 8023ab4:	4605      	mov	r5, r0
 8023ab6:	460c      	mov	r4, r1
 8023ab8:	b913      	cbnz	r3, 8023ac0 <_fflush_r+0x10>
 8023aba:	2500      	movs	r5, #0
 8023abc:	4628      	mov	r0, r5
 8023abe:	bd38      	pop	{r3, r4, r5, pc}
 8023ac0:	b118      	cbz	r0, 8023aca <_fflush_r+0x1a>
 8023ac2:	6a03      	ldr	r3, [r0, #32]
 8023ac4:	b90b      	cbnz	r3, 8023aca <_fflush_r+0x1a>
 8023ac6:	f7ff f8a5 	bl	8022c14 <__sinit>
 8023aca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023ace:	2b00      	cmp	r3, #0
 8023ad0:	d0f3      	beq.n	8023aba <_fflush_r+0xa>
 8023ad2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8023ad4:	07d0      	lsls	r0, r2, #31
 8023ad6:	d404      	bmi.n	8023ae2 <_fflush_r+0x32>
 8023ad8:	0599      	lsls	r1, r3, #22
 8023ada:	d402      	bmi.n	8023ae2 <_fflush_r+0x32>
 8023adc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023ade:	f7ff fa86 	bl	8022fee <__retarget_lock_acquire_recursive>
 8023ae2:	4628      	mov	r0, r5
 8023ae4:	4621      	mov	r1, r4
 8023ae6:	f7ff ff5f 	bl	80239a8 <__sflush_r>
 8023aea:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8023aec:	07da      	lsls	r2, r3, #31
 8023aee:	4605      	mov	r5, r0
 8023af0:	d4e4      	bmi.n	8023abc <_fflush_r+0xc>
 8023af2:	89a3      	ldrh	r3, [r4, #12]
 8023af4:	059b      	lsls	r3, r3, #22
 8023af6:	d4e1      	bmi.n	8023abc <_fflush_r+0xc>
 8023af8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023afa:	f7ff fa79 	bl	8022ff0 <__retarget_lock_release_recursive>
 8023afe:	e7dd      	b.n	8023abc <_fflush_r+0xc>

08023b00 <__swbuf_r>:
 8023b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023b02:	460e      	mov	r6, r1
 8023b04:	4614      	mov	r4, r2
 8023b06:	4605      	mov	r5, r0
 8023b08:	b118      	cbz	r0, 8023b12 <__swbuf_r+0x12>
 8023b0a:	6a03      	ldr	r3, [r0, #32]
 8023b0c:	b90b      	cbnz	r3, 8023b12 <__swbuf_r+0x12>
 8023b0e:	f7ff f881 	bl	8022c14 <__sinit>
 8023b12:	69a3      	ldr	r3, [r4, #24]
 8023b14:	60a3      	str	r3, [r4, #8]
 8023b16:	89a3      	ldrh	r3, [r4, #12]
 8023b18:	071a      	lsls	r2, r3, #28
 8023b1a:	d501      	bpl.n	8023b20 <__swbuf_r+0x20>
 8023b1c:	6923      	ldr	r3, [r4, #16]
 8023b1e:	b943      	cbnz	r3, 8023b32 <__swbuf_r+0x32>
 8023b20:	4621      	mov	r1, r4
 8023b22:	4628      	mov	r0, r5
 8023b24:	f000 f82a 	bl	8023b7c <__swsetup_r>
 8023b28:	b118      	cbz	r0, 8023b32 <__swbuf_r+0x32>
 8023b2a:	f04f 37ff 	mov.w	r7, #4294967295
 8023b2e:	4638      	mov	r0, r7
 8023b30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023b32:	6823      	ldr	r3, [r4, #0]
 8023b34:	6922      	ldr	r2, [r4, #16]
 8023b36:	1a98      	subs	r0, r3, r2
 8023b38:	6963      	ldr	r3, [r4, #20]
 8023b3a:	b2f6      	uxtb	r6, r6
 8023b3c:	4283      	cmp	r3, r0
 8023b3e:	4637      	mov	r7, r6
 8023b40:	dc05      	bgt.n	8023b4e <__swbuf_r+0x4e>
 8023b42:	4621      	mov	r1, r4
 8023b44:	4628      	mov	r0, r5
 8023b46:	f7ff ffb3 	bl	8023ab0 <_fflush_r>
 8023b4a:	2800      	cmp	r0, #0
 8023b4c:	d1ed      	bne.n	8023b2a <__swbuf_r+0x2a>
 8023b4e:	68a3      	ldr	r3, [r4, #8]
 8023b50:	3b01      	subs	r3, #1
 8023b52:	60a3      	str	r3, [r4, #8]
 8023b54:	6823      	ldr	r3, [r4, #0]
 8023b56:	1c5a      	adds	r2, r3, #1
 8023b58:	6022      	str	r2, [r4, #0]
 8023b5a:	701e      	strb	r6, [r3, #0]
 8023b5c:	6962      	ldr	r2, [r4, #20]
 8023b5e:	1c43      	adds	r3, r0, #1
 8023b60:	429a      	cmp	r2, r3
 8023b62:	d004      	beq.n	8023b6e <__swbuf_r+0x6e>
 8023b64:	89a3      	ldrh	r3, [r4, #12]
 8023b66:	07db      	lsls	r3, r3, #31
 8023b68:	d5e1      	bpl.n	8023b2e <__swbuf_r+0x2e>
 8023b6a:	2e0a      	cmp	r6, #10
 8023b6c:	d1df      	bne.n	8023b2e <__swbuf_r+0x2e>
 8023b6e:	4621      	mov	r1, r4
 8023b70:	4628      	mov	r0, r5
 8023b72:	f7ff ff9d 	bl	8023ab0 <_fflush_r>
 8023b76:	2800      	cmp	r0, #0
 8023b78:	d0d9      	beq.n	8023b2e <__swbuf_r+0x2e>
 8023b7a:	e7d6      	b.n	8023b2a <__swbuf_r+0x2a>

08023b7c <__swsetup_r>:
 8023b7c:	b538      	push	{r3, r4, r5, lr}
 8023b7e:	4b29      	ldr	r3, [pc, #164]	@ (8023c24 <__swsetup_r+0xa8>)
 8023b80:	4605      	mov	r5, r0
 8023b82:	6818      	ldr	r0, [r3, #0]
 8023b84:	460c      	mov	r4, r1
 8023b86:	b118      	cbz	r0, 8023b90 <__swsetup_r+0x14>
 8023b88:	6a03      	ldr	r3, [r0, #32]
 8023b8a:	b90b      	cbnz	r3, 8023b90 <__swsetup_r+0x14>
 8023b8c:	f7ff f842 	bl	8022c14 <__sinit>
 8023b90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023b94:	0719      	lsls	r1, r3, #28
 8023b96:	d422      	bmi.n	8023bde <__swsetup_r+0x62>
 8023b98:	06da      	lsls	r2, r3, #27
 8023b9a:	d407      	bmi.n	8023bac <__swsetup_r+0x30>
 8023b9c:	2209      	movs	r2, #9
 8023b9e:	602a      	str	r2, [r5, #0]
 8023ba0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023ba4:	81a3      	strh	r3, [r4, #12]
 8023ba6:	f04f 30ff 	mov.w	r0, #4294967295
 8023baa:	e033      	b.n	8023c14 <__swsetup_r+0x98>
 8023bac:	0758      	lsls	r0, r3, #29
 8023bae:	d512      	bpl.n	8023bd6 <__swsetup_r+0x5a>
 8023bb0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023bb2:	b141      	cbz	r1, 8023bc6 <__swsetup_r+0x4a>
 8023bb4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023bb8:	4299      	cmp	r1, r3
 8023bba:	d002      	beq.n	8023bc2 <__swsetup_r+0x46>
 8023bbc:	4628      	mov	r0, r5
 8023bbe:	f7ff fa83 	bl	80230c8 <_free_r>
 8023bc2:	2300      	movs	r3, #0
 8023bc4:	6363      	str	r3, [r4, #52]	@ 0x34
 8023bc6:	89a3      	ldrh	r3, [r4, #12]
 8023bc8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8023bcc:	81a3      	strh	r3, [r4, #12]
 8023bce:	2300      	movs	r3, #0
 8023bd0:	6063      	str	r3, [r4, #4]
 8023bd2:	6923      	ldr	r3, [r4, #16]
 8023bd4:	6023      	str	r3, [r4, #0]
 8023bd6:	89a3      	ldrh	r3, [r4, #12]
 8023bd8:	f043 0308 	orr.w	r3, r3, #8
 8023bdc:	81a3      	strh	r3, [r4, #12]
 8023bde:	6923      	ldr	r3, [r4, #16]
 8023be0:	b94b      	cbnz	r3, 8023bf6 <__swsetup_r+0x7a>
 8023be2:	89a3      	ldrh	r3, [r4, #12]
 8023be4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8023be8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8023bec:	d003      	beq.n	8023bf6 <__swsetup_r+0x7a>
 8023bee:	4621      	mov	r1, r4
 8023bf0:	4628      	mov	r0, r5
 8023bf2:	f000 f887 	bl	8023d04 <__smakebuf_r>
 8023bf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023bfa:	f013 0201 	ands.w	r2, r3, #1
 8023bfe:	d00a      	beq.n	8023c16 <__swsetup_r+0x9a>
 8023c00:	2200      	movs	r2, #0
 8023c02:	60a2      	str	r2, [r4, #8]
 8023c04:	6962      	ldr	r2, [r4, #20]
 8023c06:	4252      	negs	r2, r2
 8023c08:	61a2      	str	r2, [r4, #24]
 8023c0a:	6922      	ldr	r2, [r4, #16]
 8023c0c:	b942      	cbnz	r2, 8023c20 <__swsetup_r+0xa4>
 8023c0e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8023c12:	d1c5      	bne.n	8023ba0 <__swsetup_r+0x24>
 8023c14:	bd38      	pop	{r3, r4, r5, pc}
 8023c16:	0799      	lsls	r1, r3, #30
 8023c18:	bf58      	it	pl
 8023c1a:	6962      	ldrpl	r2, [r4, #20]
 8023c1c:	60a2      	str	r2, [r4, #8]
 8023c1e:	e7f4      	b.n	8023c0a <__swsetup_r+0x8e>
 8023c20:	2000      	movs	r0, #0
 8023c22:	e7f7      	b.n	8023c14 <__swsetup_r+0x98>
 8023c24:	2000022c 	.word	0x2000022c

08023c28 <memmove>:
 8023c28:	4288      	cmp	r0, r1
 8023c2a:	b510      	push	{r4, lr}
 8023c2c:	eb01 0402 	add.w	r4, r1, r2
 8023c30:	d902      	bls.n	8023c38 <memmove+0x10>
 8023c32:	4284      	cmp	r4, r0
 8023c34:	4623      	mov	r3, r4
 8023c36:	d807      	bhi.n	8023c48 <memmove+0x20>
 8023c38:	1e43      	subs	r3, r0, #1
 8023c3a:	42a1      	cmp	r1, r4
 8023c3c:	d008      	beq.n	8023c50 <memmove+0x28>
 8023c3e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8023c42:	f803 2f01 	strb.w	r2, [r3, #1]!
 8023c46:	e7f8      	b.n	8023c3a <memmove+0x12>
 8023c48:	4402      	add	r2, r0
 8023c4a:	4601      	mov	r1, r0
 8023c4c:	428a      	cmp	r2, r1
 8023c4e:	d100      	bne.n	8023c52 <memmove+0x2a>
 8023c50:	bd10      	pop	{r4, pc}
 8023c52:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8023c56:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8023c5a:	e7f7      	b.n	8023c4c <memmove+0x24>

08023c5c <_realloc_r>:
 8023c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023c60:	4607      	mov	r7, r0
 8023c62:	4614      	mov	r4, r2
 8023c64:	460d      	mov	r5, r1
 8023c66:	b921      	cbnz	r1, 8023c72 <_realloc_r+0x16>
 8023c68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023c6c:	4611      	mov	r1, r2
 8023c6e:	f7fe beab 	b.w	80229c8 <_malloc_r>
 8023c72:	b92a      	cbnz	r2, 8023c80 <_realloc_r+0x24>
 8023c74:	f7ff fa28 	bl	80230c8 <_free_r>
 8023c78:	4625      	mov	r5, r4
 8023c7a:	4628      	mov	r0, r5
 8023c7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023c80:	f000 f89e 	bl	8023dc0 <_malloc_usable_size_r>
 8023c84:	4284      	cmp	r4, r0
 8023c86:	4606      	mov	r6, r0
 8023c88:	d802      	bhi.n	8023c90 <_realloc_r+0x34>
 8023c8a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8023c8e:	d8f4      	bhi.n	8023c7a <_realloc_r+0x1e>
 8023c90:	4621      	mov	r1, r4
 8023c92:	4638      	mov	r0, r7
 8023c94:	f7fe fe98 	bl	80229c8 <_malloc_r>
 8023c98:	4680      	mov	r8, r0
 8023c9a:	b908      	cbnz	r0, 8023ca0 <_realloc_r+0x44>
 8023c9c:	4645      	mov	r5, r8
 8023c9e:	e7ec      	b.n	8023c7a <_realloc_r+0x1e>
 8023ca0:	42b4      	cmp	r4, r6
 8023ca2:	4622      	mov	r2, r4
 8023ca4:	4629      	mov	r1, r5
 8023ca6:	bf28      	it	cs
 8023ca8:	4632      	movcs	r2, r6
 8023caa:	f7ff f9a2 	bl	8022ff2 <memcpy>
 8023cae:	4629      	mov	r1, r5
 8023cb0:	4638      	mov	r0, r7
 8023cb2:	f7ff fa09 	bl	80230c8 <_free_r>
 8023cb6:	e7f1      	b.n	8023c9c <_realloc_r+0x40>

08023cb8 <__swhatbuf_r>:
 8023cb8:	b570      	push	{r4, r5, r6, lr}
 8023cba:	460c      	mov	r4, r1
 8023cbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023cc0:	2900      	cmp	r1, #0
 8023cc2:	b096      	sub	sp, #88	@ 0x58
 8023cc4:	4615      	mov	r5, r2
 8023cc6:	461e      	mov	r6, r3
 8023cc8:	da0d      	bge.n	8023ce6 <__swhatbuf_r+0x2e>
 8023cca:	89a3      	ldrh	r3, [r4, #12]
 8023ccc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8023cd0:	f04f 0100 	mov.w	r1, #0
 8023cd4:	bf14      	ite	ne
 8023cd6:	2340      	movne	r3, #64	@ 0x40
 8023cd8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8023cdc:	2000      	movs	r0, #0
 8023cde:	6031      	str	r1, [r6, #0]
 8023ce0:	602b      	str	r3, [r5, #0]
 8023ce2:	b016      	add	sp, #88	@ 0x58
 8023ce4:	bd70      	pop	{r4, r5, r6, pc}
 8023ce6:	466a      	mov	r2, sp
 8023ce8:	f000 f848 	bl	8023d7c <_fstat_r>
 8023cec:	2800      	cmp	r0, #0
 8023cee:	dbec      	blt.n	8023cca <__swhatbuf_r+0x12>
 8023cf0:	9901      	ldr	r1, [sp, #4]
 8023cf2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8023cf6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8023cfa:	4259      	negs	r1, r3
 8023cfc:	4159      	adcs	r1, r3
 8023cfe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8023d02:	e7eb      	b.n	8023cdc <__swhatbuf_r+0x24>

08023d04 <__smakebuf_r>:
 8023d04:	898b      	ldrh	r3, [r1, #12]
 8023d06:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023d08:	079d      	lsls	r5, r3, #30
 8023d0a:	4606      	mov	r6, r0
 8023d0c:	460c      	mov	r4, r1
 8023d0e:	d507      	bpl.n	8023d20 <__smakebuf_r+0x1c>
 8023d10:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8023d14:	6023      	str	r3, [r4, #0]
 8023d16:	6123      	str	r3, [r4, #16]
 8023d18:	2301      	movs	r3, #1
 8023d1a:	6163      	str	r3, [r4, #20]
 8023d1c:	b003      	add	sp, #12
 8023d1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023d20:	ab01      	add	r3, sp, #4
 8023d22:	466a      	mov	r2, sp
 8023d24:	f7ff ffc8 	bl	8023cb8 <__swhatbuf_r>
 8023d28:	9f00      	ldr	r7, [sp, #0]
 8023d2a:	4605      	mov	r5, r0
 8023d2c:	4639      	mov	r1, r7
 8023d2e:	4630      	mov	r0, r6
 8023d30:	f7fe fe4a 	bl	80229c8 <_malloc_r>
 8023d34:	b948      	cbnz	r0, 8023d4a <__smakebuf_r+0x46>
 8023d36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023d3a:	059a      	lsls	r2, r3, #22
 8023d3c:	d4ee      	bmi.n	8023d1c <__smakebuf_r+0x18>
 8023d3e:	f023 0303 	bic.w	r3, r3, #3
 8023d42:	f043 0302 	orr.w	r3, r3, #2
 8023d46:	81a3      	strh	r3, [r4, #12]
 8023d48:	e7e2      	b.n	8023d10 <__smakebuf_r+0xc>
 8023d4a:	89a3      	ldrh	r3, [r4, #12]
 8023d4c:	6020      	str	r0, [r4, #0]
 8023d4e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023d52:	81a3      	strh	r3, [r4, #12]
 8023d54:	9b01      	ldr	r3, [sp, #4]
 8023d56:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8023d5a:	b15b      	cbz	r3, 8023d74 <__smakebuf_r+0x70>
 8023d5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023d60:	4630      	mov	r0, r6
 8023d62:	f000 f81d 	bl	8023da0 <_isatty_r>
 8023d66:	b128      	cbz	r0, 8023d74 <__smakebuf_r+0x70>
 8023d68:	89a3      	ldrh	r3, [r4, #12]
 8023d6a:	f023 0303 	bic.w	r3, r3, #3
 8023d6e:	f043 0301 	orr.w	r3, r3, #1
 8023d72:	81a3      	strh	r3, [r4, #12]
 8023d74:	89a3      	ldrh	r3, [r4, #12]
 8023d76:	431d      	orrs	r5, r3
 8023d78:	81a5      	strh	r5, [r4, #12]
 8023d7a:	e7cf      	b.n	8023d1c <__smakebuf_r+0x18>

08023d7c <_fstat_r>:
 8023d7c:	b538      	push	{r3, r4, r5, lr}
 8023d7e:	4d07      	ldr	r5, [pc, #28]	@ (8023d9c <_fstat_r+0x20>)
 8023d80:	2300      	movs	r3, #0
 8023d82:	4604      	mov	r4, r0
 8023d84:	4608      	mov	r0, r1
 8023d86:	4611      	mov	r1, r2
 8023d88:	602b      	str	r3, [r5, #0]
 8023d8a:	f7de fd0a 	bl	80027a2 <_fstat>
 8023d8e:	1c43      	adds	r3, r0, #1
 8023d90:	d102      	bne.n	8023d98 <_fstat_r+0x1c>
 8023d92:	682b      	ldr	r3, [r5, #0]
 8023d94:	b103      	cbz	r3, 8023d98 <_fstat_r+0x1c>
 8023d96:	6023      	str	r3, [r4, #0]
 8023d98:	bd38      	pop	{r3, r4, r5, pc}
 8023d9a:	bf00      	nop
 8023d9c:	20014b98 	.word	0x20014b98

08023da0 <_isatty_r>:
 8023da0:	b538      	push	{r3, r4, r5, lr}
 8023da2:	4d06      	ldr	r5, [pc, #24]	@ (8023dbc <_isatty_r+0x1c>)
 8023da4:	2300      	movs	r3, #0
 8023da6:	4604      	mov	r4, r0
 8023da8:	4608      	mov	r0, r1
 8023daa:	602b      	str	r3, [r5, #0]
 8023dac:	f7de fcfe 	bl	80027ac <_isatty>
 8023db0:	1c43      	adds	r3, r0, #1
 8023db2:	d102      	bne.n	8023dba <_isatty_r+0x1a>
 8023db4:	682b      	ldr	r3, [r5, #0]
 8023db6:	b103      	cbz	r3, 8023dba <_isatty_r+0x1a>
 8023db8:	6023      	str	r3, [r4, #0]
 8023dba:	bd38      	pop	{r3, r4, r5, pc}
 8023dbc:	20014b98 	.word	0x20014b98

08023dc0 <_malloc_usable_size_r>:
 8023dc0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023dc4:	1f18      	subs	r0, r3, #4
 8023dc6:	2b00      	cmp	r3, #0
 8023dc8:	bfbc      	itt	lt
 8023dca:	580b      	ldrlt	r3, [r1, r0]
 8023dcc:	18c0      	addlt	r0, r0, r3
 8023dce:	4770      	bx	lr

08023dd0 <_init>:
 8023dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023dd2:	bf00      	nop
 8023dd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023dd6:	bc08      	pop	{r3}
 8023dd8:	469e      	mov	lr, r3
 8023dda:	4770      	bx	lr

08023ddc <_fini>:
 8023ddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023dde:	bf00      	nop
 8023de0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023de2:	bc08      	pop	{r3}
 8023de4:	469e      	mov	lr, r3
 8023de6:	4770      	bx	lr
